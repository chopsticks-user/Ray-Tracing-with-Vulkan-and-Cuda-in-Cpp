
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000003000 <_init>:
    3000:	48 83 ec 08          	sub    $0x8,%rsp
    3004:	48 8b 05 ad 7f 01 00 	mov    0x17fad(%rip),%rax        # 1afb8 <__gmon_start__@Base>
    300b:	48 85 c0             	test   %rax,%rax
    300e:	74 02                	je     3012 <_init+0x12>
    3010:	ff d0                	call   *%rax
    3012:	48 83 c4 08          	add    $0x8,%rsp
    3016:	c3                   	ret

Disassembly of section .plt:

0000000000003020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    3020:	ff 35 ca 7f 01 00    	push   0x17fca(%rip)        # 1aff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    3026:	ff 25 cc 7f 01 00    	jmp    *0x17fcc(%rip)        # 1aff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    302c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    3030:	ff 25 ca 7f 01 00    	jmp    *0x17fca(%rip)        # 1b000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    3036:	68 00 00 00 00       	push   $0x0
    303b:	e9 e0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    3040:	ff 25 c2 7f 01 00    	jmp    *0x17fc2(%rip)        # 1b008 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    3046:	68 01 00 00 00       	push   $0x1
    304b:	e9 d0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003050 <_ZNSaIcED2Ev@plt>:
    3050:	ff 25 ba 7f 01 00    	jmp    *0x17fba(%rip)        # 1b010 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    3056:	68 02 00 00 00       	push   $0x2
    305b:	e9 c0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003060 <vkDeviceWaitIdle@plt>:
    3060:	ff 25 b2 7f 01 00    	jmp    *0x17fb2(%rip)        # 1b018 <vkDeviceWaitIdle@Base>
    3066:	68 03 00 00 00       	push   $0x3
    306b:	e9 b0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003070 <vkDestroySwapchainKHR@plt>:
    3070:	ff 25 aa 7f 01 00    	jmp    *0x17faa(%rip)        # 1b020 <vkDestroySwapchainKHR@Base>
    3076:	68 04 00 00 00       	push   $0x4
    307b:	e9 a0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003080 <glfwDestroyWindow@plt>:
    3080:	ff 25 a2 7f 01 00    	jmp    *0x17fa2(%rip)        # 1b028 <glfwDestroyWindow@Base>
    3086:	68 05 00 00 00       	push   $0x5
    308b:	e9 90 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003090 <_ZSt17__throw_bad_allocv@plt>:
    3090:	ff 25 9a 7f 01 00    	jmp    *0x17f9a(%rip)        # 1b030 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    3096:	68 06 00 00 00       	push   $0x6
    309b:	e9 80 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030a0 <_ZNSt13runtime_errorC1EPKc@plt>:
    30a0:	ff 25 92 7f 01 00    	jmp    *0x17f92(%rip)        # 1b038 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    30a6:	68 07 00 00 00       	push   $0x7
    30ab:	e9 70 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030b0 <vkGetPhysicalDeviceProperties@plt>:
    30b0:	ff 25 8a 7f 01 00    	jmp    *0x17f8a(%rip)        # 1b040 <vkGetPhysicalDeviceProperties@Base>
    30b6:	68 08 00 00 00       	push   $0x8
    30bb:	e9 60 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030c0 <__cxa_begin_catch@plt>:
    30c0:	ff 25 82 7f 01 00    	jmp    *0x17f82(%rip)        # 1b048 <__cxa_begin_catch@CXXABI_1.3>
    30c6:	68 09 00 00 00       	push   $0x9
    30cb:	e9 50 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030d0 <strlen@plt>:
    30d0:	ff 25 7a 7f 01 00    	jmp    *0x17f7a(%rip)        # 1b050 <strlen@GLIBC_2.2.5>
    30d6:	68 0a 00 00 00       	push   $0xa
    30db:	e9 40 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030e0 <memcmp@plt>:
    30e0:	ff 25 72 7f 01 00    	jmp    *0x17f72(%rip)        # 1b058 <memcmp@GLIBC_2.2.5>
    30e6:	68 0b 00 00 00       	push   $0xb
    30eb:	e9 30 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030f0 <__cxa_allocate_exception@plt>:
    30f0:	ff 25 6a 7f 01 00    	jmp    *0x17f6a(%rip)        # 1b060 <__cxa_allocate_exception@CXXABI_1.3>
    30f6:	68 0c 00 00 00       	push   $0xc
    30fb:	e9 20 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003100 <_ZSt20__throw_length_errorPKc@plt>:
    3100:	ff 25 62 7f 01 00    	jmp    *0x17f62(%rip)        # 1b068 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    3106:	68 0d 00 00 00       	push   $0xd
    310b:	e9 10 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003110 <vkEnumeratePhysicalDevices@plt>:
    3110:	ff 25 5a 7f 01 00    	jmp    *0x17f5a(%rip)        # 1b070 <vkEnumeratePhysicalDevices@Base>
    3116:	68 0e 00 00 00       	push   $0xe
    311b:	e9 00 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>:
    3120:	ff 25 52 7f 01 00    	jmp    *0x17f52(%rip)        # 1b078 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@GLIBCXX_3.4.21>
    3126:	68 0f 00 00 00       	push   $0xf
    312b:	e9 f0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    3130:	ff 25 4a 7f 01 00    	jmp    *0x17f4a(%rip)        # 1b080 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    3136:	68 10 00 00 00       	push   $0x10
    313b:	e9 e0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003140 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    3140:	ff 25 42 7f 01 00    	jmp    *0x17f42(%rip)        # 1b088 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    3146:	68 11 00 00 00       	push   $0x11
    314b:	e9 d0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003150 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    3150:	ff 25 3a 7f 01 00    	jmp    *0x17f3a(%rip)        # 1b090 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    3156:	68 12 00 00 00       	push   $0x12
    315b:	e9 c0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003160 <_ZSt19__throw_logic_errorPKc@plt>:
    3160:	ff 25 32 7f 01 00    	jmp    *0x17f32(%rip)        # 1b098 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    3166:	68 13 00 00 00       	push   $0x13
    316b:	e9 b0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003170 <__cxa_free_exception@plt>:
    3170:	ff 25 2a 7f 01 00    	jmp    *0x17f2a(%rip)        # 1b0a0 <__cxa_free_exception@CXXABI_1.3>
    3176:	68 14 00 00 00       	push   $0x14
    317b:	e9 a0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003180 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    3180:	ff 25 22 7f 01 00    	jmp    *0x17f22(%rip)        # 1b0a8 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    3186:	68 15 00 00 00       	push   $0x15
    318b:	e9 90 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003190 <glfwGetRequiredInstanceExtensions@plt>:
    3190:	ff 25 1a 7f 01 00    	jmp    *0x17f1a(%rip)        # 1b0b0 <glfwGetRequiredInstanceExtensions@Base>
    3196:	68 16 00 00 00       	push   $0x16
    319b:	e9 80 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031a0 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    31a0:	ff 25 12 7f 01 00    	jmp    *0x17f12(%rip)        # 1b0b8 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    31a6:	68 17 00 00 00       	push   $0x17
    31ab:	e9 70 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    31b0:	ff 25 0a 7f 01 00    	jmp    *0x17f0a(%rip)        # 1b0c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    31b6:	68 18 00 00 00       	push   $0x18
    31bb:	e9 60 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031c0 <vkDestroyDevice@plt>:
    31c0:	ff 25 02 7f 01 00    	jmp    *0x17f02(%rip)        # 1b0c8 <vkDestroyDevice@Base>
    31c6:	68 19 00 00 00       	push   $0x19
    31cb:	e9 50 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031d0 <vkEnumerateInstanceExtensionProperties@plt>:
    31d0:	ff 25 fa 7e 01 00    	jmp    *0x17efa(%rip)        # 1b0d0 <vkEnumerateInstanceExtensionProperties@Base>
    31d6:	68 1a 00 00 00       	push   $0x1a
    31db:	e9 40 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    31e0:	ff 25 f2 7e 01 00    	jmp    *0x17ef2(%rip)        # 1b0d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    31e6:	68 1b 00 00 00       	push   $0x1b
    31eb:	e9 30 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031f0 <glfwWindowHint@plt>:
    31f0:	ff 25 ea 7e 01 00    	jmp    *0x17eea(%rip)        # 1b0e0 <glfwWindowHint@Base>
    31f6:	68 1c 00 00 00       	push   $0x1c
    31fb:	e9 20 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003200 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>:
    3200:	ff 25 e2 7e 01 00    	jmp    *0x17ee2(%rip)        # 1b0e8 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@Base>
    3206:	68 1d 00 00 00       	push   $0x1d
    320b:	e9 10 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003210 <__cxa_atexit@plt>:
    3210:	ff 25 da 7e 01 00    	jmp    *0x17eda(%rip)        # 1b0f0 <__cxa_atexit@GLIBC_2.2.5>
    3216:	68 1e 00 00 00       	push   $0x1e
    321b:	e9 00 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003220 <vkGetPhysicalDeviceProperties2@plt>:
    3220:	ff 25 d2 7e 01 00    	jmp    *0x17ed2(%rip)        # 1b0f8 <vkGetPhysicalDeviceProperties2@Base>
    3226:	68 1f 00 00 00       	push   $0x1f
    322b:	e9 f0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003230 <vkGetInstanceProcAddr@plt>:
    3230:	ff 25 ca 7e 01 00    	jmp    *0x17eca(%rip)        # 1b100 <vkGetInstanceProcAddr@Base>
    3236:	68 20 00 00 00       	push   $0x20
    323b:	e9 e0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003240 <glfwPollEvents@plt>:
    3240:	ff 25 c2 7e 01 00    	jmp    *0x17ec2(%rip)        # 1b108 <glfwPollEvents@Base>
    3246:	68 21 00 00 00       	push   $0x21
    324b:	e9 d0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003250 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    3250:	ff 25 ba 7e 01 00    	jmp    *0x17eba(%rip)        # 1b110 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    3256:	68 22 00 00 00       	push   $0x22
    325b:	e9 c0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003260 <_Znwm@plt>:
    3260:	ff 25 b2 7e 01 00    	jmp    *0x17eb2(%rip)        # 1b118 <_Znwm@GLIBCXX_3.4>
    3266:	68 23 00 00 00       	push   $0x23
    326b:	e9 b0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003270 <_ZdlPvm@plt>:
    3270:	ff 25 aa 7e 01 00    	jmp    *0x17eaa(%rip)        # 1b120 <_ZdlPvm@CXXABI_1.3.9>
    3276:	68 24 00 00 00       	push   $0x24
    327b:	e9 a0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003280 <vkDestroyInstance@plt>:
    3280:	ff 25 a2 7e 01 00    	jmp    *0x17ea2(%rip)        # 1b128 <vkDestroyInstance@Base>
    3286:	68 25 00 00 00       	push   $0x25
    328b:	e9 90 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003290 <glfwTerminate@plt>:
    3290:	ff 25 9a 7e 01 00    	jmp    *0x17e9a(%rip)        # 1b130 <glfwTerminate@Base>
    3296:	68 26 00 00 00       	push   $0x26
    329b:	e9 80 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032a0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    32a0:	ff 25 92 7e 01 00    	jmp    *0x17e92(%rip)        # 1b138 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    32a6:	68 27 00 00 00       	push   $0x27
    32ab:	e9 70 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032b0 <_ZNSolsEPFRSoS_E@plt>:
    32b0:	ff 25 8a 7e 01 00    	jmp    *0x17e8a(%rip)        # 1b140 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    32b6:	68 28 00 00 00       	push   $0x28
    32bb:	e9 60 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    32c0:	ff 25 82 7e 01 00    	jmp    *0x17e82(%rip)        # 1b148 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    32c6:	68 29 00 00 00       	push   $0x29
    32cb:	e9 50 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032d0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    32d0:	ff 25 7a 7e 01 00    	jmp    *0x17e7a(%rip)        # 1b150 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    32d6:	68 2a 00 00 00       	push   $0x2a
    32db:	e9 40 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032e0 <_ZNSaIcED1Ev@plt>:
    32e0:	ff 25 72 7e 01 00    	jmp    *0x17e72(%rip)        # 1b158 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    32e6:	68 2b 00 00 00       	push   $0x2b
    32eb:	e9 30 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    32f0:	ff 25 6a 7e 01 00    	jmp    *0x17e6a(%rip)        # 1b160 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    32f6:	68 2c 00 00 00       	push   $0x2c
    32fb:	e9 20 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003300 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    3300:	ff 25 62 7e 01 00    	jmp    *0x17e62(%rip)        # 1b168 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    3306:	68 2d 00 00 00       	push   $0x2d
    330b:	e9 10 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003310 <vkEnumerateInstanceLayerProperties@plt>:
    3310:	ff 25 5a 7e 01 00    	jmp    *0x17e5a(%rip)        # 1b170 <vkEnumerateInstanceLayerProperties@Base>
    3316:	68 2e 00 00 00       	push   $0x2e
    331b:	e9 00 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003320 <glfwInit@plt>:
    3320:	ff 25 52 7e 01 00    	jmp    *0x17e52(%rip)        # 1b178 <glfwInit@Base>
    3326:	68 2f 00 00 00       	push   $0x2f
    332b:	e9 f0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    3330:	ff 25 4a 7e 01 00    	jmp    *0x17e4a(%rip)        # 1b180 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    3336:	68 30 00 00 00       	push   $0x30
    333b:	e9 e0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003340 <vkCreateSwapchainKHR@plt>:
    3340:	ff 25 42 7e 01 00    	jmp    *0x17e42(%rip)        # 1b188 <vkCreateSwapchainKHR@Base>
    3346:	68 31 00 00 00       	push   $0x31
    334b:	e9 d0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003350 <vkCreateInstance@plt>:
    3350:	ff 25 3a 7e 01 00    	jmp    *0x17e3a(%rip)        # 1b190 <vkCreateInstance@Base>
    3356:	68 32 00 00 00       	push   $0x32
    335b:	e9 c0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003360 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    3360:	ff 25 32 7e 01 00    	jmp    *0x17e32(%rip)        # 1b198 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    3366:	68 33 00 00 00       	push   $0x33
    336b:	e9 b0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003370 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>:
    3370:	ff 25 2a 7e 01 00    	jmp    *0x17e2a(%rip)        # 1b1a0 <vkGetPhysicalDeviceSurfaceFormatsKHR@Base>
    3376:	68 34 00 00 00       	push   $0x34
    337b:	e9 a0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003380 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>:
    3380:	ff 25 22 7e 01 00    	jmp    *0x17e22(%rip)        # 1b1a8 <vkGetPhysicalDeviceSurfacePresentModesKHR@Base>
    3386:	68 35 00 00 00       	push   $0x35
    338b:	e9 90 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003390 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>:
    3390:	ff 25 1a 7e 01 00    	jmp    *0x17e1a(%rip)        # 1b1b0 <_ZNSt6chrono3_V212steady_clock3nowEv@GLIBCXX_3.4.19>
    3396:	68 36 00 00 00       	push   $0x36
    339b:	e9 80 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033a0 <vkGetDeviceQueue@plt>:
    33a0:	ff 25 12 7e 01 00    	jmp    *0x17e12(%rip)        # 1b1b8 <vkGetDeviceQueue@Base>
    33a6:	68 37 00 00 00       	push   $0x37
    33ab:	e9 70 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
    33b0:	ff 25 0a 7e 01 00    	jmp    *0x17e0a(%rip)        # 1b1c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@GLIBCXX_3.4.21>
    33b6:	68 38 00 00 00       	push   $0x38
    33bb:	e9 60 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033c0 <vkEnumerateDeviceExtensionProperties@plt>:
    33c0:	ff 25 02 7e 01 00    	jmp    *0x17e02(%rip)        # 1b1c8 <vkEnumerateDeviceExtensionProperties@Base>
    33c6:	68 39 00 00 00       	push   $0x39
    33cb:	e9 50 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>:
    33d0:	ff 25 fa 7d 01 00    	jmp    *0x17dfa(%rip)        # 1b1d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@GLIBCXX_3.4.21>
    33d6:	68 3a 00 00 00       	push   $0x3a
    33db:	e9 40 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033e0 <__cxa_rethrow@plt>:
    33e0:	ff 25 f2 7d 01 00    	jmp    *0x17df2(%rip)        # 1b1d8 <__cxa_rethrow@CXXABI_1.3>
    33e6:	68 3b 00 00 00       	push   $0x3b
    33eb:	e9 30 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033f0 <vkCreateDevice@plt>:
    33f0:	ff 25 ea 7d 01 00    	jmp    *0x17dea(%rip)        # 1b1e0 <vkCreateDevice@Base>
    33f6:	68 3c 00 00 00       	push   $0x3c
    33fb:	e9 20 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003400 <_ZNSt8ios_base4InitC1Ev@plt>:
    3400:	ff 25 e2 7d 01 00    	jmp    *0x17de2(%rip)        # 1b1e8 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    3406:	68 3d 00 00 00       	push   $0x3d
    340b:	e9 10 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003410 <glfwCreateWindowSurface@plt>:
    3410:	ff 25 da 7d 01 00    	jmp    *0x17dda(%rip)        # 1b1f0 <glfwCreateWindowSurface@Base>
    3416:	68 3e 00 00 00       	push   $0x3e
    341b:	e9 00 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003420 <glfwCreateWindow@plt>:
    3420:	ff 25 d2 7d 01 00    	jmp    *0x17dd2(%rip)        # 1b1f8 <glfwCreateWindow@Base>
    3426:	68 3f 00 00 00       	push   $0x3f
    342b:	e9 f0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003430 <memmove@plt>:
    3430:	ff 25 ca 7d 01 00    	jmp    *0x17dca(%rip)        # 1b200 <memmove@GLIBC_2.2.5>
    3436:	68 40 00 00 00       	push   $0x40
    343b:	e9 e0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003440 <__cxa_end_catch@plt>:
    3440:	ff 25 c2 7d 01 00    	jmp    *0x17dc2(%rip)        # 1b208 <__cxa_end_catch@CXXABI_1.3>
    3446:	68 41 00 00 00       	push   $0x41
    344b:	e9 d0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003450 <__cxa_throw@plt>:
    3450:	ff 25 ba 7d 01 00    	jmp    *0x17dba(%rip)        # 1b210 <__cxa_throw@CXXABI_1.3>
    3456:	68 42 00 00 00       	push   $0x42
    345b:	e9 c0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003460 <vkDestroySurfaceKHR@plt>:
    3460:	ff 25 b2 7d 01 00    	jmp    *0x17db2(%rip)        # 1b218 <vkDestroySurfaceKHR@Base>
    3466:	68 43 00 00 00       	push   $0x43
    346b:	e9 b0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003470 <_Unwind_Resume@plt>:
    3470:	ff 25 aa 7d 01 00    	jmp    *0x17daa(%rip)        # 1b220 <_Unwind_Resume@GCC_3.0>
    3476:	68 44 00 00 00       	push   $0x44
    347b:	e9 a0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003480 <_ZNSaIcEC1Ev@plt>:
    3480:	ff 25 a2 7d 01 00    	jmp    *0x17da2(%rip)        # 1b228 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    3486:	68 45 00 00 00       	push   $0x45
    348b:	e9 90 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    3490:	ff 25 9a 7d 01 00    	jmp    *0x17d9a(%rip)        # 1b230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    3496:	68 46 00 00 00       	push   $0x46
    349b:	e9 80 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034a0 <_ZNSt9exceptionD2Ev@plt>:
    34a0:	ff 25 92 7d 01 00    	jmp    *0x17d92(%rip)        # 1b238 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    34a6:	68 47 00 00 00       	push   $0x47
    34ab:	e9 70 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034b0 <glfwWindowShouldClose@plt>:
    34b0:	ff 25 8a 7d 01 00    	jmp    *0x17d8a(%rip)        # 1b240 <glfwWindowShouldClose@Base>
    34b6:	68 48 00 00 00       	push   $0x48
    34bb:	e9 60 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034c0 <_ZNSolsEd@plt>:
    34c0:	ff 25 82 7d 01 00    	jmp    *0x17d82(%rip)        # 1b248 <_ZNSolsEd@GLIBCXX_3.4>
    34c6:	68 49 00 00 00       	push   $0x49
    34cb:	e9 50 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    34d0:	ff 25 7a 7d 01 00    	jmp    *0x17d7a(%rip)        # 1b250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    34d6:	68 4a 00 00 00       	push   $0x4a
    34db:	e9 40 fb ff ff       	jmp    3020 <_init+0x20>

Disassembly of section .plt.got:

00000000000034e0 <__cxa_finalize@plt>:
    34e0:	ff 25 aa 7a 01 00    	jmp    *0x17aaa(%rip)        # 1af90 <__cxa_finalize@GLIBC_2.2.5>
    34e6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000034f0 <_start>:
    34f0:	31 ed                	xor    %ebp,%ebp
    34f2:	49 89 d1             	mov    %rdx,%r9
    34f5:	5e                   	pop    %rsi
    34f6:	48 89 e2             	mov    %rsp,%rdx
    34f9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    34fd:	50                   	push   %rax
    34fe:	54                   	push   %rsp
    34ff:	45 31 c0             	xor    %r8d,%r8d
    3502:	31 c9                	xor    %ecx,%ecx
    3504:	48 8d 3d 33 01 00 00 	lea    0x133(%rip),%rdi        # 363e <main>
    350b:	ff 15 8f 7a 01 00    	call   *0x17a8f(%rip)        # 1afa0 <__libc_start_main@GLIBC_2.34>
    3511:	f4                   	hlt
    3512:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3519:	00 00 00 
    351c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003520 <deregister_tm_clones>:
    3520:	48 8d 3d 51 7d 01 00 	lea    0x17d51(%rip),%rdi        # 1b278 <__TMC_END__>
    3527:	48 8d 05 4a 7d 01 00 	lea    0x17d4a(%rip),%rax        # 1b278 <__TMC_END__>
    352e:	48 39 f8             	cmp    %rdi,%rax
    3531:	74 15                	je     3548 <deregister_tm_clones+0x28>
    3533:	48 8b 05 76 7a 01 00 	mov    0x17a76(%rip),%rax        # 1afb0 <_ITM_deregisterTMCloneTable@Base>
    353a:	48 85 c0             	test   %rax,%rax
    353d:	74 09                	je     3548 <deregister_tm_clones+0x28>
    353f:	ff e0                	jmp    *%rax
    3541:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3548:	c3                   	ret
    3549:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003550 <register_tm_clones>:
    3550:	48 8d 3d 21 7d 01 00 	lea    0x17d21(%rip),%rdi        # 1b278 <__TMC_END__>
    3557:	48 8d 35 1a 7d 01 00 	lea    0x17d1a(%rip),%rsi        # 1b278 <__TMC_END__>
    355e:	48 29 fe             	sub    %rdi,%rsi
    3561:	48 89 f0             	mov    %rsi,%rax
    3564:	48 c1 ee 3f          	shr    $0x3f,%rsi
    3568:	48 c1 f8 03          	sar    $0x3,%rax
    356c:	48 01 c6             	add    %rax,%rsi
    356f:	48 d1 fe             	sar    %rsi
    3572:	74 14                	je     3588 <register_tm_clones+0x38>
    3574:	48 8b 05 45 7a 01 00 	mov    0x17a45(%rip),%rax        # 1afc0 <_ITM_registerTMCloneTable@Base>
    357b:	48 85 c0             	test   %rax,%rax
    357e:	74 08                	je     3588 <register_tm_clones+0x38>
    3580:	ff e0                	jmp    *%rax
    3582:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3588:	c3                   	ret
    3589:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003590 <__do_global_dtors_aux>:
    3590:	f3 0f 1e fa          	endbr64
    3594:	80 3d 15 7f 01 00 00 	cmpb   $0x0,0x17f15(%rip)        # 1b4b0 <completed.0>
    359b:	75 2b                	jne    35c8 <__do_global_dtors_aux+0x38>
    359d:	55                   	push   %rbp
    359e:	48 83 3d ea 79 01 00 	cmpq   $0x0,0x179ea(%rip)        # 1af90 <__cxa_finalize@GLIBC_2.2.5>
    35a5:	00 
    35a6:	48 89 e5             	mov    %rsp,%rbp
    35a9:	74 0c                	je     35b7 <__do_global_dtors_aux+0x27>
    35ab:	48 8b 3d ae 7c 01 00 	mov    0x17cae(%rip),%rdi        # 1b260 <__dso_handle>
    35b2:	e8 29 ff ff ff       	call   34e0 <__cxa_finalize@plt>
    35b7:	e8 64 ff ff ff       	call   3520 <deregister_tm_clones>
    35bc:	c6 05 ed 7e 01 00 01 	movb   $0x1,0x17eed(%rip)        # 1b4b0 <completed.0>
    35c3:	5d                   	pop    %rbp
    35c4:	c3                   	ret
    35c5:	0f 1f 00             	nopl   (%rax)
    35c8:	c3                   	ret
    35c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000035d0 <frame_dummy>:
    35d0:	f3 0f 1e fa          	endbr64
    35d4:	e9 77 ff ff ff       	jmp    3550 <register_tm_clones>

00000000000035d9 <_Z14protected_mainv>:
#include <vkh.hpp>

#include <iostream>
#include <typeinfo>

int protected_main() {
    35d9:	55                   	push   %rbp
    35da:	48 89 e5             	mov    %rsp,%rbp
    35dd:	53                   	push   %rbx
    35de:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
  VulkanApp app;
    35e5:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    35ec:	48 89 c7             	mov    %rax,%rdi
    35ef:	e8 9e 76 00 00       	call   ac92 <_ZN9VulkanAppC1Ev>
  app.run();
    35f4:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    35fb:	48 89 c7             	mov    %rax,%rdi
    35fe:	e8 07 79 00 00       	call   af0a <_ZN9VulkanApp3runEv>
  return EXIT_SUCCESS;
    3603:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    3608:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    360f:	48 89 c7             	mov    %rax,%rdi
    3612:	e8 15 78 00 00       	call   ae2c <_ZN9VulkanAppD1Ev>
  return EXIT_SUCCESS;
    3617:	89 d8                	mov    %ebx,%eax
    3619:	eb 1d                	jmp    3638 <_Z14protected_mainv+0x5f>
}
    361b:	48 89 c3             	mov    %rax,%rbx
    361e:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    3625:	48 89 c7             	mov    %rax,%rdi
    3628:	e8 ff 77 00 00       	call   ae2c <_ZN9VulkanAppD1Ev>
    362d:	48 89 d8             	mov    %rbx,%rax
    3630:	48 89 c7             	mov    %rax,%rdi
    3633:	e8 38 fe ff ff       	call   3470 <_Unwind_Resume@plt>
    3638:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    363c:	c9                   	leave
    363d:	c3                   	ret

000000000000363e <main>:

int main() {
    363e:	55                   	push   %rbp
    363f:	48 89 e5             	mov    %rsp,%rbp
    3642:	53                   	push   %rbx
    3643:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    3647:	e8 8d ff ff ff       	call   35d9 <_Z14protected_mainv>
    364c:	e9 aa 00 00 00       	jmp    36fb <main+0xbd>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    3651:	b8 01 00 00 00       	mov    $0x1,%eax
    3656:	e9 a0 00 00 00       	jmp    36fb <main+0xbd>
  } catch (const std::exception &e) {
    365b:	48 83 fa 01          	cmp    $0x1,%rdx
    365f:	75 49                	jne    36aa <main+0x6c>
    3661:	48 89 c7             	mov    %rax,%rdi
    3664:	e8 57 fa ff ff       	call   30c0 <__cxa_begin_catch@plt>
    3669:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    366d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3671:	48 8b 00             	mov    (%rax),%rax
    3674:	48 83 c0 10          	add    $0x10,%rax
    3678:	48 8b 10             	mov    (%rax),%rdx
    367b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    367f:	48 89 c7             	mov    %rax,%rdi
    3682:	ff d2                	call   *%rdx
    3684:	48 89 c6             	mov    %rax,%rsi
    3687:	48 8d 05 12 7d 01 00 	lea    0x17d12(%rip),%rax        # 1b3a0 <_ZSt4cerr@GLIBCXX_3.4>
    368e:	48 89 c7             	mov    %rax,%rdi
    3691:	e8 ba fb ff ff       	call   3250 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    3696:	be 0a 00 00 00       	mov    $0xa,%esi
    369b:	48 89 c7             	mov    %rax,%rdi
    369e:	e8 8d fc ff ff       	call   3330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    36a3:	e8 98 fd ff ff       	call   3440 <__cxa_end_catch@plt>
    36a8:	eb a7                	jmp    3651 <main+0x13>
    36aa:	48 89 c7             	mov    %rax,%rdi
    36ad:	e8 0e fa ff ff       	call   30c0 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    36b2:	48 8d 05 2f bf 00 00 	lea    0xbf2f(%rip),%rax        # f5e8 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    36b9:	48 89 c6             	mov    %rax,%rsi
    36bc:	48 8d 05 dd 7c 01 00 	lea    0x17cdd(%rip),%rax        # 1b3a0 <_ZSt4cerr@GLIBCXX_3.4>
    36c3:	48 89 c7             	mov    %rax,%rdi
    36c6:	e8 85 fb ff ff       	call   3250 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    36cb:	e8 70 fd ff ff       	call   3440 <__cxa_end_catch@plt>
    36d0:	e9 7c ff ff ff       	jmp    3651 <main+0x13>
  } catch (...) {
    36d5:	48 89 c3             	mov    %rax,%rbx
    36d8:	e8 63 fd ff ff       	call   3440 <__cxa_end_catch@plt>
    36dd:	48 89 d8             	mov    %rbx,%rax
    36e0:	48 89 c7             	mov    %rax,%rdi
    36e3:	e8 88 fd ff ff       	call   3470 <_Unwind_Resume@plt>
  }
    36e8:	48 89 c3             	mov    %rax,%rbx
    36eb:	e8 50 fd ff ff       	call   3440 <__cxa_end_catch@plt>
    36f0:	48 89 d8             	mov    %rbx,%rax
    36f3:	48 89 c7             	mov    %rax,%rdi
    36f6:	e8 75 fd ff ff       	call   3470 <_Unwind_Resume@plt>
    36fb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    36ff:	c9                   	leave
    3700:	c3                   	ret

0000000000003701 <_Z41__static_initialization_and_destruction_0ii>:
    3701:	55                   	push   %rbp
    3702:	48 89 e5             	mov    %rsp,%rbp
    3705:	48 83 ec 10          	sub    $0x10,%rsp
    3709:	89 7d fc             	mov    %edi,-0x4(%rbp)
    370c:	89 75 f8             	mov    %esi,-0x8(%rbp)
    370f:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    3713:	75 3b                	jne    3750 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    3715:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    371c:	75 32                	jne    3750 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    371e:	48 8d 05 8c 7d 01 00 	lea    0x17d8c(%rip),%rax        # 1b4b1 <_ZStL8__ioinit>
    3725:	48 89 c7             	mov    %rax,%rdi
    3728:	e8 d3 fc ff ff       	call   3400 <_ZNSt8ios_base4InitC1Ev@plt>
    372d:	48 8d 05 2c 7b 01 00 	lea    0x17b2c(%rip),%rax        # 1b260 <__dso_handle>
    3734:	48 89 c2             	mov    %rax,%rdx
    3737:	48 8d 05 73 7d 01 00 	lea    0x17d73(%rip),%rax        # 1b4b1 <_ZStL8__ioinit>
    373e:	48 89 c6             	mov    %rax,%rsi
    3741:	48 8b 05 80 78 01 00 	mov    0x17880(%rip),%rax        # 1afc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    3748:	48 89 c7             	mov    %rax,%rdi
    374b:	e8 c0 fa ff ff       	call   3210 <__cxa_atexit@plt>
    3750:	90                   	nop
    3751:	c9                   	leave
    3752:	c3                   	ret

0000000000003753 <_GLOBAL__sub_I__Z14protected_mainv>:
    3753:	55                   	push   %rbp
    3754:	48 89 e5             	mov    %rsp,%rbp
    3757:	be ff ff 00 00       	mov    $0xffff,%esi
    375c:	bf 01 00 00 00       	mov    $0x1,%edi
    3761:	e8 9b ff ff ff       	call   3701 <_Z41__static_initialization_and_destruction_0ii>
    3766:	5d                   	pop    %rbp
    3767:	c3                   	ret

0000000000003768 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>:
#include "create_object.hpp"

namespace vkh {
GLFWwindow *createWindow(int width, int height, const char *title,
                         GLFWmonitor *monitor, GLFWwindow *share) {
    3768:	55                   	push   %rbp
    3769:	48 89 e5             	mov    %rsp,%rbp
    376c:	48 83 ec 20          	sub    $0x20,%rsp
    3770:	89 7d fc             	mov    %edi,-0x4(%rbp)
    3773:	89 75 f8             	mov    %esi,-0x8(%rbp)
    3776:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    377a:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    377e:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    3782:	be 00 00 00 00       	mov    $0x0,%esi
    3787:	bf 01 20 02 00       	mov    $0x22001,%edi
    378c:	e8 5f fa ff ff       	call   31f0 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    3791:	be 00 00 00 00       	mov    $0x0,%esi
    3796:	bf 03 00 02 00       	mov    $0x20003,%edi
    379b:	e8 50 fa ff ff       	call   31f0 <glfwWindowHint@plt>
  return glfwCreateWindow(width, height, title, monitor, share);
    37a0:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    37a4:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    37a8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    37ac:	8b 75 f8             	mov    -0x8(%rbp),%esi
    37af:	8b 45 fc             	mov    -0x4(%rbp),%eax
    37b2:	49 89 f8             	mov    %rdi,%r8
    37b5:	89 c7                	mov    %eax,%edi
    37b7:	e8 64 fc ff ff       	call   3420 <glfwCreateWindow@plt>
}
    37bc:	c9                   	leave
    37bd:	c3                   	ret

00000000000037be <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>:

VkInstance createInstance(const VkInstanceCreateInfo *pCreateInfo,
                          const VkAllocationCallbacks *pAllocator) {
    37be:	55                   	push   %rbp
    37bf:	48 89 e5             	mov    %rsp,%rbp
    37c2:	41 54                	push   %r12
    37c4:	53                   	push   %rbx
    37c5:	48 83 ec 20          	sub    $0x20,%rsp
    37c9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    37cd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  VkInstance instance;
  if (vkCreateInstance(pCreateInfo, pAllocator, &instance) != VK_SUCCESS) {
    37d1:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    37d5:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    37d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    37dd:	48 89 ce             	mov    %rcx,%rsi
    37e0:	48 89 c7             	mov    %rax,%rdi
    37e3:	e8 68 fb ff ff       	call   3350 <vkCreateInstance@plt>
    37e8:	85 c0                	test   %eax,%eax
    37ea:	0f 95 c0             	setne  %al
    37ed:	84 c0                	test   %al,%al
    37ef:	74 3b                	je     382c <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x6e>
    throw std::runtime_error("Failed to create an instance.");
    37f1:	bf 10 00 00 00       	mov    $0x10,%edi
    37f6:	e8 f5 f8 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    37fb:	48 89 c3             	mov    %rax,%rbx
    37fe:	48 8d 05 d3 c3 00 00 	lea    0xc3d3(%rip),%rax        # fbd8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    3805:	48 89 c6             	mov    %rax,%rsi
    3808:	48 89 df             	mov    %rbx,%rdi
    380b:	e8 90 f8 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    3810:	48 8b 05 91 77 01 00 	mov    0x17791(%rip),%rax        # 1afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3817:	48 89 c2             	mov    %rax,%rdx
    381a:	48 8d 05 1f 75 01 00 	lea    0x1751f(%rip),%rax        # 1ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3821:	48 89 c6             	mov    %rax,%rsi
    3824:	48 89 df             	mov    %rbx,%rdi
    3827:	e8 24 fc ff ff       	call   3450 <__cxa_throw@plt>
  }
  return instance;
    382c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3830:	eb 16                	jmp    3848 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x8a>
    throw std::runtime_error("Failed to create an instance.");
    3832:	49 89 c4             	mov    %rax,%r12
    3835:	48 89 df             	mov    %rbx,%rdi
    3838:	e8 33 f9 ff ff       	call   3170 <__cxa_free_exception@plt>
    383d:	4c 89 e0             	mov    %r12,%rax
    3840:	48 89 c7             	mov    %rax,%rdi
    3843:	e8 28 fc ff ff       	call   3470 <_Unwind_Resume@plt>
}
    3848:	48 83 c4 20          	add    $0x20,%rsp
    384c:	5b                   	pop    %rbx
    384d:	41 5c                	pop    %r12
    384f:	5d                   	pop    %rbp
    3850:	c3                   	ret

0000000000003851 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>:

VkDevice createDevice(VkPhysicalDevice physicalDevice,
                      const VkDeviceCreateInfo *pCreateInfo,
                      const VkAllocationCallbacks *pAllocator) {
    3851:	55                   	push   %rbp
    3852:	48 89 e5             	mov    %rsp,%rbp
    3855:	41 54                	push   %r12
    3857:	53                   	push   %rbx
    3858:	48 83 ec 30          	sub    $0x30,%rsp
    385c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3860:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    3864:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkDevice device;
  if (vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, &device) !=
    3868:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    386c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    3870:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    3874:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3878:	48 89 c7             	mov    %rax,%rdi
    387b:	e8 70 fb ff ff       	call   33f0 <vkCreateDevice@plt>
    3880:	85 c0                	test   %eax,%eax
    3882:	0f 95 c0             	setne  %al
    3885:	84 c0                	test   %al,%al
    3887:	74 3b                	je     38c4 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create logical device.");
    3889:	bf 10 00 00 00       	mov    $0x10,%edi
    388e:	e8 5d f8 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    3893:	48 89 c3             	mov    %rax,%rbx
    3896:	48 8d 05 5b c3 00 00 	lea    0xc35b(%rip),%rax        # fbf8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    389d:	48 89 c6             	mov    %rax,%rsi
    38a0:	48 89 df             	mov    %rbx,%rdi
    38a3:	e8 f8 f7 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    38a8:	48 8b 05 f9 76 01 00 	mov    0x176f9(%rip),%rax        # 1afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    38af:	48 89 c2             	mov    %rax,%rdx
    38b2:	48 8d 05 87 74 01 00 	lea    0x17487(%rip),%rax        # 1ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    38b9:	48 89 c6             	mov    %rax,%rsi
    38bc:	48 89 df             	mov    %rbx,%rdi
    38bf:	e8 8c fb ff ff       	call   3450 <__cxa_throw@plt>
  }
  return device;
    38c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    38c8:	eb 16                	jmp    38e0 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create logical device.");
    38ca:	49 89 c4             	mov    %rax,%r12
    38cd:	48 89 df             	mov    %rbx,%rdi
    38d0:	e8 9b f8 ff ff       	call   3170 <__cxa_free_exception@plt>
    38d5:	4c 89 e0             	mov    %r12,%rax
    38d8:	48 89 c7             	mov    %rax,%rdi
    38db:	e8 90 fb ff ff       	call   3470 <_Unwind_Resume@plt>
}
    38e0:	48 83 c4 30          	add    $0x30,%rsp
    38e4:	5b                   	pop    %rbx
    38e5:	41 5c                	pop    %r12
    38e7:	5d                   	pop    %rbp
    38e8:	c3                   	ret

00000000000038e9 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>:

VkSurfaceKHR createSurface(VkInstance instance, GLFWwindow *window,
                           const VkAllocationCallbacks *allocator) {
    38e9:	55                   	push   %rbp
    38ea:	48 89 e5             	mov    %rsp,%rbp
    38ed:	41 54                	push   %r12
    38ef:	53                   	push   %rbx
    38f0:	48 83 ec 30          	sub    $0x30,%rsp
    38f4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    38f8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    38fc:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSurfaceKHR surface;
  if (glfwCreateWindowSurface(instance, window, allocator, &surface) !=
    3900:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    3904:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    3908:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    390c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3910:	48 89 c7             	mov    %rax,%rdi
    3913:	e8 f8 fa ff ff       	call   3410 <glfwCreateWindowSurface@plt>
    3918:	85 c0                	test   %eax,%eax
    391a:	0f 95 c0             	setne  %al
    391d:	84 c0                	test   %al,%al
    391f:	74 3b                	je     395c <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
    3921:	bf 10 00 00 00       	mov    $0x10,%edi
    3926:	e8 c5 f7 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    392b:	48 89 c3             	mov    %rax,%rbx
    392e:	48 8d 05 eb c2 00 00 	lea    0xc2eb(%rip),%rax        # fc20 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x50>
    3935:	48 89 c6             	mov    %rax,%rsi
    3938:	48 89 df             	mov    %rbx,%rdi
    393b:	e8 60 f7 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    3940:	48 8b 05 61 76 01 00 	mov    0x17661(%rip),%rax        # 1afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3947:	48 89 c2             	mov    %rax,%rdx
    394a:	48 8d 05 ef 73 01 00 	lea    0x173ef(%rip),%rax        # 1ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3951:	48 89 c6             	mov    %rax,%rsi
    3954:	48 89 df             	mov    %rbx,%rdi
    3957:	e8 f4 fa ff ff       	call   3450 <__cxa_throw@plt>
  }
  return surface;
    395c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3960:	eb 16                	jmp    3978 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create window surface.");
    3962:	49 89 c4             	mov    %rax,%r12
    3965:	48 89 df             	mov    %rbx,%rdi
    3968:	e8 03 f8 ff ff       	call   3170 <__cxa_free_exception@plt>
    396d:	4c 89 e0             	mov    %r12,%rax
    3970:	48 89 c7             	mov    %rax,%rdi
    3973:	e8 f8 fa ff ff       	call   3470 <_Unwind_Resume@plt>
}
    3978:	48 83 c4 30          	add    $0x30,%rsp
    397c:	5b                   	pop    %rbx
    397d:	41 5c                	pop    %r12
    397f:	5d                   	pop    %rbp
    3980:	c3                   	ret

0000000000003981 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>:

VkSwapchainKHR createSwapchain(VkDevice device,
                               const VkSwapchainCreateInfoKHR *pCreateInfo,
                               const VkAllocationCallbacks *pAllocator) {
    3981:	55                   	push   %rbp
    3982:	48 89 e5             	mov    %rsp,%rbp
    3985:	41 54                	push   %r12
    3987:	53                   	push   %rbx
    3988:	48 83 ec 30          	sub    $0x30,%rsp
    398c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3990:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    3994:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSwapchainKHR swapchain{};
    3998:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    399f:	00 
  if (vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, &swapchain) !=
    39a0:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    39a4:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    39a8:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    39ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    39b0:	48 89 c7             	mov    %rax,%rdi
    39b3:	e8 88 f9 ff ff       	call   3340 <vkCreateSwapchainKHR@plt>
    39b8:	85 c0                	test   %eax,%eax
    39ba:	0f 95 c0             	setne  %al
    39bd:	84 c0                	test   %al,%al
    39bf:	74 3b                	je     39fc <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create a swapchain.");
    39c1:	bf 10 00 00 00       	mov    $0x10,%edi
    39c6:	e8 25 f7 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    39cb:	48 89 c3             	mov    %rax,%rbx
    39ce:	48 8d 05 6c c2 00 00 	lea    0xc26c(%rip),%rax        # fc41 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x71>
    39d5:	48 89 c6             	mov    %rax,%rsi
    39d8:	48 89 df             	mov    %rbx,%rdi
    39db:	e8 c0 f6 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    39e0:	48 8b 05 c1 75 01 00 	mov    0x175c1(%rip),%rax        # 1afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    39e7:	48 89 c2             	mov    %rax,%rdx
    39ea:	48 8d 05 4f 73 01 00 	lea    0x1734f(%rip),%rax        # 1ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    39f1:	48 89 c6             	mov    %rax,%rsi
    39f4:	48 89 df             	mov    %rbx,%rdi
    39f7:	e8 54 fa ff ff       	call   3450 <__cxa_throw@plt>
  }
  return swapchain;
    39fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3a00:	eb 16                	jmp    3a18 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create a swapchain.");
    3a02:	49 89 c4             	mov    %rax,%r12
    3a05:	48 89 df             	mov    %rbx,%rdi
    3a08:	e8 63 f7 ff ff       	call   3170 <__cxa_free_exception@plt>
    3a0d:	4c 89 e0             	mov    %r12,%rax
    3a10:	48 89 c7             	mov    %rax,%rdi
    3a13:	e8 58 fa ff ff       	call   3470 <_Unwind_Resume@plt>
}
    3a18:	48 83 c4 30          	add    $0x30,%rsp
    3a1c:	5b                   	pop    %rbx
    3a1d:	41 5c                	pop    %r12
    3a1f:	5d                   	pop    %rbp
    3a20:	c3                   	ret

0000000000003a21 <_ZN3vkh13destroyWindowEP10GLFWwindow>:
#include "destroy_object.hpp"

namespace vkh {

void destroyWindow(GLFWwindow *window) { glfwDestroyWindow(window); }
    3a21:	55                   	push   %rbp
    3a22:	48 89 e5             	mov    %rsp,%rbp
    3a25:	48 83 ec 10          	sub    $0x10,%rsp
    3a29:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a31:	48 89 c7             	mov    %rax,%rdi
    3a34:	e8 47 f6 ff ff       	call   3080 <glfwDestroyWindow@plt>
    3a39:	90                   	nop
    3a3a:	c9                   	leave
    3a3b:	c3                   	ret

0000000000003a3c <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>:

void destroyInstance(VkInstance instance,
                     const VkAllocationCallbacks *pAllocator) {
    3a3c:	55                   	push   %rbp
    3a3d:	48 89 e5             	mov    %rsp,%rbp
    3a40:	48 83 ec 10          	sub    $0x10,%rsp
    3a44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyInstance(instance, pAllocator);
    3a4c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3a50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a54:	48 89 d6             	mov    %rdx,%rsi
    3a57:	48 89 c7             	mov    %rax,%rdi
    3a5a:	e8 21 f8 ff ff       	call   3280 <vkDestroyInstance@plt>
}
    3a5f:	90                   	nop
    3a60:	c9                   	leave
    3a61:	c3                   	ret

0000000000003a62 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>:

void destroyDevice(VkDevice device, const VkAllocationCallbacks *pAllocator) {
    3a62:	55                   	push   %rbp
    3a63:	48 89 e5             	mov    %rsp,%rbp
    3a66:	48 83 ec 10          	sub    $0x10,%rsp
    3a6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a6e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyDevice(device, pAllocator);
    3a72:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3a76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a7a:	48 89 d6             	mov    %rdx,%rsi
    3a7d:	48 89 c7             	mov    %rax,%rdi
    3a80:	e8 3b f7 ff ff       	call   31c0 <vkDestroyDevice@plt>
}
    3a85:	90                   	nop
    3a86:	c9                   	leave
    3a87:	c3                   	ret

0000000000003a88 <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>:

void destroySurface(VkInstance instance, VkSurfaceKHR surface,
                    const VkAllocationCallbacks *pAllocator) {
    3a88:	55                   	push   %rbp
    3a89:	48 89 e5             	mov    %rsp,%rbp
    3a8c:	48 83 ec 20          	sub    $0x20,%rsp
    3a90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3a98:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySurfaceKHR(instance, surface, pAllocator);
    3a9c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3aa0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3aa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3aa8:	48 89 ce             	mov    %rcx,%rsi
    3aab:	48 89 c7             	mov    %rax,%rdi
    3aae:	e8 ad f9 ff ff       	call   3460 <vkDestroySurfaceKHR@plt>
}
    3ab3:	90                   	nop
    3ab4:	c9                   	leave
    3ab5:	c3                   	ret

0000000000003ab6 <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>:

void destroySwapchain(VkDevice device, VkSwapchainKHR swapchain,
                      const VkAllocationCallbacks *pAllocator) {
    3ab6:	55                   	push   %rbp
    3ab7:	48 89 e5             	mov    %rsp,%rbp
    3aba:	48 83 ec 20          	sub    $0x20,%rsp
    3abe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ac2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3ac6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySwapchainKHR(device, swapchain, pAllocator);
    3aca:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3ace:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3ad2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ad6:	48 89 ce             	mov    %rcx,%rsi
    3ad9:	48 89 c7             	mov    %rax,%rdi
    3adc:	e8 8f f5 ff ff       	call   3070 <vkDestroySwapchainKHR@plt>
}
    3ae1:	90                   	nop
    3ae2:	c9                   	leave
    3ae3:	c3                   	ret

0000000000003ae4 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>:
#include "get_list.hpp"

namespace vkh {

std::vector<VkExtensionProperties>
getAvailableInstanceExtensionList(const char *pLayerName) {
    3ae4:	55                   	push   %rbp
    3ae5:	48 89 e5             	mov    %rsp,%rbp
    3ae8:	41 54                	push   %r12
    3aea:	53                   	push   %rbx
    3aeb:	48 83 ec 20          	sub    $0x20,%rsp
    3aef:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3af3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    3af7:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    3afb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3aff:	ba 00 00 00 00       	mov    $0x0,%edx
    3b04:	48 89 ce             	mov    %rcx,%rsi
    3b07:	48 89 c7             	mov    %rax,%rdi
    3b0a:	e8 c1 f6 ff ff       	call   31d0 <vkEnumerateInstanceExtensionProperties@plt>
                                             nullptr) != VK_SUCCESS) {
    3b0f:	85 c0                	test   %eax,%eax
    3b11:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    3b14:	84 c0                	test   %al,%al
    3b16:	74 3b                	je     3b53 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x6f>
    throw std::runtime_error("Failed to get instance extension list.");
    3b18:	bf 10 00 00 00       	mov    $0x10,%edi
    3b1d:	e8 ce f5 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    3b22:	48 89 c3             	mov    %rax,%rbx
    3b25:	48 8d 05 e4 cc 00 00 	lea    0xcce4(%rip),%rax        # 10810 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    3b2c:	48 89 c6             	mov    %rax,%rsi
    3b2f:	48 89 df             	mov    %rbx,%rdi
    3b32:	e8 69 f5 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    3b37:	48 8b 05 6a 74 01 00 	mov    0x1746a(%rip),%rax        # 1afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3b3e:	48 89 c2             	mov    %rax,%rdx
    3b41:	48 8d 05 f8 71 01 00 	lea    0x171f8(%rip),%rax        # 1ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3b48:	48 89 c6             	mov    %rax,%rsi
    3b4b:	48 89 df             	mov    %rbx,%rdi
    3b4e:	e8 fd f8 ff ff       	call   3450 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    3b53:	8b 45 e8             	mov    -0x18(%rbp),%eax
    3b56:	89 c3                	mov    %eax,%ebx
    3b58:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3b5c:	48 89 c7             	mov    %rax,%rdi
    3b5f:	e8 26 0f 00 00       	call   4a8a <_ZNSaI21VkExtensionPropertiesEC1Ev>
    3b64:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    3b68:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b6c:	48 89 de             	mov    %rbx,%rsi
    3b6f:	48 89 c7             	mov    %rax,%rdi
    3b72:	e8 4b 0f 00 00       	call   4ac2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    3b77:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3b7b:	48 89 c7             	mov    %rax,%rdi
    3b7e:	e8 23 0f 00 00       	call   4aa6 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    3b83:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b87:	48 89 c7             	mov    %rax,%rdi
    3b8a:	e8 ed 0f 00 00       	call   4b7c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    3b8f:	48 89 c2             	mov    %rax,%rdx
    3b92:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    3b96:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3b9a:	48 89 ce             	mov    %rcx,%rsi
    3b9d:	48 89 c7             	mov    %rax,%rdi
    3ba0:	e8 2b f6 ff ff       	call   31d0 <vkEnumerateInstanceExtensionProperties@plt>
                                             instanceExtensions.data()) !=
    3ba5:	85 c0                	test   %eax,%eax
    3ba7:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    3baa:	84 c0                	test   %al,%al
    3bac:	0f 84 95 00 00 00    	je     3c47 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x163>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to get instance extension list.");
    3bb2:	bf 10 00 00 00       	mov    $0x10,%edi
    3bb7:	e8 34 f5 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    3bbc:	48 89 c3             	mov    %rax,%rbx
    3bbf:	48 8d 05 4a cc 00 00 	lea    0xcc4a(%rip),%rax        # 10810 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    3bc6:	48 89 c6             	mov    %rax,%rsi
    3bc9:	48 89 df             	mov    %rbx,%rdi
    3bcc:	e8 cf f4 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    3bd1:	48 8b 05 d0 73 01 00 	mov    0x173d0(%rip),%rax        # 1afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3bd8:	48 89 c2             	mov    %rax,%rdx
    3bdb:	48 8d 05 5e 71 01 00 	lea    0x1715e(%rip),%rax        # 1ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3be2:	48 89 c6             	mov    %rax,%rsi
    3be5:	48 89 df             	mov    %rbx,%rdi
    3be8:	e8 63 f8 ff ff       	call   3450 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    3bed:	49 89 c4             	mov    %rax,%r12
    3bf0:	48 89 df             	mov    %rbx,%rdi
    3bf3:	e8 78 f5 ff ff       	call   3170 <__cxa_free_exception@plt>
    3bf8:	4c 89 e0             	mov    %r12,%rax
    3bfb:	48 89 c7             	mov    %rax,%rdi
    3bfe:	e8 6d f8 ff ff       	call   3470 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    3c03:	48 89 c3             	mov    %rax,%rbx
    3c06:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3c0a:	48 89 c7             	mov    %rax,%rdi
    3c0d:	e8 94 0e 00 00       	call   4aa6 <_ZNSaI21VkExtensionPropertiesED1Ev>
    3c12:	48 89 d8             	mov    %rbx,%rax
    3c15:	48 89 c7             	mov    %rax,%rdi
    3c18:	e8 53 f8 ff ff       	call   3470 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    3c1d:	49 89 c4             	mov    %rax,%r12
    3c20:	48 89 df             	mov    %rbx,%rdi
    3c23:	e8 48 f5 ff ff       	call   3170 <__cxa_free_exception@plt>
    3c28:	4c 89 e3             	mov    %r12,%rbx
    3c2b:	eb 03                	jmp    3c30 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x14c>
  }
  return instanceExtensions;
}
    3c2d:	48 89 c3             	mov    %rax,%rbx
    3c30:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3c34:	48 89 c7             	mov    %rax,%rdi
    3c37:	e8 fc 0e 00 00       	call   4b38 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    3c3c:	48 89 d8             	mov    %rbx,%rax
    3c3f:	48 89 c7             	mov    %rax,%rdi
    3c42:	e8 29 f8 ff ff       	call   3470 <_Unwind_Resume@plt>
  return instanceExtensions;
    3c47:	90                   	nop
}
    3c48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3c4c:	48 83 c4 20          	add    $0x20,%rsp
    3c50:	5b                   	pop    %rbx
    3c51:	41 5c                	pop    %r12
    3c53:	5d                   	pop    %rbp
    3c54:	c3                   	ret

0000000000003c55 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>:

std::vector<VkExtensionProperties>
getAvailableDeviceExtensionList(VkPhysicalDevice physicalDevice,
                                const char *pLayerName) {
    3c55:	55                   	push   %rbp
    3c56:	48 89 e5             	mov    %rsp,%rbp
    3c59:	41 54                	push   %r12
    3c5b:	53                   	push   %rbx
    3c5c:	48 83 ec 30          	sub    $0x30,%rsp
    3c60:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3c64:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    3c68:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    3c6c:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    3c70:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    3c74:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3c78:	b9 00 00 00 00       	mov    $0x0,%ecx
    3c7d:	48 89 c7             	mov    %rax,%rdi
    3c80:	e8 3b f7 ff ff       	call   33c0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount, nullptr) != VK_SUCCESS) {
    3c85:	85 c0                	test   %eax,%eax
    3c87:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    3c8a:	84 c0                	test   %al,%al
    3c8c:	74 3b                	je     3cc9 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x74>
    throw std::runtime_error("Failed to get device extension list.");
    3c8e:	bf 10 00 00 00       	mov    $0x10,%edi
    3c93:	e8 58 f4 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    3c98:	48 89 c3             	mov    %rax,%rbx
    3c9b:	48 8d 05 96 cb 00 00 	lea    0xcb96(%rip),%rax        # 10838 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    3ca2:	48 89 c6             	mov    %rax,%rsi
    3ca5:	48 89 df             	mov    %rbx,%rdi
    3ca8:	e8 f3 f3 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    3cad:	48 8b 05 f4 72 01 00 	mov    0x172f4(%rip),%rax        # 1afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3cb4:	48 89 c2             	mov    %rax,%rdx
    3cb7:	48 8d 05 82 70 01 00 	lea    0x17082(%rip),%rax        # 1ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3cbe:	48 89 c6             	mov    %rax,%rsi
    3cc1:	48 89 df             	mov    %rbx,%rdi
    3cc4:	e8 87 f7 ff ff       	call   3450 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    3cc9:	8b 45 e8             	mov    -0x18(%rbp),%eax
    3ccc:	89 c3                	mov    %eax,%ebx
    3cce:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3cd2:	48 89 c7             	mov    %rax,%rdi
    3cd5:	e8 b0 0d 00 00       	call   4a8a <_ZNSaI21VkExtensionPropertiesEC1Ev>
    3cda:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    3cde:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ce2:	48 89 de             	mov    %rbx,%rsi
    3ce5:	48 89 c7             	mov    %rax,%rdi
    3ce8:	e8 d5 0d 00 00       	call   4ac2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    3ced:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3cf1:	48 89 c7             	mov    %rax,%rdi
    3cf4:	e8 ad 0d 00 00       	call   4aa6 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    3cf9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3cfd:	48 89 c7             	mov    %rax,%rdi
    3d00:	e8 77 0e 00 00       	call   4b7c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    3d05:	48 89 c1             	mov    %rax,%rcx
    3d08:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    3d0c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    3d10:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3d14:	48 89 c7             	mov    %rax,%rdi
    3d17:	e8 a4 f6 ff ff       	call   33c0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount,
          deviceExtensions.data()) != VK_SUCCESS) {
    3d1c:	85 c0                	test   %eax,%eax
    3d1e:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    3d21:	84 c0                	test   %al,%al
    3d23:	0f 84 95 00 00 00    	je     3dbe <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x169>
    throw std::runtime_error("Failed to get device extension list.");
    3d29:	bf 10 00 00 00       	mov    $0x10,%edi
    3d2e:	e8 bd f3 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    3d33:	48 89 c3             	mov    %rax,%rbx
    3d36:	48 8d 05 fb ca 00 00 	lea    0xcafb(%rip),%rax        # 10838 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    3d3d:	48 89 c6             	mov    %rax,%rsi
    3d40:	48 89 df             	mov    %rbx,%rdi
    3d43:	e8 58 f3 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    3d48:	48 8b 05 59 72 01 00 	mov    0x17259(%rip),%rax        # 1afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3d4f:	48 89 c2             	mov    %rax,%rdx
    3d52:	48 8d 05 e7 6f 01 00 	lea    0x16fe7(%rip),%rax        # 1ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3d59:	48 89 c6             	mov    %rax,%rsi
    3d5c:	48 89 df             	mov    %rbx,%rdi
    3d5f:	e8 ec f6 ff ff       	call   3450 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get device extension list.");
    3d64:	49 89 c4             	mov    %rax,%r12
    3d67:	48 89 df             	mov    %rbx,%rdi
    3d6a:	e8 01 f4 ff ff       	call   3170 <__cxa_free_exception@plt>
    3d6f:	4c 89 e0             	mov    %r12,%rax
    3d72:	48 89 c7             	mov    %rax,%rdi
    3d75:	e8 f6 f6 ff ff       	call   3470 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    3d7a:	48 89 c3             	mov    %rax,%rbx
    3d7d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3d81:	48 89 c7             	mov    %rax,%rdi
    3d84:	e8 1d 0d 00 00       	call   4aa6 <_ZNSaI21VkExtensionPropertiesED1Ev>
    3d89:	48 89 d8             	mov    %rbx,%rax
    3d8c:	48 89 c7             	mov    %rax,%rdi
    3d8f:	e8 dc f6 ff ff       	call   3470 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    3d94:	49 89 c4             	mov    %rax,%r12
    3d97:	48 89 df             	mov    %rbx,%rdi
    3d9a:	e8 d1 f3 ff ff       	call   3170 <__cxa_free_exception@plt>
    3d9f:	4c 89 e3             	mov    %r12,%rbx
    3da2:	eb 03                	jmp    3da7 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x152>
  }
  return deviceExtensions;
}
    3da4:	48 89 c3             	mov    %rax,%rbx
    3da7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3dab:	48 89 c7             	mov    %rax,%rdi
    3dae:	e8 85 0d 00 00       	call   4b38 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    3db3:	48 89 d8             	mov    %rbx,%rax
    3db6:	48 89 c7             	mov    %rax,%rdi
    3db9:	e8 b2 f6 ff ff       	call   3470 <_Unwind_Resume@plt>
  return deviceExtensions;
    3dbe:	90                   	nop
}
    3dbf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3dc3:	48 83 c4 30          	add    $0x30,%rsp
    3dc7:	5b                   	pop    %rbx
    3dc8:	41 5c                	pop    %r12
    3dca:	5d                   	pop    %rbp
    3dcb:	c3                   	ret

0000000000003dcc <_ZN3vkh36getRequiredInstanceExtensionNameListEb>:

std::vector<const char *>
getRequiredInstanceExtensionNameList(bool enableValidationLayers) {
    3dcc:	55                   	push   %rbp
    3dcd:	48 89 e5             	mov    %rsp,%rbp
    3dd0:	53                   	push   %rbx
    3dd1:	48 83 ec 38          	sub    $0x38,%rsp
    3dd5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    3dd9:	89 f0                	mov    %esi,%eax
    3ddb:	88 45 c4             	mov    %al,-0x3c(%rbp)
  uint32_t requiredExtensionCount;
  const char **ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    3dde:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    3de2:	48 89 c7             	mov    %rax,%rdi
    3de5:	e8 a6 f3 ff ff       	call   3190 <glfwGetRequiredInstanceExtensions@plt>
    3dea:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    3dee:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3df1:	89 c3                	mov    %eax,%ebx
    3df3:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    3df7:	48 89 c7             	mov    %rax,%rdi
    3dfa:	e8 f9 0d 00 00       	call   4bf8 <_ZNSaIPKcEC1Ev>
    3dff:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    3e03:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3e07:	48 89 de             	mov    %rbx,%rsi
    3e0a:	48 89 c7             	mov    %rax,%rdi
    3e0d:	e8 1e 0e 00 00       	call   4c30 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    3e12:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    3e16:	48 89 c7             	mov    %rax,%rdi
    3e19:	e8 f6 0d 00 00       	call   4c14 <_ZNSaIPKcED1Ev>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    3e1e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    3e25:	eb 2e                	jmp    3e55 <_ZN3vkh36getRequiredInstanceExtensionNameListEb+0x89>
    requiredInstanceExtensions[i] = ppRequiredExtensions[i];
    3e27:	8b 45 ec             	mov    -0x14(%rbp),%eax
    3e2a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    3e31:	00 
    3e32:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3e36:	48 01 d0             	add    %rdx,%rax
    3e39:	48 8b 18             	mov    (%rax),%rbx
    3e3c:	8b 55 ec             	mov    -0x14(%rbp),%edx
    3e3f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3e43:	48 89 d6             	mov    %rdx,%rsi
    3e46:	48 89 c7             	mov    %rax,%rdi
    3e49:	e8 9c 0e 00 00       	call   4cea <_ZNSt6vectorIPKcSaIS1_EEixEm>
    3e4e:	48 89 18             	mov    %rbx,(%rax)
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    3e51:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    3e55:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3e58:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    3e5b:	72 ca                	jb     3e27 <_ZN3vkh36getRequiredInstanceExtensionNameListEb+0x5b>
  }
  if (enableValidationLayers) {
    3e5d:	80 7d c4 00          	cmpb   $0x0,-0x3c(%rbp)
    3e61:	74 54                	je     3eb7 <_ZN3vkh36getRequiredInstanceExtensionNameListEb+0xeb>
    requiredInstanceExtensions.push_back(VK_EXT_DEBUG_UTILS_EXTENSION_NAME);
    3e63:	48 8d 05 f3 c9 00 00 	lea    0xc9f3(%rip),%rax        # 1085d <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x55>
    3e6a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3e6e:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    3e72:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3e76:	48 89 d6             	mov    %rdx,%rsi
    3e79:	48 89 c7             	mov    %rax,%rdi
    3e7c:	e8 89 0e 00 00       	call   4d0a <_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_>
  }
  return requiredInstanceExtensions;
    3e81:	eb 34                	jmp    3eb7 <_ZN3vkh36getRequiredInstanceExtensionNameListEb+0xeb>
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    3e83:	48 89 c3             	mov    %rax,%rbx
    3e86:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    3e8a:	48 89 c7             	mov    %rax,%rdi
    3e8d:	e8 82 0d 00 00       	call   4c14 <_ZNSaIPKcED1Ev>
    3e92:	48 89 d8             	mov    %rbx,%rax
    3e95:	48 89 c7             	mov    %rax,%rdi
    3e98:	e8 d3 f5 ff ff       	call   3470 <_Unwind_Resume@plt>
}
    3e9d:	48 89 c3             	mov    %rax,%rbx
    3ea0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3ea4:	48 89 c7             	mov    %rax,%rdi
    3ea7:	e8 fa 0d 00 00       	call   4ca6 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    3eac:	48 89 d8             	mov    %rbx,%rax
    3eaf:	48 89 c7             	mov    %rax,%rdi
    3eb2:	e8 b9 f5 ff ff       	call   3470 <_Unwind_Resume@plt>
  return requiredInstanceExtensions;
    3eb7:	90                   	nop
}
    3eb8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3ebc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3ec0:	c9                   	leave
    3ec1:	c3                   	ret

0000000000003ec2 <_ZN3vkh29getAvailableInstanceLayerListEv>:

std::vector<VkLayerProperties> getAvailableInstanceLayerList() {
    3ec2:	55                   	push   %rbp
    3ec3:	48 89 e5             	mov    %rsp,%rbp
    3ec6:	53                   	push   %rbx
    3ec7:	48 83 ec 28          	sub    $0x28,%rsp
    3ecb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    3ecf:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    3ed3:	be 00 00 00 00       	mov    $0x0,%esi
    3ed8:	48 89 c7             	mov    %rax,%rdi
    3edb:	e8 30 f4 ff ff       	call   3310 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    3ee0:	8b 45 e8             	mov    -0x18(%rbp),%eax
    3ee3:	89 c3                	mov    %eax,%ebx
    3ee5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3ee9:	48 89 c7             	mov    %rax,%rdi
    3eec:	e8 99 0e 00 00       	call   4d8a <_ZNSaI17VkLayerPropertiesEC1Ev>
    3ef1:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    3ef5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ef9:	48 89 de             	mov    %rbx,%rsi
    3efc:	48 89 c7             	mov    %rax,%rdi
    3eff:	e8 be 0e 00 00       	call   4dc2 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    3f04:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3f08:	48 89 c7             	mov    %rax,%rdi
    3f0b:	e8 96 0e 00 00       	call   4da6 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    3f10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3f14:	48 89 c7             	mov    %rax,%rdi
    3f17:	e8 60 0f 00 00       	call   4e7c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    3f1c:	48 89 c2             	mov    %rax,%rdx
    3f1f:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    3f23:	48 89 d6             	mov    %rdx,%rsi
    3f26:	48 89 c7             	mov    %rax,%rdi
    3f29:	e8 e2 f3 ff ff       	call   3310 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    3f2e:	eb 34                	jmp    3f64 <_ZN3vkh29getAvailableInstanceLayerListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    3f30:	48 89 c3             	mov    %rax,%rbx
    3f33:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3f37:	48 89 c7             	mov    %rax,%rdi
    3f3a:	e8 67 0e 00 00       	call   4da6 <_ZNSaI17VkLayerPropertiesED1Ev>
    3f3f:	48 89 d8             	mov    %rbx,%rax
    3f42:	48 89 c7             	mov    %rax,%rdi
    3f45:	e8 26 f5 ff ff       	call   3470 <_Unwind_Resume@plt>
}
    3f4a:	48 89 c3             	mov    %rax,%rbx
    3f4d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3f51:	48 89 c7             	mov    %rax,%rdi
    3f54:	e8 df 0e 00 00       	call   4e38 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    3f59:	48 89 d8             	mov    %rbx,%rax
    3f5c:	48 89 c7             	mov    %rax,%rdi
    3f5f:	e8 0c f5 ff ff       	call   3470 <_Unwind_Resume@plt>
    3f64:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3f68:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3f6c:	c9                   	leave
    3f6d:	c3                   	ret

0000000000003f6e <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>:

std::vector<VkPhysicalDevice> getPhysicalDeviceList(VkInstance instance) {
    3f6e:	55                   	push   %rbp
    3f6f:	48 89 e5             	mov    %rsp,%rbp
    3f72:	41 54                	push   %r12
    3f74:	53                   	push   %rbx
    3f75:	48 83 ec 20          	sub    $0x20,%rsp
    3f79:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3f7d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t physicalDeviceCount;
  vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    3f81:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    3f85:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3f89:	ba 00 00 00 00       	mov    $0x0,%edx
    3f8e:	48 89 ce             	mov    %rcx,%rsi
    3f91:	48 89 c7             	mov    %rax,%rdi
    3f94:	e8 77 f1 ff ff       	call   3110 <vkEnumeratePhysicalDevices@plt>
  if (physicalDeviceCount == 0) {
    3f99:	8b 45 e8             	mov    -0x18(%rbp),%eax
    3f9c:	85 c0                	test   %eax,%eax
    3f9e:	75 3b                	jne    3fdb <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x6d>
    throw std::runtime_error(
        "Failed to find any physical device with Vulkan support.");
    3fa0:	bf 10 00 00 00       	mov    $0x10,%edi
    3fa5:	e8 46 f1 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    3faa:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    3fad:	48 8d 05 bc c8 00 00 	lea    0xc8bc(%rip),%rax        # 10870 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x68>
    3fb4:	48 89 c6             	mov    %rax,%rsi
    3fb7:	48 89 df             	mov    %rbx,%rdi
    3fba:	e8 e1 f0 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
        "Failed to find any physical device with Vulkan support.");
    3fbf:	48 8b 05 e2 6f 01 00 	mov    0x16fe2(%rip),%rax        # 1afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3fc6:	48 89 c2             	mov    %rax,%rdx
    3fc9:	48 8d 05 70 6d 01 00 	lea    0x16d70(%rip),%rax        # 1ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3fd0:	48 89 c6             	mov    %rax,%rsi
    3fd3:	48 89 df             	mov    %rbx,%rdi
    3fd6:	e8 75 f4 ff ff       	call   3450 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    3fdb:	8b 45 e8             	mov    -0x18(%rbp),%eax
    3fde:	89 c3                	mov    %eax,%ebx
    3fe0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3fe4:	48 89 c7             	mov    %rax,%rdi
    3fe7:	e8 0c 0f 00 00       	call   4ef8 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    3fec:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    3ff0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ff4:	48 89 de             	mov    %rbx,%rsi
    3ff7:	48 89 c7             	mov    %rax,%rdi
    3ffa:	e8 31 0f 00 00       	call   4f30 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    3fff:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4003:	48 89 c7             	mov    %rax,%rdi
    4006:	e8 09 0f 00 00       	call   4f14 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    400b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    400f:	48 89 c7             	mov    %rax,%rdi
    4012:	e8 d3 0f 00 00       	call   4fea <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    4017:	48 89 c2             	mov    %rax,%rdx
    401a:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    401e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4022:	48 89 ce             	mov    %rcx,%rsi
    4025:	48 89 c7             	mov    %rax,%rdi
    4028:	e8 e3 f0 ff ff       	call   3110 <vkEnumeratePhysicalDevices@plt>
                                 physicalDevices.data()) != VK_SUCCESS) {
    402d:	85 c0                	test   %eax,%eax
    402f:	0f 95 c0             	setne  %al
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    4032:	84 c0                	test   %al,%al
    4034:	0f 84 95 00 00 00    	je     40cf <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x161>
    throw std::runtime_error("Failed to get physical devices list.");
    403a:	bf 10 00 00 00       	mov    $0x10,%edi
    403f:	e8 ac f0 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    4044:	48 89 c3             	mov    %rax,%rbx
    4047:	48 8d 05 5a c8 00 00 	lea    0xc85a(%rip),%rax        # 108a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xa0>
    404e:	48 89 c6             	mov    %rax,%rsi
    4051:	48 89 df             	mov    %rbx,%rdi
    4054:	e8 47 f0 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    4059:	48 8b 05 48 6f 01 00 	mov    0x16f48(%rip),%rax        # 1afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4060:	48 89 c2             	mov    %rax,%rdx
    4063:	48 8d 05 d6 6c 01 00 	lea    0x16cd6(%rip),%rax        # 1ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    406a:	48 89 c6             	mov    %rax,%rsi
    406d:	48 89 df             	mov    %rbx,%rdi
    4070:	e8 db f3 ff ff       	call   3450 <__cxa_throw@plt>
        "Failed to find any physical device with Vulkan support.");
    4075:	49 89 c4             	mov    %rax,%r12
    4078:	48 89 df             	mov    %rbx,%rdi
    407b:	e8 f0 f0 ff ff       	call   3170 <__cxa_free_exception@plt>
    4080:	4c 89 e0             	mov    %r12,%rax
    4083:	48 89 c7             	mov    %rax,%rdi
    4086:	e8 e5 f3 ff ff       	call   3470 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    408b:	48 89 c3             	mov    %rax,%rbx
    408e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4092:	48 89 c7             	mov    %rax,%rdi
    4095:	e8 7a 0e 00 00       	call   4f14 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    409a:	48 89 d8             	mov    %rbx,%rax
    409d:	48 89 c7             	mov    %rax,%rdi
    40a0:	e8 cb f3 ff ff       	call   3470 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get physical devices list.");
    40a5:	49 89 c4             	mov    %rax,%r12
    40a8:	48 89 df             	mov    %rbx,%rdi
    40ab:	e8 c0 f0 ff ff       	call   3170 <__cxa_free_exception@plt>
    40b0:	4c 89 e3             	mov    %r12,%rbx
    40b3:	eb 03                	jmp    40b8 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x14a>
  };
  return physicalDevices;
}
    40b5:	48 89 c3             	mov    %rax,%rbx
    40b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    40bc:	48 89 c7             	mov    %rax,%rdi
    40bf:	e8 e2 0e 00 00       	call   4fa6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    40c4:	48 89 d8             	mov    %rbx,%rax
    40c7:	48 89 c7             	mov    %rax,%rdi
    40ca:	e8 a1 f3 ff ff       	call   3470 <_Unwind_Resume@plt>
  return physicalDevices;
    40cf:	90                   	nop
}
    40d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    40d4:	48 83 c4 20          	add    $0x20,%rsp
    40d8:	5b                   	pop    %rbx
    40d9:	41 5c                	pop    %r12
    40db:	5d                   	pop    %rbp
    40dc:	c3                   	ret

00000000000040dd <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>:

VkPhysicalDeviceProperties
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice) {
    40dd:	55                   	push   %rbp
    40de:	48 89 e5             	mov    %rsp,%rbp
    40e1:	48 83 ec 10          	sub    $0x10,%rsp
    40e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    40e9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    40ed:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    40f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    40f5:	48 89 d6             	mov    %rdx,%rsi
    40f8:	48 89 c7             	mov    %rax,%rdi
    40fb:	e8 b0 ef ff ff       	call   30b0 <vkGetPhysicalDeviceProperties@plt>
  return properties;
    4100:	90                   	nop
}
    4101:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4105:	c9                   	leave
    4106:	c3                   	ret

0000000000004107 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>:

VkPhysicalDeviceProperties2
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice,
                              void *pNextProperty) {
    4107:	55                   	push   %rbp
    4108:	48 89 e5             	mov    %rsp,%rbp
    410b:	48 83 ec 20          	sub    $0x20,%rsp
    410f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4113:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4117:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  VkPhysicalDeviceProperties2 properties;
  properties.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
    411b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    411f:	c7 00 79 b0 9b 3b    	movl   $0x3b9bb079,(%rax)
  properties.pNext = pNextProperty;
    4125:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4129:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    412d:	48 89 50 08          	mov    %rdx,0x8(%rax)
  vkGetPhysicalDeviceProperties2(physicalDevice, &properties);
    4131:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4135:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4139:	48 89 d6             	mov    %rdx,%rsi
    413c:	48 89 c7             	mov    %rax,%rdi
    413f:	e8 dc f0 ff ff       	call   3220 <vkGetPhysicalDeviceProperties2@plt>
  return properties;
    4144:	90                   	nop
}
    4145:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4149:	c9                   	leave
    414a:	c3                   	ret

000000000000414b <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<VkQueueFamilyProperties>
getPhysicalDeviceQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    414b:	55                   	push   %rbp
    414c:	48 89 e5             	mov    %rsp,%rbp
    414f:	53                   	push   %rbx
    4150:	48 83 ec 28          	sub    $0x28,%rsp
    4154:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4158:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t queueFamilyPropertyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice,
    415c:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    4160:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4164:	ba 00 00 00 00       	mov    $0x0,%edx
    4169:	48 89 ce             	mov    %rcx,%rsi
    416c:	48 89 c7             	mov    %rax,%rdi
    416f:	e8 0c f0 ff ff       	call   3180 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           &queueFamilyPropertyCount, nullptr);
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{
      queueFamilyPropertyCount};
    4174:	8b 45 e8             	mov    -0x18(%rbp),%eax
    4177:	89 c3                	mov    %eax,%ebx
    4179:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    417d:	48 89 c7             	mov    %rax,%rdi
    4180:	e8 d7 0e 00 00       	call   505c <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    4185:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4189:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    418d:	48 89 de             	mov    %rbx,%rsi
    4190:	48 89 c7             	mov    %rax,%rdi
    4193:	e8 fc 0e 00 00       	call   5094 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    4198:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    419c:	48 89 c7             	mov    %rax,%rdi
    419f:	e8 d4 0e 00 00       	call   5078 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(
    41a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    41a8:	48 89 c7             	mov    %rax,%rdi
    41ab:	e8 9e 0f 00 00       	call   514e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    41b0:	48 89 c2             	mov    %rax,%rdx
    41b3:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    41b7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    41bb:	48 89 ce             	mov    %rcx,%rsi
    41be:	48 89 c7             	mov    %rax,%rdi
    41c1:	e8 ba ef ff ff       	call   3180 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
      physicalDevice, &queueFamilyPropertyCount, queueFamilyProperties.data());
  return queueFamilyProperties;
    41c6:	eb 34                	jmp    41fc <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xb1>
      queueFamilyPropertyCount};
    41c8:	48 89 c3             	mov    %rax,%rbx
    41cb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    41cf:	48 89 c7             	mov    %rax,%rdi
    41d2:	e8 a1 0e 00 00       	call   5078 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    41d7:	48 89 d8             	mov    %rbx,%rax
    41da:	48 89 c7             	mov    %rax,%rdi
    41dd:	e8 8e f2 ff ff       	call   3470 <_Unwind_Resume@plt>
}
    41e2:	48 89 c3             	mov    %rax,%rbx
    41e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    41e9:	48 89 c7             	mov    %rax,%rdi
    41ec:	e8 19 0f 00 00       	call   510a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    41f1:	48 89 d8             	mov    %rbx,%rax
    41f4:	48 89 c7             	mov    %rax,%rdi
    41f7:	e8 74 f2 ff ff       	call   3470 <_Unwind_Resume@plt>
    41fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4200:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4204:	c9                   	leave
    4205:	c3                   	ret

0000000000004206 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getGraphicsQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    4206:	55                   	push   %rbp
    4207:	48 89 e5             	mov    %rsp,%rbp
    420a:	53                   	push   %rbx
    420b:	48 83 ec 68          	sub    $0x68,%rsp
    420f:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    4213:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    4217:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    421b:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    421f:	48 89 d6             	mov    %rdx,%rsi
    4222:	48 89 c7             	mov    %rax,%rdi
    4225:	e8 21 ff ff ff       	call   414b <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> graphicsQueueFamilies{
      queueFamilyProps.size()};
    422a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    422e:	48 89 c7             	mov    %rax,%rdi
    4231:	e8 94 0f 00 00       	call   51ca <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    4236:	48 89 c3             	mov    %rax,%rbx
    4239:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    423d:	48 89 c7             	mov    %rax,%rdi
    4240:	e8 b3 0f 00 00       	call   51f8 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    4245:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    4249:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    424d:	48 89 de             	mov    %rbx,%rsi
    4250:	48 89 c7             	mov    %rax,%rdi
    4253:	e8 d8 0f 00 00       	call   5230 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    4258:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    425c:	48 89 c7             	mov    %rax,%rdi
    425f:	e8 b0 0f 00 00       	call   5214 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    4264:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    426b:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    426c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4270:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4274:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4278:	48 89 c7             	mov    %rax,%rdi
    427b:	e8 6a 10 00 00       	call   52ea <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    4280:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    4284:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4288:	48 89 c7             	mov    %rax,%rdi
    428b:	e8 80 10 00 00       	call   5310 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    4290:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    4294:	eb 4e                	jmp    42e4 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xde>
    4296:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    429a:	48 89 c7             	mov    %rax,%rdi
    429d:	e8 f2 10 00 00       	call   5394 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    42a2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_GRAPHICS_BIT) {
    42a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    42aa:	8b 00                	mov    (%rax),%eax
    42ac:	83 e0 01             	and    $0x1,%eax
    42af:	85 c0                	test   %eax,%eax
    42b1:	74 25                	je     42d8 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      graphicsQueueFamilies[index] = queueFamilyProp;
    42b3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    42b7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    42bb:	48 89 d6             	mov    %rdx,%rsi
    42be:	48 89 c7             	mov    %rax,%rdi
    42c1:	e8 e0 10 00 00       	call   53a6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    42c6:	48 89 c2             	mov    %rax,%rdx
    42c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    42cd:	48 89 c6             	mov    %rax,%rsi
    42d0:	48 89 d7             	mov    %rdx,%rdi
    42d3:	e8 f8 10 00 00       	call   53d0 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
  for (const auto &queueFamilyProp : queueFamilyProps) {
    42d8:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    42dc:	48 89 c7             	mov    %rax,%rdi
    42df:	e8 90 10 00 00       	call   5374 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    42e4:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    42e8:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    42ec:	48 89 d6             	mov    %rdx,%rsi
    42ef:	48 89 c7             	mov    %rax,%rdi
    42f2:	e8 42 10 00 00       	call   5339 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    42f7:	84 c0                	test   %al,%al
    42f9:	75 9b                	jne    4296 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
    }
  }
  return graphicsQueueFamilies;
    42fb:	90                   	nop
}
    42fc:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4300:	48 89 c7             	mov    %rax,%rdi
    4303:	e8 02 0e 00 00       	call   510a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return graphicsQueueFamilies;
    4308:	eb 26                	jmp    4330 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12a>
      queueFamilyProps.size()};
    430a:	48 89 c3             	mov    %rax,%rbx
    430d:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    4311:	48 89 c7             	mov    %rax,%rdi
    4314:	e8 fb 0e 00 00       	call   5214 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    4319:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    431d:	48 89 c7             	mov    %rax,%rdi
    4320:	e8 e5 0d 00 00       	call   510a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    4325:	48 89 d8             	mov    %rbx,%rax
    4328:	48 89 c7             	mov    %rax,%rdi
    432b:	e8 40 f1 ff ff       	call   3470 <_Unwind_Resume@plt>
    4330:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    4334:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4338:	c9                   	leave
    4339:	c3                   	ret

000000000000433a <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getComputeQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    433a:	55                   	push   %rbp
    433b:	48 89 e5             	mov    %rsp,%rbp
    433e:	53                   	push   %rbx
    433f:	48 83 ec 68          	sub    $0x68,%rsp
    4343:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    4347:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    434b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    434f:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    4353:	48 89 d6             	mov    %rdx,%rsi
    4356:	48 89 c7             	mov    %rax,%rdi
    4359:	e8 ed fd ff ff       	call   414b <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> computeQueueFamilies{
      queueFamilyProps.size()};
    435e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4362:	48 89 c7             	mov    %rax,%rdi
    4365:	e8 60 0e 00 00       	call   51ca <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    436a:	48 89 c3             	mov    %rax,%rbx
    436d:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    4371:	48 89 c7             	mov    %rax,%rdi
    4374:	e8 7f 0e 00 00       	call   51f8 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    4379:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    437d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    4381:	48 89 de             	mov    %rbx,%rsi
    4384:	48 89 c7             	mov    %rax,%rdi
    4387:	e8 a4 0e 00 00       	call   5230 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    438c:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    4390:	48 89 c7             	mov    %rax,%rdi
    4393:	e8 7c 0e 00 00       	call   5214 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    4398:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    439f:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    43a0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    43a4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    43a8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    43ac:	48 89 c7             	mov    %rax,%rdi
    43af:	e8 36 0f 00 00       	call   52ea <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    43b4:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    43b8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    43bc:	48 89 c7             	mov    %rax,%rdi
    43bf:	e8 4c 0f 00 00       	call   5310 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    43c4:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    43c8:	eb 53                	jmp    441d <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xe3>
    43ca:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    43ce:	48 89 c7             	mov    %rax,%rdi
    43d1:	e8 be 0f 00 00       	call   5394 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    43d6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_COMPUTE_BIT) {
    43da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    43de:	8b 00                	mov    (%rax),%eax
    43e0:	83 e0 02             	and    $0x2,%eax
    43e3:	85 c0                	test   %eax,%eax
    43e5:	74 25                	je     440c <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      computeQueueFamilies[index] = queueFamilyProp;
    43e7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    43eb:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    43ef:	48 89 d6             	mov    %rdx,%rsi
    43f2:	48 89 c7             	mov    %rax,%rdi
    43f5:	e8 ac 0f 00 00       	call   53a6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    43fa:	48 89 c2             	mov    %rax,%rdx
    43fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4401:	48 89 c6             	mov    %rax,%rsi
    4404:	48 89 d7             	mov    %rdx,%rdi
    4407:	e8 c4 0f 00 00       	call   53d0 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    440c:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    4411:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    4415:	48 89 c7             	mov    %rax,%rdi
    4418:	e8 57 0f 00 00       	call   5374 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    441d:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    4421:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    4425:	48 89 d6             	mov    %rdx,%rsi
    4428:	48 89 c7             	mov    %rax,%rdi
    442b:	e8 09 0f 00 00       	call   5339 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    4430:	84 c0                	test   %al,%al
    4432:	75 96                	jne    43ca <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
  }
  return computeQueueFamilies;
    4434:	90                   	nop
}
    4435:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4439:	48 89 c7             	mov    %rax,%rdi
    443c:	e8 c9 0c 00 00       	call   510a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return computeQueueFamilies;
    4441:	eb 26                	jmp    4469 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12f>
      queueFamilyProps.size()};
    4443:	48 89 c3             	mov    %rax,%rbx
    4446:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    444a:	48 89 c7             	mov    %rax,%rdi
    444d:	e8 c2 0d 00 00       	call   5214 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    4452:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4456:	48 89 c7             	mov    %rax,%rdi
    4459:	e8 ac 0c 00 00       	call   510a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    445e:	48 89 d8             	mov    %rbx,%rax
    4461:	48 89 c7             	mov    %rax,%rdi
    4464:	e8 07 f0 ff ff       	call   3470 <_Unwind_Resume@plt>
    4469:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    446d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4471:	c9                   	leave
    4472:	c3                   	ret

0000000000004473 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getPresentQueueFamilyPropertyList(VkPhysicalDevice physicalDevice,
                                  VkSurfaceKHR surface) {
    4473:	55                   	push   %rbp
    4474:	48 89 e5             	mov    %rsp,%rbp
    4477:	53                   	push   %rbx
    4478:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    447f:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    4483:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    4487:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    448e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4492:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    4496:	48 89 d6             	mov    %rdx,%rsi
    4499:	48 89 c7             	mov    %rax,%rdi
    449c:	e8 aa fc ff ff       	call   414b <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> presentQueueFamilies{
      queueFamilyProps.size()};
    44a1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    44a5:	48 89 c7             	mov    %rax,%rdi
    44a8:	e8 1d 0d 00 00       	call   51ca <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    44ad:	48 89 c3             	mov    %rax,%rbx
    44b0:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    44b4:	48 89 c7             	mov    %rax,%rdi
    44b7:	e8 3c 0d 00 00       	call   51f8 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    44bc:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    44c0:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    44c4:	48 89 de             	mov    %rbx,%rsi
    44c7:	48 89 c7             	mov    %rax,%rdi
    44ca:	e8 61 0d 00 00       	call   5230 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    44cf:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    44d3:	48 89 c7             	mov    %rax,%rdi
    44d6:	e8 39 0d 00 00       	call   5214 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  uint32_t index = 0;
    44db:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    44e2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    44e6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    44ea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    44ee:	48 89 c7             	mov    %rax,%rdi
    44f1:	e8 f4 0d 00 00       	call   52ea <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    44f6:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    44fa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    44fe:	48 89 c7             	mov    %rax,%rdi
    4501:	e8 0a 0e 00 00       	call   5310 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    4506:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    450a:	eb 6c                	jmp    4578 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x105>
    450c:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    4510:	48 89 c7             	mov    %rax,%rdi
    4513:	e8 7c 0e 00 00       	call   5394 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    4518:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    VkBool32 presentSupported = false;
    451c:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, index, surface,
    4523:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    4527:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    452e:	8b 75 ec             	mov    -0x14(%rbp),%esi
    4531:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    4535:	48 89 c7             	mov    %rax,%rdi
    4538:	e8 93 ed ff ff       	call   32d0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                         &presentSupported);
    if (presentSupported) {
    453d:	8b 45 9c             	mov    -0x64(%rbp),%eax
    4540:	85 c0                	test   %eax,%eax
    4542:	74 24                	je     4568 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xf5>
      presentQueueFamilies[index] = queueFamilyProp;
    4544:	8b 55 ec             	mov    -0x14(%rbp),%edx
    4547:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    454b:	48 89 d6             	mov    %rdx,%rsi
    454e:	48 89 c7             	mov    %rax,%rdi
    4551:	e8 50 0e 00 00       	call   53a6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    4556:	48 89 c2             	mov    %rax,%rdx
    4559:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    455d:	48 89 c6             	mov    %rax,%rsi
    4560:	48 89 d7             	mov    %rdx,%rdi
    4563:	e8 68 0e 00 00       	call   53d0 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    4568:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    456c:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    4570:	48 89 c7             	mov    %rax,%rdi
    4573:	e8 fc 0d 00 00       	call   5374 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    4578:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    457c:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    4580:	48 89 d6             	mov    %rdx,%rsi
    4583:	48 89 c7             	mov    %rax,%rdi
    4586:	e8 ae 0d 00 00       	call   5339 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    458b:	84 c0                	test   %al,%al
    458d:	0f 85 79 ff ff ff    	jne    450c <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x99>
  }
  return presentQueueFamilies;
    4593:	90                   	nop
}
    4594:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4598:	48 89 c7             	mov    %rax,%rdi
    459b:	e8 6a 0b 00 00       	call   510a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return presentQueueFamilies;
    45a0:	eb 37                	jmp    45d9 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x166>
      queueFamilyProps.size()};
    45a2:	48 89 c3             	mov    %rax,%rbx
    45a5:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    45a9:	48 89 c7             	mov    %rax,%rdi
    45ac:	e8 63 0c 00 00       	call   5214 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    45b1:	eb 0f                	jmp    45c2 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x14f>
}
    45b3:	48 89 c3             	mov    %rax,%rbx
    45b6:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    45ba:	48 89 c7             	mov    %rax,%rdi
    45bd:	e8 e4 0c 00 00       	call   52a6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    45c2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    45c6:	48 89 c7             	mov    %rax,%rdi
    45c9:	e8 3c 0b 00 00       	call   510a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    45ce:	48 89 d8             	mov    %rbx,%rax
    45d1:	48 89 c7             	mov    %rax,%rdi
    45d4:	e8 97 ee ff ff       	call   3470 <_Unwind_Resume@plt>
    45d9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    45dd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    45e1:	c9                   	leave
    45e2:	c3                   	ret

00000000000045e3 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

VkSurfaceCapabilitiesKHR
getPhysicalDeviceSurfaceCapabilities(VkPhysicalDevice physicalDevice,
                                     VkSurfaceKHR surface) {
    45e3:	55                   	push   %rbp
    45e4:	48 89 e5             	mov    %rsp,%rbp
    45e7:	41 54                	push   %r12
    45e9:	53                   	push   %rbx
    45ea:	48 83 ec 20          	sub    $0x20,%rsp
    45ee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    45f2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    45f6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  VkSurfaceCapabilitiesKHR surfaceCapabilities{};
    45fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    45fe:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4602:	0f 11 00             	movups %xmm0,(%rax)
    4605:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    4609:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    460d:	66 0f 7e 40 30       	movd   %xmm0,0x30(%rax)
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    4612:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4616:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    461a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    461e:	48 89 ce             	mov    %rcx,%rsi
    4621:	48 89 c7             	mov    %rax,%rdi
    4624:	e8 d7 eb ff ff       	call   3200 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>
          physicalDevice, surface, &surfaceCapabilities) != VK_SUCCESS) {
    4629:	85 c0                	test   %eax,%eax
    462b:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    462e:	84 c0                	test   %al,%al
    4630:	74 51                	je     4683 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xa0>
    throw std::runtime_error("Failed to get surface capabilities.");
    4632:	bf 10 00 00 00       	mov    $0x10,%edi
    4637:	e8 b4 ea ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    463c:	48 89 c3             	mov    %rax,%rbx
    463f:	48 8d 05 8a c2 00 00 	lea    0xc28a(%rip),%rax        # 108d0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    4646:	48 89 c6             	mov    %rax,%rsi
    4649:	48 89 df             	mov    %rbx,%rdi
    464c:	e8 4f ea ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    4651:	48 8b 05 50 69 01 00 	mov    0x16950(%rip),%rax        # 1afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4658:	48 89 c2             	mov    %rax,%rdx
    465b:	48 8d 05 de 66 01 00 	lea    0x166de(%rip),%rax        # 1ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4662:	48 89 c6             	mov    %rax,%rsi
    4665:	48 89 df             	mov    %rbx,%rdi
    4668:	e8 e3 ed ff ff       	call   3450 <__cxa_throw@plt>
    466d:	49 89 c4             	mov    %rax,%r12
    4670:	48 89 df             	mov    %rbx,%rdi
    4673:	e8 f8 ea ff ff       	call   3170 <__cxa_free_exception@plt>
    4678:	4c 89 e0             	mov    %r12,%rax
    467b:	48 89 c7             	mov    %rax,%rdi
    467e:	e8 ed ed ff ff       	call   3470 <_Unwind_Resume@plt>
  }
  return surfaceCapabilities;
    4683:	90                   	nop
}
    4684:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4688:	48 83 c4 20          	add    $0x20,%rsp
    468c:	5b                   	pop    %rbx
    468d:	41 5c                	pop    %r12
    468f:	5d                   	pop    %rbp
    4690:	c3                   	ret

0000000000004691 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<VkSurfaceFormatKHR>
getPhysicalDeviceSurfaceFormatList(VkPhysicalDevice physicalDevice,
                                   VkSurfaceKHR surface) {
    4691:	55                   	push   %rbp
    4692:	48 89 e5             	mov    %rsp,%rbp
    4695:	41 54                	push   %r12
    4697:	53                   	push   %rbx
    4698:	48 83 ec 30          	sub    $0x30,%rsp
    469c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    46a0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    46a4:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t surfaceFormatCount;
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    46a8:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    46ac:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    46b0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    46b4:	b9 00 00 00 00       	mov    $0x0,%ecx
    46b9:	48 89 c7             	mov    %rax,%rdi
    46bc:	e8 af ec ff ff       	call   3370 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
                                           &surfaceFormatCount,
                                           nullptr) != VK_SUCCESS) {
    46c1:	85 c0                	test   %eax,%eax
    46c3:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    46c6:	84 c0                	test   %al,%al
    46c8:	74 3b                	je     4705 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
    throw std::runtime_error("Failed to get surface format list.");
    46ca:	bf 10 00 00 00       	mov    $0x10,%edi
    46cf:	e8 1c ea ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    46d4:	48 89 c3             	mov    %rax,%rbx
    46d7:	48 8d 05 1a c2 00 00 	lea    0xc21a(%rip),%rax        # 108f8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xf0>
    46de:	48 89 c6             	mov    %rax,%rsi
    46e1:	48 89 df             	mov    %rbx,%rdi
    46e4:	e8 b7 e9 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    46e9:	48 8b 05 b8 68 01 00 	mov    0x168b8(%rip),%rax        # 1afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    46f0:	48 89 c2             	mov    %rax,%rdx
    46f3:	48 8d 05 46 66 01 00 	lea    0x16646(%rip),%rax        # 1ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    46fa:	48 89 c6             	mov    %rax,%rsi
    46fd:	48 89 df             	mov    %rbx,%rdi
    4700:	e8 4b ed ff ff       	call   3450 <__cxa_throw@plt>
  }
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    4705:	8b 45 e8             	mov    -0x18(%rbp),%eax
    4708:	89 c3                	mov    %eax,%ebx
    470a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    470e:	48 89 c7             	mov    %rax,%rdi
    4711:	e8 92 0d 00 00       	call   54a8 <_ZNSaI18VkSurfaceFormatKHREC1Ev>
    4716:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    471a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    471e:	48 89 de             	mov    %rbx,%rsi
    4721:	48 89 c7             	mov    %rax,%rdi
    4724:	e8 b7 0d 00 00       	call   54e0 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
    4729:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    472d:	48 89 c7             	mov    %rax,%rdi
    4730:	e8 8f 0d 00 00       	call   54c4 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    4735:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4739:	48 89 c7             	mov    %rax,%rdi
    473c:	e8 59 0e 00 00       	call   559a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>
    4741:	48 89 c1             	mov    %rax,%rcx
    4744:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    4748:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    474c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4750:	48 89 c7             	mov    %rax,%rdi
    4753:	e8 18 ec ff ff       	call   3370 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
          physicalDevice, surface, &surfaceFormatCount,
          surfaceFormats.data()) != VK_SUCCESS) {
    4758:	85 c0                	test   %eax,%eax
    475a:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    475d:	84 c0                	test   %al,%al
    475f:	0f 84 95 00 00 00    	je     47fa <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
    throw std::runtime_error("Failed to get surface format list.");
    4765:	bf 10 00 00 00       	mov    $0x10,%edi
    476a:	e8 81 e9 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    476f:	48 89 c3             	mov    %rax,%rbx
    4772:	48 8d 05 7f c1 00 00 	lea    0xc17f(%rip),%rax        # 108f8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xf0>
    4779:	48 89 c6             	mov    %rax,%rsi
    477c:	48 89 df             	mov    %rbx,%rdi
    477f:	e8 1c e9 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    4784:	48 8b 05 1d 68 01 00 	mov    0x1681d(%rip),%rax        # 1afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    478b:	48 89 c2             	mov    %rax,%rdx
    478e:	48 8d 05 ab 65 01 00 	lea    0x165ab(%rip),%rax        # 1ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4795:	48 89 c6             	mov    %rax,%rsi
    4798:	48 89 df             	mov    %rbx,%rdi
    479b:	e8 b0 ec ff ff       	call   3450 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface format list.");
    47a0:	49 89 c4             	mov    %rax,%r12
    47a3:	48 89 df             	mov    %rbx,%rdi
    47a6:	e8 c5 e9 ff ff       	call   3170 <__cxa_free_exception@plt>
    47ab:	4c 89 e0             	mov    %r12,%rax
    47ae:	48 89 c7             	mov    %rax,%rdi
    47b1:	e8 ba ec ff ff       	call   3470 <_Unwind_Resume@plt>
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    47b6:	48 89 c3             	mov    %rax,%rbx
    47b9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    47bd:	48 89 c7             	mov    %rax,%rdi
    47c0:	e8 ff 0c 00 00       	call   54c4 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    47c5:	48 89 d8             	mov    %rbx,%rax
    47c8:	48 89 c7             	mov    %rax,%rdi
    47cb:	e8 a0 ec ff ff       	call   3470 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface format list.");
    47d0:	49 89 c4             	mov    %rax,%r12
    47d3:	48 89 df             	mov    %rbx,%rdi
    47d6:	e8 95 e9 ff ff       	call   3170 <__cxa_free_exception@plt>
    47db:	4c 89 e3             	mov    %r12,%rbx
    47de:	eb 03                	jmp    47e3 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return surfaceFormats;
}
    47e0:	48 89 c3             	mov    %rax,%rbx
    47e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    47e7:	48 89 c7             	mov    %rax,%rdi
    47ea:	e8 67 0d 00 00       	call   5556 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    47ef:	48 89 d8             	mov    %rbx,%rax
    47f2:	48 89 c7             	mov    %rax,%rdi
    47f5:	e8 76 ec ff ff       	call   3470 <_Unwind_Resume@plt>
  return surfaceFormats;
    47fa:	90                   	nop
}
    47fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    47ff:	48 83 c4 30          	add    $0x30,%rsp
    4803:	5b                   	pop    %rbx
    4804:	41 5c                	pop    %r12
    4806:	5d                   	pop    %rbp
    4807:	c3                   	ret

0000000000004808 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:
std::vector<VkPresentModeKHR>
getPhysicalDeviceSurfacePresentModeList(VkPhysicalDevice physicalDevice,
                                        VkSurfaceKHR surface) {
    4808:	55                   	push   %rbp
    4809:	48 89 e5             	mov    %rsp,%rbp
    480c:	41 54                	push   %r12
    480e:	53                   	push   %rbx
    480f:	48 83 ec 30          	sub    $0x30,%rsp
    4813:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4817:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    481b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t presentModeCount;
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface,
    481f:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    4823:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    4827:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    482b:	b9 00 00 00 00       	mov    $0x0,%ecx
    4830:	48 89 c7             	mov    %rax,%rdi
    4833:	e8 48 eb ff ff       	call   3380 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    4838:	85 c0                	test   %eax,%eax
    483a:	0f 95 c0             	setne  %al
    483d:	84 c0                	test   %al,%al
    483f:	74 3b                	je     487c <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
                                                &presentModeCount, nullptr)) {
    throw std::runtime_error("Failed to get surface present mode list.");
    4841:	bf 10 00 00 00       	mov    $0x10,%edi
    4846:	e8 a5 e8 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    484b:	48 89 c3             	mov    %rax,%rbx
    484e:	48 8d 05 cb c0 00 00 	lea    0xc0cb(%rip),%rax        # 10920 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x118>
    4855:	48 89 c6             	mov    %rax,%rsi
    4858:	48 89 df             	mov    %rbx,%rdi
    485b:	e8 40 e8 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    4860:	48 8b 05 41 67 01 00 	mov    0x16741(%rip),%rax        # 1afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4867:	48 89 c2             	mov    %rax,%rdx
    486a:	48 8d 05 cf 64 01 00 	lea    0x164cf(%rip),%rax        # 1ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4871:	48 89 c6             	mov    %rax,%rsi
    4874:	48 89 df             	mov    %rbx,%rdi
    4877:	e8 d4 eb ff ff       	call   3450 <__cxa_throw@plt>
  }
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    487c:	8b 45 e8             	mov    -0x18(%rbp),%eax
    487f:	89 c3                	mov    %eax,%ebx
    4881:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4885:	48 89 c7             	mov    %rax,%rdi
    4888:	e8 7f 0d 00 00       	call   560c <_ZNSaI16VkPresentModeKHREC1Ev>
    488d:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4891:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4895:	48 89 de             	mov    %rbx,%rsi
    4898:	48 89 c7             	mov    %rax,%rdi
    489b:	e8 a4 0d 00 00       	call   5644 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
    48a0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    48a4:	48 89 c7             	mov    %rax,%rdi
    48a7:	e8 7c 0d 00 00       	call   5628 <_ZNSaI16VkPresentModeKHRED1Ev>
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(
    48ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    48b0:	48 89 c7             	mov    %rax,%rdi
    48b3:	e8 46 0e 00 00       	call   56fe <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>
    48b8:	48 89 c1             	mov    %rax,%rcx
    48bb:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    48bf:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    48c3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    48c7:	48 89 c7             	mov    %rax,%rdi
    48ca:	e8 b1 ea ff ff       	call   3380 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    48cf:	85 c0                	test   %eax,%eax
    48d1:	0f 95 c0             	setne  %al
    48d4:	84 c0                	test   %al,%al
    48d6:	0f 84 95 00 00 00    	je     4971 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
          physicalDevice, surface, &presentModeCount, presentModes.data())) {
    throw std::runtime_error("Failed to get surface present mode list.");
    48dc:	bf 10 00 00 00       	mov    $0x10,%edi
    48e1:	e8 0a e8 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    48e6:	48 89 c3             	mov    %rax,%rbx
    48e9:	48 8d 05 30 c0 00 00 	lea    0xc030(%rip),%rax        # 10920 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x118>
    48f0:	48 89 c6             	mov    %rax,%rsi
    48f3:	48 89 df             	mov    %rbx,%rdi
    48f6:	e8 a5 e7 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    48fb:	48 8b 05 a6 66 01 00 	mov    0x166a6(%rip),%rax        # 1afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4902:	48 89 c2             	mov    %rax,%rdx
    4905:	48 8d 05 34 64 01 00 	lea    0x16434(%rip),%rax        # 1ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    490c:	48 89 c6             	mov    %rax,%rsi
    490f:	48 89 df             	mov    %rbx,%rdi
    4912:	e8 39 eb ff ff       	call   3450 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    4917:	49 89 c4             	mov    %rax,%r12
    491a:	48 89 df             	mov    %rbx,%rdi
    491d:	e8 4e e8 ff ff       	call   3170 <__cxa_free_exception@plt>
    4922:	4c 89 e0             	mov    %r12,%rax
    4925:	48 89 c7             	mov    %rax,%rdi
    4928:	e8 43 eb ff ff       	call   3470 <_Unwind_Resume@plt>
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    492d:	48 89 c3             	mov    %rax,%rbx
    4930:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4934:	48 89 c7             	mov    %rax,%rdi
    4937:	e8 ec 0c 00 00       	call   5628 <_ZNSaI16VkPresentModeKHRED1Ev>
    493c:	48 89 d8             	mov    %rbx,%rax
    493f:	48 89 c7             	mov    %rax,%rdi
    4942:	e8 29 eb ff ff       	call   3470 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    4947:	49 89 c4             	mov    %rax,%r12
    494a:	48 89 df             	mov    %rbx,%rdi
    494d:	e8 1e e8 ff ff       	call   3170 <__cxa_free_exception@plt>
    4952:	4c 89 e3             	mov    %r12,%rbx
    4955:	eb 03                	jmp    495a <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return presentModes;
}
    4957:	48 89 c3             	mov    %rax,%rbx
    495a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    495e:	48 89 c7             	mov    %rax,%rdi
    4961:	e8 54 0d 00 00       	call   56ba <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    4966:	48 89 d8             	mov    %rbx,%rax
    4969:	48 89 c7             	mov    %rax,%rdi
    496c:	e8 ff ea ff ff       	call   3470 <_Unwind_Resume@plt>
  return presentModes;
    4971:	90                   	nop
}
    4972:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4976:	48 83 c4 30          	add    $0x30,%rsp
    497a:	5b                   	pop    %rbx
    497b:	41 5c                	pop    %r12
    497d:	5d                   	pop    %rbp
    497e:	c3                   	ret

000000000000497f <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    497f:	55                   	push   %rbp
    4980:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    4983:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    4988:	5d                   	pop    %rbp
    4989:	c3                   	ret

000000000000498a <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    498a:	55                   	push   %rbp
    498b:	48 89 e5             	mov    %rsp,%rbp
    498e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4992:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4996:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    499a:	5d                   	pop    %rbp
    499b:	c3                   	ret

000000000000499c <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    499c:	55                   	push   %rbp
    499d:	48 89 e5             	mov    %rsp,%rbp
    49a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    49a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49a8:	5d                   	pop    %rbp
    49a9:	c3                   	ret

00000000000049aa <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    49aa:	55                   	push   %rbp
    49ab:	48 89 e5             	mov    %rsp,%rbp
    49ae:	48 83 ec 10          	sub    $0x10,%rsp
    49b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    49b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49ba:	48 89 c7             	mov    %rax,%rdi
    49bd:	e8 e4 00 00 00       	call   4aa6 <_ZNSaI21VkExtensionPropertiesED1Ev>
    49c2:	90                   	nop
    49c3:	c9                   	leave
    49c4:	c3                   	ret
    49c5:	90                   	nop

00000000000049c6 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
    49c6:	55                   	push   %rbp
    49c7:	48 89 e5             	mov    %rsp,%rbp
    49ca:	48 83 ec 10          	sub    $0x10,%rsp
    49ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    49d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49d6:	48 89 c7             	mov    %rax,%rdi
    49d9:	e8 36 02 00 00       	call   4c14 <_ZNSaIPKcED1Ev>
    49de:	90                   	nop
    49df:	c9                   	leave
    49e0:	c3                   	ret
    49e1:	90                   	nop

00000000000049e2 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
    49e2:	55                   	push   %rbp
    49e3:	48 89 e5             	mov    %rsp,%rbp
    49e6:	48 83 ec 10          	sub    $0x10,%rsp
    49ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    49ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49f2:	48 89 c7             	mov    %rax,%rdi
    49f5:	e8 ac 03 00 00       	call   4da6 <_ZNSaI17VkLayerPropertiesED1Ev>
    49fa:	90                   	nop
    49fb:	c9                   	leave
    49fc:	c3                   	ret
    49fd:	90                   	nop

00000000000049fe <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
    49fe:	55                   	push   %rbp
    49ff:	48 89 e5             	mov    %rsp,%rbp
    4a02:	48 83 ec 10          	sub    $0x10,%rsp
    4a06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a0e:	48 89 c7             	mov    %rax,%rdi
    4a11:	e8 fe 04 00 00       	call   4f14 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    4a16:	90                   	nop
    4a17:	c9                   	leave
    4a18:	c3                   	ret
    4a19:	90                   	nop

0000000000004a1a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
    4a1a:	55                   	push   %rbp
    4a1b:	48 89 e5             	mov    %rsp,%rbp
    4a1e:	48 83 ec 10          	sub    $0x10,%rsp
    4a22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a2a:	48 89 c7             	mov    %rax,%rdi
    4a2d:	e8 46 06 00 00       	call   5078 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    4a32:	90                   	nop
    4a33:	c9                   	leave
    4a34:	c3                   	ret
    4a35:	90                   	nop

0000000000004a36 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>:
    4a36:	55                   	push   %rbp
    4a37:	48 89 e5             	mov    %rsp,%rbp
    4a3a:	48 83 ec 10          	sub    $0x10,%rsp
    4a3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a46:	48 89 c7             	mov    %rax,%rdi
    4a49:	e8 c6 07 00 00       	call   5214 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    4a4e:	90                   	nop
    4a4f:	c9                   	leave
    4a50:	c3                   	ret
    4a51:	90                   	nop

0000000000004a52 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>:
    4a52:	55                   	push   %rbp
    4a53:	48 89 e5             	mov    %rsp,%rbp
    4a56:	48 83 ec 10          	sub    $0x10,%rsp
    4a5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a62:	48 89 c7             	mov    %rax,%rdi
    4a65:	e8 5a 0a 00 00       	call   54c4 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    4a6a:	90                   	nop
    4a6b:	c9                   	leave
    4a6c:	c3                   	ret
    4a6d:	90                   	nop

0000000000004a6e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>:
    4a6e:	55                   	push   %rbp
    4a6f:	48 89 e5             	mov    %rsp,%rbp
    4a72:	48 83 ec 10          	sub    $0x10,%rsp
    4a76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a7e:	48 89 c7             	mov    %rax,%rdi
    4a81:	e8 a2 0b 00 00       	call   5628 <_ZNSaI16VkPresentModeKHRED1Ev>
    4a86:	90                   	nop
    4a87:	c9                   	leave
    4a88:	c3                   	ret
    4a89:	90                   	nop

0000000000004a8a <_ZNSaI21VkExtensionPropertiesEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    4a8a:	55                   	push   %rbp
    4a8b:	48 89 e5             	mov    %rsp,%rbp
    4a8e:	48 83 ec 10          	sub    $0x10,%rsp
    4a92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a9a:	48 89 c7             	mov    %rax,%rdi
    4a9d:	e8 ce 0c 00 00       	call   5770 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    4aa2:	90                   	nop
    4aa3:	c9                   	leave
    4aa4:	c3                   	ret
    4aa5:	90                   	nop

0000000000004aa6 <_ZNSaI21VkExtensionPropertiesED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    4aa6:	55                   	push   %rbp
    4aa7:	48 89 e5             	mov    %rsp,%rbp
    4aaa:	48 83 ec 10          	sub    $0x10,%rsp
    4aae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ab2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ab6:	48 89 c7             	mov    %rax,%rdi
    4ab9:	e8 be 0c 00 00       	call   577c <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    4abe:	90                   	nop
    4abf:	c9                   	leave
    4ac0:	c3                   	ret
    4ac1:	90                   	nop

0000000000004ac2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
       *  This constructor fills the %vector with @a __n default
       *  constructed elements.
       */
      explicit
      _GLIBCXX20_CONSTEXPR
      vector(size_type __n, const allocator_type& __a = allocator_type())
    4ac2:	55                   	push   %rbp
    4ac3:	48 89 e5             	mov    %rsp,%rbp
    4ac6:	53                   	push   %rbx
    4ac7:	48 83 ec 28          	sub    $0x28,%rsp
    4acb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4acf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4ad3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    4ad7:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    4adb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4adf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4ae3:	48 89 d6             	mov    %rdx,%rsi
    4ae6:	48 89 c7             	mov    %rax,%rdi
    4ae9:	e8 99 0c 00 00       	call   5787 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    4aee:	48 89 c1             	mov    %rax,%rcx
    4af1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4af5:	48 89 c2             	mov    %rax,%rdx
    4af8:	48 89 ce             	mov    %rcx,%rsi
    4afb:	48 89 df             	mov    %rbx,%rdi
    4afe:	e8 e5 0c 00 00       	call   57e8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    4b03:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4b07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b0b:	48 89 d6             	mov    %rdx,%rsi
    4b0e:	48 89 c7             	mov    %rax,%rdi
    4b11:	e8 30 0d 00 00       	call   5846 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    4b16:	eb 1a                	jmp    4b32 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    4b18:	48 89 c3             	mov    %rax,%rbx
    4b1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b1f:	48 89 c7             	mov    %rax,%rdi
    4b22:	e8 79 00 00 00       	call   4ba0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    4b27:	48 89 d8             	mov    %rbx,%rax
    4b2a:	48 89 c7             	mov    %rax,%rdi
    4b2d:	e8 3e e9 ff ff       	call   3470 <_Unwind_Resume@plt>
    4b32:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4b36:	c9                   	leave
    4b37:	c3                   	ret

0000000000004b38 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    4b38:	55                   	push   %rbp
    4b39:	48 89 e5             	mov    %rsp,%rbp
    4b3c:	48 83 ec 10          	sub    $0x10,%rsp
    4b40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    4b44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b48:	48 89 c7             	mov    %rax,%rdi
    4b4b:	e8 36 0d 00 00       	call   5886 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    4b50:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4b53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b57:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4b5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b5f:	48 8b 00             	mov    (%rax),%rax
    4b62:	48 89 ce             	mov    %rcx,%rsi
    4b65:	48 89 c7             	mov    %rax,%rdi
    4b68:	e8 27 0d 00 00       	call   5894 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    4b6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b71:	48 89 c7             	mov    %rax,%rdi
    4b74:	e8 27 00 00 00       	call   4ba0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    4b79:	90                   	nop
    4b7a:	c9                   	leave
    4b7b:	c3                   	ret

0000000000004b7c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
       *   Returns a pointer such that [data(), data() + size()) is a valid
       *   range.  For a non-empty %vector, data() == &front().
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      _Tp*
      data() _GLIBCXX_NOEXCEPT
    4b7c:	55                   	push   %rbp
    4b7d:	48 89 e5             	mov    %rsp,%rbp
    4b80:	48 83 ec 10          	sub    $0x10,%rsp
    4b84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    4b88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b8c:	48 8b 10             	mov    (%rax),%rdx
    4b8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b93:	48 89 d6             	mov    %rdx,%rsi
    4b96:	48 89 c7             	mov    %rax,%rdi
    4b99:	e8 20 0d 00 00       	call   58be <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    4b9e:	c9                   	leave
    4b9f:	c3                   	ret

0000000000004ba0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    4ba0:	55                   	push   %rbp
    4ba1:	48 89 e5             	mov    %rsp,%rbp
    4ba4:	48 83 ec 10          	sub    $0x10,%rsp
    4ba8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4bac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bb0:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4bb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bb8:	48 8b 00             	mov    (%rax),%rax
    4bbb:	48 29 c2             	sub    %rax,%rdx
    4bbe:	48 c1 fa 02          	sar    $0x2,%rdx
    4bc2:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    4bc9:	fc c0 0f 
    4bcc:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    4bd0:	48 89 c2             	mov    %rax,%rdx
    4bd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bd7:	48 8b 08             	mov    (%rax),%rcx
    4bda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bde:	48 89 ce             	mov    %rcx,%rsi
    4be1:	48 89 c7             	mov    %rax,%rdi
    4be4:	e8 0d 0d 00 00       	call   58f6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    4be9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bed:	48 89 c7             	mov    %rax,%rdi
    4bf0:	e8 b5 fd ff ff       	call   49aa <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    4bf5:	90                   	nop
    4bf6:	c9                   	leave
    4bf7:	c3                   	ret

0000000000004bf8 <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    4bf8:	55                   	push   %rbp
    4bf9:	48 89 e5             	mov    %rsp,%rbp
    4bfc:	48 83 ec 10          	sub    $0x10,%rsp
    4c00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4c04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c08:	48 89 c7             	mov    %rax,%rdi
    4c0b:	e8 1c 0d 00 00       	call   592c <_ZNSt15__new_allocatorIPKcEC1Ev>
    4c10:	90                   	nop
    4c11:	c9                   	leave
    4c12:	c3                   	ret
    4c13:	90                   	nop

0000000000004c14 <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    4c14:	55                   	push   %rbp
    4c15:	48 89 e5             	mov    %rsp,%rbp
    4c18:	48 83 ec 10          	sub    $0x10,%rsp
    4c1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4c20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c24:	48 89 c7             	mov    %rax,%rdi
    4c27:	e8 0c 0d 00 00       	call   5938 <_ZNSt15__new_allocatorIPKcED1Ev>
    4c2c:	90                   	nop
    4c2d:	c9                   	leave
    4c2e:	c3                   	ret
    4c2f:	90                   	nop

0000000000004c30 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    4c30:	55                   	push   %rbp
    4c31:	48 89 e5             	mov    %rsp,%rbp
    4c34:	53                   	push   %rbx
    4c35:	48 83 ec 28          	sub    $0x28,%rsp
    4c39:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4c3d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4c41:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    4c45:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    4c49:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4c4d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4c51:	48 89 d6             	mov    %rdx,%rsi
    4c54:	48 89 c7             	mov    %rax,%rdi
    4c57:	e8 e7 0c 00 00       	call   5943 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    4c5c:	48 89 c1             	mov    %rax,%rcx
    4c5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c63:	48 89 c2             	mov    %rax,%rdx
    4c66:	48 89 ce             	mov    %rcx,%rsi
    4c69:	48 89 df             	mov    %rbx,%rdi
    4c6c:	e8 33 0d 00 00       	call   59a4 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    4c71:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4c75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4c79:	48 89 d6             	mov    %rdx,%rsi
    4c7c:	48 89 c7             	mov    %rax,%rdi
    4c7f:	e8 7e 0d 00 00       	call   5a02 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    4c84:	eb 1a                	jmp    4ca0 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    4c86:	48 89 c3             	mov    %rax,%rbx
    4c89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4c8d:	48 89 c7             	mov    %rax,%rdi
    4c90:	e8 a7 00 00 00       	call   4d3c <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    4c95:	48 89 d8             	mov    %rbx,%rax
    4c98:	48 89 c7             	mov    %rax,%rdi
    4c9b:	e8 d0 e7 ff ff       	call   3470 <_Unwind_Resume@plt>
    4ca0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4ca4:	c9                   	leave
    4ca5:	c3                   	ret

0000000000004ca6 <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    4ca6:	55                   	push   %rbp
    4ca7:	48 89 e5             	mov    %rsp,%rbp
    4caa:	48 83 ec 10          	sub    $0x10,%rsp
    4cae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    4cb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cb6:	48 89 c7             	mov    %rax,%rdi
    4cb9:	e8 84 0d 00 00       	call   5a42 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    4cbe:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4cc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cc5:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4cc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ccd:	48 8b 00             	mov    (%rax),%rax
    4cd0:	48 89 ce             	mov    %rcx,%rsi
    4cd3:	48 89 c7             	mov    %rax,%rdi
    4cd6:	e8 75 0d 00 00       	call   5a50 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
    4cdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cdf:	48 89 c7             	mov    %rax,%rdi
    4ce2:	e8 55 00 00 00       	call   4d3c <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    4ce7:	90                   	nop
    4ce8:	c9                   	leave
    4ce9:	c3                   	ret

0000000000004cea <_ZNSt6vectorIPKcSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    4cea:	55                   	push   %rbp
    4ceb:	48 89 e5             	mov    %rsp,%rbp
    4cee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4cf2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    4cf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cfa:	48 8b 00             	mov    (%rax),%rax
    4cfd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4d01:	48 c1 e2 03          	shl    $0x3,%rdx
    4d05:	48 01 d0             	add    %rdx,%rax
      }
    4d08:	5d                   	pop    %rbp
    4d09:	c3                   	ret

0000000000004d0a <_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_>:
      }

#if __cplusplus >= 201103L
      _GLIBCXX20_CONSTEXPR
      void
      push_back(value_type&& __x)
    4d0a:	55                   	push   %rbp
    4d0b:	48 89 e5             	mov    %rsp,%rbp
    4d0e:	48 83 ec 10          	sub    $0x10,%rsp
    4d12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { emplace_back(std::move(__x)); }
    4d1a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d1e:	48 89 c7             	mov    %rax,%rdi
    4d21:	e8 54 0d 00 00       	call   5a7a <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>
    4d26:	48 89 c2             	mov    %rax,%rdx
    4d29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d2d:	48 89 d6             	mov    %rdx,%rsi
    4d30:	48 89 c7             	mov    %rax,%rdi
    4d33:	e8 50 0d 00 00       	call   5a88 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
    4d38:	90                   	nop
    4d39:	c9                   	leave
    4d3a:	c3                   	ret
    4d3b:	90                   	nop

0000000000004d3c <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    4d3c:	55                   	push   %rbp
    4d3d:	48 89 e5             	mov    %rsp,%rbp
    4d40:	48 83 ec 10          	sub    $0x10,%rsp
    4d44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4d48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d4c:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4d50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d54:	48 8b 00             	mov    (%rax),%rax
    4d57:	48 29 c2             	sub    %rax,%rdx
    4d5a:	48 89 d0             	mov    %rdx,%rax
    4d5d:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    4d61:	48 89 c2             	mov    %rax,%rdx
    4d64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d68:	48 8b 08             	mov    (%rax),%rcx
    4d6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d6f:	48 89 ce             	mov    %rcx,%rsi
    4d72:	48 89 c7             	mov    %rax,%rdi
    4d75:	e8 d8 0d 00 00       	call   5b52 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    4d7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d7e:	48 89 c7             	mov    %rax,%rdi
    4d81:	e8 40 fc ff ff       	call   49c6 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    4d86:	90                   	nop
    4d87:	c9                   	leave
    4d88:	c3                   	ret
    4d89:	90                   	nop

0000000000004d8a <_ZNSaI17VkLayerPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    4d8a:	55                   	push   %rbp
    4d8b:	48 89 e5             	mov    %rsp,%rbp
    4d8e:	48 83 ec 10          	sub    $0x10,%rsp
    4d92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d9a:	48 89 c7             	mov    %rax,%rdi
    4d9d:	e8 e6 0d 00 00       	call   5b88 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    4da2:	90                   	nop
    4da3:	c9                   	leave
    4da4:	c3                   	ret
    4da5:	90                   	nop

0000000000004da6 <_ZNSaI17VkLayerPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    4da6:	55                   	push   %rbp
    4da7:	48 89 e5             	mov    %rsp,%rbp
    4daa:	48 83 ec 10          	sub    $0x10,%rsp
    4dae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4db2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4db6:	48 89 c7             	mov    %rax,%rdi
    4db9:	e8 d6 0d 00 00       	call   5b94 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    4dbe:	90                   	nop
    4dbf:	c9                   	leave
    4dc0:	c3                   	ret
    4dc1:	90                   	nop

0000000000004dc2 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    4dc2:	55                   	push   %rbp
    4dc3:	48 89 e5             	mov    %rsp,%rbp
    4dc6:	53                   	push   %rbx
    4dc7:	48 83 ec 28          	sub    $0x28,%rsp
    4dcb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4dcf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4dd3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    4dd7:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    4ddb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4ddf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4de3:	48 89 d6             	mov    %rdx,%rsi
    4de6:	48 89 c7             	mov    %rax,%rdi
    4de9:	e8 b1 0d 00 00       	call   5b9f <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    4dee:	48 89 c1             	mov    %rax,%rcx
    4df1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4df5:	48 89 c2             	mov    %rax,%rdx
    4df8:	48 89 ce             	mov    %rcx,%rsi
    4dfb:	48 89 df             	mov    %rbx,%rdi
    4dfe:	e8 fd 0d 00 00       	call   5c00 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    4e03:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4e07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4e0b:	48 89 d6             	mov    %rdx,%rsi
    4e0e:	48 89 c7             	mov    %rax,%rdi
    4e11:	e8 48 0e 00 00       	call   5c5e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    4e16:	eb 1a                	jmp    4e32 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    4e18:	48 89 c3             	mov    %rax,%rbx
    4e1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4e1f:	48 89 c7             	mov    %rax,%rdi
    4e22:	e8 79 00 00 00       	call   4ea0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    4e27:	48 89 d8             	mov    %rbx,%rax
    4e2a:	48 89 c7             	mov    %rax,%rdi
    4e2d:	e8 3e e6 ff ff       	call   3470 <_Unwind_Resume@plt>
    4e32:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4e36:	c9                   	leave
    4e37:	c3                   	ret

0000000000004e38 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    4e38:	55                   	push   %rbp
    4e39:	48 89 e5             	mov    %rsp,%rbp
    4e3c:	48 83 ec 10          	sub    $0x10,%rsp
    4e40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    4e44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e48:	48 89 c7             	mov    %rax,%rdi
    4e4b:	e8 4e 0e 00 00       	call   5c9e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    4e50:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4e53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e57:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4e5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e5f:	48 8b 00             	mov    (%rax),%rax
    4e62:	48 89 ce             	mov    %rcx,%rsi
    4e65:	48 89 c7             	mov    %rax,%rdi
    4e68:	e8 3f 0e 00 00       	call   5cac <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
      }
    4e6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e71:	48 89 c7             	mov    %rax,%rdi
    4e74:	e8 27 00 00 00       	call   4ea0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    4e79:	90                   	nop
    4e7a:	c9                   	leave
    4e7b:	c3                   	ret

0000000000004e7c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    4e7c:	55                   	push   %rbp
    4e7d:	48 89 e5             	mov    %rsp,%rbp
    4e80:	48 83 ec 10          	sub    $0x10,%rsp
    4e84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    4e88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e8c:	48 8b 10             	mov    (%rax),%rdx
    4e8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e93:	48 89 d6             	mov    %rdx,%rsi
    4e96:	48 89 c7             	mov    %rax,%rdi
    4e99:	e8 38 0e 00 00       	call   5cd6 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    4e9e:	c9                   	leave
    4e9f:	c3                   	ret

0000000000004ea0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    4ea0:	55                   	push   %rbp
    4ea1:	48 89 e5             	mov    %rsp,%rbp
    4ea4:	48 83 ec 10          	sub    $0x10,%rsp
    4ea8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4eac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4eb0:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4eb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4eb8:	48 8b 00             	mov    (%rax),%rax
    4ebb:	48 29 c2             	sub    %rax,%rdx
    4ebe:	48 c1 fa 03          	sar    $0x3,%rdx
    4ec2:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    4ec9:	fc c0 0f 
    4ecc:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    4ed0:	48 89 c2             	mov    %rax,%rdx
    4ed3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ed7:	48 8b 08             	mov    (%rax),%rcx
    4eda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ede:	48 89 ce             	mov    %rcx,%rsi
    4ee1:	48 89 c7             	mov    %rax,%rdi
    4ee4:	e8 25 0e 00 00       	call   5d0e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    4ee9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4eed:	48 89 c7             	mov    %rax,%rdi
    4ef0:	e8 ed fa ff ff       	call   49e2 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    4ef5:	90                   	nop
    4ef6:	c9                   	leave
    4ef7:	c3                   	ret

0000000000004ef8 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    4ef8:	55                   	push   %rbp
    4ef9:	48 89 e5             	mov    %rsp,%rbp
    4efc:	48 83 ec 10          	sub    $0x10,%rsp
    4f00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f08:	48 89 c7             	mov    %rax,%rdi
    4f0b:	e8 34 0e 00 00       	call   5d44 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    4f10:	90                   	nop
    4f11:	c9                   	leave
    4f12:	c3                   	ret
    4f13:	90                   	nop

0000000000004f14 <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    4f14:	55                   	push   %rbp
    4f15:	48 89 e5             	mov    %rsp,%rbp
    4f18:	48 83 ec 10          	sub    $0x10,%rsp
    4f1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f24:	48 89 c7             	mov    %rax,%rdi
    4f27:	e8 24 0e 00 00       	call   5d50 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    4f2c:	90                   	nop
    4f2d:	c9                   	leave
    4f2e:	c3                   	ret
    4f2f:	90                   	nop

0000000000004f30 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    4f30:	55                   	push   %rbp
    4f31:	48 89 e5             	mov    %rsp,%rbp
    4f34:	53                   	push   %rbx
    4f35:	48 83 ec 28          	sub    $0x28,%rsp
    4f39:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4f3d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4f41:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    4f45:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    4f49:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4f4d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4f51:	48 89 d6             	mov    %rdx,%rsi
    4f54:	48 89 c7             	mov    %rax,%rdi
    4f57:	e8 ff 0d 00 00       	call   5d5b <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    4f5c:	48 89 c1             	mov    %rax,%rcx
    4f5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f63:	48 89 c2             	mov    %rax,%rdx
    4f66:	48 89 ce             	mov    %rcx,%rsi
    4f69:	48 89 df             	mov    %rbx,%rdi
    4f6c:	e8 4b 0e 00 00       	call   5dbc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    4f71:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4f75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4f79:	48 89 d6             	mov    %rdx,%rsi
    4f7c:	48 89 c7             	mov    %rax,%rdi
    4f7f:	e8 96 0e 00 00       	call   5e1a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    4f84:	eb 1a                	jmp    4fa0 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    4f86:	48 89 c3             	mov    %rax,%rbx
    4f89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4f8d:	48 89 c7             	mov    %rax,%rdi
    4f90:	e8 79 00 00 00       	call   500e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    4f95:	48 89 d8             	mov    %rbx,%rax
    4f98:	48 89 c7             	mov    %rax,%rdi
    4f9b:	e8 d0 e4 ff ff       	call   3470 <_Unwind_Resume@plt>
    4fa0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4fa4:	c9                   	leave
    4fa5:	c3                   	ret

0000000000004fa6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    4fa6:	55                   	push   %rbp
    4fa7:	48 89 e5             	mov    %rsp,%rbp
    4faa:	48 83 ec 10          	sub    $0x10,%rsp
    4fae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    4fb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fb6:	48 89 c7             	mov    %rax,%rdi
    4fb9:	e8 9c 0e 00 00       	call   5e5a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    4fbe:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4fc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fc5:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4fc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fcd:	48 8b 00             	mov    (%rax),%rax
    4fd0:	48 89 ce             	mov    %rcx,%rsi
    4fd3:	48 89 c7             	mov    %rax,%rdi
    4fd6:	e8 8d 0e 00 00       	call   5e68 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    4fdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fdf:	48 89 c7             	mov    %rax,%rdi
    4fe2:	e8 27 00 00 00       	call   500e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    4fe7:	90                   	nop
    4fe8:	c9                   	leave
    4fe9:	c3                   	ret

0000000000004fea <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    4fea:	55                   	push   %rbp
    4feb:	48 89 e5             	mov    %rsp,%rbp
    4fee:	48 83 ec 10          	sub    $0x10,%rsp
    4ff2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    4ff6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ffa:	48 8b 10             	mov    (%rax),%rdx
    4ffd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5001:	48 89 d6             	mov    %rdx,%rsi
    5004:	48 89 c7             	mov    %rax,%rdi
    5007:	e8 86 0e 00 00       	call   5e92 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    500c:	c9                   	leave
    500d:	c3                   	ret

000000000000500e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    500e:	55                   	push   %rbp
    500f:	48 89 e5             	mov    %rsp,%rbp
    5012:	48 83 ec 10          	sub    $0x10,%rsp
    5016:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    501a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    501e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5022:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5026:	48 8b 00             	mov    (%rax),%rax
    5029:	48 29 c2             	sub    %rax,%rdx
    502c:	48 89 d0             	mov    %rdx,%rax
    502f:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    5033:	48 89 c2             	mov    %rax,%rdx
    5036:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    503a:	48 8b 08             	mov    (%rax),%rcx
    503d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5041:	48 89 ce             	mov    %rcx,%rsi
    5044:	48 89 c7             	mov    %rax,%rdi
    5047:	e8 7e 0e 00 00       	call   5eca <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    504c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5050:	48 89 c7             	mov    %rax,%rdi
    5053:	e8 a6 f9 ff ff       	call   49fe <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    5058:	90                   	nop
    5059:	c9                   	leave
    505a:	c3                   	ret
    505b:	90                   	nop

000000000000505c <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    505c:	55                   	push   %rbp
    505d:	48 89 e5             	mov    %rsp,%rbp
    5060:	48 83 ec 10          	sub    $0x10,%rsp
    5064:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5068:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    506c:	48 89 c7             	mov    %rax,%rdi
    506f:	e8 8c 0e 00 00       	call   5f00 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    5074:	90                   	nop
    5075:	c9                   	leave
    5076:	c3                   	ret
    5077:	90                   	nop

0000000000005078 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    5078:	55                   	push   %rbp
    5079:	48 89 e5             	mov    %rsp,%rbp
    507c:	48 83 ec 10          	sub    $0x10,%rsp
    5080:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5084:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5088:	48 89 c7             	mov    %rax,%rdi
    508b:	e8 7c 0e 00 00       	call   5f0c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    5090:	90                   	nop
    5091:	c9                   	leave
    5092:	c3                   	ret
    5093:	90                   	nop

0000000000005094 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    5094:	55                   	push   %rbp
    5095:	48 89 e5             	mov    %rsp,%rbp
    5098:	53                   	push   %rbx
    5099:	48 83 ec 28          	sub    $0x28,%rsp
    509d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    50a1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    50a5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    50a9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    50ad:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    50b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    50b5:	48 89 d6             	mov    %rdx,%rsi
    50b8:	48 89 c7             	mov    %rax,%rdi
    50bb:	e8 57 0e 00 00       	call   5f17 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    50c0:	48 89 c1             	mov    %rax,%rcx
    50c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    50c7:	48 89 c2             	mov    %rax,%rdx
    50ca:	48 89 ce             	mov    %rcx,%rsi
    50cd:	48 89 df             	mov    %rbx,%rdi
    50d0:	e8 a3 0e 00 00       	call   5f78 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    50d5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    50d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    50dd:	48 89 d6             	mov    %rdx,%rsi
    50e0:	48 89 c7             	mov    %rax,%rdi
    50e3:	e8 ee 0e 00 00       	call   5fd6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    50e8:	eb 1a                	jmp    5104 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    50ea:	48 89 c3             	mov    %rax,%rbx
    50ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    50f1:	48 89 c7             	mov    %rax,%rdi
    50f4:	e8 79 00 00 00       	call   5172 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    50f9:	48 89 d8             	mov    %rbx,%rax
    50fc:	48 89 c7             	mov    %rax,%rdi
    50ff:	e8 6c e3 ff ff       	call   3470 <_Unwind_Resume@plt>
    5104:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5108:	c9                   	leave
    5109:	c3                   	ret

000000000000510a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    510a:	55                   	push   %rbp
    510b:	48 89 e5             	mov    %rsp,%rbp
    510e:	48 83 ec 10          	sub    $0x10,%rsp
    5112:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    5116:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    511a:	48 89 c7             	mov    %rax,%rdi
    511d:	e8 f4 0e 00 00       	call   6016 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    5122:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    5125:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5129:	48 8b 48 08          	mov    0x8(%rax),%rcx
    512d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5131:	48 8b 00             	mov    (%rax),%rax
    5134:	48 89 ce             	mov    %rcx,%rsi
    5137:	48 89 c7             	mov    %rax,%rdi
    513a:	e8 e5 0e 00 00       	call   6024 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    513f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5143:	48 89 c7             	mov    %rax,%rdi
    5146:	e8 27 00 00 00       	call   5172 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    514b:	90                   	nop
    514c:	c9                   	leave
    514d:	c3                   	ret

000000000000514e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    514e:	55                   	push   %rbp
    514f:	48 89 e5             	mov    %rsp,%rbp
    5152:	48 83 ec 10          	sub    $0x10,%rsp
    5156:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    515a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    515e:	48 8b 10             	mov    (%rax),%rdx
    5161:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5165:	48 89 d6             	mov    %rdx,%rsi
    5168:	48 89 c7             	mov    %rax,%rdi
    516b:	e8 de 0e 00 00       	call   604e <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    5170:	c9                   	leave
    5171:	c3                   	ret

0000000000005172 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5172:	55                   	push   %rbp
    5173:	48 89 e5             	mov    %rsp,%rbp
    5176:	48 83 ec 10          	sub    $0x10,%rsp
    517a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    517e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5182:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5186:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    518a:	48 8b 00             	mov    (%rax),%rax
    518d:	48 29 c2             	sub    %rax,%rdx
    5190:	48 c1 fa 03          	sar    $0x3,%rdx
    5194:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    519b:	aa aa aa 
    519e:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    51a2:	48 89 c2             	mov    %rax,%rdx
    51a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51a9:	48 8b 08             	mov    (%rax),%rcx
    51ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51b0:	48 89 ce             	mov    %rcx,%rsi
    51b3:	48 89 c7             	mov    %rax,%rdi
    51b6:	e8 cb 0e 00 00       	call   6086 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    51bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51bf:	48 89 c7             	mov    %rax,%rdi
    51c2:	e8 53 f8 ff ff       	call   4a1a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    51c7:	90                   	nop
    51c8:	c9                   	leave
    51c9:	c3                   	ret

00000000000051ca <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    51ca:	55                   	push   %rbp
    51cb:	48 89 e5             	mov    %rsp,%rbp
    51ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    51d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51d6:	48 8b 50 08          	mov    0x8(%rax),%rdx
    51da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51de:	48 8b 00             	mov    (%rax),%rax
    51e1:	48 29 c2             	sub    %rax,%rdx
    51e4:	48 c1 fa 03          	sar    $0x3,%rdx
    51e8:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    51ef:	aa aa aa 
    51f2:	48 0f af c2          	imul   %rdx,%rax
    51f6:	5d                   	pop    %rbp
    51f7:	c3                   	ret

00000000000051f8 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    51f8:	55                   	push   %rbp
    51f9:	48 89 e5             	mov    %rsp,%rbp
    51fc:	48 83 ec 10          	sub    $0x10,%rsp
    5200:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5204:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5208:	48 89 c7             	mov    %rax,%rdi
    520b:	e8 ac 0e 00 00       	call   60bc <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    5210:	90                   	nop
    5211:	c9                   	leave
    5212:	c3                   	ret
    5213:	90                   	nop

0000000000005214 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    5214:	55                   	push   %rbp
    5215:	48 89 e5             	mov    %rsp,%rbp
    5218:	48 83 ec 10          	sub    $0x10,%rsp
    521c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5220:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5224:	48 89 c7             	mov    %rax,%rdi
    5227:	e8 9c 0e 00 00       	call   60c8 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    522c:	90                   	nop
    522d:	c9                   	leave
    522e:	c3                   	ret
    522f:	90                   	nop

0000000000005230 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    5230:	55                   	push   %rbp
    5231:	48 89 e5             	mov    %rsp,%rbp
    5234:	53                   	push   %rbx
    5235:	48 83 ec 28          	sub    $0x28,%rsp
    5239:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    523d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5241:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    5245:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5249:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    524d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5251:	48 89 d6             	mov    %rdx,%rsi
    5254:	48 89 c7             	mov    %rax,%rdi
    5257:	e8 77 0e 00 00       	call   60d3 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>
    525c:	48 89 c1             	mov    %rax,%rcx
    525f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5263:	48 89 c2             	mov    %rax,%rdx
    5266:	48 89 ce             	mov    %rcx,%rsi
    5269:	48 89 df             	mov    %rbx,%rdi
    526c:	e8 c3 0e 00 00       	call   6134 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
      { _M_default_initialize(__n); }
    5271:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5275:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5279:	48 89 d6             	mov    %rdx,%rsi
    527c:	48 89 c7             	mov    %rax,%rdi
    527f:	e8 0e 0f 00 00       	call   6192 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>
    5284:	eb 1a                	jmp    52a0 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x70>
    5286:	48 89 c3             	mov    %rax,%rbx
    5289:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    528d:	48 89 c7             	mov    %rax,%rdi
    5290:	e8 bb 01 00 00       	call   5450 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    5295:	48 89 d8             	mov    %rbx,%rax
    5298:	48 89 c7             	mov    %rax,%rdi
    529b:	e8 d0 e1 ff ff       	call   3470 <_Unwind_Resume@plt>
    52a0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    52a4:	c9                   	leave
    52a5:	c3                   	ret

00000000000052a6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    52a6:	55                   	push   %rbp
    52a7:	48 89 e5             	mov    %rsp,%rbp
    52aa:	48 83 ec 10          	sub    $0x10,%rsp
    52ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    52b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52b6:	48 89 c7             	mov    %rax,%rdi
    52b9:	e8 14 0f 00 00       	call   61d2 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    52be:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    52c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52c5:	48 8b 48 08          	mov    0x8(%rax),%rcx
    52c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52cd:	48 8b 00             	mov    (%rax),%rax
    52d0:	48 89 ce             	mov    %rcx,%rsi
    52d3:	48 89 c7             	mov    %rax,%rdi
    52d6:	e8 05 0f 00 00       	call   61e0 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>
      }
    52db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52df:	48 89 c7             	mov    %rax,%rdi
    52e2:	e8 69 01 00 00       	call   5450 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    52e7:	90                   	nop
    52e8:	c9                   	leave
    52e9:	c3                   	ret

00000000000052ea <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    52ea:	55                   	push   %rbp
    52eb:	48 89 e5             	mov    %rsp,%rbp
    52ee:	48 83 ec 20          	sub    $0x20,%rsp
    52f2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    52f6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    52fa:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    52fe:	48 89 d6             	mov    %rdx,%rsi
    5301:	48 89 c7             	mov    %rax,%rdi
    5304:	e8 01 0f 00 00       	call   620a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    5309:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    530d:	c9                   	leave
    530e:	c3                   	ret
    530f:	90                   	nop

0000000000005310 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    5310:	55                   	push   %rbp
    5311:	48 89 e5             	mov    %rsp,%rbp
    5314:	48 83 ec 20          	sub    $0x20,%rsp
    5318:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    531c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5320:	48 8d 50 08          	lea    0x8(%rax),%rdx
    5324:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5328:	48 89 d6             	mov    %rdx,%rsi
    532b:	48 89 c7             	mov    %rax,%rdi
    532e:	e8 d7 0e 00 00       	call   620a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    5333:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5337:	c9                   	leave
    5338:	c3                   	ret

0000000000005339 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    5339:	55                   	push   %rbp
    533a:	48 89 e5             	mov    %rsp,%rbp
    533d:	53                   	push   %rbx
    533e:	48 83 ec 18          	sub    $0x18,%rsp
    5342:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5346:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    534a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    534e:	48 89 c7             	mov    %rax,%rdi
    5351:	e8 d2 0e 00 00       	call   6228 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    5356:	48 8b 18             	mov    (%rax),%rbx
    5359:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    535d:	48 89 c7             	mov    %rax,%rdi
    5360:	e8 c3 0e 00 00       	call   6228 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    5365:	48 8b 00             	mov    (%rax),%rax
    5368:	48 39 c3             	cmp    %rax,%rbx
    536b:	0f 95 c0             	setne  %al
    536e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5372:	c9                   	leave
    5373:	c3                   	ret

0000000000005374 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    5374:	55                   	push   %rbp
    5375:	48 89 e5             	mov    %rsp,%rbp
    5378:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    537c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5380:	48 8b 00             	mov    (%rax),%rax
    5383:	48 8d 50 18          	lea    0x18(%rax),%rdx
    5387:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    538b:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    538e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    5392:	5d                   	pop    %rbp
    5393:	c3                   	ret

0000000000005394 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    5394:	55                   	push   %rbp
    5395:	48 89 e5             	mov    %rsp,%rbp
    5398:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    539c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53a0:	48 8b 00             	mov    (%rax),%rax
    53a3:	5d                   	pop    %rbp
    53a4:	c3                   	ret
    53a5:	90                   	nop

00000000000053a6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    53a6:	55                   	push   %rbp
    53a7:	48 89 e5             	mov    %rsp,%rbp
    53aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    53b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53b6:	48 8b 08             	mov    (%rax),%rcx
    53b9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    53bd:	48 89 d0             	mov    %rdx,%rax
    53c0:	48 c1 e0 03          	shl    $0x3,%rax
    53c4:	48 29 d0             	sub    %rdx,%rax
    53c7:	48 c1 e0 02          	shl    $0x2,%rax
    53cb:	48 01 c8             	add    %rcx,%rax
      }
    53ce:	5d                   	pop    %rbp
    53cf:	c3                   	ret

00000000000053d0 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>:
			    __not_<__and_<is_scalar<_Tp>,
					  is_same<_Tp, decay_t<_Up>>>>,
			    is_constructible<_Tp, _Up>,
			    is_assignable<_Tp&, _Up>>,
		    optional&>
	operator=(_Up&& __u)
    53d0:	55                   	push   %rbp
    53d1:	48 89 e5             	mov    %rsp,%rbp
    53d4:	53                   	push   %rbx
    53d5:	48 83 ec 18          	sub    $0x18,%rsp
    53d9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    53dd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	noexcept(__and_v<is_nothrow_constructible<_Tp, _Up>,
			 is_nothrow_assignable<_Tp&, _Up>>)
	{
	  if (this->_M_is_engaged())
    53e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    53e5:	48 89 c7             	mov    %rax,%rdi
    53e8:	e8 49 0e 00 00       	call   6236 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    53ed:	84 c0                	test   %al,%al
    53ef:	74 36                	je     5427 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x57>
	    this->_M_get() = std::forward<_Up>(__u);
    53f1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    53f5:	48 89 c7             	mov    %rax,%rdi
    53f8:	e8 8f 0e 00 00       	call   628c <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    53fd:	48 89 c3             	mov    %rax,%rbx
    5400:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5404:	48 89 c7             	mov    %rax,%rdi
    5407:	e8 3c 0e 00 00       	call   6248 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
    540c:	48 89 c1             	mov    %rax,%rcx
    540f:	48 8b 03             	mov    (%rbx),%rax
    5412:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    5416:	48 89 01             	mov    %rax,(%rcx)
    5419:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    541d:	48 8b 43 10          	mov    0x10(%rbx),%rax
    5421:	48 89 41 10          	mov    %rax,0x10(%rcx)
    5425:	eb 1e                	jmp    5445 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x75>
	  else
	    this->_M_construct(std::forward<_Up>(__u));
    5427:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    542b:	48 89 c7             	mov    %rax,%rdi
    542e:	e8 59 0e 00 00       	call   628c <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    5433:	48 89 c2             	mov    %rax,%rdx
    5436:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    543a:	48 89 d6             	mov    %rdx,%rsi
    543d:	48 89 c7             	mov    %rax,%rdi
    5440:	e8 55 0e 00 00       	call   629a <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>

	  return *this;
    5445:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    5449:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    544d:	c9                   	leave
    544e:	c3                   	ret
    544f:	90                   	nop

0000000000005450 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5450:	55                   	push   %rbp
    5451:	48 89 e5             	mov    %rsp,%rbp
    5454:	48 83 ec 10          	sub    $0x10,%rsp
    5458:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    545c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5460:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5464:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5468:	48 8b 00             	mov    (%rax),%rax
    546b:	48 29 c2             	sub    %rax,%rdx
    546e:	48 c1 fa 02          	sar    $0x2,%rdx
    5472:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
    5479:	db b6 6d 
    547c:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    5480:	48 89 c2             	mov    %rax,%rdx
    5483:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5487:	48 8b 08             	mov    (%rax),%rcx
    548a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    548e:	48 89 ce             	mov    %rcx,%rsi
    5491:	48 89 c7             	mov    %rax,%rdi
    5494:	e8 5b 0e 00 00       	call   62f4 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>
      }
    5499:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    549d:	48 89 c7             	mov    %rax,%rdi
    54a0:	e8 91 f5 ff ff       	call   4a36 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    54a5:	90                   	nop
    54a6:	c9                   	leave
    54a7:	c3                   	ret

00000000000054a8 <_ZNSaI18VkSurfaceFormatKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    54a8:	55                   	push   %rbp
    54a9:	48 89 e5             	mov    %rsp,%rbp
    54ac:	48 83 ec 10          	sub    $0x10,%rsp
    54b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54b8:	48 89 c7             	mov    %rax,%rdi
    54bb:	e8 6a 0e 00 00       	call   632a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>
    54c0:	90                   	nop
    54c1:	c9                   	leave
    54c2:	c3                   	ret
    54c3:	90                   	nop

00000000000054c4 <_ZNSaI18VkSurfaceFormatKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    54c4:	55                   	push   %rbp
    54c5:	48 89 e5             	mov    %rsp,%rbp
    54c8:	48 83 ec 10          	sub    $0x10,%rsp
    54cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54d4:	48 89 c7             	mov    %rax,%rdi
    54d7:	e8 5a 0e 00 00       	call   6336 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>
    54dc:	90                   	nop
    54dd:	c9                   	leave
    54de:	c3                   	ret
    54df:	90                   	nop

00000000000054e0 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    54e0:	55                   	push   %rbp
    54e1:	48 89 e5             	mov    %rsp,%rbp
    54e4:	53                   	push   %rbx
    54e5:	48 83 ec 28          	sub    $0x28,%rsp
    54e9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    54ed:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    54f1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    54f5:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    54f9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    54fd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5501:	48 89 d6             	mov    %rdx,%rsi
    5504:	48 89 c7             	mov    %rax,%rdi
    5507:	e8 35 0e 00 00       	call   6341 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    550c:	48 89 c1             	mov    %rax,%rcx
    550f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5513:	48 89 c2             	mov    %rax,%rdx
    5516:	48 89 ce             	mov    %rcx,%rsi
    5519:	48 89 df             	mov    %rbx,%rdi
    551c:	e8 81 0e 00 00       	call   63a2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    5521:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5525:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5529:	48 89 d6             	mov    %rdx,%rsi
    552c:	48 89 c7             	mov    %rax,%rdi
    552f:	e8 cc 0e 00 00       	call   6400 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>
    5534:	eb 1a                	jmp    5550 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x70>
    5536:	48 89 c3             	mov    %rax,%rbx
    5539:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    553d:	48 89 c7             	mov    %rax,%rdi
    5540:	e8 79 00 00 00       	call   55be <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    5545:	48 89 d8             	mov    %rbx,%rax
    5548:	48 89 c7             	mov    %rax,%rdi
    554b:	e8 20 df ff ff       	call   3470 <_Unwind_Resume@plt>
    5550:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5554:	c9                   	leave
    5555:	c3                   	ret

0000000000005556 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    5556:	55                   	push   %rbp
    5557:	48 89 e5             	mov    %rsp,%rbp
    555a:	48 83 ec 10          	sub    $0x10,%rsp
    555e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    5562:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5566:	48 89 c7             	mov    %rax,%rdi
    5569:	e8 d2 0e 00 00       	call   6440 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    556e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    5571:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5575:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5579:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    557d:	48 8b 00             	mov    (%rax),%rax
    5580:	48 89 ce             	mov    %rcx,%rsi
    5583:	48 89 c7             	mov    %rax,%rdi
    5586:	e8 c3 0e 00 00       	call   644e <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
      }
    558b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    558f:	48 89 c7             	mov    %rax,%rdi
    5592:	e8 27 00 00 00       	call   55be <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    5597:	90                   	nop
    5598:	c9                   	leave
    5599:	c3                   	ret

000000000000559a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    559a:	55                   	push   %rbp
    559b:	48 89 e5             	mov    %rsp,%rbp
    559e:	48 83 ec 10          	sub    $0x10,%rsp
    55a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    55a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55aa:	48 8b 10             	mov    (%rax),%rdx
    55ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55b1:	48 89 d6             	mov    %rdx,%rsi
    55b4:	48 89 c7             	mov    %rax,%rdi
    55b7:	e8 bc 0e 00 00       	call   6478 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    55bc:	c9                   	leave
    55bd:	c3                   	ret

00000000000055be <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    55be:	55                   	push   %rbp
    55bf:	48 89 e5             	mov    %rsp,%rbp
    55c2:	48 83 ec 10          	sub    $0x10,%rsp
    55c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    55ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55ce:	48 8b 50 10          	mov    0x10(%rax),%rdx
    55d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55d6:	48 8b 00             	mov    (%rax),%rax
    55d9:	48 29 c2             	sub    %rax,%rdx
    55dc:	48 89 d0             	mov    %rdx,%rax
    55df:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    55e3:	48 89 c2             	mov    %rax,%rdx
    55e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55ea:	48 8b 08             	mov    (%rax),%rcx
    55ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55f1:	48 89 ce             	mov    %rcx,%rsi
    55f4:	48 89 c7             	mov    %rax,%rdi
    55f7:	e8 b4 0e 00 00       	call   64b0 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    55fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5600:	48 89 c7             	mov    %rax,%rdi
    5603:	e8 4a f4 ff ff       	call   4a52 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    5608:	90                   	nop
    5609:	c9                   	leave
    560a:	c3                   	ret
    560b:	90                   	nop

000000000000560c <_ZNSaI16VkPresentModeKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    560c:	55                   	push   %rbp
    560d:	48 89 e5             	mov    %rsp,%rbp
    5610:	48 83 ec 10          	sub    $0x10,%rsp
    5614:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5618:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    561c:	48 89 c7             	mov    %rax,%rdi
    561f:	e8 c2 0e 00 00       	call   64e6 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>
    5624:	90                   	nop
    5625:	c9                   	leave
    5626:	c3                   	ret
    5627:	90                   	nop

0000000000005628 <_ZNSaI16VkPresentModeKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    5628:	55                   	push   %rbp
    5629:	48 89 e5             	mov    %rsp,%rbp
    562c:	48 83 ec 10          	sub    $0x10,%rsp
    5630:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5634:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5638:	48 89 c7             	mov    %rax,%rdi
    563b:	e8 b2 0e 00 00       	call   64f2 <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>
    5640:	90                   	nop
    5641:	c9                   	leave
    5642:	c3                   	ret
    5643:	90                   	nop

0000000000005644 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    5644:	55                   	push   %rbp
    5645:	48 89 e5             	mov    %rsp,%rbp
    5648:	53                   	push   %rbx
    5649:	48 83 ec 28          	sub    $0x28,%rsp
    564d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5651:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5655:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    5659:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    565d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5661:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5665:	48 89 d6             	mov    %rdx,%rsi
    5668:	48 89 c7             	mov    %rax,%rdi
    566b:	e8 8d 0e 00 00       	call   64fd <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    5670:	48 89 c1             	mov    %rax,%rcx
    5673:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5677:	48 89 c2             	mov    %rax,%rdx
    567a:	48 89 ce             	mov    %rcx,%rsi
    567d:	48 89 df             	mov    %rbx,%rdi
    5680:	e8 d9 0e 00 00       	call   655e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    5685:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5689:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    568d:	48 89 d6             	mov    %rdx,%rsi
    5690:	48 89 c7             	mov    %rax,%rdi
    5693:	e8 24 0f 00 00       	call   65bc <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>
    5698:	eb 1a                	jmp    56b4 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x70>
    569a:	48 89 c3             	mov    %rax,%rbx
    569d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    56a1:	48 89 c7             	mov    %rax,%rdi
    56a4:	e8 79 00 00 00       	call   5722 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    56a9:	48 89 d8             	mov    %rbx,%rax
    56ac:	48 89 c7             	mov    %rax,%rdi
    56af:	e8 bc dd ff ff       	call   3470 <_Unwind_Resume@plt>
    56b4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    56b8:	c9                   	leave
    56b9:	c3                   	ret

00000000000056ba <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    56ba:	55                   	push   %rbp
    56bb:	48 89 e5             	mov    %rsp,%rbp
    56be:	48 83 ec 10          	sub    $0x10,%rsp
    56c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    56c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56ca:	48 89 c7             	mov    %rax,%rdi
    56cd:	e8 2a 0f 00 00       	call   65fc <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    56d2:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    56d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56d9:	48 8b 48 08          	mov    0x8(%rax),%rcx
    56dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56e1:	48 8b 00             	mov    (%rax),%rax
    56e4:	48 89 ce             	mov    %rcx,%rsi
    56e7:	48 89 c7             	mov    %rax,%rdi
    56ea:	e8 1b 0f 00 00       	call   660a <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>
      }
    56ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56f3:	48 89 c7             	mov    %rax,%rdi
    56f6:	e8 27 00 00 00       	call   5722 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    56fb:	90                   	nop
    56fc:	c9                   	leave
    56fd:	c3                   	ret

00000000000056fe <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    56fe:	55                   	push   %rbp
    56ff:	48 89 e5             	mov    %rsp,%rbp
    5702:	48 83 ec 10          	sub    $0x10,%rsp
    5706:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    570a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    570e:	48 8b 10             	mov    (%rax),%rdx
    5711:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5715:	48 89 d6             	mov    %rdx,%rsi
    5718:	48 89 c7             	mov    %rax,%rdi
    571b:	e8 14 0f 00 00       	call   6634 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    5720:	c9                   	leave
    5721:	c3                   	ret

0000000000005722 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5722:	55                   	push   %rbp
    5723:	48 89 e5             	mov    %rsp,%rbp
    5726:	48 83 ec 10          	sub    $0x10,%rsp
    572a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    572e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5732:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5736:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    573a:	48 8b 00             	mov    (%rax),%rax
    573d:	48 29 c2             	sub    %rax,%rdx
    5740:	48 89 d0             	mov    %rdx,%rax
    5743:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
    5747:	48 89 c2             	mov    %rax,%rdx
    574a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    574e:	48 8b 08             	mov    (%rax),%rcx
    5751:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5755:	48 89 ce             	mov    %rcx,%rsi
    5758:	48 89 c7             	mov    %rax,%rdi
    575b:	e8 0c 0f 00 00       	call   666c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    5760:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5764:	48 89 c7             	mov    %rax,%rdi
    5767:	e8 02 f3 ff ff       	call   4a6e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    576c:	90                   	nop
    576d:	c9                   	leave
    576e:	c3                   	ret
    576f:	90                   	nop

0000000000005770 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5770:	55                   	push   %rbp
    5771:	48 89 e5             	mov    %rsp,%rbp
    5774:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5778:	90                   	nop
    5779:	5d                   	pop    %rbp
    577a:	c3                   	ret
    577b:	90                   	nop

000000000000577c <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    577c:	55                   	push   %rbp
    577d:	48 89 e5             	mov    %rsp,%rbp
    5780:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5784:	90                   	nop
    5785:	5d                   	pop    %rbp
    5786:	c3                   	ret

0000000000005787 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5787:	55                   	push   %rbp
    5788:	48 89 e5             	mov    %rsp,%rbp
    578b:	53                   	push   %rbx
    578c:	48 83 ec 28          	sub    $0x28,%rsp
    5790:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5794:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5798:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    579c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    57a0:	48 89 d6             	mov    %rdx,%rsi
    57a3:	48 89 c7             	mov    %rax,%rdi
    57a6:	e8 25 01 00 00       	call   58d0 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    57ab:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    57af:	48 89 c7             	mov    %rax,%rdi
    57b2:	e8 ea 0e 00 00       	call   66a1 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    57b7:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    57bb:	0f 92 c3             	setb   %bl
    57be:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    57c2:	48 89 c7             	mov    %rax,%rdi
    57c5:	e8 dc f2 ff ff       	call   4aa6 <_ZNSaI21VkExtensionPropertiesED1Ev>
    57ca:	84 db                	test   %bl,%bl
    57cc:	74 0f                	je     57dd <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    57ce:	48 8d 05 7b b1 00 00 	lea    0xb17b(%rip),%rax        # 10950 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x148>
    57d5:	48 89 c7             	mov    %rax,%rdi
    57d8:	e8 23 d9 ff ff       	call   3100 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    57dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    57e1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    57e5:	c9                   	leave
    57e6:	c3                   	ret
    57e7:	90                   	nop

00000000000057e8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    57e8:	55                   	push   %rbp
    57e9:	48 89 e5             	mov    %rsp,%rbp
    57ec:	53                   	push   %rbx
    57ed:	48 83 ec 28          	sub    $0x28,%rsp
    57f1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    57f5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    57f9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    57fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5801:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5805:	48 89 d6             	mov    %rdx,%rsi
    5808:	48 89 c7             	mov    %rax,%rdi
    580b:	e8 d4 0e 00 00       	call   66e4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    5810:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5814:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5818:	48 89 d6             	mov    %rdx,%rsi
    581b:	48 89 c7             	mov    %rax,%rdi
    581e:	e8 f3 0e 00 00       	call   6716 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    5823:	eb 1a                	jmp    583f <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    5825:	48 89 c3             	mov    %rax,%rbx
    5828:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    582c:	48 89 c7             	mov    %rax,%rdi
    582f:	e8 76 f1 ff ff       	call   49aa <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    5834:	48 89 d8             	mov    %rbx,%rax
    5837:	48 89 c7             	mov    %rax,%rdi
    583a:	e8 31 dc ff ff       	call   3470 <_Unwind_Resume@plt>
    583f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5843:	c9                   	leave
    5844:	c3                   	ret
    5845:	90                   	nop

0000000000005846 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    5846:	55                   	push   %rbp
    5847:	48 89 e5             	mov    %rsp,%rbp
    584a:	48 83 ec 10          	sub    $0x10,%rsp
    584e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5852:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    5856:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    585a:	48 89 c7             	mov    %rax,%rdi
    585d:	e8 24 00 00 00       	call   5886 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    5862:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    5865:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5869:	48 8b 00             	mov    (%rax),%rax
    586c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5870:	48 89 ce             	mov    %rcx,%rsi
    5873:	48 89 c7             	mov    %rax,%rdi
    5876:	e8 fc 0e 00 00       	call   6777 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    587b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    587f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    5883:	90                   	nop
    5884:	c9                   	leave
    5885:	c3                   	ret

0000000000005886 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5886:	55                   	push   %rbp
    5887:	48 89 e5             	mov    %rsp,%rbp
    588a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    588e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5892:	5d                   	pop    %rbp
    5893:	c3                   	ret

0000000000005894 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5894:	55                   	push   %rbp
    5895:	48 89 e5             	mov    %rsp,%rbp
    5898:	48 83 ec 20          	sub    $0x20,%rsp
    589c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    58a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    58a4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    58a8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    58ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58b0:	48 89 d6             	mov    %rdx,%rsi
    58b3:	48 89 c7             	mov    %rax,%rdi
    58b6:	e8 e5 0e 00 00       	call   67a0 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    58bb:	90                   	nop
    58bc:	c9                   	leave
    58bd:	c3                   	ret

00000000000058be <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    58be:	55                   	push   %rbp
    58bf:	48 89 e5             	mov    %rsp,%rbp
    58c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    58c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    58ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    58ce:	5d                   	pop    %rbp
    58cf:	c3                   	ret

00000000000058d0 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    58d0:	55                   	push   %rbp
    58d1:	48 89 e5             	mov    %rsp,%rbp
    58d4:	48 83 ec 10          	sub    $0x10,%rsp
    58d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    58dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    58e0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    58e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58e8:	48 89 d6             	mov    %rdx,%rsi
    58eb:	48 89 c7             	mov    %rax,%rdi
    58ee:	e8 d3 0e 00 00       	call   67c6 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    58f3:	90                   	nop
    58f4:	c9                   	leave
    58f5:	c3                   	ret

00000000000058f6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    58f6:	55                   	push   %rbp
    58f7:	48 89 e5             	mov    %rsp,%rbp
    58fa:	48 83 ec 20          	sub    $0x20,%rsp
    58fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5902:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5906:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    590a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    590f:	74 17                	je     5928 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5911:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5915:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5919:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    591d:	48 89 ce             	mov    %rcx,%rsi
    5920:	48 89 c7             	mov    %rax,%rdi
    5923:	e8 ad 0e 00 00       	call   67d5 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    5928:	90                   	nop
    5929:	c9                   	leave
    592a:	c3                   	ret
    592b:	90                   	nop

000000000000592c <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    592c:	55                   	push   %rbp
    592d:	48 89 e5             	mov    %rsp,%rbp
    5930:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5934:	90                   	nop
    5935:	5d                   	pop    %rbp
    5936:	c3                   	ret
    5937:	90                   	nop

0000000000005938 <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5938:	55                   	push   %rbp
    5939:	48 89 e5             	mov    %rsp,%rbp
    593c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5940:	90                   	nop
    5941:	5d                   	pop    %rbp
    5942:	c3                   	ret

0000000000005943 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5943:	55                   	push   %rbp
    5944:	48 89 e5             	mov    %rsp,%rbp
    5947:	53                   	push   %rbx
    5948:	48 83 ec 28          	sub    $0x28,%rsp
    594c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5950:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5954:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5958:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    595c:	48 89 d6             	mov    %rdx,%rsi
    595f:	48 89 c7             	mov    %rax,%rdi
    5962:	e8 c5 01 00 00       	call   5b2c <_ZNSaIPKcEC1ERKS1_>
    5967:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    596b:	48 89 c7             	mov    %rax,%rdi
    596e:	e8 90 0e 00 00       	call   6803 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    5973:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    5977:	0f 92 c3             	setb   %bl
    597a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    597e:	48 89 c7             	mov    %rax,%rdi
    5981:	e8 8e f2 ff ff       	call   4c14 <_ZNSaIPKcED1Ev>
    5986:	84 db                	test   %bl,%bl
    5988:	74 0f                	je     5999 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    598a:	48 8d 05 bf af 00 00 	lea    0xafbf(%rip),%rax        # 10950 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x148>
    5991:	48 89 c7             	mov    %rax,%rdi
    5994:	e8 67 d7 ff ff       	call   3100 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    5999:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    599d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    59a1:	c9                   	leave
    59a2:	c3                   	ret
    59a3:	90                   	nop

00000000000059a4 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    59a4:	55                   	push   %rbp
    59a5:	48 89 e5             	mov    %rsp,%rbp
    59a8:	53                   	push   %rbx
    59a9:	48 83 ec 28          	sub    $0x28,%rsp
    59ad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    59b1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    59b5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    59b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    59bd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    59c1:	48 89 d6             	mov    %rdx,%rsi
    59c4:	48 89 c7             	mov    %rax,%rdi
    59c7:	e8 7a 0e 00 00       	call   6846 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    59cc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    59d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    59d4:	48 89 d6             	mov    %rdx,%rsi
    59d7:	48 89 c7             	mov    %rax,%rdi
    59da:	e8 99 0e 00 00       	call   6878 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    59df:	eb 1a                	jmp    59fb <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    59e1:	48 89 c3             	mov    %rax,%rbx
    59e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    59e8:	48 89 c7             	mov    %rax,%rdi
    59eb:	e8 d6 ef ff ff       	call   49c6 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    59f0:	48 89 d8             	mov    %rbx,%rax
    59f3:	48 89 c7             	mov    %rax,%rdi
    59f6:	e8 75 da ff ff       	call   3470 <_Unwind_Resume@plt>
    59fb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    59ff:	c9                   	leave
    5a00:	c3                   	ret
    5a01:	90                   	nop

0000000000005a02 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    5a02:	55                   	push   %rbp
    5a03:	48 89 e5             	mov    %rsp,%rbp
    5a06:	48 83 ec 10          	sub    $0x10,%rsp
    5a0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a0e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    5a12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a16:	48 89 c7             	mov    %rax,%rdi
    5a19:	e8 24 00 00 00       	call   5a42 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    5a1e:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    5a21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a25:	48 8b 00             	mov    (%rax),%rax
    5a28:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5a2c:	48 89 ce             	mov    %rcx,%rsi
    5a2f:	48 89 c7             	mov    %rax,%rdi
    5a32:	e8 97 0e 00 00       	call   68ce <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    5a37:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5a3b:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    5a3f:	90                   	nop
    5a40:	c9                   	leave
    5a41:	c3                   	ret

0000000000005a42 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5a42:	55                   	push   %rbp
    5a43:	48 89 e5             	mov    %rsp,%rbp
    5a46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5a4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a4e:	5d                   	pop    %rbp
    5a4f:	c3                   	ret

0000000000005a50 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5a50:	55                   	push   %rbp
    5a51:	48 89 e5             	mov    %rsp,%rbp
    5a54:	48 83 ec 20          	sub    $0x20,%rsp
    5a58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5a60:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    5a64:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5a68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a6c:	48 89 d6             	mov    %rdx,%rsi
    5a6f:	48 89 c7             	mov    %rax,%rdi
    5a72:	e8 80 0e 00 00       	call   68f7 <_ZSt8_DestroyIPPKcEvT_S3_>
    }
    5a77:	90                   	nop
    5a78:	c9                   	leave
    5a79:	c3                   	ret

0000000000005a7a <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
    5a7a:	55                   	push   %rbp
    5a7b:	48 89 e5             	mov    %rsp,%rbp
    5a7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    5a82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a86:	5d                   	pop    %rbp
    5a87:	c3                   	ret

0000000000005a88 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
    5a88:	55                   	push   %rbp
    5a89:	48 89 e5             	mov    %rsp,%rbp
    5a8c:	53                   	push   %rbx
    5a8d:	48 83 ec 18          	sub    $0x18,%rsp
    5a91:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5a95:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    5a99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5a9d:	48 8b 50 08          	mov    0x8(%rax),%rdx
    5aa1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5aa5:	48 8b 40 10          	mov    0x10(%rax),%rax
    5aa9:	48 39 c2             	cmp    %rax,%rdx
    5aac:	74 3c                	je     5aea <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    5aae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5ab2:	48 89 c7             	mov    %rax,%rdi
    5ab5:	e8 63 0e 00 00       	call   691d <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    5aba:	48 89 c2             	mov    %rax,%rdx
    5abd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ac1:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5ac5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ac9:	48 89 ce             	mov    %rcx,%rsi
    5acc:	48 89 c7             	mov    %rax,%rdi
    5acf:	e8 57 0e 00 00       	call   692b <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
    5ad4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ad8:	48 8b 40 08          	mov    0x8(%rax),%rax
    5adc:	48 8d 50 08          	lea    0x8(%rax),%rdx
    5ae0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ae4:	48 89 50 08          	mov    %rdx,0x8(%rax)
    5ae8:	eb 30                	jmp    5b1a <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
    5aea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5aee:	48 89 c7             	mov    %rax,%rdi
    5af1:	e8 27 0e 00 00       	call   691d <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    5af6:	48 89 c3             	mov    %rax,%rbx
    5af9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5afd:	48 89 c7             	mov    %rax,%rdi
    5b00:	e8 5f 0e 00 00       	call   6964 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    5b05:	48 89 c1             	mov    %rax,%rcx
    5b08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b0c:	48 89 da             	mov    %rbx,%rdx
    5b0f:	48 89 ce             	mov    %rcx,%rsi
    5b12:	48 89 c7             	mov    %rax,%rdi
    5b15:	e8 74 0e 00 00       	call   698e <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
    5b1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b1e:	48 89 c7             	mov    %rax,%rdi
    5b21:	e8 fa 0f 00 00       	call   6b20 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
    5b26:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5b2a:	c9                   	leave
    5b2b:	c3                   	ret

0000000000005b2c <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    5b2c:	55                   	push   %rbp
    5b2d:	48 89 e5             	mov    %rsp,%rbp
    5b30:	48 83 ec 10          	sub    $0x10,%rsp
    5b34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    5b3c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5b40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b44:	48 89 d6             	mov    %rdx,%rsi
    5b47:	48 89 c7             	mov    %rax,%rdi
    5b4a:	e8 11 10 00 00       	call   6b60 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    5b4f:	90                   	nop
    5b50:	c9                   	leave
    5b51:	c3                   	ret

0000000000005b52 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    5b52:	55                   	push   %rbp
    5b53:	48 89 e5             	mov    %rsp,%rbp
    5b56:	48 83 ec 20          	sub    $0x20,%rsp
    5b5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5b62:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5b66:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5b6b:	74 17                	je     5b84 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5b6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b71:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5b75:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5b79:	48 89 ce             	mov    %rcx,%rsi
    5b7c:	48 89 c7             	mov    %rax,%rdi
    5b7f:	e8 eb 0f 00 00       	call   6b6f <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    5b84:	90                   	nop
    5b85:	c9                   	leave
    5b86:	c3                   	ret
    5b87:	90                   	nop

0000000000005b88 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5b88:	55                   	push   %rbp
    5b89:	48 89 e5             	mov    %rsp,%rbp
    5b8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b90:	90                   	nop
    5b91:	5d                   	pop    %rbp
    5b92:	c3                   	ret
    5b93:	90                   	nop

0000000000005b94 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5b94:	55                   	push   %rbp
    5b95:	48 89 e5             	mov    %rsp,%rbp
    5b98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b9c:	90                   	nop
    5b9d:	5d                   	pop    %rbp
    5b9e:	c3                   	ret

0000000000005b9f <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5b9f:	55                   	push   %rbp
    5ba0:	48 89 e5             	mov    %rsp,%rbp
    5ba3:	53                   	push   %rbx
    5ba4:	48 83 ec 28          	sub    $0x28,%rsp
    5ba8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5bac:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5bb0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5bb4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5bb8:	48 89 d6             	mov    %rdx,%rsi
    5bbb:	48 89 c7             	mov    %rax,%rdi
    5bbe:	e8 25 01 00 00       	call   5ce8 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    5bc3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5bc7:	48 89 c7             	mov    %rax,%rdi
    5bca:	e8 ce 0f 00 00       	call   6b9d <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    5bcf:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    5bd3:	0f 92 c3             	setb   %bl
    5bd6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5bda:	48 89 c7             	mov    %rax,%rdi
    5bdd:	e8 c4 f1 ff ff       	call   4da6 <_ZNSaI17VkLayerPropertiesED1Ev>
    5be2:	84 db                	test   %bl,%bl
    5be4:	74 0f                	je     5bf5 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    5be6:	48 8d 05 63 ad 00 00 	lea    0xad63(%rip),%rax        # 10950 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x148>
    5bed:	48 89 c7             	mov    %rax,%rdi
    5bf0:	e8 0b d5 ff ff       	call   3100 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    5bf5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5bf9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5bfd:	c9                   	leave
    5bfe:	c3                   	ret
    5bff:	90                   	nop

0000000000005c00 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    5c00:	55                   	push   %rbp
    5c01:	48 89 e5             	mov    %rsp,%rbp
    5c04:	53                   	push   %rbx
    5c05:	48 83 ec 28          	sub    $0x28,%rsp
    5c09:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5c0d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5c11:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    5c15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5c19:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5c1d:	48 89 d6             	mov    %rdx,%rsi
    5c20:	48 89 c7             	mov    %rax,%rdi
    5c23:	e8 b8 0f 00 00       	call   6be0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    5c28:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5c2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5c30:	48 89 d6             	mov    %rdx,%rsi
    5c33:	48 89 c7             	mov    %rax,%rdi
    5c36:	e8 d7 0f 00 00       	call   6c12 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    5c3b:	eb 1a                	jmp    5c57 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    5c3d:	48 89 c3             	mov    %rax,%rbx
    5c40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5c44:	48 89 c7             	mov    %rax,%rdi
    5c47:	e8 96 ed ff ff       	call   49e2 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    5c4c:	48 89 d8             	mov    %rbx,%rax
    5c4f:	48 89 c7             	mov    %rax,%rdi
    5c52:	e8 19 d8 ff ff       	call   3470 <_Unwind_Resume@plt>
    5c57:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5c5b:	c9                   	leave
    5c5c:	c3                   	ret
    5c5d:	90                   	nop

0000000000005c5e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    5c5e:	55                   	push   %rbp
    5c5f:	48 89 e5             	mov    %rsp,%rbp
    5c62:	48 83 ec 10          	sub    $0x10,%rsp
    5c66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    5c6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c72:	48 89 c7             	mov    %rax,%rdi
    5c75:	e8 24 00 00 00       	call   5c9e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    5c7a:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    5c7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c81:	48 8b 00             	mov    (%rax),%rax
    5c84:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5c88:	48 89 ce             	mov    %rcx,%rsi
    5c8b:	48 89 c7             	mov    %rax,%rdi
    5c8e:	e8 e0 0f 00 00       	call   6c73 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    5c93:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5c97:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    5c9b:	90                   	nop
    5c9c:	c9                   	leave
    5c9d:	c3                   	ret

0000000000005c9e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5c9e:	55                   	push   %rbp
    5c9f:	48 89 e5             	mov    %rsp,%rbp
    5ca2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5ca6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5caa:	5d                   	pop    %rbp
    5cab:	c3                   	ret

0000000000005cac <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5cac:	55                   	push   %rbp
    5cad:	48 89 e5             	mov    %rsp,%rbp
    5cb0:	48 83 ec 20          	sub    $0x20,%rsp
    5cb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5cb8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5cbc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    5cc0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5cc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cc8:	48 89 d6             	mov    %rdx,%rsi
    5ccb:	48 89 c7             	mov    %rax,%rdi
    5cce:	e8 c9 0f 00 00       	call   6c9c <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    5cd3:	90                   	nop
    5cd4:	c9                   	leave
    5cd5:	c3                   	ret

0000000000005cd6 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    5cd6:	55                   	push   %rbp
    5cd7:	48 89 e5             	mov    %rsp,%rbp
    5cda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5cde:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    5ce2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5ce6:	5d                   	pop    %rbp
    5ce7:	c3                   	ret

0000000000005ce8 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    5ce8:	55                   	push   %rbp
    5ce9:	48 89 e5             	mov    %rsp,%rbp
    5cec:	48 83 ec 10          	sub    $0x10,%rsp
    5cf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5cf4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    5cf8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5cfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d00:	48 89 d6             	mov    %rdx,%rsi
    5d03:	48 89 c7             	mov    %rax,%rdi
    5d06:	e8 b7 0f 00 00       	call   6cc2 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
    5d0b:	90                   	nop
    5d0c:	c9                   	leave
    5d0d:	c3                   	ret

0000000000005d0e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    5d0e:	55                   	push   %rbp
    5d0f:	48 89 e5             	mov    %rsp,%rbp
    5d12:	48 83 ec 20          	sub    $0x20,%rsp
    5d16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5d1e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5d22:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5d27:	74 17                	je     5d40 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5d29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d2d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5d31:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5d35:	48 89 ce             	mov    %rcx,%rsi
    5d38:	48 89 c7             	mov    %rax,%rdi
    5d3b:	e8 91 0f 00 00       	call   6cd1 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
    5d40:	90                   	nop
    5d41:	c9                   	leave
    5d42:	c3                   	ret
    5d43:	90                   	nop

0000000000005d44 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5d44:	55                   	push   %rbp
    5d45:	48 89 e5             	mov    %rsp,%rbp
    5d48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d4c:	90                   	nop
    5d4d:	5d                   	pop    %rbp
    5d4e:	c3                   	ret
    5d4f:	90                   	nop

0000000000005d50 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5d50:	55                   	push   %rbp
    5d51:	48 89 e5             	mov    %rsp,%rbp
    5d54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d58:	90                   	nop
    5d59:	5d                   	pop    %rbp
    5d5a:	c3                   	ret

0000000000005d5b <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5d5b:	55                   	push   %rbp
    5d5c:	48 89 e5             	mov    %rsp,%rbp
    5d5f:	53                   	push   %rbx
    5d60:	48 83 ec 28          	sub    $0x28,%rsp
    5d64:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5d68:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5d6c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5d70:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5d74:	48 89 d6             	mov    %rdx,%rsi
    5d77:	48 89 c7             	mov    %rax,%rdi
    5d7a:	e8 25 01 00 00       	call   5ea4 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    5d7f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5d83:	48 89 c7             	mov    %rax,%rdi
    5d86:	e8 74 0f 00 00       	call   6cff <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    5d8b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    5d8f:	0f 92 c3             	setb   %bl
    5d92:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5d96:	48 89 c7             	mov    %rax,%rdi
    5d99:	e8 76 f1 ff ff       	call   4f14 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    5d9e:	84 db                	test   %bl,%bl
    5da0:	74 0f                	je     5db1 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    5da2:	48 8d 05 a7 ab 00 00 	lea    0xaba7(%rip),%rax        # 10950 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x148>
    5da9:	48 89 c7             	mov    %rax,%rdi
    5dac:	e8 4f d3 ff ff       	call   3100 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    5db1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5db5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5db9:	c9                   	leave
    5dba:	c3                   	ret
    5dbb:	90                   	nop

0000000000005dbc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    5dbc:	55                   	push   %rbp
    5dbd:	48 89 e5             	mov    %rsp,%rbp
    5dc0:	53                   	push   %rbx
    5dc1:	48 83 ec 28          	sub    $0x28,%rsp
    5dc5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5dc9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5dcd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    5dd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5dd5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5dd9:	48 89 d6             	mov    %rdx,%rsi
    5ddc:	48 89 c7             	mov    %rax,%rdi
    5ddf:	e8 5e 0f 00 00       	call   6d42 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    5de4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5de8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5dec:	48 89 d6             	mov    %rdx,%rsi
    5def:	48 89 c7             	mov    %rax,%rdi
    5df2:	e8 7d 0f 00 00       	call   6d74 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    5df7:	eb 1a                	jmp    5e13 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    5df9:	48 89 c3             	mov    %rax,%rbx
    5dfc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e00:	48 89 c7             	mov    %rax,%rdi
    5e03:	e8 f6 eb ff ff       	call   49fe <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    5e08:	48 89 d8             	mov    %rbx,%rax
    5e0b:	48 89 c7             	mov    %rax,%rdi
    5e0e:	e8 5d d6 ff ff       	call   3470 <_Unwind_Resume@plt>
    5e13:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5e17:	c9                   	leave
    5e18:	c3                   	ret
    5e19:	90                   	nop

0000000000005e1a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    5e1a:	55                   	push   %rbp
    5e1b:	48 89 e5             	mov    %rsp,%rbp
    5e1e:	48 83 ec 10          	sub    $0x10,%rsp
    5e22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    5e2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e2e:	48 89 c7             	mov    %rax,%rdi
    5e31:	e8 24 00 00 00       	call   5e5a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    5e36:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    5e39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e3d:	48 8b 00             	mov    (%rax),%rax
    5e40:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5e44:	48 89 ce             	mov    %rcx,%rsi
    5e47:	48 89 c7             	mov    %rax,%rdi
    5e4a:	e8 7b 0f 00 00       	call   6dca <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    5e4f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5e53:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    5e57:	90                   	nop
    5e58:	c9                   	leave
    5e59:	c3                   	ret

0000000000005e5a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5e5a:	55                   	push   %rbp
    5e5b:	48 89 e5             	mov    %rsp,%rbp
    5e5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5e62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e66:	5d                   	pop    %rbp
    5e67:	c3                   	ret

0000000000005e68 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5e68:	55                   	push   %rbp
    5e69:	48 89 e5             	mov    %rsp,%rbp
    5e6c:	48 83 ec 20          	sub    $0x20,%rsp
    5e70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e74:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5e78:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    5e7c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5e80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e84:	48 89 d6             	mov    %rdx,%rsi
    5e87:	48 89 c7             	mov    %rax,%rdi
    5e8a:	e8 64 0f 00 00       	call   6df3 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    5e8f:	90                   	nop
    5e90:	c9                   	leave
    5e91:	c3                   	ret

0000000000005e92 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    5e92:	55                   	push   %rbp
    5e93:	48 89 e5             	mov    %rsp,%rbp
    5e96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e9a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    5e9e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5ea2:	5d                   	pop    %rbp
    5ea3:	c3                   	ret

0000000000005ea4 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    5ea4:	55                   	push   %rbp
    5ea5:	48 89 e5             	mov    %rsp,%rbp
    5ea8:	48 83 ec 10          	sub    $0x10,%rsp
    5eac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5eb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    5eb4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5eb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ebc:	48 89 d6             	mov    %rdx,%rsi
    5ebf:	48 89 c7             	mov    %rax,%rdi
    5ec2:	e8 53 0f 00 00       	call   6e1a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    5ec7:	90                   	nop
    5ec8:	c9                   	leave
    5ec9:	c3                   	ret

0000000000005eca <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    5eca:	55                   	push   %rbp
    5ecb:	48 89 e5             	mov    %rsp,%rbp
    5ece:	48 83 ec 20          	sub    $0x20,%rsp
    5ed2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ed6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5eda:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5ede:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5ee3:	74 17                	je     5efc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5ee5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ee9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5eed:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5ef1:	48 89 ce             	mov    %rcx,%rsi
    5ef4:	48 89 c7             	mov    %rax,%rdi
    5ef7:	e8 2d 0f 00 00       	call   6e29 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    5efc:	90                   	nop
    5efd:	c9                   	leave
    5efe:	c3                   	ret
    5eff:	90                   	nop

0000000000005f00 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5f00:	55                   	push   %rbp
    5f01:	48 89 e5             	mov    %rsp,%rbp
    5f04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f08:	90                   	nop
    5f09:	5d                   	pop    %rbp
    5f0a:	c3                   	ret
    5f0b:	90                   	nop

0000000000005f0c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5f0c:	55                   	push   %rbp
    5f0d:	48 89 e5             	mov    %rsp,%rbp
    5f10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f14:	90                   	nop
    5f15:	5d                   	pop    %rbp
    5f16:	c3                   	ret

0000000000005f17 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5f17:	55                   	push   %rbp
    5f18:	48 89 e5             	mov    %rsp,%rbp
    5f1b:	53                   	push   %rbx
    5f1c:	48 83 ec 28          	sub    $0x28,%rsp
    5f20:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5f24:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5f28:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5f2c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5f30:	48 89 d6             	mov    %rdx,%rsi
    5f33:	48 89 c7             	mov    %rax,%rdi
    5f36:	e8 25 01 00 00       	call   6060 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    5f3b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5f3f:	48 89 c7             	mov    %rax,%rdi
    5f42:	e8 10 0f 00 00       	call   6e57 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    5f47:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    5f4b:	0f 92 c3             	setb   %bl
    5f4e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5f52:	48 89 c7             	mov    %rax,%rdi
    5f55:	e8 1e f1 ff ff       	call   5078 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    5f5a:	84 db                	test   %bl,%bl
    5f5c:	74 0f                	je     5f6d <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    5f5e:	48 8d 05 eb a9 00 00 	lea    0xa9eb(%rip),%rax        # 10950 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x148>
    5f65:	48 89 c7             	mov    %rax,%rdi
    5f68:	e8 93 d1 ff ff       	call   3100 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    5f6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5f71:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5f75:	c9                   	leave
    5f76:	c3                   	ret
    5f77:	90                   	nop

0000000000005f78 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    5f78:	55                   	push   %rbp
    5f79:	48 89 e5             	mov    %rsp,%rbp
    5f7c:	53                   	push   %rbx
    5f7d:	48 83 ec 28          	sub    $0x28,%rsp
    5f81:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5f85:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5f89:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    5f8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f91:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5f95:	48 89 d6             	mov    %rdx,%rsi
    5f98:	48 89 c7             	mov    %rax,%rdi
    5f9b:	e8 fa 0e 00 00       	call   6e9a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    5fa0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5fa4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5fa8:	48 89 d6             	mov    %rdx,%rsi
    5fab:	48 89 c7             	mov    %rax,%rdi
    5fae:	e8 19 0f 00 00       	call   6ecc <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    5fb3:	eb 1a                	jmp    5fcf <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    5fb5:	48 89 c3             	mov    %rax,%rbx
    5fb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5fbc:	48 89 c7             	mov    %rax,%rdi
    5fbf:	e8 56 ea ff ff       	call   4a1a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    5fc4:	48 89 d8             	mov    %rbx,%rax
    5fc7:	48 89 c7             	mov    %rax,%rdi
    5fca:	e8 a1 d4 ff ff       	call   3470 <_Unwind_Resume@plt>
    5fcf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5fd3:	c9                   	leave
    5fd4:	c3                   	ret
    5fd5:	90                   	nop

0000000000005fd6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    5fd6:	55                   	push   %rbp
    5fd7:	48 89 e5             	mov    %rsp,%rbp
    5fda:	48 83 ec 10          	sub    $0x10,%rsp
    5fde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5fe2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    5fe6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fea:	48 89 c7             	mov    %rax,%rdi
    5fed:	e8 24 00 00 00       	call   6016 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    5ff2:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    5ff5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ff9:	48 8b 00             	mov    (%rax),%rax
    5ffc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6000:	48 89 ce             	mov    %rcx,%rsi
    6003:	48 89 c7             	mov    %rax,%rdi
    6006:	e8 21 0f 00 00       	call   6f2c <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    600b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    600f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    6013:	90                   	nop
    6014:	c9                   	leave
    6015:	c3                   	ret

0000000000006016 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    6016:	55                   	push   %rbp
    6017:	48 89 e5             	mov    %rsp,%rbp
    601a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    601e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6022:	5d                   	pop    %rbp
    6023:	c3                   	ret

0000000000006024 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    6024:	55                   	push   %rbp
    6025:	48 89 e5             	mov    %rsp,%rbp
    6028:	48 83 ec 20          	sub    $0x20,%rsp
    602c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6030:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6034:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    6038:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    603c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6040:	48 89 d6             	mov    %rdx,%rsi
    6043:	48 89 c7             	mov    %rax,%rdi
    6046:	e8 0a 0f 00 00       	call   6f55 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    604b:	90                   	nop
    604c:	c9                   	leave
    604d:	c3                   	ret

000000000000604e <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    604e:	55                   	push   %rbp
    604f:	48 89 e5             	mov    %rsp,%rbp
    6052:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6056:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    605a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    605e:	5d                   	pop    %rbp
    605f:	c3                   	ret

0000000000006060 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    6060:	55                   	push   %rbp
    6061:	48 89 e5             	mov    %rsp,%rbp
    6064:	48 83 ec 10          	sub    $0x10,%rsp
    6068:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    606c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    6070:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6074:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6078:	48 89 d6             	mov    %rdx,%rsi
    607b:	48 89 c7             	mov    %rax,%rdi
    607e:	e8 f9 0e 00 00       	call   6f7c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    6083:	90                   	nop
    6084:	c9                   	leave
    6085:	c3                   	ret

0000000000006086 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    6086:	55                   	push   %rbp
    6087:	48 89 e5             	mov    %rsp,%rbp
    608a:	48 83 ec 20          	sub    $0x20,%rsp
    608e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6092:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6096:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    609a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    609f:	74 17                	je     60b8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    60a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60a5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    60a9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    60ad:	48 89 ce             	mov    %rcx,%rsi
    60b0:	48 89 c7             	mov    %rax,%rdi
    60b3:	e8 d3 0e 00 00       	call   6f8b <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    60b8:	90                   	nop
    60b9:	c9                   	leave
    60ba:	c3                   	ret
    60bb:	90                   	nop

00000000000060bc <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    60bc:	55                   	push   %rbp
    60bd:	48 89 e5             	mov    %rsp,%rbp
    60c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60c4:	90                   	nop
    60c5:	5d                   	pop    %rbp
    60c6:	c3                   	ret
    60c7:	90                   	nop

00000000000060c8 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    60c8:	55                   	push   %rbp
    60c9:	48 89 e5             	mov    %rsp,%rbp
    60cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60d0:	90                   	nop
    60d1:	5d                   	pop    %rbp
    60d2:	c3                   	ret

00000000000060d3 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    60d3:	55                   	push   %rbp
    60d4:	48 89 e5             	mov    %rsp,%rbp
    60d7:	53                   	push   %rbx
    60d8:	48 83 ec 28          	sub    $0x28,%rsp
    60dc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    60e0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    60e4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    60e8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    60ec:	48 89 d6             	mov    %rdx,%rsi
    60ef:	48 89 c7             	mov    %rax,%rdi
    60f2:	e8 d7 01 00 00       	call   62ce <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    60f7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    60fb:	48 89 c7             	mov    %rax,%rdi
    60fe:	e8 b6 0e 00 00       	call   6fb9 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>
    6103:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    6107:	0f 92 c3             	setb   %bl
    610a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    610e:	48 89 c7             	mov    %rax,%rdi
    6111:	e8 fe f0 ff ff       	call   5214 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    6116:	84 db                	test   %bl,%bl
    6118:	74 0f                	je     6129 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_+0x56>
	  __throw_length_error(
    611a:	48 8d 05 2f a8 00 00 	lea    0xa82f(%rip),%rax        # 10950 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x148>
    6121:	48 89 c7             	mov    %rax,%rdi
    6124:	e8 d7 cf ff ff       	call   3100 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    6129:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    612d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6131:	c9                   	leave
    6132:	c3                   	ret
    6133:	90                   	nop

0000000000006134 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    6134:	55                   	push   %rbp
    6135:	48 89 e5             	mov    %rsp,%rbp
    6138:	53                   	push   %rbx
    6139:	48 83 ec 28          	sub    $0x28,%rsp
    613d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6141:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6145:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    6149:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    614d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6151:	48 89 d6             	mov    %rdx,%rsi
    6154:	48 89 c7             	mov    %rax,%rdi
    6157:	e8 a0 0e 00 00       	call   6ffc <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>
      { _M_create_storage(__n); }
    615c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6160:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6164:	48 89 d6             	mov    %rdx,%rsi
    6167:	48 89 c7             	mov    %rax,%rdi
    616a:	e8 bf 0e 00 00       	call   702e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>
    616f:	eb 1a                	jmp    618b <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x57>
    6171:	48 89 c3             	mov    %rax,%rbx
    6174:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6178:	48 89 c7             	mov    %rax,%rdi
    617b:	e8 b6 e8 ff ff       	call   4a36 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    6180:	48 89 d8             	mov    %rbx,%rax
    6183:	48 89 c7             	mov    %rax,%rdi
    6186:	e8 e5 d2 ff ff       	call   3470 <_Unwind_Resume@plt>
    618b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    618f:	c9                   	leave
    6190:	c3                   	ret
    6191:	90                   	nop

0000000000006192 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    6192:	55                   	push   %rbp
    6193:	48 89 e5             	mov    %rsp,%rbp
    6196:	48 83 ec 10          	sub    $0x10,%rsp
    619a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    619e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    61a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61a6:	48 89 c7             	mov    %rax,%rdi
    61a9:	e8 24 00 00 00       	call   61d2 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    61ae:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    61b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61b5:	48 8b 00             	mov    (%rax),%rax
    61b8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    61bc:	48 89 ce             	mov    %rcx,%rsi
    61bf:	48 89 c7             	mov    %rax,%rdi
    61c2:	e8 c8 0e 00 00       	call   708f <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    61c7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    61cb:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    61cf:	90                   	nop
    61d0:	c9                   	leave
    61d1:	c3                   	ret

00000000000061d2 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    61d2:	55                   	push   %rbp
    61d3:	48 89 e5             	mov    %rsp,%rbp
    61d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    61da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61de:	5d                   	pop    %rbp
    61df:	c3                   	ret

00000000000061e0 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    61e0:	55                   	push   %rbp
    61e1:	48 89 e5             	mov    %rsp,%rbp
    61e4:	48 83 ec 20          	sub    $0x20,%rsp
    61e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    61f0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    61f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    61f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61fc:	48 89 d6             	mov    %rdx,%rsi
    61ff:	48 89 c7             	mov    %rax,%rdi
    6202:	e8 b1 0e 00 00       	call   70b8 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>
    }
    6207:	90                   	nop
    6208:	c9                   	leave
    6209:	c3                   	ret

000000000000620a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    620a:	55                   	push   %rbp
    620b:	48 89 e5             	mov    %rsp,%rbp
    620e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6212:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    6216:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    621a:	48 8b 10             	mov    (%rax),%rdx
    621d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6221:	48 89 10             	mov    %rdx,(%rax)
    6224:	90                   	nop
    6225:	5d                   	pop    %rbp
    6226:	c3                   	ret
    6227:	90                   	nop

0000000000006228 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    6228:	55                   	push   %rbp
    6229:	48 89 e5             	mov    %rsp,%rbp
    622c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    6230:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6234:	5d                   	pop    %rbp
    6235:	c3                   	ret

0000000000006236 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    6236:	55                   	push   %rbp
    6237:	48 89 e5             	mov    %rsp,%rbp
    623a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    623e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6242:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    6246:	5d                   	pop    %rbp
    6247:	c3                   	ret

0000000000006248 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    6248:	55                   	push   %rbp
    6249:	48 89 e5             	mov    %rsp,%rbp
    624c:	48 83 ec 10          	sub    $0x10,%rsp
    6250:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    6254:	e8 26 e7 ff ff       	call   497f <_ZSt23__is_constant_evaluatedv>
    6259:	84 c0                	test   %al,%al
    625b:	74 1a                	je     6277 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    625d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6261:	48 89 c7             	mov    %rax,%rdi
    6264:	e8 cd ff ff ff       	call   6236 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    6269:	83 f0 01             	xor    $0x1,%eax
    626c:	84 c0                	test   %al,%al
    626e:	74 07                	je     6277 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    6270:	b8 01 00 00 00       	mov    $0x1,%eax
    6275:	eb 05                	jmp    627c <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x34>
    6277:	b8 00 00 00 00       	mov    $0x0,%eax
    627c:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    627e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6282:	48 89 c7             	mov    %rax,%rdi
    6285:	e8 54 0e 00 00       	call   70de <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>
      }
    628a:	c9                   	leave
    628b:	c3                   	ret

000000000000628c <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    628c:	55                   	push   %rbp
    628d:	48 89 e5             	mov    %rsp,%rbp
    6290:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6294:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6298:	5d                   	pop    %rbp
    6299:	c3                   	ret

000000000000629a <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    629a:	55                   	push   %rbp
    629b:	48 89 e5             	mov    %rsp,%rbp
    629e:	53                   	push   %rbx
    629f:	48 83 ec 18          	sub    $0x18,%rsp
    62a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    62a7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  static_cast<_Dp*>(this)->_M_payload._M_construct(
    62ab:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    62af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    62b3:	48 89 c7             	mov    %rax,%rdi
    62b6:	e8 d1 ff ff ff       	call   628c <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    62bb:	48 89 c6             	mov    %rax,%rsi
    62be:	48 89 df             	mov    %rbx,%rdi
    62c1:	e8 26 0e 00 00       	call   70ec <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>
	}
    62c6:	90                   	nop
    62c7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    62cb:	c9                   	leave
    62cc:	c3                   	ret
    62cd:	90                   	nop

00000000000062ce <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    62ce:	55                   	push   %rbp
    62cf:	48 89 e5             	mov    %rsp,%rbp
    62d2:	48 83 ec 10          	sub    $0x10,%rsp
    62d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    62de:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    62e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62e6:	48 89 d6             	mov    %rdx,%rsi
    62e9:	48 89 c7             	mov    %rax,%rdi
    62ec:	e8 41 0e 00 00       	call   7132 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>
    62f1:	90                   	nop
    62f2:	c9                   	leave
    62f3:	c3                   	ret

00000000000062f4 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>:
      _M_deallocate(pointer __p, size_t __n)
    62f4:	55                   	push   %rbp
    62f5:	48 89 e5             	mov    %rsp,%rbp
    62f8:	48 83 ec 20          	sub    $0x20,%rsp
    62fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6300:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6304:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    6308:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    630d:	74 17                	je     6326 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    630f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6313:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6317:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    631b:	48 89 ce             	mov    %rcx,%rsi
    631e:	48 89 c7             	mov    %rax,%rdi
    6321:	e8 1b 0e 00 00       	call   7141 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>
      }
    6326:	90                   	nop
    6327:	c9                   	leave
    6328:	c3                   	ret
    6329:	90                   	nop

000000000000632a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    632a:	55                   	push   %rbp
    632b:	48 89 e5             	mov    %rsp,%rbp
    632e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6332:	90                   	nop
    6333:	5d                   	pop    %rbp
    6334:	c3                   	ret
    6335:	90                   	nop

0000000000006336 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    6336:	55                   	push   %rbp
    6337:	48 89 e5             	mov    %rsp,%rbp
    633a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    633e:	90                   	nop
    633f:	5d                   	pop    %rbp
    6340:	c3                   	ret

0000000000006341 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    6341:	55                   	push   %rbp
    6342:	48 89 e5             	mov    %rsp,%rbp
    6345:	53                   	push   %rbx
    6346:	48 83 ec 28          	sub    $0x28,%rsp
    634a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    634e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    6352:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    6356:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    635a:	48 89 d6             	mov    %rdx,%rsi
    635d:	48 89 c7             	mov    %rax,%rdi
    6360:	e8 25 01 00 00       	call   648a <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    6365:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6369:	48 89 c7             	mov    %rax,%rdi
    636c:	e8 fe 0d 00 00       	call   716f <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>
    6371:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    6375:	0f 92 c3             	setb   %bl
    6378:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    637c:	48 89 c7             	mov    %rax,%rdi
    637f:	e8 40 f1 ff ff       	call   54c4 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    6384:	84 db                	test   %bl,%bl
    6386:	74 0f                	je     6397 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    6388:	48 8d 05 c1 a5 00 00 	lea    0xa5c1(%rip),%rax        # 10950 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x148>
    638f:	48 89 c7             	mov    %rax,%rdi
    6392:	e8 69 cd ff ff       	call   3100 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    6397:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    639b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    639f:	c9                   	leave
    63a0:	c3                   	ret
    63a1:	90                   	nop

00000000000063a2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    63a2:	55                   	push   %rbp
    63a3:	48 89 e5             	mov    %rsp,%rbp
    63a6:	53                   	push   %rbx
    63a7:	48 83 ec 28          	sub    $0x28,%rsp
    63ab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    63af:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    63b3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    63b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    63bb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    63bf:	48 89 d6             	mov    %rdx,%rsi
    63c2:	48 89 c7             	mov    %rax,%rdi
    63c5:	e8 e8 0d 00 00       	call   71b2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    63ca:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    63ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    63d2:	48 89 d6             	mov    %rdx,%rsi
    63d5:	48 89 c7             	mov    %rax,%rdi
    63d8:	e8 07 0e 00 00       	call   71e4 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>
    63dd:	eb 1a                	jmp    63f9 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x57>
    63df:	48 89 c3             	mov    %rax,%rbx
    63e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    63e6:	48 89 c7             	mov    %rax,%rdi
    63e9:	e8 64 e6 ff ff       	call   4a52 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    63ee:	48 89 d8             	mov    %rbx,%rax
    63f1:	48 89 c7             	mov    %rax,%rdi
    63f4:	e8 77 d0 ff ff       	call   3470 <_Unwind_Resume@plt>
    63f9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    63fd:	c9                   	leave
    63fe:	c3                   	ret
    63ff:	90                   	nop

0000000000006400 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    6400:	55                   	push   %rbp
    6401:	48 89 e5             	mov    %rsp,%rbp
    6404:	48 83 ec 10          	sub    $0x10,%rsp
    6408:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    640c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    6410:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6414:	48 89 c7             	mov    %rax,%rdi
    6417:	e8 24 00 00 00       	call   6440 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    641c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    641f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6423:	48 8b 00             	mov    (%rax),%rax
    6426:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    642a:	48 89 ce             	mov    %rcx,%rsi
    642d:	48 89 c7             	mov    %rax,%rdi
    6430:	e8 05 0e 00 00       	call   723a <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    6435:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6439:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    643d:	90                   	nop
    643e:	c9                   	leave
    643f:	c3                   	ret

0000000000006440 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    6440:	55                   	push   %rbp
    6441:	48 89 e5             	mov    %rsp,%rbp
    6444:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    6448:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    644c:	5d                   	pop    %rbp
    644d:	c3                   	ret

000000000000644e <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    644e:	55                   	push   %rbp
    644f:	48 89 e5             	mov    %rsp,%rbp
    6452:	48 83 ec 20          	sub    $0x20,%rsp
    6456:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    645a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    645e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    6462:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6466:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    646a:	48 89 d6             	mov    %rdx,%rsi
    646d:	48 89 c7             	mov    %rax,%rdi
    6470:	e8 ee 0d 00 00       	call   7263 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>
    }
    6475:	90                   	nop
    6476:	c9                   	leave
    6477:	c3                   	ret

0000000000006478 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    6478:	55                   	push   %rbp
    6479:	48 89 e5             	mov    %rsp,%rbp
    647c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6480:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    6484:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6488:	5d                   	pop    %rbp
    6489:	c3                   	ret

000000000000648a <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    648a:	55                   	push   %rbp
    648b:	48 89 e5             	mov    %rsp,%rbp
    648e:	48 83 ec 10          	sub    $0x10,%rsp
    6492:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6496:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    649a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    649e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64a2:	48 89 d6             	mov    %rdx,%rsi
    64a5:	48 89 c7             	mov    %rax,%rdi
    64a8:	e8 dd 0d 00 00       	call   728a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>
    64ad:	90                   	nop
    64ae:	c9                   	leave
    64af:	c3                   	ret

00000000000064b0 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    64b0:	55                   	push   %rbp
    64b1:	48 89 e5             	mov    %rsp,%rbp
    64b4:	48 83 ec 20          	sub    $0x20,%rsp
    64b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    64c0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    64c4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    64c9:	74 17                	je     64e2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    64cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64cf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    64d3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    64d7:	48 89 ce             	mov    %rcx,%rsi
    64da:	48 89 c7             	mov    %rax,%rdi
    64dd:	e8 b7 0d 00 00       	call   7299 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>
      }
    64e2:	90                   	nop
    64e3:	c9                   	leave
    64e4:	c3                   	ret
    64e5:	90                   	nop

00000000000064e6 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    64e6:	55                   	push   %rbp
    64e7:	48 89 e5             	mov    %rsp,%rbp
    64ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64ee:	90                   	nop
    64ef:	5d                   	pop    %rbp
    64f0:	c3                   	ret
    64f1:	90                   	nop

00000000000064f2 <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    64f2:	55                   	push   %rbp
    64f3:	48 89 e5             	mov    %rsp,%rbp
    64f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64fa:	90                   	nop
    64fb:	5d                   	pop    %rbp
    64fc:	c3                   	ret

00000000000064fd <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    64fd:	55                   	push   %rbp
    64fe:	48 89 e5             	mov    %rsp,%rbp
    6501:	53                   	push   %rbx
    6502:	48 83 ec 28          	sub    $0x28,%rsp
    6506:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    650a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    650e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    6512:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6516:	48 89 d6             	mov    %rdx,%rsi
    6519:	48 89 c7             	mov    %rax,%rdi
    651c:	e8 25 01 00 00       	call   6646 <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    6521:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6525:	48 89 c7             	mov    %rax,%rdi
    6528:	e8 9a 0d 00 00       	call   72c7 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>
    652d:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    6531:	0f 92 c3             	setb   %bl
    6534:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6538:	48 89 c7             	mov    %rax,%rdi
    653b:	e8 e8 f0 ff ff       	call   5628 <_ZNSaI16VkPresentModeKHRED1Ev>
    6540:	84 db                	test   %bl,%bl
    6542:	74 0f                	je     6553 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    6544:	48 8d 05 05 a4 00 00 	lea    0xa405(%rip),%rax        # 10950 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x148>
    654b:	48 89 c7             	mov    %rax,%rdi
    654e:	e8 ad cb ff ff       	call   3100 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    6553:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    6557:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    655b:	c9                   	leave
    655c:	c3                   	ret
    655d:	90                   	nop

000000000000655e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    655e:	55                   	push   %rbp
    655f:	48 89 e5             	mov    %rsp,%rbp
    6562:	53                   	push   %rbx
    6563:	48 83 ec 28          	sub    $0x28,%rsp
    6567:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    656b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    656f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    6573:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6577:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    657b:	48 89 d6             	mov    %rdx,%rsi
    657e:	48 89 c7             	mov    %rax,%rdi
    6581:	e8 84 0d 00 00       	call   730a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    6586:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    658a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    658e:	48 89 d6             	mov    %rdx,%rsi
    6591:	48 89 c7             	mov    %rax,%rdi
    6594:	e8 a3 0d 00 00       	call   733c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>
    6599:	eb 1a                	jmp    65b5 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x57>
    659b:	48 89 c3             	mov    %rax,%rbx
    659e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65a2:	48 89 c7             	mov    %rax,%rdi
    65a5:	e8 c4 e4 ff ff       	call   4a6e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    65aa:	48 89 d8             	mov    %rbx,%rax
    65ad:	48 89 c7             	mov    %rax,%rdi
    65b0:	e8 bb ce ff ff       	call   3470 <_Unwind_Resume@plt>
    65b5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    65b9:	c9                   	leave
    65ba:	c3                   	ret
    65bb:	90                   	nop

00000000000065bc <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    65bc:	55                   	push   %rbp
    65bd:	48 89 e5             	mov    %rsp,%rbp
    65c0:	48 83 ec 10          	sub    $0x10,%rsp
    65c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    65c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    65cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65d0:	48 89 c7             	mov    %rax,%rdi
    65d3:	e8 24 00 00 00       	call   65fc <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    65d8:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    65db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65df:	48 8b 00             	mov    (%rax),%rax
    65e2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    65e6:	48 89 ce             	mov    %rcx,%rsi
    65e9:	48 89 c7             	mov    %rax,%rdi
    65ec:	e8 a1 0d 00 00       	call   7392 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    65f1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    65f5:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    65f9:	90                   	nop
    65fa:	c9                   	leave
    65fb:	c3                   	ret

00000000000065fc <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    65fc:	55                   	push   %rbp
    65fd:	48 89 e5             	mov    %rsp,%rbp
    6600:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    6604:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6608:	5d                   	pop    %rbp
    6609:	c3                   	ret

000000000000660a <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    660a:	55                   	push   %rbp
    660b:	48 89 e5             	mov    %rsp,%rbp
    660e:	48 83 ec 20          	sub    $0x20,%rsp
    6612:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6616:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    661a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    661e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6622:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6626:	48 89 d6             	mov    %rdx,%rsi
    6629:	48 89 c7             	mov    %rax,%rdi
    662c:	e8 8a 0d 00 00       	call   73bb <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>
    }
    6631:	90                   	nop
    6632:	c9                   	leave
    6633:	c3                   	ret

0000000000006634 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    6634:	55                   	push   %rbp
    6635:	48 89 e5             	mov    %rsp,%rbp
    6638:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    663c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    6640:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6644:	5d                   	pop    %rbp
    6645:	c3                   	ret

0000000000006646 <_ZNSaI16VkPresentModeKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    6646:	55                   	push   %rbp
    6647:	48 89 e5             	mov    %rsp,%rbp
    664a:	48 83 ec 10          	sub    $0x10,%rsp
    664e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6652:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    6656:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    665a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    665e:	48 89 d6             	mov    %rdx,%rsi
    6661:	48 89 c7             	mov    %rax,%rdi
    6664:	e8 79 0d 00 00       	call   73e2 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>
    6669:	90                   	nop
    666a:	c9                   	leave
    666b:	c3                   	ret

000000000000666c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    666c:	55                   	push   %rbp
    666d:	48 89 e5             	mov    %rsp,%rbp
    6670:	48 83 ec 20          	sub    $0x20,%rsp
    6674:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6678:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    667c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    6680:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6685:	74 17                	je     669e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    6687:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    668b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    668f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6693:	48 89 ce             	mov    %rcx,%rsi
    6696:	48 89 c7             	mov    %rax,%rdi
    6699:	e8 53 0d 00 00       	call   73f1 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>
      }
    669e:	90                   	nop
    669f:	c9                   	leave
    66a0:	c3                   	ret

00000000000066a1 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    66a1:	55                   	push   %rbp
    66a2:	48 89 e5             	mov    %rsp,%rbp
    66a5:	48 83 ec 20          	sub    $0x20,%rsp
    66a9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    66ad:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    66b4:	07 7e 00 
    66b7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    66bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    66bf:	48 89 c7             	mov    %rax,%rdi
    66c2:	e8 58 0d 00 00       	call   741f <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    66c7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    66cb:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    66cf:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    66d3:	48 89 d6             	mov    %rdx,%rsi
    66d6:	48 89 c7             	mov    %rax,%rdi
    66d9:	e8 5b 0d 00 00       	call   7439 <_ZSt3minImERKT_S2_S2_>
    66de:	48 8b 00             	mov    (%rax),%rax
      }
    66e1:	c9                   	leave
    66e2:	c3                   	ret
    66e3:	90                   	nop

00000000000066e4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    66e4:	55                   	push   %rbp
    66e5:	48 89 e5             	mov    %rsp,%rbp
    66e8:	48 83 ec 10          	sub    $0x10,%rsp
    66ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    66f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    66f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66fc:	48 89 d6             	mov    %rdx,%rsi
    66ff:	48 89 c7             	mov    %rax,%rdi
    6702:	e8 c9 f1 ff ff       	call   58d0 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    6707:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    670b:	48 89 c7             	mov    %rax,%rdi
    670e:	e8 51 0d 00 00       	call   7464 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    6713:	90                   	nop
    6714:	c9                   	leave
    6715:	c3                   	ret

0000000000006716 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    6716:	55                   	push   %rbp
    6717:	48 89 e5             	mov    %rsp,%rbp
    671a:	48 83 ec 10          	sub    $0x10,%rsp
    671e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6722:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6726:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    672a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    672e:	48 89 d6             	mov    %rdx,%rsi
    6731:	48 89 c7             	mov    %rax,%rdi
    6734:	e8 59 0d 00 00       	call   7492 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    6739:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    673d:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    6740:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6744:	48 8b 10             	mov    (%rax),%rdx
    6747:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    674b:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    674f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6753:	48 8b 08             	mov    (%rax),%rcx
    6756:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    675a:	48 89 d0             	mov    %rdx,%rax
    675d:	48 c1 e0 06          	shl    $0x6,%rax
    6761:	48 01 d0             	add    %rdx,%rax
    6764:	48 c1 e0 02          	shl    $0x2,%rax
    6768:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    676c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6770:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    6774:	90                   	nop
    6775:	c9                   	leave
    6776:	c3                   	ret

0000000000006777 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    6777:	55                   	push   %rbp
    6778:	48 89 e5             	mov    %rsp,%rbp
    677b:	48 83 ec 20          	sub    $0x20,%rsp
    677f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6783:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6787:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    678b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    678f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6793:	48 89 d6             	mov    %rdx,%rsi
    6796:	48 89 c7             	mov    %rax,%rdi
    6799:	e8 27 0d 00 00       	call   74c5 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    679e:	c9                   	leave
    679f:	c3                   	ret

00000000000067a0 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    67a0:	55                   	push   %rbp
    67a1:	48 89 e5             	mov    %rsp,%rbp
    67a4:	48 83 ec 10          	sub    $0x10,%rsp
    67a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    67b0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    67b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67b8:	48 89 d6             	mov    %rdx,%rsi
    67bb:	48 89 c7             	mov    %rax,%rdi
    67be:	e8 2b 0d 00 00       	call   74ee <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    67c3:	90                   	nop
    67c4:	c9                   	leave
    67c5:	c3                   	ret

00000000000067c6 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    67c6:	55                   	push   %rbp
    67c7:	48 89 e5             	mov    %rsp,%rbp
    67ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    67d2:	90                   	nop
    67d3:	5d                   	pop    %rbp
    67d4:	c3                   	ret

00000000000067d5 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    67d5:	55                   	push   %rbp
    67d6:	48 89 e5             	mov    %rsp,%rbp
    67d9:	48 83 ec 20          	sub    $0x20,%rsp
    67dd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67e1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    67e5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    67e9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    67ed:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    67f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67f5:	48 89 ce             	mov    %rcx,%rsi
    67f8:	48 89 c7             	mov    %rax,%rdi
    67fb:	e8 fe 0c 00 00       	call   74fe <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    6800:	90                   	nop
    6801:	c9                   	leave
    6802:	c3                   	ret

0000000000006803 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    6803:	55                   	push   %rbp
    6804:	48 89 e5             	mov    %rsp,%rbp
    6807:	48 83 ec 20          	sub    $0x20,%rsp
    680b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    680f:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    6816:	ff ff 0f 
    6819:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    681d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6821:	48 89 c7             	mov    %rax,%rdi
    6824:	e8 0f 0d 00 00       	call   7538 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    6829:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    682d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6831:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6835:	48 89 d6             	mov    %rdx,%rsi
    6838:	48 89 c7             	mov    %rax,%rdi
    683b:	e8 f9 0b 00 00       	call   7439 <_ZSt3minImERKT_S2_S2_>
    6840:	48 8b 00             	mov    (%rax),%rax
      }
    6843:	c9                   	leave
    6844:	c3                   	ret
    6845:	90                   	nop

0000000000006846 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6846:	55                   	push   %rbp
    6847:	48 89 e5             	mov    %rsp,%rbp
    684a:	48 83 ec 10          	sub    $0x10,%rsp
    684e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6852:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6856:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    685a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    685e:	48 89 d6             	mov    %rdx,%rsi
    6861:	48 89 c7             	mov    %rax,%rdi
    6864:	e8 c3 f2 ff ff       	call   5b2c <_ZNSaIPKcEC1ERKS1_>
    6869:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    686d:	48 89 c7             	mov    %rax,%rdi
    6870:	e8 dd 0c 00 00       	call   7552 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    6875:	90                   	nop
    6876:	c9                   	leave
    6877:	c3                   	ret

0000000000006878 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    6878:	55                   	push   %rbp
    6879:	48 89 e5             	mov    %rsp,%rbp
    687c:	48 83 ec 10          	sub    $0x10,%rsp
    6880:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6884:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6888:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    688c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6890:	48 89 d6             	mov    %rdx,%rsi
    6893:	48 89 c7             	mov    %rax,%rdi
    6896:	e8 e5 0c 00 00       	call   7580 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    689b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    689f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    68a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68a6:	48 8b 10             	mov    (%rax),%rdx
    68a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68ad:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    68b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68b5:	48 8b 00             	mov    (%rax),%rax
    68b8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    68bc:	48 c1 e2 03          	shl    $0x3,%rdx
    68c0:	48 01 c2             	add    %rax,%rdx
    68c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68c7:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    68cb:	90                   	nop
    68cc:	c9                   	leave
    68cd:	c3                   	ret

00000000000068ce <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    68ce:	55                   	push   %rbp
    68cf:	48 89 e5             	mov    %rsp,%rbp
    68d2:	48 83 ec 20          	sub    $0x20,%rsp
    68d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    68de:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    68e2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    68e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68ea:	48 89 d6             	mov    %rdx,%rsi
    68ed:	48 89 c7             	mov    %rax,%rdi
    68f0:	e8 be 0c 00 00       	call   75b3 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    68f5:	c9                   	leave
    68f6:	c3                   	ret

00000000000068f7 <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    68f7:	55                   	push   %rbp
    68f8:	48 89 e5             	mov    %rsp,%rbp
    68fb:	48 83 ec 10          	sub    $0x10,%rsp
    68ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6903:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    6907:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    690b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    690f:	48 89 d6             	mov    %rdx,%rsi
    6912:	48 89 c7             	mov    %rax,%rdi
    6915:	e8 c2 0c 00 00       	call   75dc <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
    691a:	90                   	nop
    691b:	c9                   	leave
    691c:	c3                   	ret

000000000000691d <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    691d:	55                   	push   %rbp
    691e:	48 89 e5             	mov    %rsp,%rbp
    6921:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6925:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6929:	5d                   	pop    %rbp
    692a:	c3                   	ret

000000000000692b <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    692b:	55                   	push   %rbp
    692c:	48 89 e5             	mov    %rsp,%rbp
    692f:	48 83 ec 20          	sub    $0x20,%rsp
    6933:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6937:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    693b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    693f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6943:	48 89 c7             	mov    %rax,%rdi
    6946:	e8 d2 ff ff ff       	call   691d <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    694b:	48 89 c2             	mov    %rax,%rdx
    694e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6952:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6956:	48 89 ce             	mov    %rcx,%rsi
    6959:	48 89 c7             	mov    %rax,%rdi
    695c:	e8 8b 0c 00 00       	call   75ec <_ZNSt15__new_allocatorIPKcE9constructIS1_JS1_EEEvPT_DpOT0_>
	}
    6961:	90                   	nop
    6962:	c9                   	leave
    6963:	c3                   	ret

0000000000006964 <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    6964:	55                   	push   %rbp
    6965:	48 89 e5             	mov    %rsp,%rbp
    6968:	48 83 ec 20          	sub    $0x20,%rsp
    696c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    6970:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6974:	48 8d 50 08          	lea    0x8(%rax),%rdx
    6978:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    697c:	48 89 d6             	mov    %rdx,%rsi
    697f:	48 89 c7             	mov    %rax,%rdi
    6982:	e8 a7 0c 00 00       	call   762e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    6987:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    698b:	c9                   	leave
    698c:	c3                   	ret
    698d:	90                   	nop

000000000000698e <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
    698e:	55                   	push   %rbp
    698f:	48 89 e5             	mov    %rsp,%rbp
    6992:	53                   	push   %rbx
    6993:	48 83 ec 68          	sub    $0x68,%rsp
    6997:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    699b:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    699f:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
    69a3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    69a7:	48 8d 15 d3 9f 00 00 	lea    0x9fd3(%rip),%rdx        # 10981 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x179>
    69ae:	be 01 00 00 00       	mov    $0x1,%esi
    69b3:	48 89 c7             	mov    %rax,%rdi
    69b6:	e8 91 0c 00 00       	call   764c <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
    69bb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
    69bf:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    69c3:	48 8b 00             	mov    (%rax),%rax
    69c6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
    69ca:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    69ce:	48 8b 40 08          	mov    0x8(%rax),%rax
    69d2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
    69d6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    69da:	48 89 c7             	mov    %rax,%rdi
    69dd:	e8 32 0d 00 00       	call   7714 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    69e2:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    69e6:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    69ea:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    69ee:	48 89 d6             	mov    %rdx,%rsi
    69f1:	48 89 c7             	mov    %rax,%rdi
    69f4:	e8 40 0d 00 00       	call   7739 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
    69f9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
    69fd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6a01:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6a05:	48 89 d6             	mov    %rdx,%rsi
    6a08:	48 89 c7             	mov    %rax,%rdi
    6a0b:	e8 70 0b 00 00       	call   7580 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    6a10:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
    6a14:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6a18:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
    6a1c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6a20:	48 89 c7             	mov    %rax,%rdi
    6a23:	e8 f5 fe ff ff       	call   691d <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    6a28:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
    6a2b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6a2f:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    6a36:	00 
	  _Alloc_traits::construct(this->_M_impl,
    6a37:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6a3b:	48 01 c1             	add    %rax,%rcx
    6a3e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6a42:	48 89 ce             	mov    %rcx,%rsi
    6a45:	48 89 c7             	mov    %rax,%rdi
    6a48:	e8 de fe ff ff       	call   692b <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
    6a4d:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    6a54:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
    6a55:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6a59:	48 89 c7             	mov    %rax,%rdi
    6a5c:	e8 e1 ef ff ff       	call   5a42 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    6a61:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
    6a64:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    6a68:	48 89 c7             	mov    %rax,%rdi
    6a6b:	e8 3e 0d 00 00       	call   77ae <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    6a70:	48 8b 30             	mov    (%rax),%rsi
    6a73:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6a77:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6a7b:	48 89 d9             	mov    %rbx,%rcx
    6a7e:	48 89 c7             	mov    %rax,%rdi
    6a81:	e8 f5 0c 00 00       	call   777b <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    6a86:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
    6a8a:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
    6a8f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6a93:	48 89 c7             	mov    %rax,%rdi
    6a96:	e8 a7 ef ff ff       	call   5a42 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    6a9b:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
    6a9e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    6aa2:	48 89 c7             	mov    %rax,%rdi
    6aa5:	e8 04 0d 00 00       	call   77ae <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    6aaa:	48 8b 00             	mov    (%rax),%rax
    6aad:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    6ab1:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    6ab5:	48 89 d9             	mov    %rbx,%rcx
    6ab8:	48 89 c7             	mov    %rax,%rdi
    6abb:	e8 bb 0c 00 00       	call   777b <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    6ac0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
    6ac4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
    6ac8:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    6acc:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    6ad0:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
    6ad4:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
    6ad8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    6adc:	48 89 ce             	mov    %rcx,%rsi
    6adf:	48 89 c7             	mov    %rax,%rdi
    6ae2:	e8 6b f0 ff ff       	call   5b52 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
    6ae7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6aeb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6aef:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
    6af2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6af6:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    6afa:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
    6afe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6b02:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6b09:	00 
    6b0a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6b0e:	48 01 c2             	add    %rax,%rdx
    6b11:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6b15:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    6b19:	90                   	nop
    6b1a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6b1e:	c9                   	leave
    6b1f:	c3                   	ret

0000000000006b20 <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
    6b20:	55                   	push   %rbp
    6b21:	48 89 e5             	mov    %rsp,%rbp
    6b24:	48 83 ec 20          	sub    $0x20,%rsp
    6b28:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
    6b2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6b30:	48 89 c7             	mov    %rax,%rdi
    6b33:	e8 2c fe ff ff       	call   6964 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    6b38:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6b3c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6b40:	be 01 00 00 00       	mov    $0x1,%esi
    6b45:	48 89 c7             	mov    %rax,%rdi
    6b48:	e8 6f 0c 00 00       	call   77bc <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
    6b4d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    6b51:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    6b55:	48 89 c7             	mov    %rax,%rdi
    6b58:	e8 a1 0c 00 00       	call   77fe <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
    6b5d:	c9                   	leave
    6b5e:	c3                   	ret
    6b5f:	90                   	nop

0000000000006b60 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
    6b60:	55                   	push   %rbp
    6b61:	48 89 e5             	mov    %rsp,%rbp
    6b64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6b6c:	90                   	nop
    6b6d:	5d                   	pop    %rbp
    6b6e:	c3                   	ret

0000000000006b6f <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6b6f:	55                   	push   %rbp
    6b70:	48 89 e5             	mov    %rsp,%rbp
    6b73:	48 83 ec 20          	sub    $0x20,%rsp
    6b77:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b7b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6b7f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6b83:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6b87:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6b8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b8f:	48 89 ce             	mov    %rcx,%rsi
    6b92:	48 89 c7             	mov    %rax,%rdi
    6b95:	e8 76 0c 00 00       	call   7810 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    6b9a:	90                   	nop
    6b9b:	c9                   	leave
    6b9c:	c3                   	ret

0000000000006b9d <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    6b9d:	55                   	push   %rbp
    6b9e:	48 89 e5             	mov    %rsp,%rbp
    6ba1:	48 83 ec 20          	sub    $0x20,%rsp
    6ba5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    6ba9:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    6bb0:	03 3f 00 
    6bb3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    6bb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6bbb:	48 89 c7             	mov    %rax,%rdi
    6bbe:	e8 7e 0c 00 00       	call   7841 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
    6bc3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    6bc7:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6bcb:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6bcf:	48 89 d6             	mov    %rdx,%rsi
    6bd2:	48 89 c7             	mov    %rax,%rdi
    6bd5:	e8 5f 08 00 00       	call   7439 <_ZSt3minImERKT_S2_S2_>
    6bda:	48 8b 00             	mov    (%rax),%rax
      }
    6bdd:	c9                   	leave
    6bde:	c3                   	ret
    6bdf:	90                   	nop

0000000000006be0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6be0:	55                   	push   %rbp
    6be1:	48 89 e5             	mov    %rsp,%rbp
    6be4:	48 83 ec 10          	sub    $0x10,%rsp
    6be8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6bec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6bf0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6bf4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bf8:	48 89 d6             	mov    %rdx,%rsi
    6bfb:	48 89 c7             	mov    %rax,%rdi
    6bfe:	e8 e5 f0 ff ff       	call   5ce8 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    6c03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c07:	48 89 c7             	mov    %rax,%rdi
    6c0a:	e8 4d 0c 00 00       	call   785c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    6c0f:	90                   	nop
    6c10:	c9                   	leave
    6c11:	c3                   	ret

0000000000006c12 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    6c12:	55                   	push   %rbp
    6c13:	48 89 e5             	mov    %rsp,%rbp
    6c16:	48 83 ec 10          	sub    $0x10,%rsp
    6c1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c1e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6c22:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6c26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c2a:	48 89 d6             	mov    %rdx,%rsi
    6c2d:	48 89 c7             	mov    %rax,%rdi
    6c30:	e8 55 0c 00 00       	call   788a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
    6c35:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6c39:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    6c3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c40:	48 8b 10             	mov    (%rax),%rdx
    6c43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c47:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    6c4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c4f:	48 8b 08             	mov    (%rax),%rcx
    6c52:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6c56:	48 89 d0             	mov    %rdx,%rax
    6c59:	48 c1 e0 06          	shl    $0x6,%rax
    6c5d:	48 01 d0             	add    %rdx,%rax
    6c60:	48 c1 e0 03          	shl    $0x3,%rax
    6c64:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    6c68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c6c:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    6c70:	90                   	nop
    6c71:	c9                   	leave
    6c72:	c3                   	ret

0000000000006c73 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    6c73:	55                   	push   %rbp
    6c74:	48 89 e5             	mov    %rsp,%rbp
    6c77:	48 83 ec 20          	sub    $0x20,%rsp
    6c7b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c7f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6c83:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    6c87:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6c8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c8f:	48 89 d6             	mov    %rdx,%rsi
    6c92:	48 89 c7             	mov    %rax,%rdi
    6c95:	e8 23 0c 00 00       	call   78bd <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
    6c9a:	c9                   	leave
    6c9b:	c3                   	ret

0000000000006c9c <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    6c9c:	55                   	push   %rbp
    6c9d:	48 89 e5             	mov    %rsp,%rbp
    6ca0:	48 83 ec 10          	sub    $0x10,%rsp
    6ca4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ca8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    6cac:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6cb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6cb4:	48 89 d6             	mov    %rdx,%rsi
    6cb7:	48 89 c7             	mov    %rax,%rdi
    6cba:	e8 27 0c 00 00       	call   78e6 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
    6cbf:	90                   	nop
    6cc0:	c9                   	leave
    6cc1:	c3                   	ret

0000000000006cc2 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
    6cc2:	55                   	push   %rbp
    6cc3:	48 89 e5             	mov    %rsp,%rbp
    6cc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6cca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6cce:	90                   	nop
    6ccf:	5d                   	pop    %rbp
    6cd0:	c3                   	ret

0000000000006cd1 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6cd1:	55                   	push   %rbp
    6cd2:	48 89 e5             	mov    %rsp,%rbp
    6cd5:	48 83 ec 20          	sub    $0x20,%rsp
    6cd9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6cdd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6ce1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6ce5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6ce9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6ced:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6cf1:	48 89 ce             	mov    %rcx,%rsi
    6cf4:	48 89 c7             	mov    %rax,%rdi
    6cf7:	e8 fa 0b 00 00       	call   78f6 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
    6cfc:	90                   	nop
    6cfd:	c9                   	leave
    6cfe:	c3                   	ret

0000000000006cff <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    6cff:	55                   	push   %rbp
    6d00:	48 89 e5             	mov    %rsp,%rbp
    6d03:	48 83 ec 20          	sub    $0x20,%rsp
    6d07:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    6d0b:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    6d12:	ff ff 0f 
    6d15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    6d19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6d1d:	48 89 c7             	mov    %rax,%rdi
    6d20:	e8 0b 0c 00 00       	call   7930 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    6d25:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    6d29:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6d2d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6d31:	48 89 d6             	mov    %rdx,%rsi
    6d34:	48 89 c7             	mov    %rax,%rdi
    6d37:	e8 fd 06 00 00       	call   7439 <_ZSt3minImERKT_S2_S2_>
    6d3c:	48 8b 00             	mov    (%rax),%rax
      }
    6d3f:	c9                   	leave
    6d40:	c3                   	ret
    6d41:	90                   	nop

0000000000006d42 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6d42:	55                   	push   %rbp
    6d43:	48 89 e5             	mov    %rsp,%rbp
    6d46:	48 83 ec 10          	sub    $0x10,%rsp
    6d4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6d4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6d52:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6d56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d5a:	48 89 d6             	mov    %rdx,%rsi
    6d5d:	48 89 c7             	mov    %rax,%rdi
    6d60:	e8 3f f1 ff ff       	call   5ea4 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    6d65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d69:	48 89 c7             	mov    %rax,%rdi
    6d6c:	e8 d9 0b 00 00       	call   794a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    6d71:	90                   	nop
    6d72:	c9                   	leave
    6d73:	c3                   	ret

0000000000006d74 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    6d74:	55                   	push   %rbp
    6d75:	48 89 e5             	mov    %rsp,%rbp
    6d78:	48 83 ec 10          	sub    $0x10,%rsp
    6d7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6d80:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6d84:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6d88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d8c:	48 89 d6             	mov    %rdx,%rsi
    6d8f:	48 89 c7             	mov    %rax,%rdi
    6d92:	e8 e1 0b 00 00       	call   7978 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    6d97:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6d9b:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    6d9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6da2:	48 8b 10             	mov    (%rax),%rdx
    6da5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6da9:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    6dad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6db1:	48 8b 00             	mov    (%rax),%rax
    6db4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6db8:	48 c1 e2 03          	shl    $0x3,%rdx
    6dbc:	48 01 c2             	add    %rax,%rdx
    6dbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dc3:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    6dc7:	90                   	nop
    6dc8:	c9                   	leave
    6dc9:	c3                   	ret

0000000000006dca <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    6dca:	55                   	push   %rbp
    6dcb:	48 89 e5             	mov    %rsp,%rbp
    6dce:	48 83 ec 20          	sub    $0x20,%rsp
    6dd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6dd6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6dda:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    6dde:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6de2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6de6:	48 89 d6             	mov    %rdx,%rsi
    6de9:	48 89 c7             	mov    %rax,%rdi
    6dec:	e8 ba 0b 00 00       	call   79ab <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    6df1:	c9                   	leave
    6df2:	c3                   	ret

0000000000006df3 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    6df3:	55                   	push   %rbp
    6df4:	48 89 e5             	mov    %rsp,%rbp
    6df7:	48 83 ec 10          	sub    $0x10,%rsp
    6dfb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6dff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    6e03:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6e07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e0b:	48 89 d6             	mov    %rdx,%rsi
    6e0e:	48 89 c7             	mov    %rax,%rdi
    6e11:	e8 be 0b 00 00       	call   79d4 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    6e16:	90                   	nop
    6e17:	c9                   	leave
    6e18:	c3                   	ret
    6e19:	90                   	nop

0000000000006e1a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
    6e1a:	55                   	push   %rbp
    6e1b:	48 89 e5             	mov    %rsp,%rbp
    6e1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6e26:	90                   	nop
    6e27:	5d                   	pop    %rbp
    6e28:	c3                   	ret

0000000000006e29 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6e29:	55                   	push   %rbp
    6e2a:	48 89 e5             	mov    %rsp,%rbp
    6e2d:	48 83 ec 20          	sub    $0x20,%rsp
    6e31:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e35:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6e39:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6e3d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6e41:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6e45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e49:	48 89 ce             	mov    %rcx,%rsi
    6e4c:	48 89 c7             	mov    %rax,%rdi
    6e4f:	e8 90 0b 00 00       	call   79e4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    6e54:	90                   	nop
    6e55:	c9                   	leave
    6e56:	c3                   	ret

0000000000006e57 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    6e57:	55                   	push   %rbp
    6e58:	48 89 e5             	mov    %rsp,%rbp
    6e5b:	48 83 ec 20          	sub    $0x20,%rsp
    6e5f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    6e63:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    6e6a:	55 55 05 
    6e6d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    6e71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6e75:	48 89 c7             	mov    %rax,%rdi
    6e78:	e8 98 0b 00 00       	call   7a15 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    6e7d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    6e81:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6e85:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6e89:	48 89 d6             	mov    %rdx,%rsi
    6e8c:	48 89 c7             	mov    %rax,%rdi
    6e8f:	e8 a5 05 00 00       	call   7439 <_ZSt3minImERKT_S2_S2_>
    6e94:	48 8b 00             	mov    (%rax),%rax
      }
    6e97:	c9                   	leave
    6e98:	c3                   	ret
    6e99:	90                   	nop

0000000000006e9a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6e9a:	55                   	push   %rbp
    6e9b:	48 89 e5             	mov    %rsp,%rbp
    6e9e:	48 83 ec 10          	sub    $0x10,%rsp
    6ea2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ea6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6eaa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6eae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6eb2:	48 89 d6             	mov    %rdx,%rsi
    6eb5:	48 89 c7             	mov    %rax,%rdi
    6eb8:	e8 a3 f1 ff ff       	call   6060 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    6ebd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ec1:	48 89 c7             	mov    %rax,%rdi
    6ec4:	e8 67 0b 00 00       	call   7a30 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    6ec9:	90                   	nop
    6eca:	c9                   	leave
    6ecb:	c3                   	ret

0000000000006ecc <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    6ecc:	55                   	push   %rbp
    6ecd:	48 89 e5             	mov    %rsp,%rbp
    6ed0:	48 83 ec 10          	sub    $0x10,%rsp
    6ed4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ed8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6edc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6ee0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ee4:	48 89 d6             	mov    %rdx,%rsi
    6ee7:	48 89 c7             	mov    %rax,%rdi
    6eea:	e8 6f 0b 00 00       	call   7a5e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    6eef:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6ef3:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    6ef6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6efa:	48 8b 10             	mov    (%rax),%rdx
    6efd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f01:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    6f05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f09:	48 8b 08             	mov    (%rax),%rcx
    6f0c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6f10:	48 89 d0             	mov    %rdx,%rax
    6f13:	48 01 c0             	add    %rax,%rax
    6f16:	48 01 d0             	add    %rdx,%rax
    6f19:	48 c1 e0 03          	shl    $0x3,%rax
    6f1d:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    6f21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f25:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    6f29:	90                   	nop
    6f2a:	c9                   	leave
    6f2b:	c3                   	ret

0000000000006f2c <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    6f2c:	55                   	push   %rbp
    6f2d:	48 89 e5             	mov    %rsp,%rbp
    6f30:	48 83 ec 20          	sub    $0x20,%rsp
    6f34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6f3c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    6f40:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6f44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f48:	48 89 d6             	mov    %rdx,%rsi
    6f4b:	48 89 c7             	mov    %rax,%rdi
    6f4e:	e8 3e 0b 00 00       	call   7a91 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    6f53:	c9                   	leave
    6f54:	c3                   	ret

0000000000006f55 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    6f55:	55                   	push   %rbp
    6f56:	48 89 e5             	mov    %rsp,%rbp
    6f59:	48 83 ec 10          	sub    $0x10,%rsp
    6f5d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f61:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    6f65:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6f69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f6d:	48 89 d6             	mov    %rdx,%rsi
    6f70:	48 89 c7             	mov    %rax,%rdi
    6f73:	e8 42 0b 00 00       	call   7aba <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    6f78:	90                   	nop
    6f79:	c9                   	leave
    6f7a:	c3                   	ret
    6f7b:	90                   	nop

0000000000006f7c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    6f7c:	55                   	push   %rbp
    6f7d:	48 89 e5             	mov    %rsp,%rbp
    6f80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6f88:	90                   	nop
    6f89:	5d                   	pop    %rbp
    6f8a:	c3                   	ret

0000000000006f8b <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6f8b:	55                   	push   %rbp
    6f8c:	48 89 e5             	mov    %rsp,%rbp
    6f8f:	48 83 ec 20          	sub    $0x20,%rsp
    6f93:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f97:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6f9b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6f9f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6fa3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6fa7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fab:	48 89 ce             	mov    %rcx,%rsi
    6fae:	48 89 c7             	mov    %rax,%rdi
    6fb1:	e8 14 0b 00 00       	call   7aca <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    6fb6:	90                   	nop
    6fb7:	c9                   	leave
    6fb8:	c3                   	ret

0000000000006fb9 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    6fb9:	55                   	push   %rbp
    6fba:	48 89 e5             	mov    %rsp,%rbp
    6fbd:	48 83 ec 20          	sub    $0x20,%rsp
    6fc1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    6fc5:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    6fcc:	49 92 04 
    6fcf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    6fd3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6fd7:	48 89 c7             	mov    %rax,%rdi
    6fda:	e8 24 0b 00 00       	call   7b03 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>
    6fdf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    6fe3:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6fe7:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6feb:	48 89 d6             	mov    %rdx,%rsi
    6fee:	48 89 c7             	mov    %rax,%rdi
    6ff1:	e8 43 04 00 00       	call   7439 <_ZSt3minImERKT_S2_S2_>
    6ff6:	48 8b 00             	mov    (%rax),%rax
      }
    6ff9:	c9                   	leave
    6ffa:	c3                   	ret
    6ffb:	90                   	nop

0000000000006ffc <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6ffc:	55                   	push   %rbp
    6ffd:	48 89 e5             	mov    %rsp,%rbp
    7000:	48 83 ec 10          	sub    $0x10,%rsp
    7004:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7008:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    700c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7010:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7014:	48 89 d6             	mov    %rdx,%rsi
    7017:	48 89 c7             	mov    %rax,%rdi
    701a:	e8 af f2 ff ff       	call   62ce <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    701f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7023:	48 89 c7             	mov    %rax,%rdi
    7026:	e8 f3 0a 00 00       	call   7b1e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>
	{ }
    702b:	90                   	nop
    702c:	c9                   	leave
    702d:	c3                   	ret

000000000000702e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    702e:	55                   	push   %rbp
    702f:	48 89 e5             	mov    %rsp,%rbp
    7032:	48 83 ec 10          	sub    $0x10,%rsp
    7036:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    703a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    703e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7042:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7046:	48 89 d6             	mov    %rdx,%rsi
    7049:	48 89 c7             	mov    %rax,%rdi
    704c:	e8 fb 0a 00 00       	call   7b4c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>
    7051:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7055:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    7058:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    705c:	48 8b 10             	mov    (%rax),%rdx
    705f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7063:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    7067:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    706b:	48 8b 08             	mov    (%rax),%rcx
    706e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7072:	48 89 d0             	mov    %rdx,%rax
    7075:	48 c1 e0 03          	shl    $0x3,%rax
    7079:	48 29 d0             	sub    %rdx,%rax
    707c:	48 c1 e0 02          	shl    $0x2,%rax
    7080:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    7084:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7088:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    708c:	90                   	nop
    708d:	c9                   	leave
    708e:	c3                   	ret

000000000000708f <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    708f:	55                   	push   %rbp
    7090:	48 89 e5             	mov    %rsp,%rbp
    7093:	48 83 ec 20          	sub    $0x20,%rsp
    7097:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    709b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    709f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    70a3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    70a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70ab:	48 89 d6             	mov    %rdx,%rsi
    70ae:	48 89 c7             	mov    %rax,%rdi
    70b1:	e8 c9 0a 00 00       	call   7b7f <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>
    70b6:	c9                   	leave
    70b7:	c3                   	ret

00000000000070b8 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    70b8:	55                   	push   %rbp
    70b9:	48 89 e5             	mov    %rsp,%rbp
    70bc:	48 83 ec 10          	sub    $0x10,%rsp
    70c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    70c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    70c8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    70cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70d0:	48 89 d6             	mov    %rdx,%rsi
    70d3:	48 89 c7             	mov    %rax,%rdi
    70d6:	e8 cd 0a 00 00       	call   7ba8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>
    }
    70db:	90                   	nop
    70dc:	c9                   	leave
    70dd:	c3                   	ret

00000000000070de <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>:
      _M_get() noexcept
    70de:	55                   	push   %rbp
    70df:	48 89 e5             	mov    %rsp,%rbp
    70e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    70e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70ea:	5d                   	pop    %rbp
    70eb:	c3                   	ret

00000000000070ec <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    70ec:	55                   	push   %rbp
    70ed:	48 89 e5             	mov    %rsp,%rbp
    70f0:	53                   	push   %rbx
    70f1:	48 83 ec 18          	sub    $0x18,%rsp
    70f5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    70f9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    70fd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7101:	48 89 c7             	mov    %rax,%rdi
    7104:	e8 83 f1 ff ff       	call   628c <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    7109:	48 89 c3             	mov    %rax,%rbx
    710c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7110:	48 89 c7             	mov    %rax,%rdi
    7113:	e8 9f 0a 00 00       	call   7bb7 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    7118:	48 89 de             	mov    %rbx,%rsi
    711b:	48 89 c7             	mov    %rax,%rdi
    711e:	e8 a2 0a 00 00       	call   7bc5 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>
	  this->_M_engaged = true;
    7123:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7127:	c6 40 18 01          	movb   $0x1,0x18(%rax)
	}
    712b:	90                   	nop
    712c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7130:	c9                   	leave
    7131:	c3                   	ret

0000000000007132 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>:
    7132:	55                   	push   %rbp
    7133:	48 89 e5             	mov    %rsp,%rbp
    7136:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    713a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    713e:	90                   	nop
    713f:	5d                   	pop    %rbp
    7140:	c3                   	ret

0000000000007141 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    7141:	55                   	push   %rbp
    7142:	48 89 e5             	mov    %rsp,%rbp
    7145:	48 83 ec 20          	sub    $0x20,%rsp
    7149:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    714d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7151:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    7155:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7159:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    715d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7161:	48 89 ce             	mov    %rcx,%rsi
    7164:	48 89 c7             	mov    %rax,%rdi
    7167:	e8 aa 0a 00 00       	call   7c16 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>
    716c:	90                   	nop
    716d:	c9                   	leave
    716e:	c3                   	ret

000000000000716f <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    716f:	55                   	push   %rbp
    7170:	48 89 e5             	mov    %rsp,%rbp
    7173:	48 83 ec 20          	sub    $0x20,%rsp
    7177:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    717b:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    7182:	ff ff 0f 
    7185:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    7189:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    718d:	48 89 c7             	mov    %rax,%rdi
    7190:	e8 bb 0a 00 00       	call   7c50 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>
    7195:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    7199:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    719d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    71a1:	48 89 d6             	mov    %rdx,%rsi
    71a4:	48 89 c7             	mov    %rax,%rdi
    71a7:	e8 8d 02 00 00       	call   7439 <_ZSt3minImERKT_S2_S2_>
    71ac:	48 8b 00             	mov    (%rax),%rax
      }
    71af:	c9                   	leave
    71b0:	c3                   	ret
    71b1:	90                   	nop

00000000000071b2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    71b2:	55                   	push   %rbp
    71b3:	48 89 e5             	mov    %rsp,%rbp
    71b6:	48 83 ec 10          	sub    $0x10,%rsp
    71ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    71be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    71c2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    71c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71ca:	48 89 d6             	mov    %rdx,%rsi
    71cd:	48 89 c7             	mov    %rax,%rdi
    71d0:	e8 b5 f2 ff ff       	call   648a <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    71d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71d9:	48 89 c7             	mov    %rax,%rdi
    71dc:	e8 89 0a 00 00       	call   7c6a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    71e1:	90                   	nop
    71e2:	c9                   	leave
    71e3:	c3                   	ret

00000000000071e4 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    71e4:	55                   	push   %rbp
    71e5:	48 89 e5             	mov    %rsp,%rbp
    71e8:	48 83 ec 10          	sub    $0x10,%rsp
    71ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    71f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    71f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    71f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71fc:	48 89 d6             	mov    %rdx,%rsi
    71ff:	48 89 c7             	mov    %rax,%rdi
    7202:	e8 91 0a 00 00       	call   7c98 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>
    7207:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    720b:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    720e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7212:	48 8b 10             	mov    (%rax),%rdx
    7215:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7219:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    721d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7221:	48 8b 00             	mov    (%rax),%rax
    7224:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7228:	48 c1 e2 03          	shl    $0x3,%rdx
    722c:	48 01 c2             	add    %rax,%rdx
    722f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7233:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    7237:	90                   	nop
    7238:	c9                   	leave
    7239:	c3                   	ret

000000000000723a <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    723a:	55                   	push   %rbp
    723b:	48 89 e5             	mov    %rsp,%rbp
    723e:	48 83 ec 20          	sub    $0x20,%rsp
    7242:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7246:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    724a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    724e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7252:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7256:	48 89 d6             	mov    %rdx,%rsi
    7259:	48 89 c7             	mov    %rax,%rdi
    725c:	e8 6a 0a 00 00       	call   7ccb <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>
    7261:	c9                   	leave
    7262:	c3                   	ret

0000000000007263 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    7263:	55                   	push   %rbp
    7264:	48 89 e5             	mov    %rsp,%rbp
    7267:	48 83 ec 10          	sub    $0x10,%rsp
    726b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    726f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    7273:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7277:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    727b:	48 89 d6             	mov    %rdx,%rsi
    727e:	48 89 c7             	mov    %rax,%rdi
    7281:	e8 6e 0a 00 00       	call   7cf4 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>
    }
    7286:	90                   	nop
    7287:	c9                   	leave
    7288:	c3                   	ret
    7289:	90                   	nop

000000000000728a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>:
    728a:	55                   	push   %rbp
    728b:	48 89 e5             	mov    %rsp,%rbp
    728e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7292:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7296:	90                   	nop
    7297:	5d                   	pop    %rbp
    7298:	c3                   	ret

0000000000007299 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    7299:	55                   	push   %rbp
    729a:	48 89 e5             	mov    %rsp,%rbp
    729d:	48 83 ec 20          	sub    $0x20,%rsp
    72a1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    72a5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    72a9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    72ad:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    72b1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    72b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72b9:	48 89 ce             	mov    %rcx,%rsi
    72bc:	48 89 c7             	mov    %rax,%rdi
    72bf:	e8 40 0a 00 00       	call   7d04 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>
    72c4:	90                   	nop
    72c5:	c9                   	leave
    72c6:	c3                   	ret

00000000000072c7 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    72c7:	55                   	push   %rbp
    72c8:	48 89 e5             	mov    %rsp,%rbp
    72cb:	48 83 ec 20          	sub    $0x20,%rsp
    72cf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    72d3:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    72da:	ff ff 1f 
    72dd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    72e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    72e5:	48 89 c7             	mov    %rax,%rdi
    72e8:	e8 48 0a 00 00       	call   7d35 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>
    72ed:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    72f1:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    72f5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    72f9:	48 89 d6             	mov    %rdx,%rsi
    72fc:	48 89 c7             	mov    %rax,%rdi
    72ff:	e8 35 01 00 00       	call   7439 <_ZSt3minImERKT_S2_S2_>
    7304:	48 8b 00             	mov    (%rax),%rax
      }
    7307:	c9                   	leave
    7308:	c3                   	ret
    7309:	90                   	nop

000000000000730a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    730a:	55                   	push   %rbp
    730b:	48 89 e5             	mov    %rsp,%rbp
    730e:	48 83 ec 10          	sub    $0x10,%rsp
    7312:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7316:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    731a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    731e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7322:	48 89 d6             	mov    %rdx,%rsi
    7325:	48 89 c7             	mov    %rax,%rdi
    7328:	e8 19 f3 ff ff       	call   6646 <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    732d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7331:	48 89 c7             	mov    %rax,%rdi
    7334:	e8 17 0a 00 00       	call   7d50 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    7339:	90                   	nop
    733a:	c9                   	leave
    733b:	c3                   	ret

000000000000733c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    733c:	55                   	push   %rbp
    733d:	48 89 e5             	mov    %rsp,%rbp
    7340:	48 83 ec 10          	sub    $0x10,%rsp
    7344:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7348:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    734c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7350:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7354:	48 89 d6             	mov    %rdx,%rsi
    7357:	48 89 c7             	mov    %rax,%rdi
    735a:	e8 1f 0a 00 00       	call   7d7e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>
    735f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7363:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    7366:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    736a:	48 8b 10             	mov    (%rax),%rdx
    736d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7371:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    7375:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7379:	48 8b 00             	mov    (%rax),%rax
    737c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7380:	48 c1 e2 02          	shl    $0x2,%rdx
    7384:	48 01 c2             	add    %rax,%rdx
    7387:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    738b:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    738f:	90                   	nop
    7390:	c9                   	leave
    7391:	c3                   	ret

0000000000007392 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    7392:	55                   	push   %rbp
    7393:	48 89 e5             	mov    %rsp,%rbp
    7396:	48 83 ec 20          	sub    $0x20,%rsp
    739a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    739e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    73a2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    73a6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    73aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73ae:	48 89 d6             	mov    %rdx,%rsi
    73b1:	48 89 c7             	mov    %rax,%rdi
    73b4:	e8 f8 09 00 00       	call   7db1 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>
    73b9:	c9                   	leave
    73ba:	c3                   	ret

00000000000073bb <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    73bb:	55                   	push   %rbp
    73bc:	48 89 e5             	mov    %rsp,%rbp
    73bf:	48 83 ec 10          	sub    $0x10,%rsp
    73c3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    73c7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    73cb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    73cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73d3:	48 89 d6             	mov    %rdx,%rsi
    73d6:	48 89 c7             	mov    %rax,%rdi
    73d9:	e8 fc 09 00 00       	call   7dda <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>
    }
    73de:	90                   	nop
    73df:	c9                   	leave
    73e0:	c3                   	ret
    73e1:	90                   	nop

00000000000073e2 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>:
    73e2:	55                   	push   %rbp
    73e3:	48 89 e5             	mov    %rsp,%rbp
    73e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    73ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    73ee:	90                   	nop
    73ef:	5d                   	pop    %rbp
    73f0:	c3                   	ret

00000000000073f1 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    73f1:	55                   	push   %rbp
    73f2:	48 89 e5             	mov    %rsp,%rbp
    73f5:	48 83 ec 20          	sub    $0x20,%rsp
    73f9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    73fd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7401:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    7405:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7409:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    740d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7411:	48 89 ce             	mov    %rcx,%rsi
    7414:	48 89 c7             	mov    %rax,%rdi
    7417:	e8 ce 09 00 00       	call   7dea <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>
    741c:	90                   	nop
    741d:	c9                   	leave
    741e:	c3                   	ret

000000000000741f <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    741f:	55                   	push   %rbp
    7420:	48 89 e5             	mov    %rsp,%rbp
    7423:	48 83 ec 10          	sub    $0x10,%rsp
    7427:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    742b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    742f:	48 89 c7             	mov    %rax,%rdi
    7432:	e8 e5 09 00 00       	call   7e1c <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    7437:	c9                   	leave
    7438:	c3                   	ret

0000000000007439 <_ZSt3minImERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    7439:	55                   	push   %rbp
    743a:	48 89 e5             	mov    %rsp,%rbp
    743d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7441:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    7445:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7449:	48 8b 10             	mov    (%rax),%rdx
    744c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7450:	48 8b 00             	mov    (%rax),%rax
    7453:	48 39 c2             	cmp    %rax,%rdx
    7456:	73 06                	jae    745e <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    7458:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    745c:	eb 04                	jmp    7462 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    745e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    7462:	5d                   	pop    %rbp
    7463:	c3                   	ret

0000000000007464 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    7464:	55                   	push   %rbp
    7465:	48 89 e5             	mov    %rsp,%rbp
    7468:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    746c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7470:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    7477:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    747b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    7482:	00 
    7483:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7487:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    748e:	00 
	{ }
    748f:	90                   	nop
    7490:	5d                   	pop    %rbp
    7491:	c3                   	ret

0000000000007492 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    7492:	55                   	push   %rbp
    7493:	48 89 e5             	mov    %rsp,%rbp
    7496:	48 83 ec 10          	sub    $0x10,%rsp
    749a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    749e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    74a2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    74a7:	74 15                	je     74be <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    74a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74ad:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    74b1:	48 89 d6             	mov    %rdx,%rsi
    74b4:	48 89 c7             	mov    %rax,%rdi
    74b7:	e8 7a 09 00 00       	call   7e36 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    74bc:	eb 05                	jmp    74c3 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    74be:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    74c3:	c9                   	leave
    74c4:	c3                   	ret

00000000000074c5 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    74c5:	55                   	push   %rbp
    74c6:	48 89 e5             	mov    %rsp,%rbp
    74c9:	48 83 ec 20          	sub    $0x20,%rsp
    74cd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    74d1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    74d5:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    74d9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    74dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    74e1:	48 89 d6             	mov    %rdx,%rsi
    74e4:	48 89 c7             	mov    %rax,%rdi
    74e7:	e8 74 09 00 00       	call   7e60 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    74ec:	c9                   	leave
    74ed:	c3                   	ret

00000000000074ee <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    74ee:	55                   	push   %rbp
    74ef:	48 89 e5             	mov    %rsp,%rbp
    74f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    74f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    74fa:	90                   	nop
    74fb:	5d                   	pop    %rbp
    74fc:	c3                   	ret
    74fd:	90                   	nop

00000000000074fe <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    74fe:	55                   	push   %rbp
    74ff:	48 89 e5             	mov    %rsp,%rbp
    7502:	48 83 ec 20          	sub    $0x20,%rsp
    7506:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    750a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    750e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    7512:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7516:	48 89 d0             	mov    %rdx,%rax
    7519:	48 c1 e0 06          	shl    $0x6,%rax
    751d:	48 01 d0             	add    %rdx,%rax
    7520:	48 c1 e0 02          	shl    $0x2,%rax
    7524:	48 89 c2             	mov    %rax,%rdx
    7527:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    752b:	48 89 d6             	mov    %rdx,%rsi
    752e:	48 89 c7             	mov    %rax,%rdi
    7531:	e8 3a bd ff ff       	call   3270 <_ZdlPvm@plt>
      }
    7536:	c9                   	leave
    7537:	c3                   	ret

0000000000007538 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    7538:	55                   	push   %rbp
    7539:	48 89 e5             	mov    %rsp,%rbp
    753c:	48 83 ec 10          	sub    $0x10,%rsp
    7540:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    7544:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7548:	48 89 c7             	mov    %rax,%rdi
    754b:	e8 70 09 00 00       	call   7ec0 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    7550:	c9                   	leave
    7551:	c3                   	ret

0000000000007552 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    7552:	55                   	push   %rbp
    7553:	48 89 e5             	mov    %rsp,%rbp
    7556:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    755a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    755e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    7565:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7569:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    7570:	00 
    7571:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7575:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    757c:	00 
	{ }
    757d:	90                   	nop
    757e:	5d                   	pop    %rbp
    757f:	c3                   	ret

0000000000007580 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    7580:	55                   	push   %rbp
    7581:	48 89 e5             	mov    %rsp,%rbp
    7584:	48 83 ec 10          	sub    $0x10,%rsp
    7588:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    758c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    7590:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7595:	74 15                	je     75ac <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    7597:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    759b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    759f:	48 89 d6             	mov    %rdx,%rsi
    75a2:	48 89 c7             	mov    %rax,%rdi
    75a5:	e8 30 09 00 00       	call   7eda <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    75aa:	eb 05                	jmp    75b1 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    75ac:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    75b1:	c9                   	leave
    75b2:	c3                   	ret

00000000000075b3 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    75b3:	55                   	push   %rbp
    75b4:	48 89 e5             	mov    %rsp,%rbp
    75b7:	48 83 ec 20          	sub    $0x20,%rsp
    75bb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    75bf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    75c3:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    75c7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    75cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    75cf:	48 89 d6             	mov    %rdx,%rsi
    75d2:	48 89 c7             	mov    %rax,%rdi
    75d5:	e8 2a 09 00 00       	call   7f04 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    75da:	c9                   	leave
    75db:	c3                   	ret

00000000000075dc <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
    75dc:	55                   	push   %rbp
    75dd:	48 89 e5             	mov    %rsp,%rbp
    75e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    75e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    75e8:	90                   	nop
    75e9:	5d                   	pop    %rbp
    75ea:	c3                   	ret
    75eb:	90                   	nop

00000000000075ec <_ZNSt15__new_allocatorIPKcE9constructIS1_JS1_EEEvPT_DpOT0_>:
      { return _M_max_size(); }

#if __cplusplus >= 201103L
      template<typename _Up, typename... _Args>
	void
	construct(_Up* __p, _Args&&... __args)
    75ec:	55                   	push   %rbp
    75ed:	48 89 e5             	mov    %rsp,%rbp
    75f0:	53                   	push   %rbx
    75f1:	48 83 ec 28          	sub    $0x28,%rsp
    75f5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    75f9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    75fd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    7601:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7605:	48 89 c6             	mov    %rax,%rsi
    7608:	bf 08 00 00 00       	mov    $0x8,%edi
    760d:	e8 78 d3 ff ff       	call   498a <_ZnwmPv>
    7612:	48 89 c3             	mov    %rax,%rbx
    7615:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7619:	48 89 c7             	mov    %rax,%rdi
    761c:	e8 fc f2 ff ff       	call   691d <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    7621:	48 8b 00             	mov    (%rax),%rax
    7624:	48 89 03             	mov    %rax,(%rbx)
    7627:	90                   	nop
    7628:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    762c:	c9                   	leave
    762d:	c3                   	ret

000000000000762e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    762e:	55                   	push   %rbp
    762f:	48 89 e5             	mov    %rsp,%rbp
    7632:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7636:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    763a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    763e:	48 8b 10             	mov    (%rax),%rdx
    7641:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7645:	48 89 10             	mov    %rdx,(%rax)
    7648:	90                   	nop
    7649:	5d                   	pop    %rbp
    764a:	c3                   	ret
    764b:	90                   	nop

000000000000764c <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
    764c:	55                   	push   %rbp
    764d:	48 89 e5             	mov    %rsp,%rbp
    7650:	53                   	push   %rbx
    7651:	48 83 ec 38          	sub    $0x38,%rsp
    7655:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7659:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    765d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    7661:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7665:	48 89 c7             	mov    %rax,%rdi
    7668:	e8 f5 08 00 00       	call   7f62 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    766d:	48 89 c3             	mov    %rax,%rbx
    7670:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7674:	48 89 c7             	mov    %rax,%rdi
    7677:	e8 08 09 00 00       	call   7f84 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    767c:	48 29 c3             	sub    %rax,%rbx
    767f:	48 89 da             	mov    %rbx,%rdx
    7682:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7686:	48 39 c2             	cmp    %rax,%rdx
    7689:	0f 92 c0             	setb   %al
    768c:	84 c0                	test   %al,%al
    768e:	74 0c                	je     769c <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
    7690:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7694:	48 89 c7             	mov    %rax,%rdi
    7697:	e8 64 ba ff ff       	call   3100 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    769c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    76a0:	48 89 c7             	mov    %rax,%rdi
    76a3:	e8 dc 08 00 00       	call   7f84 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    76a8:	48 89 c3             	mov    %rax,%rbx
    76ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    76af:	48 89 c7             	mov    %rax,%rdi
    76b2:	e8 cd 08 00 00       	call   7f84 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    76b7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    76bb:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    76bf:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    76c3:	48 89 d6             	mov    %rdx,%rsi
    76c6:	48 89 c7             	mov    %rax,%rdi
    76c9:	e8 d9 08 00 00       	call   7fa7 <_ZSt3maxImERKT_S2_S2_>
    76ce:	48 8b 00             	mov    (%rax),%rax
    76d1:	48 01 d8             	add    %rbx,%rax
    76d4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    76d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    76dc:	48 89 c7             	mov    %rax,%rdi
    76df:	e8 a0 08 00 00       	call   7f84 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    76e4:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    76e8:	72 12                	jb     76fc <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
    76ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    76ee:	48 89 c7             	mov    %rax,%rdi
    76f1:	e8 6c 08 00 00       	call   7f62 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    76f6:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    76fa:	73 0e                	jae    770a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
    76fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7700:	48 89 c7             	mov    %rax,%rdi
    7703:	e8 5a 08 00 00       	call   7f62 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    7708:	eb 04                	jmp    770e <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
    770a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    770e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7712:	c9                   	leave
    7713:	c3                   	ret

0000000000007714 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    7714:	55                   	push   %rbp
    7715:	48 89 e5             	mov    %rsp,%rbp
    7718:	48 83 ec 20          	sub    $0x20,%rsp
    771c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    7720:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7724:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7728:	48 89 d6             	mov    %rdx,%rsi
    772b:	48 89 c7             	mov    %rax,%rdi
    772e:	e8 fb fe ff ff       	call   762e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    7733:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7737:	c9                   	leave
    7738:	c3                   	ret

0000000000007739 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
    7739:	55                   	push   %rbp
    773a:	48 89 e5             	mov    %rsp,%rbp
    773d:	53                   	push   %rbx
    773e:	48 83 ec 18          	sub    $0x18,%rsp
    7742:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7746:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
    774a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    774e:	48 89 c7             	mov    %rax,%rdi
    7751:	e8 58 00 00 00       	call   77ae <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    7756:	48 8b 18             	mov    (%rax),%rbx
    7759:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    775d:	48 89 c7             	mov    %rax,%rdi
    7760:	e8 49 00 00 00       	call   77ae <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    7765:	48 8b 00             	mov    (%rax),%rax
    7768:	48 89 da             	mov    %rbx,%rdx
    776b:	48 29 c2             	sub    %rax,%rdx
    776e:	48 89 d0             	mov    %rdx,%rax
    7771:	48 c1 f8 03          	sar    $0x3,%rax
    7775:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7779:	c9                   	leave
    777a:	c3                   	ret

000000000000777b <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    777b:	55                   	push   %rbp
    777c:	48 89 e5             	mov    %rsp,%rbp
    777f:	48 83 ec 20          	sub    $0x20,%rsp
    7783:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7787:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    778b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    778f:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    7793:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    7797:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    779b:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    779f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77a3:	48 89 c7             	mov    %rax,%rdi
    77a6:	e8 27 08 00 00       	call   7fd2 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
    77ab:	c9                   	leave
    77ac:	c3                   	ret
    77ad:	90                   	nop

00000000000077ae <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    77ae:	55                   	push   %rbp
    77af:	48 89 e5             	mov    %rsp,%rbp
    77b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    77b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77ba:	5d                   	pop    %rbp
    77bb:	c3                   	ret

00000000000077bc <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
    77bc:	55                   	push   %rbp
    77bd:	48 89 e5             	mov    %rsp,%rbp
    77c0:	48 83 ec 20          	sub    $0x20,%rsp
    77c4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    77c8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
    77cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77d0:	48 8b 00             	mov    (%rax),%rax
    77d3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    77d7:	48 c1 e2 03          	shl    $0x3,%rdx
    77db:	48 f7 da             	neg    %rdx
    77de:	48 01 d0             	add    %rdx,%rax
    77e1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    77e5:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    77e9:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    77ed:	48 89 d6             	mov    %rdx,%rsi
    77f0:	48 89 c7             	mov    %rax,%rdi
    77f3:	e8 36 fe ff ff       	call   762e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    77f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    77fc:	c9                   	leave
    77fd:	c3                   	ret

00000000000077fe <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    77fe:	55                   	push   %rbp
    77ff:	48 89 e5             	mov    %rsp,%rbp
    7802:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    7806:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    780a:	48 8b 00             	mov    (%rax),%rax
    780d:	5d                   	pop    %rbp
    780e:	c3                   	ret
    780f:	90                   	nop

0000000000007810 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    7810:	55                   	push   %rbp
    7811:	48 89 e5             	mov    %rsp,%rbp
    7814:	48 83 ec 20          	sub    $0x20,%rsp
    7818:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    781c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7820:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    7824:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7828:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    782f:	00 
    7830:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7834:	48 89 d6             	mov    %rdx,%rsi
    7837:	48 89 c7             	mov    %rax,%rdi
    783a:	e8 31 ba ff ff       	call   3270 <_ZdlPvm@plt>
      }
    783f:	c9                   	leave
    7840:	c3                   	ret

0000000000007841 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    7841:	55                   	push   %rbp
    7842:	48 89 e5             	mov    %rsp,%rbp
    7845:	48 83 ec 10          	sub    $0x10,%rsp
    7849:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    784d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7851:	48 89 c7             	mov    %rax,%rdi
    7854:	e8 dd 07 00 00       	call   8036 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
    7859:	c9                   	leave
    785a:	c3                   	ret
    785b:	90                   	nop

000000000000785c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    785c:	55                   	push   %rbp
    785d:	48 89 e5             	mov    %rsp,%rbp
    7860:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    7864:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7868:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    786f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7873:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    787a:	00 
    787b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    787f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    7886:	00 
	{ }
    7887:	90                   	nop
    7888:	5d                   	pop    %rbp
    7889:	c3                   	ret

000000000000788a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    788a:	55                   	push   %rbp
    788b:	48 89 e5             	mov    %rsp,%rbp
    788e:	48 83 ec 10          	sub    $0x10,%rsp
    7892:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7896:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    789a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    789f:	74 15                	je     78b6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    78a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78a5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    78a9:	48 89 d6             	mov    %rdx,%rsi
    78ac:	48 89 c7             	mov    %rax,%rdi
    78af:	e8 9c 07 00 00       	call   8050 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
    78b4:	eb 05                	jmp    78bb <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
    78b6:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    78bb:	c9                   	leave
    78bc:	c3                   	ret

00000000000078bd <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    78bd:	55                   	push   %rbp
    78be:	48 89 e5             	mov    %rsp,%rbp
    78c1:	48 83 ec 20          	sub    $0x20,%rsp
    78c5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    78c9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    78cd:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    78d1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    78d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    78d9:	48 89 d6             	mov    %rdx,%rsi
    78dc:	48 89 c7             	mov    %rax,%rdi
    78df:	e8 96 07 00 00       	call   807a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
    78e4:	c9                   	leave
    78e5:	c3                   	ret

00000000000078e6 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
    78e6:	55                   	push   %rbp
    78e7:	48 89 e5             	mov    %rsp,%rbp
    78ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    78ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    78f2:	90                   	nop
    78f3:	5d                   	pop    %rbp
    78f4:	c3                   	ret
    78f5:	90                   	nop

00000000000078f6 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    78f6:	55                   	push   %rbp
    78f7:	48 89 e5             	mov    %rsp,%rbp
    78fa:	48 83 ec 20          	sub    $0x20,%rsp
    78fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7902:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7906:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    790a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    790e:	48 89 d0             	mov    %rdx,%rax
    7911:	48 c1 e0 06          	shl    $0x6,%rax
    7915:	48 01 d0             	add    %rdx,%rax
    7918:	48 c1 e0 03          	shl    $0x3,%rax
    791c:	48 89 c2             	mov    %rax,%rdx
    791f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7923:	48 89 d6             	mov    %rdx,%rsi
    7926:	48 89 c7             	mov    %rax,%rdi
    7929:	e8 42 b9 ff ff       	call   3270 <_ZdlPvm@plt>
      }
    792e:	c9                   	leave
    792f:	c3                   	ret

0000000000007930 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    7930:	55                   	push   %rbp
    7931:	48 89 e5             	mov    %rsp,%rbp
    7934:	48 83 ec 10          	sub    $0x10,%rsp
    7938:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    793c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7940:	48 89 c7             	mov    %rax,%rdi
    7943:	e8 92 07 00 00       	call   80da <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    7948:	c9                   	leave
    7949:	c3                   	ret

000000000000794a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    794a:	55                   	push   %rbp
    794b:	48 89 e5             	mov    %rsp,%rbp
    794e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    7952:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7956:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    795d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7961:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    7968:	00 
    7969:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    796d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    7974:	00 
	{ }
    7975:	90                   	nop
    7976:	5d                   	pop    %rbp
    7977:	c3                   	ret

0000000000007978 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    7978:	55                   	push   %rbp
    7979:	48 89 e5             	mov    %rsp,%rbp
    797c:	48 83 ec 10          	sub    $0x10,%rsp
    7980:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7984:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    7988:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    798d:	74 15                	je     79a4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    798f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7993:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7997:	48 89 d6             	mov    %rdx,%rsi
    799a:	48 89 c7             	mov    %rax,%rdi
    799d:	e8 52 07 00 00       	call   80f4 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    79a2:	eb 05                	jmp    79a9 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    79a4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    79a9:	c9                   	leave
    79aa:	c3                   	ret

00000000000079ab <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    79ab:	55                   	push   %rbp
    79ac:	48 89 e5             	mov    %rsp,%rbp
    79af:	48 83 ec 20          	sub    $0x20,%rsp
    79b3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    79b7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    79bb:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    79bf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    79c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    79c7:	48 89 d6             	mov    %rdx,%rsi
    79ca:	48 89 c7             	mov    %rax,%rdi
    79cd:	e8 4c 07 00 00       	call   811e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    79d2:	c9                   	leave
    79d3:	c3                   	ret

00000000000079d4 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
    79d4:	55                   	push   %rbp
    79d5:	48 89 e5             	mov    %rsp,%rbp
    79d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    79dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    79e0:	90                   	nop
    79e1:	5d                   	pop    %rbp
    79e2:	c3                   	ret
    79e3:	90                   	nop

00000000000079e4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    79e4:	55                   	push   %rbp
    79e5:	48 89 e5             	mov    %rsp,%rbp
    79e8:	48 83 ec 20          	sub    $0x20,%rsp
    79ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    79f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    79f4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    79f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    79fc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7a03:	00 
    7a04:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7a08:	48 89 d6             	mov    %rdx,%rsi
    7a0b:	48 89 c7             	mov    %rax,%rdi
    7a0e:	e8 5d b8 ff ff       	call   3270 <_ZdlPvm@plt>
      }
    7a13:	c9                   	leave
    7a14:	c3                   	ret

0000000000007a15 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    7a15:	55                   	push   %rbp
    7a16:	48 89 e5             	mov    %rsp,%rbp
    7a19:	48 83 ec 10          	sub    $0x10,%rsp
    7a1d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    7a21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a25:	48 89 c7             	mov    %rax,%rdi
    7a28:	e8 4f 07 00 00       	call   817c <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    7a2d:	c9                   	leave
    7a2e:	c3                   	ret
    7a2f:	90                   	nop

0000000000007a30 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    7a30:	55                   	push   %rbp
    7a31:	48 89 e5             	mov    %rsp,%rbp
    7a34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    7a38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a3c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    7a43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a47:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    7a4e:	00 
    7a4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a53:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    7a5a:	00 
	{ }
    7a5b:	90                   	nop
    7a5c:	5d                   	pop    %rbp
    7a5d:	c3                   	ret

0000000000007a5e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    7a5e:	55                   	push   %rbp
    7a5f:	48 89 e5             	mov    %rsp,%rbp
    7a62:	48 83 ec 10          	sub    $0x10,%rsp
    7a66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    7a6e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7a73:	74 15                	je     7a8a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    7a75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a79:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7a7d:	48 89 d6             	mov    %rdx,%rsi
    7a80:	48 89 c7             	mov    %rax,%rdi
    7a83:	e8 0e 07 00 00       	call   8196 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    7a88:	eb 05                	jmp    7a8f <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    7a8a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    7a8f:	c9                   	leave
    7a90:	c3                   	ret

0000000000007a91 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    7a91:	55                   	push   %rbp
    7a92:	48 89 e5             	mov    %rsp,%rbp
    7a95:	48 83 ec 20          	sub    $0x20,%rsp
    7a99:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7a9d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    7aa1:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    7aa5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7aa9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7aad:	48 89 d6             	mov    %rdx,%rsi
    7ab0:	48 89 c7             	mov    %rax,%rdi
    7ab3:	e8 08 07 00 00       	call   81c0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    7ab8:	c9                   	leave
    7ab9:	c3                   	ret

0000000000007aba <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    7aba:	55                   	push   %rbp
    7abb:	48 89 e5             	mov    %rsp,%rbp
    7abe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ac2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7ac6:	90                   	nop
    7ac7:	5d                   	pop    %rbp
    7ac8:	c3                   	ret
    7ac9:	90                   	nop

0000000000007aca <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    7aca:	55                   	push   %rbp
    7acb:	48 89 e5             	mov    %rsp,%rbp
    7ace:	48 83 ec 20          	sub    $0x20,%rsp
    7ad2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ad6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7ada:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    7ade:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7ae2:	48 89 d0             	mov    %rdx,%rax
    7ae5:	48 01 c0             	add    %rax,%rax
    7ae8:	48 01 d0             	add    %rdx,%rax
    7aeb:	48 c1 e0 03          	shl    $0x3,%rax
    7aef:	48 89 c2             	mov    %rax,%rdx
    7af2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7af6:	48 89 d6             	mov    %rdx,%rsi
    7af9:	48 89 c7             	mov    %rax,%rdi
    7afc:	e8 6f b7 ff ff       	call   3270 <_ZdlPvm@plt>
      }
    7b01:	c9                   	leave
    7b02:	c3                   	ret

0000000000007b03 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    7b03:	55                   	push   %rbp
    7b04:	48 89 e5             	mov    %rsp,%rbp
    7b07:	48 83 ec 10          	sub    $0x10,%rsp
    7b0b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    7b0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b13:	48 89 c7             	mov    %rax,%rdi
    7b16:	e8 03 07 00 00       	call   821e <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>
      }
    7b1b:	c9                   	leave
    7b1c:	c3                   	ret
    7b1d:	90                   	nop

0000000000007b1e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    7b1e:	55                   	push   %rbp
    7b1f:	48 89 e5             	mov    %rsp,%rbp
    7b22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    7b26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b2a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    7b31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b35:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    7b3c:	00 
    7b3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b41:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    7b48:	00 
	{ }
    7b49:	90                   	nop
    7b4a:	5d                   	pop    %rbp
    7b4b:	c3                   	ret

0000000000007b4c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    7b4c:	55                   	push   %rbp
    7b4d:	48 89 e5             	mov    %rsp,%rbp
    7b50:	48 83 ec 10          	sub    $0x10,%rsp
    7b54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    7b5c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7b61:	74 15                	je     7b78 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x2c>
    7b63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b67:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7b6b:	48 89 d6             	mov    %rdx,%rsi
    7b6e:	48 89 c7             	mov    %rax,%rdi
    7b71:	e8 c2 06 00 00       	call   8238 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>
    7b76:	eb 05                	jmp    7b7d <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x31>
    7b78:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    7b7d:	c9                   	leave
    7b7e:	c3                   	ret

0000000000007b7f <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    7b7f:	55                   	push   %rbp
    7b80:	48 89 e5             	mov    %rsp,%rbp
    7b83:	48 83 ec 20          	sub    $0x20,%rsp
    7b87:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7b8b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    7b8f:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    7b93:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7b97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7b9b:	48 89 d6             	mov    %rdx,%rsi
    7b9e:	48 89 c7             	mov    %rax,%rdi
    7ba1:	e8 bc 06 00 00       	call   8262 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>
    }
    7ba6:	c9                   	leave
    7ba7:	c3                   	ret

0000000000007ba8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>:
    7ba8:	55                   	push   %rbp
    7ba9:	48 89 e5             	mov    %rsp,%rbp
    7bac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7bb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7bb4:	90                   	nop
    7bb5:	5d                   	pop    %rbp
    7bb6:	c3                   	ret

0000000000007bb7 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    7bb7:	55                   	push   %rbp
    7bb8:	48 89 e5             	mov    %rsp,%rbp
    7bbb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    7bbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bc3:	5d                   	pop    %rbp
    7bc4:	c3                   	ret

0000000000007bc5 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    7bc5:	55                   	push   %rbp
    7bc6:	48 89 e5             	mov    %rsp,%rbp
    7bc9:	53                   	push   %rbx
    7bca:	48 83 ec 18          	sub    $0x18,%rsp
    7bce:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7bd2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    7bd6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7bda:	48 89 c6             	mov    %rax,%rsi
    7bdd:	bf 18 00 00 00       	mov    $0x18,%edi
    7be2:	e8 a3 cd ff ff       	call   498a <_ZnwmPv>
    7be7:	48 89 c3             	mov    %rax,%rbx
    7bea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7bee:	48 89 c7             	mov    %rax,%rdi
    7bf1:	e8 96 e6 ff ff       	call   628c <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    7bf6:	48 89 c1             	mov    %rax,%rcx
    7bf9:	48 8b 01             	mov    (%rcx),%rax
    7bfc:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    7c00:	48 89 03             	mov    %rax,(%rbx)
    7c03:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    7c07:	48 8b 41 10          	mov    0x10(%rcx),%rax
    7c0b:	48 89 43 10          	mov    %rax,0x10(%rbx)
    }
    7c0f:	90                   	nop
    7c10:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7c14:	c9                   	leave
    7c15:	c3                   	ret

0000000000007c16 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    7c16:	55                   	push   %rbp
    7c17:	48 89 e5             	mov    %rsp,%rbp
    7c1a:	48 83 ec 20          	sub    $0x20,%rsp
    7c1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7c26:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    7c2a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7c2e:	48 89 d0             	mov    %rdx,%rax
    7c31:	48 c1 e0 03          	shl    $0x3,%rax
    7c35:	48 29 d0             	sub    %rdx,%rax
    7c38:	48 c1 e0 02          	shl    $0x2,%rax
    7c3c:	48 89 c2             	mov    %rax,%rdx
    7c3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7c43:	48 89 d6             	mov    %rdx,%rsi
    7c46:	48 89 c7             	mov    %rax,%rdi
    7c49:	e8 22 b6 ff ff       	call   3270 <_ZdlPvm@plt>
      }
    7c4e:	c9                   	leave
    7c4f:	c3                   	ret

0000000000007c50 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    7c50:	55                   	push   %rbp
    7c51:	48 89 e5             	mov    %rsp,%rbp
    7c54:	48 83 ec 10          	sub    $0x10,%rsp
    7c58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    7c5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c60:	48 89 c7             	mov    %rax,%rdi
    7c63:	e8 40 06 00 00       	call   82a8 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>
      }
    7c68:	c9                   	leave
    7c69:	c3                   	ret

0000000000007c6a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    7c6a:	55                   	push   %rbp
    7c6b:	48 89 e5             	mov    %rsp,%rbp
    7c6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    7c72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c76:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    7c7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c81:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    7c88:	00 
    7c89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c8d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    7c94:	00 
	{ }
    7c95:	90                   	nop
    7c96:	5d                   	pop    %rbp
    7c97:	c3                   	ret

0000000000007c98 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    7c98:	55                   	push   %rbp
    7c99:	48 89 e5             	mov    %rsp,%rbp
    7c9c:	48 83 ec 10          	sub    $0x10,%rsp
    7ca0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ca4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    7ca8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7cad:	74 15                	je     7cc4 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x2c>
    7caf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cb3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7cb7:	48 89 d6             	mov    %rdx,%rsi
    7cba:	48 89 c7             	mov    %rax,%rdi
    7cbd:	e8 00 06 00 00       	call   82c2 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>
    7cc2:	eb 05                	jmp    7cc9 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x31>
    7cc4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    7cc9:	c9                   	leave
    7cca:	c3                   	ret

0000000000007ccb <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    7ccb:	55                   	push   %rbp
    7ccc:	48 89 e5             	mov    %rsp,%rbp
    7ccf:	48 83 ec 20          	sub    $0x20,%rsp
    7cd3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7cd7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    7cdb:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    7cdf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7ce3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7ce7:	48 89 d6             	mov    %rdx,%rsi
    7cea:	48 89 c7             	mov    %rax,%rdi
    7ced:	e8 fa 05 00 00       	call   82ec <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>
    }
    7cf2:	c9                   	leave
    7cf3:	c3                   	ret

0000000000007cf4 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    7cf4:	55                   	push   %rbp
    7cf5:	48 89 e5             	mov    %rsp,%rbp
    7cf8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7cfc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7d00:	90                   	nop
    7d01:	5d                   	pop    %rbp
    7d02:	c3                   	ret
    7d03:	90                   	nop

0000000000007d04 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    7d04:	55                   	push   %rbp
    7d05:	48 89 e5             	mov    %rsp,%rbp
    7d08:	48 83 ec 20          	sub    $0x20,%rsp
    7d0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7d14:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    7d18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7d1c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7d23:	00 
    7d24:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7d28:	48 89 d6             	mov    %rdx,%rsi
    7d2b:	48 89 c7             	mov    %rax,%rdi
    7d2e:	e8 3d b5 ff ff       	call   3270 <_ZdlPvm@plt>
      }
    7d33:	c9                   	leave
    7d34:	c3                   	ret

0000000000007d35 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    7d35:	55                   	push   %rbp
    7d36:	48 89 e5             	mov    %rsp,%rbp
    7d39:	48 83 ec 10          	sub    $0x10,%rsp
    7d3d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    7d41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d45:	48 89 c7             	mov    %rax,%rdi
    7d48:	e8 fd 05 00 00       	call   834a <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>
      }
    7d4d:	c9                   	leave
    7d4e:	c3                   	ret
    7d4f:	90                   	nop

0000000000007d50 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    7d50:	55                   	push   %rbp
    7d51:	48 89 e5             	mov    %rsp,%rbp
    7d54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    7d58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d5c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    7d63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d67:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    7d6e:	00 
    7d6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d73:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    7d7a:	00 
	{ }
    7d7b:	90                   	nop
    7d7c:	5d                   	pop    %rbp
    7d7d:	c3                   	ret

0000000000007d7e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    7d7e:	55                   	push   %rbp
    7d7f:	48 89 e5             	mov    %rsp,%rbp
    7d82:	48 83 ec 10          	sub    $0x10,%rsp
    7d86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    7d8e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7d93:	74 15                	je     7daa <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x2c>
    7d95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d99:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7d9d:	48 89 d6             	mov    %rdx,%rsi
    7da0:	48 89 c7             	mov    %rax,%rdi
    7da3:	e8 bc 05 00 00       	call   8364 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>
    7da8:	eb 05                	jmp    7daf <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x31>
    7daa:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    7daf:	c9                   	leave
    7db0:	c3                   	ret

0000000000007db1 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    7db1:	55                   	push   %rbp
    7db2:	48 89 e5             	mov    %rsp,%rbp
    7db5:	48 83 ec 20          	sub    $0x20,%rsp
    7db9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7dbd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    7dc1:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    7dc5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7dc9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7dcd:	48 89 d6             	mov    %rdx,%rsi
    7dd0:	48 89 c7             	mov    %rax,%rdi
    7dd3:	e8 b6 05 00 00       	call   838e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>
    }
    7dd8:	c9                   	leave
    7dd9:	c3                   	ret

0000000000007dda <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>:
    7dda:	55                   	push   %rbp
    7ddb:	48 89 e5             	mov    %rsp,%rbp
    7dde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7de2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7de6:	90                   	nop
    7de7:	5d                   	pop    %rbp
    7de8:	c3                   	ret
    7de9:	90                   	nop

0000000000007dea <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    7dea:	55                   	push   %rbp
    7deb:	48 89 e5             	mov    %rsp,%rbp
    7dee:	48 83 ec 20          	sub    $0x20,%rsp
    7df2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7df6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7dfa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    7dfe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7e02:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    7e09:	00 
    7e0a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7e0e:	48 89 d6             	mov    %rdx,%rsi
    7e11:	48 89 c7             	mov    %rax,%rdi
    7e14:	e8 57 b4 ff ff       	call   3270 <_ZdlPvm@plt>
      }
    7e19:	c9                   	leave
    7e1a:	c3                   	ret
    7e1b:	90                   	nop

0000000000007e1c <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    7e1c:	55                   	push   %rbp
    7e1d:	48 89 e5             	mov    %rsp,%rbp
    7e20:	48 83 ec 10          	sub    $0x10,%rsp
    7e24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    7e28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e2c:	48 89 c7             	mov    %rax,%rdi
    7e2f:	e8 b8 05 00 00       	call   83ec <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    7e34:	c9                   	leave
    7e35:	c3                   	ret

0000000000007e36 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    7e36:	55                   	push   %rbp
    7e37:	48 89 e5             	mov    %rsp,%rbp
    7e3a:	48 83 ec 10          	sub    $0x10,%rsp
    7e3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e42:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    7e46:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7e4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e4e:	ba 00 00 00 00       	mov    $0x0,%edx
    7e53:	48 89 ce             	mov    %rcx,%rsi
    7e56:	48 89 c7             	mov    %rax,%rdi
    7e59:	e8 a2 05 00 00       	call   8400 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    7e5e:	c9                   	leave
    7e5f:	c3                   	ret

0000000000007e60 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    7e60:	55                   	push   %rbp
    7e61:	48 89 e5             	mov    %rsp,%rbp
    7e64:	48 83 ec 20          	sub    $0x20,%rsp
    7e68:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7e6c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    7e70:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    7e75:	74 43                	je     7eba <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    7e77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7e7b:	48 89 c7             	mov    %rax,%rdi
    7e7e:	e8 e8 05 00 00       	call   846b <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    7e83:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    7e87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e8b:	48 89 c7             	mov    %rax,%rdi
    7e8e:	e8 e6 05 00 00       	call   8479 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    7e93:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    7e9a:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    7e9b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7e9f:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    7ea3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7ea7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7eab:	48 89 ce             	mov    %rcx,%rsi
    7eae:	48 89 c7             	mov    %rax,%rdi
    7eb1:	e8 1d 06 00 00       	call   84d3 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    7eb6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    7eba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    7ebe:	c9                   	leave
    7ebf:	c3                   	ret

0000000000007ec0 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    7ec0:	55                   	push   %rbp
    7ec1:	48 89 e5             	mov    %rsp,%rbp
    7ec4:	48 83 ec 10          	sub    $0x10,%rsp
    7ec8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    7ecc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ed0:	48 89 c7             	mov    %rax,%rdi
    7ed3:	e8 40 06 00 00       	call   8518 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    7ed8:	c9                   	leave
    7ed9:	c3                   	ret

0000000000007eda <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    7eda:	55                   	push   %rbp
    7edb:	48 89 e5             	mov    %rsp,%rbp
    7ede:	48 83 ec 10          	sub    $0x10,%rsp
    7ee2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ee6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    7eea:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7eee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ef2:	ba 00 00 00 00       	mov    $0x0,%edx
    7ef7:	48 89 ce             	mov    %rcx,%rsi
    7efa:	48 89 c7             	mov    %rax,%rdi
    7efd:	e8 2a 06 00 00       	call   852c <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    7f02:	c9                   	leave
    7f03:	c3                   	ret

0000000000007f04 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    7f04:	55                   	push   %rbp
    7f05:	48 89 e5             	mov    %rsp,%rbp
    7f08:	48 83 ec 20          	sub    $0x20,%rsp
    7f0c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7f10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    7f14:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    7f19:	74 40                	je     7f5b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    7f1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f1f:	48 89 c7             	mov    %rax,%rdi
    7f22:	e8 66 06 00 00       	call   858d <_ZSt11__addressofIPKcEPT_RS2_>
    7f27:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    7f2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f2f:	48 89 c7             	mov    %rax,%rdi
    7f32:	e8 64 06 00 00       	call   859b <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    7f37:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    7f3c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7f40:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    7f44:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7f48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f4c:	48 89 ce             	mov    %rcx,%rsi
    7f4f:	48 89 c7             	mov    %rax,%rdi
    7f52:	e8 6b 06 00 00       	call   85c2 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    7f57:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    7f5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    7f5f:	c9                   	leave
    7f60:	c3                   	ret
    7f61:	90                   	nop

0000000000007f62 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    7f62:	55                   	push   %rbp
    7f63:	48 89 e5             	mov    %rsp,%rbp
    7f66:	48 83 ec 10          	sub    $0x10,%rsp
    7f6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    7f6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f72:	48 89 c7             	mov    %rax,%rdi
    7f75:	e8 8c 06 00 00       	call   8606 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    7f7a:	48 89 c7             	mov    %rax,%rdi
    7f7d:	e8 81 e8 ff ff       	call   6803 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    7f82:	c9                   	leave
    7f83:	c3                   	ret

0000000000007f84 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    7f84:	55                   	push   %rbp
    7f85:	48 89 e5             	mov    %rsp,%rbp
    7f88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    7f8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f90:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7f94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f98:	48 8b 00             	mov    (%rax),%rax
    7f9b:	48 29 c2             	sub    %rax,%rdx
    7f9e:	48 89 d0             	mov    %rdx,%rax
    7fa1:	48 c1 f8 03          	sar    $0x3,%rax
    7fa5:	5d                   	pop    %rbp
    7fa6:	c3                   	ret

0000000000007fa7 <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
    7fa7:	55                   	push   %rbp
    7fa8:	48 89 e5             	mov    %rsp,%rbp
    7fab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7faf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
    7fb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fb7:	48 8b 10             	mov    (%rax),%rdx
    7fba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7fbe:	48 8b 00             	mov    (%rax),%rax
    7fc1:	48 39 c2             	cmp    %rax,%rdx
    7fc4:	73 06                	jae    7fcc <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
    7fc6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7fca:	eb 04                	jmp    7fd0 <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
    7fcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    7fd0:	5d                   	pop    %rbp
    7fd1:	c3                   	ret

0000000000007fd2 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
    7fd2:	55                   	push   %rbp
    7fd3:	48 89 e5             	mov    %rsp,%rbp
    7fd6:	41 54                	push   %r12
    7fd8:	53                   	push   %rbx
    7fd9:	48 83 ec 20          	sub    $0x20,%rsp
    7fdd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7fe1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7fe5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    7fe9:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
    7fed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7ff1:	48 89 c7             	mov    %rax,%rdi
    7ff4:	e8 1b 06 00 00       	call   8614 <_ZSt12__niter_baseIPPKcET_S3_>
    7ff9:	49 89 c4             	mov    %rax,%r12
    7ffc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8000:	48 89 c7             	mov    %rax,%rdi
    8003:	e8 0c 06 00 00       	call   8614 <_ZSt12__niter_baseIPPKcET_S3_>
    8008:	48 89 c3             	mov    %rax,%rbx
    800b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    800f:	48 89 c7             	mov    %rax,%rdi
    8012:	e8 fd 05 00 00       	call   8614 <_ZSt12__niter_baseIPPKcET_S3_>
    8017:	48 89 c7             	mov    %rax,%rdi
    801a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    801e:	48 89 c1             	mov    %rax,%rcx
    8021:	4c 89 e2             	mov    %r12,%rdx
    8024:	48 89 de             	mov    %rbx,%rsi
    8027:	e8 f6 05 00 00       	call   8622 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
    802c:	48 83 c4 20          	add    $0x20,%rsp
    8030:	5b                   	pop    %rbx
    8031:	41 5c                	pop    %r12
    8033:	5d                   	pop    %rbp
    8034:	c3                   	ret
    8035:	90                   	nop

0000000000008036 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    8036:	55                   	push   %rbp
    8037:	48 89 e5             	mov    %rsp,%rbp
    803a:	48 83 ec 10          	sub    $0x10,%rsp
    803e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    8042:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8046:	48 89 c7             	mov    %rax,%rdi
    8049:	e8 38 06 00 00       	call   8686 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    804e:	c9                   	leave
    804f:	c3                   	ret

0000000000008050 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    8050:	55                   	push   %rbp
    8051:	48 89 e5             	mov    %rsp,%rbp
    8054:	48 83 ec 10          	sub    $0x10,%rsp
    8058:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    805c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    8060:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8064:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8068:	ba 00 00 00 00       	mov    $0x0,%edx
    806d:	48 89 ce             	mov    %rcx,%rsi
    8070:	48 89 c7             	mov    %rax,%rdi
    8073:	e8 22 06 00 00       	call   869a <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
    8078:	c9                   	leave
    8079:	c3                   	ret

000000000000807a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    807a:	55                   	push   %rbp
    807b:	48 89 e5             	mov    %rsp,%rbp
    807e:	48 83 ec 20          	sub    $0x20,%rsp
    8082:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8086:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    808a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    808f:	74 43                	je     80d4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    8091:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8095:	48 89 c7             	mov    %rax,%rdi
    8098:	e8 68 06 00 00       	call   8705 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
    809d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    80a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80a5:	48 89 c7             	mov    %rax,%rdi
    80a8:	e8 66 06 00 00       	call   8713 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
    80ad:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
    80b4:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    80b5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    80b9:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    80bd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    80c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    80c5:	48 89 ce             	mov    %rcx,%rsi
    80c8:	48 89 c7             	mov    %rax,%rdi
    80cb:	e8 9d 06 00 00       	call   876d <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
    80d0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    80d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    80d8:	c9                   	leave
    80d9:	c3                   	ret

00000000000080da <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    80da:	55                   	push   %rbp
    80db:	48 89 e5             	mov    %rsp,%rbp
    80de:	48 83 ec 10          	sub    $0x10,%rsp
    80e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    80e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80ea:	48 89 c7             	mov    %rax,%rdi
    80ed:	e8 c0 06 00 00       	call   87b2 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    80f2:	c9                   	leave
    80f3:	c3                   	ret

00000000000080f4 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    80f4:	55                   	push   %rbp
    80f5:	48 89 e5             	mov    %rsp,%rbp
    80f8:	48 83 ec 10          	sub    $0x10,%rsp
    80fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8100:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    8104:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8108:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    810c:	ba 00 00 00 00       	mov    $0x0,%edx
    8111:	48 89 ce             	mov    %rcx,%rsi
    8114:	48 89 c7             	mov    %rax,%rdi
    8117:	e8 aa 06 00 00       	call   87c6 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    811c:	c9                   	leave
    811d:	c3                   	ret

000000000000811e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    811e:	55                   	push   %rbp
    811f:	48 89 e5             	mov    %rsp,%rbp
    8122:	48 83 ec 20          	sub    $0x20,%rsp
    8126:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    812a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    812e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    8133:	74 40                	je     8175 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    8135:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8139:	48 89 c7             	mov    %rax,%rdi
    813c:	e8 e6 06 00 00       	call   8827 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    8141:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    8145:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8149:	48 89 c7             	mov    %rax,%rdi
    814c:	e8 e4 06 00 00       	call   8835 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    8151:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    8156:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    815a:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    815e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8162:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8166:	48 89 ce             	mov    %rcx,%rsi
    8169:	48 89 c7             	mov    %rax,%rdi
    816c:	e8 eb 06 00 00       	call   885c <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    8171:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    8175:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    8179:	c9                   	leave
    817a:	c3                   	ret
    817b:	90                   	nop

000000000000817c <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    817c:	55                   	push   %rbp
    817d:	48 89 e5             	mov    %rsp,%rbp
    8180:	48 83 ec 10          	sub    $0x10,%rsp
    8184:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    8188:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    818c:	48 89 c7             	mov    %rax,%rdi
    818f:	e8 0c 07 00 00       	call   88a0 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    8194:	c9                   	leave
    8195:	c3                   	ret

0000000000008196 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    8196:	55                   	push   %rbp
    8197:	48 89 e5             	mov    %rsp,%rbp
    819a:	48 83 ec 10          	sub    $0x10,%rsp
    819e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    81a6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    81aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81ae:	ba 00 00 00 00       	mov    $0x0,%edx
    81b3:	48 89 ce             	mov    %rcx,%rsi
    81b6:	48 89 c7             	mov    %rax,%rdi
    81b9:	e8 f6 06 00 00       	call   88b4 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    81be:	c9                   	leave
    81bf:	c3                   	ret

00000000000081c0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    81c0:	55                   	push   %rbp
    81c1:	48 89 e5             	mov    %rsp,%rbp
    81c4:	48 83 ec 20          	sub    $0x20,%rsp
    81c8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    81cc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    81d0:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    81d5:	74 40                	je     8217 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    81d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    81db:	48 89 c7             	mov    %rax,%rdi
    81de:	e8 d4 f9 ff ff       	call   7bb7 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    81e3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    81e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81eb:	48 89 c7             	mov    %rax,%rdi
    81ee:	e8 2b 07 00 00       	call   891e <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    81f3:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    81f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    81fc:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    8200:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8204:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8208:	48 89 ce             	mov    %rcx,%rsi
    820b:	48 89 c7             	mov    %rax,%rdi
    820e:	e8 54 07 00 00       	call   8967 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    8213:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    8217:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    821b:	c9                   	leave
    821c:	c3                   	ret
    821d:	90                   	nop

000000000000821e <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    821e:	55                   	push   %rbp
    821f:	48 89 e5             	mov    %rsp,%rbp
    8222:	48 83 ec 10          	sub    $0x10,%rsp
    8226:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    822a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    822e:	48 89 c7             	mov    %rax,%rdi
    8231:	e8 76 07 00 00       	call   89ac <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    8236:	c9                   	leave
    8237:	c3                   	ret

0000000000008238 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>:
      allocate(allocator_type& __a, size_type __n)
    8238:	55                   	push   %rbp
    8239:	48 89 e5             	mov    %rsp,%rbp
    823c:	48 83 ec 10          	sub    $0x10,%rsp
    8240:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8244:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    8248:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    824c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8250:	ba 00 00 00 00       	mov    $0x0,%edx
    8255:	48 89 ce             	mov    %rcx,%rsi
    8258:	48 89 c7             	mov    %rax,%rdi
    825b:	e8 60 07 00 00       	call   89c0 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>
    8260:	c9                   	leave
    8261:	c3                   	ret

0000000000008262 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    8262:	55                   	push   %rbp
    8263:	48 89 e5             	mov    %rsp,%rbp
    8266:	48 83 ec 20          	sub    $0x20,%rsp
    826a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    826e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
    8272:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8276:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
    827a:	eb 1e                	jmp    829a <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
    827c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8280:	48 89 c7             	mov    %rax,%rdi
    8283:	e8 a3 07 00 00       	call   8a2b <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>
    8288:	48 89 c7             	mov    %rax,%rdi
    828b:	e8 a9 07 00 00       	call   8a39 <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
    8290:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
    8295:	48 83 45 f8 1c       	addq   $0x1c,-0x8(%rbp)
    829a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    829f:	75 db                	jne    827c <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x1a>
	      return __cur;
    82a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    82a5:	c9                   	leave
    82a6:	c3                   	ret
    82a7:	90                   	nop

00000000000082a8 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    82a8:	55                   	push   %rbp
    82a9:	48 89 e5             	mov    %rsp,%rbp
    82ac:	48 83 ec 10          	sub    $0x10,%rsp
    82b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    82b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82b8:	48 89 c7             	mov    %rax,%rdi
    82bb:	e8 a2 07 00 00       	call   8a62 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    82c0:	c9                   	leave
    82c1:	c3                   	ret

00000000000082c2 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    82c2:	55                   	push   %rbp
    82c3:	48 89 e5             	mov    %rsp,%rbp
    82c6:	48 83 ec 10          	sub    $0x10,%rsp
    82ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    82d2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    82d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82da:	ba 00 00 00 00       	mov    $0x0,%edx
    82df:	48 89 ce             	mov    %rcx,%rsi
    82e2:	48 89 c7             	mov    %rax,%rdi
    82e5:	e8 8c 07 00 00       	call   8a76 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>
    82ea:	c9                   	leave
    82eb:	c3                   	ret

00000000000082ec <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    82ec:	55                   	push   %rbp
    82ed:	48 89 e5             	mov    %rsp,%rbp
    82f0:	48 83 ec 20          	sub    $0x20,%rsp
    82f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    82f8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    82fc:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    8301:	74 40                	je     8343 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    8303:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8307:	48 89 c7             	mov    %rax,%rdi
    830a:	e8 c8 07 00 00       	call   8ad7 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>
    830f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    8313:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8317:	48 89 c7             	mov    %rax,%rdi
    831a:	e8 c6 07 00 00       	call   8ae5 <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>
	      ++__first;
    831f:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    8324:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8328:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    832c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8330:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8334:	48 89 ce             	mov    %rcx,%rsi
    8337:	48 89 c7             	mov    %rax,%rdi
    833a:	e8 d3 07 00 00       	call   8b12 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>
    833f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    8343:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    8347:	c9                   	leave
    8348:	c3                   	ret
    8349:	90                   	nop

000000000000834a <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    834a:	55                   	push   %rbp
    834b:	48 89 e5             	mov    %rsp,%rbp
    834e:	48 83 ec 10          	sub    $0x10,%rsp
    8352:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    8356:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    835a:	48 89 c7             	mov    %rax,%rdi
    835d:	e8 f4 07 00 00       	call   8b56 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    8362:	c9                   	leave
    8363:	c3                   	ret

0000000000008364 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    8364:	55                   	push   %rbp
    8365:	48 89 e5             	mov    %rsp,%rbp
    8368:	48 83 ec 10          	sub    $0x10,%rsp
    836c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8370:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    8374:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8378:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    837c:	ba 00 00 00 00       	mov    $0x0,%edx
    8381:	48 89 ce             	mov    %rcx,%rsi
    8384:	48 89 c7             	mov    %rax,%rdi
    8387:	e8 de 07 00 00       	call   8b6a <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>
    838c:	c9                   	leave
    838d:	c3                   	ret

000000000000838e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    838e:	55                   	push   %rbp
    838f:	48 89 e5             	mov    %rsp,%rbp
    8392:	48 83 ec 20          	sub    $0x20,%rsp
    8396:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    839a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    839e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    83a3:	74 40                	je     83e5 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    83a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    83a9:	48 89 c7             	mov    %rax,%rdi
    83ac:	e8 1a 08 00 00       	call   8bcb <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>
    83b1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    83b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83b9:	48 89 c7             	mov    %rax,%rdi
    83bc:	e8 18 08 00 00       	call   8bd9 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>
	      ++__first;
    83c1:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    83c6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    83ca:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    83ce:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    83d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    83d6:	48 89 ce             	mov    %rcx,%rsi
    83d9:	48 89 c7             	mov    %rax,%rdi
    83dc:	e8 1e 08 00 00       	call   8bff <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>
    83e1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    83e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    83e9:	c9                   	leave
    83ea:	c3                   	ret
    83eb:	90                   	nop

00000000000083ec <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    83ec:	55                   	push   %rbp
    83ed:	48 89 e5             	mov    %rsp,%rbp
    83f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    83f4:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    83fb:	07 7e 00 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    83fe:	5d                   	pop    %rbp
    83ff:	c3                   	ret

0000000000008400 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    8400:	55                   	push   %rbp
    8401:	48 89 e5             	mov    %rsp,%rbp
    8404:	48 83 ec 20          	sub    $0x20,%rsp
    8408:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    840c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8410:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    8414:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8418:	48 89 c7             	mov    %rax,%rdi
    841b:	e8 cc ff ff ff       	call   83ec <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    8420:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8424:	0f 92 c0             	setb   %al
    8427:	0f b6 c0             	movzbl %al,%eax
    842a:	48 85 c0             	test   %rax,%rax
    842d:	0f 95 c0             	setne  %al
    8430:	84 c0                	test   %al,%al
    8432:	74 1a                	je     844e <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    8434:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    843b:	0f fc 00 
    843e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8442:	73 05                	jae    8449 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    8444:	e8 57 ad ff ff       	call   31a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    8449:	e8 42 ac ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    844e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8452:	48 89 d0             	mov    %rdx,%rax
    8455:	48 c1 e0 06          	shl    $0x6,%rax
    8459:	48 01 d0             	add    %rdx,%rax
    845c:	48 c1 e0 02          	shl    $0x2,%rax
    8460:	48 89 c7             	mov    %rax,%rdi
    8463:	e8 f8 ad ff ff       	call   3260 <_Znwm@plt>
    8468:	90                   	nop
      }
    8469:	c9                   	leave
    846a:	c3                   	ret

000000000000846b <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    846b:	55                   	push   %rbp
    846c:	48 89 e5             	mov    %rsp,%rbp
    846f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    8473:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8477:	5d                   	pop    %rbp
    8478:	c3                   	ret

0000000000008479 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    8479:	55                   	push   %rbp
    847a:	48 89 e5             	mov    %rsp,%rbp
    847d:	48 83 ec 10          	sub    $0x10,%rsp
    8481:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    8485:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8489:	48 89 c6             	mov    %rax,%rsi
    848c:	bf 04 01 00 00       	mov    $0x104,%edi
    8491:	e8 f4 c4 ff ff       	call   498a <_ZnwmPv>
    8496:	b9 04 01 00 00       	mov    $0x104,%ecx
    849b:	be 00 00 00 00       	mov    $0x0,%esi
    84a0:	48 89 30             	mov    %rsi,(%rax)
    84a3:	89 ca                	mov    %ecx,%edx
    84a5:	48 01 c2             	add    %rax,%rdx
    84a8:	48 83 c2 08          	add    $0x8,%rdx
    84ac:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    84b0:	48 8d 50 08          	lea    0x8(%rax),%rdx
    84b4:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    84b8:	48 29 d0             	sub    %rdx,%rax
    84bb:	01 c1                	add    %eax,%ecx
    84bd:	83 e1 f8             	and    $0xfffffff8,%ecx
    84c0:	89 c8                	mov    %ecx,%eax
    84c2:	c1 e8 03             	shr    $0x3,%eax
    84c5:	89 c1                	mov    %eax,%ecx
    84c7:	48 89 d7             	mov    %rdx,%rdi
    84ca:	48 89 f0             	mov    %rsi,%rax
    84cd:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    84d0:	90                   	nop
    84d1:	c9                   	leave
    84d2:	c3                   	ret

00000000000084d3 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    84d3:	55                   	push   %rbp
    84d4:	48 89 e5             	mov    %rsp,%rbp
    84d7:	48 83 ec 20          	sub    $0x20,%rsp
    84db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    84df:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    84e3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    84e7:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    84eb:	48 89 c7             	mov    %rax,%rdi
    84ee:	e8 50 07 00 00       	call   8c43 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    84f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    84f7:	48 89 c7             	mov    %rax,%rdi
    84fa:	e8 9d c4 ff ff       	call   499c <_ZSt17__size_to_integerm>
    84ff:	48 89 c1             	mov    %rax,%rcx
    8502:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8506:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    850a:	48 89 ce             	mov    %rcx,%rsi
    850d:	48 89 c7             	mov    %rax,%rdi
    8510:	e8 39 07 00 00       	call   8c4e <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    8515:	c9                   	leave
    8516:	c3                   	ret
    8517:	90                   	nop

0000000000008518 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    8518:	55                   	push   %rbp
    8519:	48 89 e5             	mov    %rsp,%rbp
    851c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    8520:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    8527:	ff ff 0f 
      }
    852a:	5d                   	pop    %rbp
    852b:	c3                   	ret

000000000000852c <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    852c:	55                   	push   %rbp
    852d:	48 89 e5             	mov    %rsp,%rbp
    8530:	48 83 ec 20          	sub    $0x20,%rsp
    8534:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8538:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    853c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    8540:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8544:	48 89 c7             	mov    %rax,%rdi
    8547:	e8 cc ff ff ff       	call   8518 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    854c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8550:	0f 92 c0             	setb   %al
    8553:	0f b6 c0             	movzbl %al,%eax
    8556:	48 85 c0             	test   %rax,%rax
    8559:	0f 95 c0             	setne  %al
    855c:	84 c0                	test   %al,%al
    855e:	74 1a                	je     857a <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    8560:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    8567:	ff ff 1f 
    856a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    856e:	73 05                	jae    8575 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    8570:	e8 2b ac ff ff       	call   31a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    8575:	e8 16 ab ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    857a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    857e:	48 c1 e0 03          	shl    $0x3,%rax
    8582:	48 89 c7             	mov    %rax,%rdi
    8585:	e8 d6 ac ff ff       	call   3260 <_Znwm@plt>
    858a:	90                   	nop
      }
    858b:	c9                   	leave
    858c:	c3                   	ret

000000000000858d <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    858d:	55                   	push   %rbp
    858e:	48 89 e5             	mov    %rsp,%rbp
    8591:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    8595:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8599:	5d                   	pop    %rbp
    859a:	c3                   	ret

000000000000859b <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    859b:	55                   	push   %rbp
    859c:	48 89 e5             	mov    %rsp,%rbp
    859f:	48 83 ec 10          	sub    $0x10,%rsp
    85a3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    85a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85ab:	48 89 c6             	mov    %rax,%rsi
    85ae:	bf 08 00 00 00       	mov    $0x8,%edi
    85b3:	e8 d2 c3 ff ff       	call   498a <_ZnwmPv>
    85b8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    85bf:	90                   	nop
    85c0:	c9                   	leave
    85c1:	c3                   	ret

00000000000085c2 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    85c2:	55                   	push   %rbp
    85c3:	48 89 e5             	mov    %rsp,%rbp
    85c6:	48 83 ec 20          	sub    $0x20,%rsp
    85ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    85ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    85d2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    85d6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    85da:	48 89 c7             	mov    %rax,%rdi
    85dd:	e8 db 06 00 00       	call   8cbd <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    85e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    85e6:	48 89 c7             	mov    %rax,%rdi
    85e9:	e8 ae c3 ff ff       	call   499c <_ZSt17__size_to_integerm>
    85ee:	48 89 c1             	mov    %rax,%rcx
    85f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85f5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    85f9:	48 89 ce             	mov    %rcx,%rsi
    85fc:	48 89 c7             	mov    %rax,%rdi
    85ff:	e8 c4 06 00 00       	call   8cc8 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    8604:	c9                   	leave
    8605:	c3                   	ret

0000000000008606 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    8606:	55                   	push   %rbp
    8607:	48 89 e5             	mov    %rsp,%rbp
    860a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    860e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8612:	5d                   	pop    %rbp
    8613:	c3                   	ret

0000000000008614 <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
    8614:	55                   	push   %rbp
    8615:	48 89 e5             	mov    %rsp,%rbp
    8618:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    861c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8620:	5d                   	pop    %rbp
    8621:	c3                   	ret

0000000000008622 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
    8622:	55                   	push   %rbp
    8623:	48 89 e5             	mov    %rsp,%rbp
    8626:	48 83 ec 30          	sub    $0x30,%rsp
    862a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    862e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8632:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    8636:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
    863a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    863e:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    8642:	48 c1 f8 03          	sar    $0x3,%rax
    8646:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
    864a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    864f:	7e 1f                	jle    8670 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    8651:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8655:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    865c:	00 
    865d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    8661:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8665:	48 89 ce             	mov    %rcx,%rsi
    8668:	48 89 c7             	mov    %rax,%rdi
    866b:	e8 c0 ad ff ff       	call   3430 <memmove@plt>
      return __result + __count;
    8670:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8674:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    867b:	00 
    867c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8680:	48 01 d0             	add    %rdx,%rax
    }
    8683:	c9                   	leave
    8684:	c3                   	ret
    8685:	90                   	nop

0000000000008686 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    8686:	55                   	push   %rbp
    8687:	48 89 e5             	mov    %rsp,%rbp
    868a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    868e:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    8695:	03 3f 00 
      }
    8698:	5d                   	pop    %rbp
    8699:	c3                   	ret

000000000000869a <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    869a:	55                   	push   %rbp
    869b:	48 89 e5             	mov    %rsp,%rbp
    869e:	48 83 ec 20          	sub    $0x20,%rsp
    86a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    86a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    86aa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    86ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86b2:	48 89 c7             	mov    %rax,%rdi
    86b5:	e8 cc ff ff ff       	call   8686 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    86ba:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    86be:	0f 92 c0             	setb   %al
    86c1:	0f b6 c0             	movzbl %al,%eax
    86c4:	48 85 c0             	test   %rax,%rax
    86c7:	0f 95 c0             	setne  %al
    86ca:	84 c0                	test   %al,%al
    86cc:	74 1a                	je     86e8 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    86ce:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    86d5:	07 7e 00 
    86d8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    86dc:	73 05                	jae    86e3 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    86de:	e8 bd aa ff ff       	call   31a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    86e3:	e8 a8 a9 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    86e8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    86ec:	48 89 d0             	mov    %rdx,%rax
    86ef:	48 c1 e0 06          	shl    $0x6,%rax
    86f3:	48 01 d0             	add    %rdx,%rax
    86f6:	48 c1 e0 03          	shl    $0x3,%rax
    86fa:	48 89 c7             	mov    %rax,%rdi
    86fd:	e8 5e ab ff ff       	call   3260 <_Znwm@plt>
    8702:	90                   	nop
      }
    8703:	c9                   	leave
    8704:	c3                   	ret

0000000000008705 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    8705:	55                   	push   %rbp
    8706:	48 89 e5             	mov    %rsp,%rbp
    8709:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    870d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8711:	5d                   	pop    %rbp
    8712:	c3                   	ret

0000000000008713 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    8713:	55                   	push   %rbp
    8714:	48 89 e5             	mov    %rsp,%rbp
    8717:	48 83 ec 10          	sub    $0x10,%rsp
    871b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    871f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8723:	48 89 c6             	mov    %rax,%rsi
    8726:	bf 08 02 00 00       	mov    $0x208,%edi
    872b:	e8 5a c2 ff ff       	call   498a <_ZnwmPv>
    8730:	b9 08 02 00 00       	mov    $0x208,%ecx
    8735:	be 00 00 00 00       	mov    $0x0,%esi
    873a:	48 89 30             	mov    %rsi,(%rax)
    873d:	89 ca                	mov    %ecx,%edx
    873f:	48 01 c2             	add    %rax,%rdx
    8742:	48 83 c2 08          	add    $0x8,%rdx
    8746:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    874a:	48 8d 50 08          	lea    0x8(%rax),%rdx
    874e:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    8752:	48 29 d0             	sub    %rdx,%rax
    8755:	01 c1                	add    %eax,%ecx
    8757:	83 e1 f8             	and    $0xfffffff8,%ecx
    875a:	89 c8                	mov    %ecx,%eax
    875c:	c1 e8 03             	shr    $0x3,%eax
    875f:	89 c1                	mov    %eax,%ecx
    8761:	48 89 d7             	mov    %rdx,%rdi
    8764:	48 89 f0             	mov    %rsi,%rax
    8767:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    876a:	90                   	nop
    876b:	c9                   	leave
    876c:	c3                   	ret

000000000000876d <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    876d:	55                   	push   %rbp
    876e:	48 89 e5             	mov    %rsp,%rbp
    8771:	48 83 ec 20          	sub    $0x20,%rsp
    8775:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8779:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    877d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    8781:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8785:	48 89 c7             	mov    %rax,%rdi
    8788:	e8 98 05 00 00       	call   8d25 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    878d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8791:	48 89 c7             	mov    %rax,%rdi
    8794:	e8 03 c2 ff ff       	call   499c <_ZSt17__size_to_integerm>
    8799:	48 89 c1             	mov    %rax,%rcx
    879c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87a0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    87a4:	48 89 ce             	mov    %rcx,%rsi
    87a7:	48 89 c7             	mov    %rax,%rdi
    87aa:	e8 81 05 00 00       	call   8d30 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    87af:	c9                   	leave
    87b0:	c3                   	ret
    87b1:	90                   	nop

00000000000087b2 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    87b2:	55                   	push   %rbp
    87b3:	48 89 e5             	mov    %rsp,%rbp
    87b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    87ba:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    87c1:	ff ff 0f 
      }
    87c4:	5d                   	pop    %rbp
    87c5:	c3                   	ret

00000000000087c6 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    87c6:	55                   	push   %rbp
    87c7:	48 89 e5             	mov    %rsp,%rbp
    87ca:	48 83 ec 20          	sub    $0x20,%rsp
    87ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    87d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    87d6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    87da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87de:	48 89 c7             	mov    %rax,%rdi
    87e1:	e8 cc ff ff ff       	call   87b2 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    87e6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    87ea:	0f 92 c0             	setb   %al
    87ed:	0f b6 c0             	movzbl %al,%eax
    87f0:	48 85 c0             	test   %rax,%rax
    87f3:	0f 95 c0             	setne  %al
    87f6:	84 c0                	test   %al,%al
    87f8:	74 1a                	je     8814 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    87fa:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    8801:	ff ff 1f 
    8804:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8808:	73 05                	jae    880f <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    880a:	e8 91 a9 ff ff       	call   31a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    880f:	e8 7c a8 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    8814:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8818:	48 c1 e0 03          	shl    $0x3,%rax
    881c:	48 89 c7             	mov    %rax,%rdi
    881f:	e8 3c aa ff ff       	call   3260 <_Znwm@plt>
    8824:	90                   	nop
      }
    8825:	c9                   	leave
    8826:	c3                   	ret

0000000000008827 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    8827:	55                   	push   %rbp
    8828:	48 89 e5             	mov    %rsp,%rbp
    882b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    882f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8833:	5d                   	pop    %rbp
    8834:	c3                   	ret

0000000000008835 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    8835:	55                   	push   %rbp
    8836:	48 89 e5             	mov    %rsp,%rbp
    8839:	48 83 ec 10          	sub    $0x10,%rsp
    883d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    8841:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8845:	48 89 c6             	mov    %rax,%rsi
    8848:	bf 08 00 00 00       	mov    $0x8,%edi
    884d:	e8 38 c1 ff ff       	call   498a <_ZnwmPv>
    8852:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    8859:	90                   	nop
    885a:	c9                   	leave
    885b:	c3                   	ret

000000000000885c <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    885c:	55                   	push   %rbp
    885d:	48 89 e5             	mov    %rsp,%rbp
    8860:	48 83 ec 20          	sub    $0x20,%rsp
    8864:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8868:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    886c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    8870:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8874:	48 89 c7             	mov    %rax,%rdi
    8877:	e8 23 05 00 00       	call   8d9f <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    887c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8880:	48 89 c7             	mov    %rax,%rdi
    8883:	e8 14 c1 ff ff       	call   499c <_ZSt17__size_to_integerm>
    8888:	48 89 c1             	mov    %rax,%rcx
    888b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    888f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8893:	48 89 ce             	mov    %rcx,%rsi
    8896:	48 89 c7             	mov    %rax,%rdi
    8899:	e8 0c 05 00 00       	call   8daa <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    889e:	c9                   	leave
    889f:	c3                   	ret

00000000000088a0 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    88a0:	55                   	push   %rbp
    88a1:	48 89 e5             	mov    %rsp,%rbp
    88a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    88a8:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    88af:	55 55 05 
      }
    88b2:	5d                   	pop    %rbp
    88b3:	c3                   	ret

00000000000088b4 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    88b4:	55                   	push   %rbp
    88b5:	48 89 e5             	mov    %rsp,%rbp
    88b8:	48 83 ec 20          	sub    $0x20,%rsp
    88bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    88c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    88c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    88c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88cc:	48 89 c7             	mov    %rax,%rdi
    88cf:	e8 cc ff ff ff       	call   88a0 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    88d4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    88d8:	0f 92 c0             	setb   %al
    88db:	0f b6 c0             	movzbl %al,%eax
    88de:	48 85 c0             	test   %rax,%rax
    88e1:	0f 95 c0             	setne  %al
    88e4:	84 c0                	test   %al,%al
    88e6:	74 1a                	je     8902 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    88e8:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    88ef:	aa aa 0a 
    88f2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    88f6:	73 05                	jae    88fd <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    88f8:	e8 a3 a8 ff ff       	call   31a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    88fd:	e8 8e a7 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    8902:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8906:	48 89 d0             	mov    %rdx,%rax
    8909:	48 01 c0             	add    %rax,%rax
    890c:	48 01 d0             	add    %rdx,%rax
    890f:	48 c1 e0 03          	shl    $0x3,%rax
    8913:	48 89 c7             	mov    %rax,%rdi
    8916:	e8 45 a9 ff ff       	call   3260 <_Znwm@plt>
    891b:	90                   	nop
      }
    891c:	c9                   	leave
    891d:	c3                   	ret

000000000000891e <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    891e:	55                   	push   %rbp
    891f:	48 89 e5             	mov    %rsp,%rbp
    8922:	48 83 ec 10          	sub    $0x10,%rsp
    8926:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    892a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    892e:	48 89 c6             	mov    %rax,%rsi
    8931:	bf 18 00 00 00       	mov    $0x18,%edi
    8936:	e8 4f c0 ff ff       	call   498a <_ZnwmPv>
    893b:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    8941:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    8948:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    894f:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    8956:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    895d:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    8964:	90                   	nop
    8965:	c9                   	leave
    8966:	c3                   	ret

0000000000008967 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    8967:	55                   	push   %rbp
    8968:	48 89 e5             	mov    %rsp,%rbp
    896b:	48 83 ec 20          	sub    $0x20,%rsp
    896f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8973:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8977:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    897b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    897f:	48 89 c7             	mov    %rax,%rdi
    8982:	e8 80 04 00 00       	call   8e07 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    8987:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    898b:	48 89 c7             	mov    %rax,%rdi
    898e:	e8 09 c0 ff ff       	call   499c <_ZSt17__size_to_integerm>
    8993:	48 89 c1             	mov    %rax,%rcx
    8996:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    899a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    899e:	48 89 ce             	mov    %rcx,%rsi
    89a1:	48 89 c7             	mov    %rax,%rdi
    89a4:	e8 69 04 00 00       	call   8e12 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    89a9:	c9                   	leave
    89aa:	c3                   	ret
    89ab:	90                   	nop

00000000000089ac <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    89ac:	55                   	push   %rbp
    89ad:	48 89 e5             	mov    %rsp,%rbp
    89b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    89b4:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    89bb:	49 92 04 
      }
    89be:	5d                   	pop    %rbp
    89bf:	c3                   	ret

00000000000089c0 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    89c0:	55                   	push   %rbp
    89c1:	48 89 e5             	mov    %rsp,%rbp
    89c4:	48 83 ec 20          	sub    $0x20,%rsp
    89c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    89cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    89d0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    89d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89d8:	48 89 c7             	mov    %rax,%rdi
    89db:	e8 cc ff ff ff       	call   89ac <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    89e0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    89e4:	0f 92 c0             	setb   %al
    89e7:	0f b6 c0             	movzbl %al,%eax
    89ea:	48 85 c0             	test   %rax,%rax
    89ed:	0f 95 c0             	setne  %al
    89f0:	84 c0                	test   %al,%al
    89f2:	74 1a                	je     8a0e <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    89f4:	48 b8 24 49 92 24 49 	movabs $0x924924924924924,%rax
    89fb:	92 24 09 
    89fe:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8a02:	73 05                	jae    8a09 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    8a04:	e8 97 a7 ff ff       	call   31a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    8a09:	e8 82 a6 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    8a0e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8a12:	48 89 d0             	mov    %rdx,%rax
    8a15:	48 c1 e0 03          	shl    $0x3,%rax
    8a19:	48 29 d0             	sub    %rdx,%rax
    8a1c:	48 c1 e0 02          	shl    $0x2,%rax
    8a20:	48 89 c7             	mov    %rax,%rdi
    8a23:	e8 38 a8 ff ff       	call   3260 <_Znwm@plt>
    8a28:	90                   	nop
      }
    8a29:	c9                   	leave
    8a2a:	c3                   	ret

0000000000008a2b <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    8a2b:	55                   	push   %rbp
    8a2c:	48 89 e5             	mov    %rsp,%rbp
    8a2f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    8a33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a37:	5d                   	pop    %rbp
    8a38:	c3                   	ret

0000000000008a39 <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    8a39:	55                   	push   %rbp
    8a3a:	48 89 e5             	mov    %rsp,%rbp
    8a3d:	48 83 ec 10          	sub    $0x10,%rsp
    8a41:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    8a45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a49:	48 89 c6             	mov    %rax,%rsi
    8a4c:	bf 1c 00 00 00       	mov    $0x1c,%edi
    8a51:	e8 34 bf ff ff       	call   498a <_ZnwmPv>
    8a56:	48 89 c7             	mov    %rax,%rdi
    8a59:	e8 7e 04 00 00       	call   8edc <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>
    }
    8a5e:	90                   	nop
    8a5f:	c9                   	leave
    8a60:	c3                   	ret
    8a61:	90                   	nop

0000000000008a62 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    8a62:	55                   	push   %rbp
    8a63:	48 89 e5             	mov    %rsp,%rbp
    8a66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    8a6a:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    8a71:	ff ff 0f 
      }
    8a74:	5d                   	pop    %rbp
    8a75:	c3                   	ret

0000000000008a76 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    8a76:	55                   	push   %rbp
    8a77:	48 89 e5             	mov    %rsp,%rbp
    8a7a:	48 83 ec 20          	sub    $0x20,%rsp
    8a7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a82:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8a86:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    8a8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a8e:	48 89 c7             	mov    %rax,%rdi
    8a91:	e8 cc ff ff ff       	call   8a62 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    8a96:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8a9a:	0f 92 c0             	setb   %al
    8a9d:	0f b6 c0             	movzbl %al,%eax
    8aa0:	48 85 c0             	test   %rax,%rax
    8aa3:	0f 95 c0             	setne  %al
    8aa6:	84 c0                	test   %al,%al
    8aa8:	74 1a                	je     8ac4 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    8aaa:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    8ab1:	ff ff 1f 
    8ab4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8ab8:	73 05                	jae    8abf <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    8aba:	e8 e1 a6 ff ff       	call   31a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    8abf:	e8 cc a5 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    8ac4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8ac8:	48 c1 e0 03          	shl    $0x3,%rax
    8acc:	48 89 c7             	mov    %rax,%rdi
    8acf:	e8 8c a7 ff ff       	call   3260 <_Znwm@plt>
    8ad4:	90                   	nop
      }
    8ad5:	c9                   	leave
    8ad6:	c3                   	ret

0000000000008ad7 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    8ad7:	55                   	push   %rbp
    8ad8:	48 89 e5             	mov    %rsp,%rbp
    8adb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    8adf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ae3:	5d                   	pop    %rbp
    8ae4:	c3                   	ret

0000000000008ae5 <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    8ae5:	55                   	push   %rbp
    8ae6:	48 89 e5             	mov    %rsp,%rbp
    8ae9:	48 83 ec 10          	sub    $0x10,%rsp
    8aed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    8af1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8af5:	48 89 c6             	mov    %rax,%rsi
    8af8:	bf 08 00 00 00       	mov    $0x8,%edi
    8afd:	e8 88 be ff ff       	call   498a <_ZnwmPv>
    8b02:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    8b08:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    }
    8b0f:	90                   	nop
    8b10:	c9                   	leave
    8b11:	c3                   	ret

0000000000008b12 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    8b12:	55                   	push   %rbp
    8b13:	48 89 e5             	mov    %rsp,%rbp
    8b16:	48 83 ec 20          	sub    $0x20,%rsp
    8b1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b1e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8b22:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    8b26:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8b2a:	48 89 c7             	mov    %rax,%rdi
    8b2d:	e8 c5 03 00 00       	call   8ef7 <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    8b32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b36:	48 89 c7             	mov    %rax,%rdi
    8b39:	e8 5e be ff ff       	call   499c <_ZSt17__size_to_integerm>
    8b3e:	48 89 c1             	mov    %rax,%rcx
    8b41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b45:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8b49:	48 89 ce             	mov    %rcx,%rsi
    8b4c:	48 89 c7             	mov    %rax,%rdi
    8b4f:	e8 ae 03 00 00       	call   8f02 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    8b54:	c9                   	leave
    8b55:	c3                   	ret

0000000000008b56 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    8b56:	55                   	push   %rbp
    8b57:	48 89 e5             	mov    %rsp,%rbp
    8b5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    8b5e:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    8b65:	ff ff 1f 
      }
    8b68:	5d                   	pop    %rbp
    8b69:	c3                   	ret

0000000000008b6a <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    8b6a:	55                   	push   %rbp
    8b6b:	48 89 e5             	mov    %rsp,%rbp
    8b6e:	48 83 ec 20          	sub    $0x20,%rsp
    8b72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8b7a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    8b7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b82:	48 89 c7             	mov    %rax,%rdi
    8b85:	e8 cc ff ff ff       	call   8b56 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    8b8a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8b8e:	0f 92 c0             	setb   %al
    8b91:	0f b6 c0             	movzbl %al,%eax
    8b94:	48 85 c0             	test   %rax,%rax
    8b97:	0f 95 c0             	setne  %al
    8b9a:	84 c0                	test   %al,%al
    8b9c:	74 1a                	je     8bb8 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    8b9e:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    8ba5:	ff ff 3f 
    8ba8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8bac:	73 05                	jae    8bb3 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    8bae:	e8 ed a5 ff ff       	call   31a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    8bb3:	e8 d8 a4 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    8bb8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8bbc:	48 c1 e0 02          	shl    $0x2,%rax
    8bc0:	48 89 c7             	mov    %rax,%rdi
    8bc3:	e8 98 a6 ff ff       	call   3260 <_Znwm@plt>
    8bc8:	90                   	nop
      }
    8bc9:	c9                   	leave
    8bca:	c3                   	ret

0000000000008bcb <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    8bcb:	55                   	push   %rbp
    8bcc:	48 89 e5             	mov    %rsp,%rbp
    8bcf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    8bd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bd7:	5d                   	pop    %rbp
    8bd8:	c3                   	ret

0000000000008bd9 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    8bd9:	55                   	push   %rbp
    8bda:	48 89 e5             	mov    %rsp,%rbp
    8bdd:	48 83 ec 10          	sub    $0x10,%rsp
    8be1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    8be5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8be9:	48 89 c6             	mov    %rax,%rsi
    8bec:	bf 04 00 00 00       	mov    $0x4,%edi
    8bf1:	e8 94 bd ff ff       	call   498a <_ZnwmPv>
    8bf6:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    }
    8bfc:	90                   	nop
    8bfd:	c9                   	leave
    8bfe:	c3                   	ret

0000000000008bff <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    8bff:	55                   	push   %rbp
    8c00:	48 89 e5             	mov    %rsp,%rbp
    8c03:	48 83 ec 20          	sub    $0x20,%rsp
    8c07:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c0b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8c0f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    8c13:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8c17:	48 89 c7             	mov    %rax,%rdi
    8c1a:	e8 40 03 00 00       	call   8f5f <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    8c1f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8c23:	48 89 c7             	mov    %rax,%rdi
    8c26:	e8 71 bd ff ff       	call   499c <_ZSt17__size_to_integerm>
    8c2b:	48 89 c1             	mov    %rax,%rcx
    8c2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c32:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8c36:	48 89 ce             	mov    %rcx,%rsi
    8c39:	48 89 c7             	mov    %rax,%rdi
    8c3c:	e8 29 03 00 00       	call   8f6a <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    8c41:	c9                   	leave
    8c42:	c3                   	ret

0000000000008c43 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    8c43:	55                   	push   %rbp
    8c44:	48 89 e5             	mov    %rsp,%rbp
    8c47:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    8c4b:	90                   	nop
    8c4c:	5d                   	pop    %rbp
    8c4d:	c3                   	ret

0000000000008c4e <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    8c4e:	55                   	push   %rbp
    8c4f:	48 89 e5             	mov    %rsp,%rbp
    8c52:	48 83 ec 20          	sub    $0x20,%rsp
    8c56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c5a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8c5e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    8c62:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8c67:	75 06                	jne    8c6f <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    8c69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c6d:	eb 4c                	jmp    8cbb <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    8c6f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8c73:	48 89 d0             	mov    %rdx,%rax
    8c76:	48 c1 e0 06          	shl    $0x6,%rax
    8c7a:	48 01 d0             	add    %rdx,%rax
    8c7d:	48 c1 e0 02          	shl    $0x2,%rax
    8c81:	48 89 c2             	mov    %rax,%rdx
    8c84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c88:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8c8c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8c90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c94:	48 89 ce             	mov    %rcx,%rsi
    8c97:	48 89 c7             	mov    %rax,%rdi
    8c9a:	e8 28 03 00 00       	call   8fc7 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    8c9f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8ca3:	48 89 d0             	mov    %rdx,%rax
    8ca6:	48 c1 e0 06          	shl    $0x6,%rax
    8caa:	48 01 d0             	add    %rdx,%rax
    8cad:	48 c1 e0 02          	shl    $0x2,%rax
    8cb1:	48 89 c2             	mov    %rax,%rdx
    8cb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cb8:	48 01 d0             	add    %rdx,%rax
    }
    8cbb:	c9                   	leave
    8cbc:	c3                   	ret

0000000000008cbd <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    8cbd:	55                   	push   %rbp
    8cbe:	48 89 e5             	mov    %rsp,%rbp
    8cc1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    8cc5:	90                   	nop
    8cc6:	5d                   	pop    %rbp
    8cc7:	c3                   	ret

0000000000008cc8 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    8cc8:	55                   	push   %rbp
    8cc9:	48 89 e5             	mov    %rsp,%rbp
    8ccc:	48 83 ec 20          	sub    $0x20,%rsp
    8cd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8cd4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8cd8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    8cdc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8ce1:	75 06                	jne    8ce9 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    8ce3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ce7:	eb 3a                	jmp    8d23 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    8ce9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8ced:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8cf4:	00 
    8cf5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cf9:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8cfd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8d01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d05:	48 89 ce             	mov    %rcx,%rsi
    8d08:	48 89 c7             	mov    %rax,%rdi
    8d0b:	e8 e5 02 00 00       	call   8ff5 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    8d10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8d14:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8d1b:	00 
    8d1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d20:	48 01 d0             	add    %rdx,%rax
    }
    8d23:	c9                   	leave
    8d24:	c3                   	ret

0000000000008d25 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    8d25:	55                   	push   %rbp
    8d26:	48 89 e5             	mov    %rsp,%rbp
    8d29:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    8d2d:	90                   	nop
    8d2e:	5d                   	pop    %rbp
    8d2f:	c3                   	ret

0000000000008d30 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    8d30:	55                   	push   %rbp
    8d31:	48 89 e5             	mov    %rsp,%rbp
    8d34:	48 83 ec 20          	sub    $0x20,%rsp
    8d38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8d40:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    8d44:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8d49:	75 06                	jne    8d51 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    8d4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d4f:	eb 4c                	jmp    8d9d <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    8d51:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8d55:	48 89 d0             	mov    %rdx,%rax
    8d58:	48 c1 e0 06          	shl    $0x6,%rax
    8d5c:	48 01 d0             	add    %rdx,%rax
    8d5f:	48 c1 e0 03          	shl    $0x3,%rax
    8d63:	48 89 c2             	mov    %rax,%rdx
    8d66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d6a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8d6e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8d72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d76:	48 89 ce             	mov    %rcx,%rsi
    8d79:	48 89 c7             	mov    %rax,%rdi
    8d7c:	e8 a2 02 00 00       	call   9023 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    8d81:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8d85:	48 89 d0             	mov    %rdx,%rax
    8d88:	48 c1 e0 06          	shl    $0x6,%rax
    8d8c:	48 01 d0             	add    %rdx,%rax
    8d8f:	48 c1 e0 03          	shl    $0x3,%rax
    8d93:	48 89 c2             	mov    %rax,%rdx
    8d96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d9a:	48 01 d0             	add    %rdx,%rax
    }
    8d9d:	c9                   	leave
    8d9e:	c3                   	ret

0000000000008d9f <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    8d9f:	55                   	push   %rbp
    8da0:	48 89 e5             	mov    %rsp,%rbp
    8da3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    8da7:	90                   	nop
    8da8:	5d                   	pop    %rbp
    8da9:	c3                   	ret

0000000000008daa <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    8daa:	55                   	push   %rbp
    8dab:	48 89 e5             	mov    %rsp,%rbp
    8dae:	48 83 ec 20          	sub    $0x20,%rsp
    8db2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8db6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8dba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    8dbe:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8dc3:	75 06                	jne    8dcb <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    8dc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8dc9:	eb 3a                	jmp    8e05 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    8dcb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8dcf:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8dd6:	00 
    8dd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ddb:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8ddf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8de3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8de7:	48 89 ce             	mov    %rcx,%rsi
    8dea:	48 89 c7             	mov    %rax,%rdi
    8ded:	e8 5f 02 00 00       	call   9051 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    8df2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8df6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8dfd:	00 
    8dfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e02:	48 01 d0             	add    %rdx,%rax
    }
    8e05:	c9                   	leave
    8e06:	c3                   	ret

0000000000008e07 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    8e07:	55                   	push   %rbp
    8e08:	48 89 e5             	mov    %rsp,%rbp
    8e0b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    8e0f:	90                   	nop
    8e10:	5d                   	pop    %rbp
    8e11:	c3                   	ret

0000000000008e12 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    8e12:	55                   	push   %rbp
    8e13:	48 89 e5             	mov    %rsp,%rbp
    8e16:	48 83 ec 20          	sub    $0x20,%rsp
    8e1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e1e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8e22:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    8e26:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8e2b:	75 06                	jne    8e33 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    8e2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e31:	eb 4a                	jmp    8e7d <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    8e33:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8e37:	48 89 d0             	mov    %rdx,%rax
    8e3a:	48 01 c0             	add    %rax,%rax
    8e3d:	48 01 d0             	add    %rdx,%rax
    8e40:	48 c1 e0 03          	shl    $0x3,%rax
    8e44:	48 89 c2             	mov    %rax,%rdx
    8e47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e4b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8e4f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8e53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e57:	48 89 ce             	mov    %rcx,%rsi
    8e5a:	48 89 c7             	mov    %rax,%rdi
    8e5d:	e8 1d 02 00 00       	call   907f <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    8e62:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8e66:	48 89 d0             	mov    %rdx,%rax
    8e69:	48 01 c0             	add    %rax,%rax
    8e6c:	48 01 d0             	add    %rdx,%rax
    8e6f:	48 c1 e0 03          	shl    $0x3,%rax
    8e73:	48 89 c2             	mov    %rax,%rdx
    8e76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e7a:	48 01 d0             	add    %rdx,%rax
    }
    8e7d:	c9                   	leave
    8e7e:	c3                   	ret
    8e7f:	90                   	nop

0000000000008e80 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>:
      _Optional_payload_base() = default;
    8e80:	55                   	push   %rbp
    8e81:	48 89 e5             	mov    %rsp,%rbp
    8e84:	48 83 ec 10          	sub    $0x10,%rsp
    8e88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e90:	48 89 c7             	mov    %rax,%rdi
    8e93:	e8 16 02 00 00       	call   90ae <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>
    8e98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e9c:	c6 40 18 00          	movb   $0x0,0x18(%rax)
    8ea0:	90                   	nop
    8ea1:	c9                   	leave
    8ea2:	c3                   	ret
    8ea3:	90                   	nop

0000000000008ea4 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>:
      _Optional_payload() = default;
    8ea4:	55                   	push   %rbp
    8ea5:	48 89 e5             	mov    %rsp,%rbp
    8ea8:	48 83 ec 10          	sub    $0x10,%rsp
    8eac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8eb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8eb4:	48 89 c7             	mov    %rax,%rdi
    8eb7:	e8 c4 ff ff ff       	call   8e80 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>
    8ebc:	90                   	nop
    8ebd:	c9                   	leave
    8ebe:	c3                   	ret
    8ebf:	90                   	nop

0000000000008ec0 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    8ec0:	55                   	push   %rbp
    8ec1:	48 89 e5             	mov    %rsp,%rbp
    8ec4:	48 83 ec 10          	sub    $0x10,%rsp
    8ec8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ecc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ed0:	48 89 c7             	mov    %rax,%rdi
    8ed3:	e8 cc ff ff ff       	call   8ea4 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>
    8ed8:	90                   	nop
    8ed9:	c9                   	leave
    8eda:	c3                   	ret
    8edb:	90                   	nop

0000000000008edc <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>:
      constexpr optional() noexcept { }
    8edc:	55                   	push   %rbp
    8edd:	48 89 e5             	mov    %rsp,%rbp
    8ee0:	48 83 ec 10          	sub    $0x10,%rsp
    8ee4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ee8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8eec:	48 89 c7             	mov    %rax,%rdi
    8eef:	e8 cc ff ff ff       	call   8ec0 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>
    8ef4:	90                   	nop
    8ef5:	c9                   	leave
    8ef6:	c3                   	ret

0000000000008ef7 <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    8ef7:	55                   	push   %rbp
    8ef8:	48 89 e5             	mov    %rsp,%rbp
    8efb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    8eff:	90                   	nop
    8f00:	5d                   	pop    %rbp
    8f01:	c3                   	ret

0000000000008f02 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    8f02:	55                   	push   %rbp
    8f03:	48 89 e5             	mov    %rsp,%rbp
    8f06:	48 83 ec 20          	sub    $0x20,%rsp
    8f0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f0e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8f12:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    8f16:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8f1b:	75 06                	jne    8f23 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    8f1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f21:	eb 3a                	jmp    8f5d <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    8f23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8f27:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8f2e:	00 
    8f2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f33:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8f37:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8f3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f3f:	48 89 ce             	mov    %rcx,%rsi
    8f42:	48 89 c7             	mov    %rax,%rdi
    8f45:	e8 6f 01 00 00       	call   90b9 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    8f4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8f4e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8f55:	00 
    8f56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f5a:	48 01 d0             	add    %rdx,%rax
    }
    8f5d:	c9                   	leave
    8f5e:	c3                   	ret

0000000000008f5f <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    8f5f:	55                   	push   %rbp
    8f60:	48 89 e5             	mov    %rsp,%rbp
    8f63:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    8f67:	90                   	nop
    8f68:	5d                   	pop    %rbp
    8f69:	c3                   	ret

0000000000008f6a <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    8f6a:	55                   	push   %rbp
    8f6b:	48 89 e5             	mov    %rsp,%rbp
    8f6e:	48 83 ec 20          	sub    $0x20,%rsp
    8f72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8f7a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    8f7e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8f83:	75 06                	jne    8f8b <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    8f85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f89:	eb 3a                	jmp    8fc5 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    8f8b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8f8f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    8f96:	00 
    8f97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f9b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8f9f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8fa3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fa7:	48 89 ce             	mov    %rcx,%rsi
    8faa:	48 89 c7             	mov    %rax,%rdi
    8fad:	e8 35 01 00 00       	call   90e7 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    8fb2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8fb6:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    8fbd:	00 
    8fbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fc2:	48 01 d0             	add    %rdx,%rax
    }
    8fc5:	c9                   	leave
    8fc6:	c3                   	ret

0000000000008fc7 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    8fc7:	55                   	push   %rbp
    8fc8:	48 89 e5             	mov    %rsp,%rbp
    8fcb:	48 83 ec 20          	sub    $0x20,%rsp
    8fcf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8fd3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8fd7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    8fdb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8fdf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8fe3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fe7:	48 89 ce             	mov    %rcx,%rsi
    8fea:	48 89 c7             	mov    %rax,%rdi
    8fed:	e8 23 01 00 00       	call   9115 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    8ff2:	90                   	nop
    8ff3:	c9                   	leave
    8ff4:	c3                   	ret

0000000000008ff5 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    8ff5:	55                   	push   %rbp
    8ff6:	48 89 e5             	mov    %rsp,%rbp
    8ff9:	48 83 ec 20          	sub    $0x20,%rsp
    8ffd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9001:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9005:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    9009:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    900d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9011:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9015:	48 89 ce             	mov    %rcx,%rsi
    9018:	48 89 c7             	mov    %rax,%rdi
    901b:	e8 6d 01 00 00       	call   918d <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    9020:	90                   	nop
    9021:	c9                   	leave
    9022:	c3                   	ret

0000000000009023 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    9023:	55                   	push   %rbp
    9024:	48 89 e5             	mov    %rsp,%rbp
    9027:	48 83 ec 20          	sub    $0x20,%rsp
    902b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    902f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9033:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    9037:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    903b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    903f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9043:	48 89 ce             	mov    %rcx,%rsi
    9046:	48 89 c7             	mov    %rax,%rdi
    9049:	e8 7a 01 00 00       	call   91c8 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    904e:	90                   	nop
    904f:	c9                   	leave
    9050:	c3                   	ret

0000000000009051 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    9051:	55                   	push   %rbp
    9052:	48 89 e5             	mov    %rsp,%rbp
    9055:	48 83 ec 20          	sub    $0x20,%rsp
    9059:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    905d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9061:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    9065:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9069:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    906d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9071:	48 89 ce             	mov    %rcx,%rsi
    9074:	48 89 c7             	mov    %rax,%rdi
    9077:	e8 c4 01 00 00       	call   9240 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    907c:	90                   	nop
    907d:	c9                   	leave
    907e:	c3                   	ret

000000000000907f <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    907f:	55                   	push   %rbp
    9080:	48 89 e5             	mov    %rsp,%rbp
    9083:	48 83 ec 20          	sub    $0x20,%rsp
    9087:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    908b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    908f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    9093:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9097:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    909b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    909f:	48 89 ce             	mov    %rcx,%rsi
    90a2:	48 89 c7             	mov    %rax,%rdi
    90a5:	e8 d1 01 00 00       	call   927b <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    90aa:	90                   	nop
    90ab:	c9                   	leave
    90ac:	c3                   	ret
    90ad:	90                   	nop

00000000000090ae <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    90ae:	55                   	push   %rbp
    90af:	48 89 e5             	mov    %rsp,%rbp
    90b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    90b6:	90                   	nop
    90b7:	5d                   	pop    %rbp
    90b8:	c3                   	ret

00000000000090b9 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    90b9:	55                   	push   %rbp
    90ba:	48 89 e5             	mov    %rsp,%rbp
    90bd:	48 83 ec 20          	sub    $0x20,%rsp
    90c1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    90c5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    90c9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    90cd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    90d1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    90d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90d9:	48 89 ce             	mov    %rcx,%rsi
    90dc:	48 89 c7             	mov    %rax,%rdi
    90df:	e8 da 01 00 00       	call   92be <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    90e4:	90                   	nop
    90e5:	c9                   	leave
    90e6:	c3                   	ret

00000000000090e7 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    90e7:	55                   	push   %rbp
    90e8:	48 89 e5             	mov    %rsp,%rbp
    90eb:	48 83 ec 20          	sub    $0x20,%rsp
    90ef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    90f3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    90f7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    90fb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    90ff:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9103:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9107:	48 89 ce             	mov    %rcx,%rsi
    910a:	48 89 c7             	mov    %rax,%rdi
    910d:	e8 df 01 00 00       	call   92f1 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    9112:	90                   	nop
    9113:	c9                   	leave
    9114:	c3                   	ret

0000000000009115 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    9115:	55                   	push   %rbp
    9116:	48 89 e5             	mov    %rsp,%rbp
    9119:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    911d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9121:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    9125:	eb 58                	jmp    917f <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    9127:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    912b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    912f:	b9 04 01 00 00       	mov    $0x104,%ecx
    9134:	48 8b 32             	mov    (%rdx),%rsi
    9137:	48 89 30             	mov    %rsi,(%rax)
    913a:	89 ce                	mov    %ecx,%esi
    913c:	48 01 c6             	add    %rax,%rsi
    913f:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    9143:	89 ce                	mov    %ecx,%esi
    9145:	48 01 d6             	add    %rdx,%rsi
    9148:	48 83 c6 08          	add    $0x8,%rsi
    914c:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    9150:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    9154:	48 8d 78 08          	lea    0x8(%rax),%rdi
    9158:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    915c:	48 29 f8             	sub    %rdi,%rax
    915f:	48 29 c2             	sub    %rax,%rdx
    9162:	01 c1                	add    %eax,%ecx
    9164:	83 e1 f8             	and    $0xfffffff8,%ecx
    9167:	89 c8                	mov    %ecx,%eax
    9169:	c1 e8 03             	shr    $0x3,%eax
    916c:	89 c0                	mov    %eax,%eax
    916e:	48 89 d6             	mov    %rdx,%rsi
    9171:	48 89 c1             	mov    %rax,%rcx
    9174:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    9177:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    917e:	00 
    917f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9183:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9187:	75 9e                	jne    9127 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    9189:	90                   	nop
    918a:	90                   	nop
    918b:	5d                   	pop    %rbp
    918c:	c3                   	ret

000000000000918d <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    918d:	55                   	push   %rbp
    918e:	48 89 e5             	mov    %rsp,%rbp
    9191:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9195:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9199:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    919d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    91a1:	48 8b 00             	mov    (%rax),%rax
    91a4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    91a8:	eb 10                	jmp    91ba <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    91aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91ae:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    91b2:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    91b5:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    91ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91be:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    91c2:	75 e6                	jne    91aa <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    91c4:	90                   	nop
    91c5:	90                   	nop
    91c6:	5d                   	pop    %rbp
    91c7:	c3                   	ret

00000000000091c8 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    91c8:	55                   	push   %rbp
    91c9:	48 89 e5             	mov    %rsp,%rbp
    91cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    91d4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    91d8:	eb 58                	jmp    9232 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    91da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91de:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    91e2:	b9 08 02 00 00       	mov    $0x208,%ecx
    91e7:	48 8b 32             	mov    (%rdx),%rsi
    91ea:	48 89 30             	mov    %rsi,(%rax)
    91ed:	89 ce                	mov    %ecx,%esi
    91ef:	48 01 c6             	add    %rax,%rsi
    91f2:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    91f6:	89 ce                	mov    %ecx,%esi
    91f8:	48 01 d6             	add    %rdx,%rsi
    91fb:	48 83 c6 08          	add    $0x8,%rsi
    91ff:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    9203:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    9207:	48 8d 78 08          	lea    0x8(%rax),%rdi
    920b:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    920f:	48 29 f8             	sub    %rdi,%rax
    9212:	48 29 c2             	sub    %rax,%rdx
    9215:	01 c1                	add    %eax,%ecx
    9217:	83 e1 f8             	and    $0xfffffff8,%ecx
    921a:	89 c8                	mov    %ecx,%eax
    921c:	c1 e8 03             	shr    $0x3,%eax
    921f:	89 c0                	mov    %eax,%eax
    9221:	48 89 d6             	mov    %rdx,%rsi
    9224:	48 89 c1             	mov    %rax,%rcx
    9227:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    922a:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
    9231:	00 
    9232:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9236:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    923a:	75 9e                	jne    91da <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    923c:	90                   	nop
    923d:	90                   	nop
    923e:	5d                   	pop    %rbp
    923f:	c3                   	ret

0000000000009240 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    9240:	55                   	push   %rbp
    9241:	48 89 e5             	mov    %rsp,%rbp
    9244:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9248:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    924c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    9250:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9254:	48 8b 00             	mov    (%rax),%rax
    9257:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    925b:	eb 10                	jmp    926d <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    925d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9261:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9265:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    9268:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    926d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9271:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    9275:	75 e6                	jne    925d <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    9277:	90                   	nop
    9278:	90                   	nop
    9279:	5d                   	pop    %rbp
    927a:	c3                   	ret

000000000000927b <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    927b:	55                   	push   %rbp
    927c:	48 89 e5             	mov    %rsp,%rbp
    927f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9283:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9287:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    928b:	eb 23                	jmp    92b0 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    928d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    9291:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    9295:	48 8b 06             	mov    (%rsi),%rax
    9298:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    929c:	48 89 01             	mov    %rax,(%rcx)
    929f:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    92a3:	48 8b 46 10          	mov    0x10(%rsi),%rax
    92a7:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    92ab:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    92b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92b4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    92b8:	75 d3                	jne    928d <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    92ba:	90                   	nop
    92bb:	90                   	nop
    92bc:	5d                   	pop    %rbp
    92bd:	c3                   	ret

00000000000092be <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    92be:	55                   	push   %rbp
    92bf:	48 89 e5             	mov    %rsp,%rbp
    92c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    92c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    92ca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    92ce:	eb 13                	jmp    92e3 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x25>
	*__first = __value;
    92d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92d4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    92d8:	48 8b 12             	mov    (%rdx),%rdx
    92db:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    92de:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    92e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92e7:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    92eb:	75 e3                	jne    92d0 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    92ed:	90                   	nop
    92ee:	90                   	nop
    92ef:	5d                   	pop    %rbp
    92f0:	c3                   	ret

00000000000092f1 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    92f1:	55                   	push   %rbp
    92f2:	48 89 e5             	mov    %rsp,%rbp
    92f5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    92f9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    92fd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    9301:	eb 11                	jmp    9314 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x23>
	*__first = __value;
    9303:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9307:	8b 10                	mov    (%rax),%edx
    9309:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    930d:	89 10                	mov    %edx,(%rax)
      for (; __first != __last; ++__first)
    930f:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
    9314:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9318:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    931c:	75 e5                	jne    9303 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    931e:	90                   	nop
    931f:	90                   	nop
    9320:	5d                   	pop    %rbp
    9321:	c3                   	ret

0000000000009322 <_ZN3vkh19makeApplicationInfoEPKc>:
#include "make_info.hpp"

namespace vkh {
VkApplicationInfo makeApplicationInfo(const char *pApplicationName) {
    9322:	55                   	push   %rbp
    9323:	48 89 e5             	mov    %rsp,%rbp
    9326:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    932a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkApplicationInfo appInfo{};
    932e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9332:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9336:	0f 11 00             	movups %xmm0,(%rax)
    9339:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    933d:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    9341:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9345:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  appInfo.pApplicationName = pApplicationName;
    934b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    934f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9353:	48 89 50 10          	mov    %rdx,0x10(%rax)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    9357:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    935b:	c7 40 18 00 00 40 00 	movl   $0x400000,0x18(%rax)
  appInfo.pEngineName = "No Engine";
    9362:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9366:	48 8d 15 13 7c 00 00 	lea    0x7c13(%rip),%rdx        # 10f80 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    936d:	48 89 50 20          	mov    %rdx,0x20(%rax)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    9371:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9375:	c7 40 28 00 00 40 00 	movl   $0x400000,0x28(%rax)
  appInfo.apiVersion = VK_API_VERSION_1_3;
    937c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9380:	c7 40 2c 00 30 40 00 	movl   $0x403000,0x2c(%rax)
  return appInfo;
    9387:	90                   	nop
}
    9388:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    938c:	5d                   	pop    %rbp
    938d:	c3                   	ret

000000000000938e <_ZN3vkh22makeInstanceCreateInfoEPK17VkApplicationInfojPKPKcjS6_PKv>:

VkInstanceCreateInfo makeInstanceCreateInfo(
    const VkApplicationInfo *appInfo, uint32_t enabledExtensionCount,
    const char *const *ppEnabledExtensionNames, uint32_t enabledLayerCount,
    const char *const *ppEnabledLayerNames, const void *pNext) {
    938e:	55                   	push   %rbp
    938f:	48 89 e5             	mov    %rsp,%rbp
    9392:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9396:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    939a:	89 55 ec             	mov    %edx,-0x14(%rbp)
    939d:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    93a1:	44 89 45 e8          	mov    %r8d,-0x18(%rbp)
    93a5:	4c 89 4d d8          	mov    %r9,-0x28(%rbp)
  VkInstanceCreateInfo createInfo{};
    93a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93ad:	66 0f ef c0          	pxor   %xmm0,%xmm0
    93b1:	0f 11 00             	movups %xmm0,(%rax)
    93b4:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    93b8:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    93bc:	0f 11 40 30          	movups %xmm0,0x30(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    93c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93c4:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  createInfo.pNext = pNext;
    93ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93ce:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    93d2:	48 89 50 08          	mov    %rdx,0x8(%rax)
  createInfo.pApplicationInfo = appInfo;
    93d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    93de:	48 89 50 18          	mov    %rdx,0x18(%rax)
  createInfo.enabledLayerCount = enabledLayerCount;
    93e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93e6:	8b 55 e8             	mov    -0x18(%rbp),%edx
    93e9:	89 50 20             	mov    %edx,0x20(%rax)
  createInfo.ppEnabledLayerNames = ppEnabledLayerNames;
    93ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93f0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    93f4:	48 89 50 28          	mov    %rdx,0x28(%rax)
  createInfo.enabledExtensionCount = enabledExtensionCount;
    93f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93fc:	8b 55 ec             	mov    -0x14(%rbp),%edx
    93ff:	89 50 30             	mov    %edx,0x30(%rax)
  createInfo.ppEnabledExtensionNames = ppEnabledExtensionNames;
    9402:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9406:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    940a:	48 89 50 38          	mov    %rdx,0x38(%rax)
  return createInfo;
    940e:	90                   	nop
}
    940f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9413:	5d                   	pop    %rbp
    9414:	c3                   	ret

0000000000009415 <_ZN3vkh20makeDeviceCreateInfoEjPK23VkDeviceQueueCreateInfojPKPKcPK24VkPhysicalDeviceFeaturesjS6_PKv>:
    uint32_t queueCreateInfoCount,
    const VkDeviceQueueCreateInfo *pQueueCreateInfos,
    uint32_t enabledExtensionCount, const char *const *ppEnabledExtensionNames,
    const VkPhysicalDeviceFeatures *pEnabledFeatures,
    uint32_t enabledLayerCount, const char *const *ppEnabledLayerNames,
    const void *pNext) {
    9415:	55                   	push   %rbp
    9416:	48 89 e5             	mov    %rsp,%rbp
    9419:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    941d:	89 75 f4             	mov    %esi,-0xc(%rbp)
    9420:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    9424:	89 4d f0             	mov    %ecx,-0x10(%rbp)
    9427:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
    942b:	4c 89 4d d8          	mov    %r9,-0x28(%rbp)
  VkDeviceCreateInfo deviceCreateInfo{};
    942f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9433:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9437:	0f 11 00             	movups %xmm0,(%rax)
    943a:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    943e:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    9442:	0f 11 40 30          	movups %xmm0,0x30(%rax)
    9446:	66 0f d6 40 40       	movq   %xmm0,0x40(%rax)
  deviceCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    944b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    944f:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
  deviceCreateInfo.pNext = pNext;
    9455:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9459:	48 8b 55 20          	mov    0x20(%rbp),%rdx
    945d:	48 89 50 08          	mov    %rdx,0x8(%rax)
  deviceCreateInfo.queueCreateInfoCount = queueCreateInfoCount;
    9461:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9465:	8b 55 f4             	mov    -0xc(%rbp),%edx
    9468:	89 50 14             	mov    %edx,0x14(%rax)
  deviceCreateInfo.pQueueCreateInfos = pQueueCreateInfos;
    946b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    946f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9473:	48 89 50 18          	mov    %rdx,0x18(%rax)
  deviceCreateInfo.enabledExtensionCount = enabledExtensionCount;
    9477:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    947b:	8b 55 f0             	mov    -0x10(%rbp),%edx
    947e:	89 50 30             	mov    %edx,0x30(%rax)
  deviceCreateInfo.ppEnabledExtensionNames = ppEnabledExtensionNames;
    9481:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9485:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9489:	48 89 50 38          	mov    %rdx,0x38(%rax)
  deviceCreateInfo.pEnabledFeatures = pEnabledFeatures;
    948d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9491:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9495:	48 89 50 40          	mov    %rdx,0x40(%rax)
  deviceCreateInfo.enabledLayerCount = enabledLayerCount;
    9499:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    949d:	8b 55 10             	mov    0x10(%rbp),%edx
    94a0:	89 50 20             	mov    %edx,0x20(%rax)
  deviceCreateInfo.ppEnabledLayerNames = ppEnabledLayerNames;
    94a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94a7:	48 8b 55 18          	mov    0x18(%rbp),%rdx
    94ab:	48 89 50 28          	mov    %rdx,0x28(%rax)
  return deviceCreateInfo;
    94af:	90                   	nop
}
    94b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94b4:	5d                   	pop    %rbp
    94b5:	c3                   	ret

00000000000094b6 <_ZN3vkh25makeDeviceQueueCreateInfoEjjPKfPKv>:

VkDeviceQueueCreateInfo makeDeviceQueueCreateInfo(uint32_t queueFamilyIndex,
                                                  uint32_t queueCount,
                                                  const float *pQueuePriorities,
                                                  const void *pNext) {
    94b6:	55                   	push   %rbp
    94b7:	48 89 e5             	mov    %rsp,%rbp
    94ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94be:	89 75 f4             	mov    %esi,-0xc(%rbp)
    94c1:	89 55 f0             	mov    %edx,-0x10(%rbp)
    94c4:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    94c8:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  VkDeviceQueueCreateInfo queueCreateInfo{};
    94cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94d0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    94d4:	0f 11 00             	movups %xmm0,(%rax)
    94d7:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    94db:	66 0f d6 40 20       	movq   %xmm0,0x20(%rax)
  queueCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    94e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94e4:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
  queueCreateInfo.pNext = pNext;
    94ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94ee:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    94f2:	48 89 50 08          	mov    %rdx,0x8(%rax)
  queueCreateInfo.queueFamilyIndex = queueFamilyIndex;
    94f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94fa:	8b 55 f4             	mov    -0xc(%rbp),%edx
    94fd:	89 50 14             	mov    %edx,0x14(%rax)
  queueCreateInfo.queueCount = queueCount;
    9500:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9504:	8b 55 f0             	mov    -0x10(%rbp),%edx
    9507:	89 50 18             	mov    %edx,0x18(%rax)
  queueCreateInfo.pQueuePriorities = pQueuePriorities;
    950a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    950e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9512:	48 89 50 20          	mov    %rdx,0x20(%rax)
  return queueCreateInfo;
    9516:	90                   	nop
}
    9517:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    951b:	5d                   	pop    %rbp
    951c:	c3                   	ret

000000000000951d <_ZN3vkh27checkValidationLayerSupportEv>:
#include "validation_layers.hpp"

namespace vkh {

bool checkValidationLayerSupport() {
    951d:	55                   	push   %rbp
    951e:	48 89 e5             	mov    %rsp,%rbp
    9521:	53                   	push   %rbx
    9522:	48 83 ec 58          	sub    $0x58,%rsp
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    9526:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    952a:	be 00 00 00 00       	mov    $0x0,%esi
    952f:	48 89 c7             	mov    %rax,%rdi
    9532:	e8 d9 9d ff ff       	call   3310 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    9537:	8b 45 c8             	mov    -0x38(%rbp),%eax
    953a:	89 c3                	mov    %eax,%ebx
    953c:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    9540:	48 89 c7             	mov    %rax,%rdi
    9543:	e8 42 b8 ff ff       	call   4d8a <_ZNSaI17VkLayerPropertiesEC1Ev>
    9548:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    954c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    9550:	48 89 de             	mov    %rbx,%rsi
    9553:	48 89 c7             	mov    %rax,%rdi
    9556:	e8 67 b8 ff ff       	call   4dc2 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    955b:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    955f:	48 89 c7             	mov    %rax,%rdi
    9562:	e8 3f b8 ff ff       	call   4da6 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    9567:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    956b:	48 89 c7             	mov    %rax,%rdi
    956e:	e8 09 b9 ff ff       	call   4e7c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    9573:	48 89 c2             	mov    %rax,%rdx
    9576:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    957a:	48 89 d6             	mov    %rdx,%rsi
    957d:	48 89 c7             	mov    %rax,%rdi
    9580:	e8 8b 9d ff ff       	call   3310 <vkEnumerateInstanceLayerProperties@plt>

  for (const auto &layerProperties : availableLayers) {
    9585:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    9589:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    958d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9591:	48 89 c7             	mov    %rax,%rdi
    9594:	e8 fd 04 00 00       	call   9a96 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    9599:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    959d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95a1:	48 89 c7             	mov    %rax,%rdi
    95a4:	e8 13 05 00 00       	call   9abc <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    95a9:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    95ad:	eb 5b                	jmp    960a <_ZN3vkh27checkValidationLayerSupportEv+0xed>
    95af:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    95b3:	48 89 c7             	mov    %rax,%rdi
    95b6:	e8 89 05 00 00       	call   9b44 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    95bb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    if (validationLayerName == layerProperties.layerName) {
    95bf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    95c3:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    95c7:	48 89 d6             	mov    %rdx,%rsi
    95ca:	48 89 c7             	mov    %rax,%rdi
    95cd:	e8 2a 04 00 00       	call   99fc <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>
    95d2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    95d6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    95da:	48 8b 3d df 16 01 00 	mov    0x116df(%rip),%rdi        # 1acc0 <_ZN3vkh19validationLayerNameE>
    95e1:	48 8b 35 e0 16 01 00 	mov    0x116e0(%rip),%rsi        # 1acc8 <_ZN3vkh19validationLayerNameE+0x8>
    95e8:	48 89 d1             	mov    %rdx,%rcx
    95eb:	48 89 c2             	mov    %rax,%rdx
    95ee:	e8 74 05 00 00       	call   9b67 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>
    95f3:	84 c0                	test   %al,%al
    95f5:	74 07                	je     95fe <_ZN3vkh27checkValidationLayerSupportEv+0xe1>
      return true;
    95f7:	bb 01 00 00 00       	mov    $0x1,%ebx
    95fc:	eb 28                	jmp    9626 <_ZN3vkh27checkValidationLayerSupportEv+0x109>
  for (const auto &layerProperties : availableLayers) {
    95fe:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    9602:	48 89 c7             	mov    %rax,%rdi
    9605:	e8 16 05 00 00       	call   9b20 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    960a:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    960e:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    9612:	48 89 d6             	mov    %rdx,%rsi
    9615:	48 89 c7             	mov    %rax,%rdi
    9618:	e8 c8 04 00 00       	call   9ae5 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    961d:	84 c0                	test   %al,%al
    961f:	75 8e                	jne    95af <_ZN3vkh27checkValidationLayerSupportEv+0x92>
    }
  }
  return false;
    9621:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    9626:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    962a:	48 89 c7             	mov    %rax,%rdi
    962d:	e8 06 b8 ff ff       	call   4e38 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    9632:	89 d8                	mov    %ebx,%eax
    9634:	eb 34                	jmp    966a <_ZN3vkh27checkValidationLayerSupportEv+0x14d>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    9636:	48 89 c3             	mov    %rax,%rbx
    9639:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    963d:	48 89 c7             	mov    %rax,%rdi
    9640:	e8 61 b7 ff ff       	call   4da6 <_ZNSaI17VkLayerPropertiesED1Ev>
    9645:	48 89 d8             	mov    %rbx,%rax
    9648:	48 89 c7             	mov    %rax,%rdi
    964b:	e8 20 9e ff ff       	call   3470 <_Unwind_Resume@plt>
}
    9650:	48 89 c3             	mov    %rax,%rbx
    9653:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    9657:	48 89 c7             	mov    %rax,%rdi
    965a:	e8 d9 b7 ff ff       	call   4e38 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    965f:	48 89 d8             	mov    %rbx,%rax
    9662:	48 89 c7             	mov    %rax,%rdi
    9665:	e8 06 9e ff ff       	call   3470 <_Unwind_Resume@plt>
    966a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    966e:	c9                   	leave
    966f:	c3                   	ret

0000000000009670 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL
debugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
              [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
              const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
              [[maybe_unused]] void *pUserData) {
    9670:	55                   	push   %rbp
    9671:	48 89 e5             	mov    %rsp,%rbp
    9674:	48 83 ec 20          	sub    $0x20,%rsp
    9678:	89 7d fc             	mov    %edi,-0x4(%rbp)
    967b:	89 75 f8             	mov    %esi,-0x8(%rbp)
    967e:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    9682:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    9686:	8b 45 fc             	mov    -0x4(%rbp),%eax
    9689:	83 f8 01             	cmp    $0x1,%eax
    968c:	7e 3c                	jle    96ca <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    968e:	be 0a 00 00 00       	mov    $0xa,%esi
    9693:	48 8d 05 06 1d 01 00 	lea    0x11d06(%rip),%rax        # 1b3a0 <_ZSt4cerr@GLIBCXX_3.4>
    969a:	48 89 c7             	mov    %rax,%rdi
    969d:	e8 8e 9c ff ff       	call   3330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    96a2:	48 89 c2             	mov    %rax,%rdx
    96a5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    96a9:	48 8b 40 28          	mov    0x28(%rax),%rax
    96ad:	48 89 c6             	mov    %rax,%rsi
    96b0:	48 89 d7             	mov    %rdx,%rdi
    96b3:	e8 98 9b ff ff       	call   3250 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    96b8:	48 8b 15 d9 18 01 00 	mov    0x118d9(%rip),%rdx        # 1af98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    96bf:	48 89 d6             	mov    %rdx,%rsi
    96c2:	48 89 c7             	mov    %rax,%rdi
    96c5:	e8 e6 9b ff ff       	call   32b0 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    96ca:	b8 00 00 00 00       	mov    $0x0,%eax
}
    96cf:	c9                   	leave
    96d0:	c3                   	ret

00000000000096d1 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo) {
    96d1:	55                   	push   %rbp
    96d2:	48 89 e5             	mov    %rsp,%rbp
    96d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  createInfo = {};
    96d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96dd:	66 0f ef c0          	pxor   %xmm0,%xmm0
    96e1:	0f 11 00             	movups %xmm0,(%rax)
    96e4:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    96e8:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    96ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96f0:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
  createInfo.messageSeverity =
    96f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96fa:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      //  VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  createInfo.messageType = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
    9701:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9705:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
                           VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
                           VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  createInfo.pfnUserCallback = debugCallback;
    970c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9710:	48 8d 15 59 ff ff ff 	lea    -0xa7(%rip),%rdx        # 9670 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    9717:	48 89 50 20          	mov    %rdx,0x20(%rax)
  createInfo.pUserData = nullptr;
    971b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    971f:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    9726:	00 
}
    9727:	90                   	nop
    9728:	5d                   	pop    %rbp
    9729:	c3                   	ret

000000000000972a <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult createDebugUtilsMessengerEXT(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    972a:	55                   	push   %rbp
    972b:	48 89 e5             	mov    %rsp,%rbp
    972e:	48 83 ec 30          	sub    $0x30,%rsp
    9732:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9736:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    973a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    973e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    9742:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9746:	48 8d 15 3b 7e 00 00 	lea    0x7e3b(%rip),%rdx        # 11588 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    974d:	48 89 d6             	mov    %rdx,%rsi
    9750:	48 89 c7             	mov    %rax,%rdi
    9753:	e8 d8 9a ff ff       	call   3230 <vkGetInstanceProcAddr@plt>
    9758:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (func == nullptr) {
    975c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    9761:	75 07                	jne    976a <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x40>
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    9763:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    9768:	eb 1b                	jmp    9785 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5b>
  }
  return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    976a:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    976e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    9772:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9776:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    977a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    977e:	48 89 c7             	mov    %rax,%rdi
    9781:	41 ff d0             	call   *%r8
    9784:	90                   	nop
}
    9785:	c9                   	leave
    9786:	c3                   	ret

0000000000009787 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>:

VkDebugUtilsMessengerEXT createDebugMessenger(VkInstance instance) {
    9787:	55                   	push   %rbp
    9788:	48 89 e5             	mov    %rsp,%rbp
    978b:	41 54                	push   %r12
    978d:	53                   	push   %rbx
    978e:	48 83 ec 50          	sub    $0x50,%rsp
    9792:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkDebugUtilsMessengerCreateInfoEXT createInfo;
  populateDebugMessengerCreateInfo(createInfo);
    9796:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    979a:	48 89 c7             	mov    %rax,%rdi
    979d:	e8 2f ff ff ff       	call   96d1 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  VkDebugUtilsMessengerEXT debugMessenger{};
    97a2:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    97a9:	00 
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    97aa:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    97ae:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    97b2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    97b6:	48 89 d1             	mov    %rdx,%rcx
    97b9:	ba 00 00 00 00       	mov    $0x0,%edx
    97be:	48 89 c7             	mov    %rax,%rdi
    97c1:	e8 64 ff ff ff       	call   972a <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                   &debugMessenger) != VK_SUCCESS) {
    97c6:	85 c0                	test   %eax,%eax
    97c8:	0f 95 c0             	setne  %al
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    97cb:	84 c0                	test   %al,%al
    97cd:	74 3b                	je     980a <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x83>
    throw std::runtime_error("Failed to set up debug message.");
    97cf:	bf 10 00 00 00       	mov    $0x10,%edi
    97d4:	e8 17 99 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    97d9:	48 89 c3             	mov    %rax,%rbx
    97dc:	48 8d 05 c5 7d 00 00 	lea    0x7dc5(%rip),%rax        # 115a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x48>
    97e3:	48 89 c6             	mov    %rax,%rsi
    97e6:	48 89 df             	mov    %rbx,%rdi
    97e9:	e8 b2 98 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    97ee:	48 8b 05 b3 17 01 00 	mov    0x117b3(%rip),%rax        # 1afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    97f5:	48 89 c2             	mov    %rax,%rdx
    97f8:	48 8d 05 41 15 01 00 	lea    0x11541(%rip),%rax        # 1ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    97ff:	48 89 c6             	mov    %rax,%rsi
    9802:	48 89 df             	mov    %rbx,%rdi
    9805:	e8 46 9c ff ff       	call   3450 <__cxa_throw@plt>
  }
  return debugMessenger;
    980a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    980e:	eb 16                	jmp    9826 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x9f>
    throw std::runtime_error("Failed to set up debug message.");
    9810:	49 89 c4             	mov    %rax,%r12
    9813:	48 89 df             	mov    %rbx,%rdi
    9816:	e8 55 99 ff ff       	call   3170 <__cxa_free_exception@plt>
    981b:	4c 89 e0             	mov    %r12,%rax
    981e:	48 89 c7             	mov    %rax,%rdi
    9821:	e8 4a 9c ff ff       	call   3470 <_Unwind_Resume@plt>
}
    9826:	48 83 c4 50          	add    $0x50,%rsp
    982a:	5b                   	pop    %rbx
    982b:	41 5c                	pop    %r12
    982d:	5d                   	pop    %rbp
    982e:	c3                   	ret

000000000000982f <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator) {
    982f:	55                   	push   %rbp
    9830:	48 89 e5             	mov    %rsp,%rbp
    9833:	48 83 ec 30          	sub    $0x30,%rsp
    9837:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    983b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    983f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    9843:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9847:	48 8d 15 7a 7d 00 00 	lea    0x7d7a(%rip),%rdx        # 115c8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x68>
    984e:	48 89 d6             	mov    %rdx,%rsi
    9851:	48 89 c7             	mov    %rax,%rdi
    9854:	e8 d7 99 ff ff       	call   3230 <vkGetInstanceProcAddr@plt>
    9859:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    985d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    9862:	74 19                	je     987d <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4e>
    func(instance, debugMessenger, pAllocator);
    9864:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    9868:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    986c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    9870:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9874:	48 89 ce             	mov    %rcx,%rsi
    9877:	48 89 c7             	mov    %rax,%rdi
    987a:	41 ff d0             	call   *%r8
  }
}
    987d:	90                   	nop
    987e:	c9                   	leave
    987f:	c3                   	ret

0000000000009880 <_Z41__static_initialization_and_destruction_0ii>:

    9880:	55                   	push   %rbp
    9881:	48 89 e5             	mov    %rsp,%rbp
    9884:	48 83 ec 10          	sub    $0x10,%rsp
    9888:	89 7d fc             	mov    %edi,-0x4(%rbp)
    988b:	89 75 f8             	mov    %esi,-0x8(%rbp)
    988e:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    9892:	75 3b                	jne    98cf <_Z41__static_initialization_and_destruction_0ii+0x4f>
    9894:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    989b:	75 32                	jne    98cf <_Z41__static_initialization_and_destruction_0ii+0x4f>
    989d:	48 8d 05 0e 1c 01 00 	lea    0x11c0e(%rip),%rax        # 1b4b2 <_ZStL8__ioinit>
    98a4:	48 89 c7             	mov    %rax,%rdi
    98a7:	e8 54 9b ff ff       	call   3400 <_ZNSt8ios_base4InitC1Ev@plt>
    98ac:	48 8d 05 ad 19 01 00 	lea    0x119ad(%rip),%rax        # 1b260 <__dso_handle>
    98b3:	48 89 c2             	mov    %rax,%rdx
    98b6:	48 8d 05 f5 1b 01 00 	lea    0x11bf5(%rip),%rax        # 1b4b2 <_ZStL8__ioinit>
    98bd:	48 89 c6             	mov    %rax,%rsi
    98c0:	48 8b 05 01 17 01 00 	mov    0x11701(%rip),%rax        # 1afc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    98c7:	48 89 c7             	mov    %rax,%rdi
    98ca:	e8 41 99 ff ff       	call   3210 <__cxa_atexit@plt>
    98cf:	90                   	nop
    98d0:	c9                   	leave
    98d1:	c3                   	ret

00000000000098d2 <_GLOBAL__sub_I__ZN3vkh27checkValidationLayerSupportEv>:
    98d2:	55                   	push   %rbp
    98d3:	48 89 e5             	mov    %rsp,%rbp
    98d6:	be ff ff 00 00       	mov    $0xffff,%esi
    98db:	bf 01 00 00 00       	mov    $0x1,%edi
    98e0:	e8 9b ff ff ff       	call   9880 <_Z41__static_initialization_and_destruction_0ii>
    98e5:	5d                   	pop    %rbp
    98e6:	c3                   	ret

00000000000098e7 <_ZNSt11char_traitsIcE2ltERKcS2_>:
      static _GLIBCXX_CONSTEXPR bool
      eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
      { return __c1 == __c2; }

      static _GLIBCXX_CONSTEXPR bool
      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    98e7:	55                   	push   %rbp
    98e8:	48 89 e5             	mov    %rsp,%rbp
    98eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    98ef:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      {
	// LWG 467.
	return (static_cast<unsigned char>(__c1)
    98f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98f7:	0f b6 00             	movzbl (%rax),%eax
    98fa:	89 c2                	mov    %eax,%edx
		< static_cast<unsigned char>(__c2));
    98fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9900:	0f b6 00             	movzbl (%rax),%eax
    9903:	38 c2                	cmp    %al,%dl
    9905:	0f 92 c0             	setb   %al
      }
    9908:	5d                   	pop    %rbp
    9909:	c3                   	ret

000000000000990a <_ZNSt11char_traitsIcE7compareEPKcS2_m>:

      static _GLIBCXX17_CONSTEXPR int
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
    990a:	55                   	push   %rbp
    990b:	48 89 e5             	mov    %rsp,%rbp
    990e:	48 83 ec 30          	sub    $0x30,%rsp
    9912:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9916:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    991a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      {
	if (__n == 0)
    991e:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    9923:	75 0a                	jne    992f <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x25>
	  return 0;
    9925:	b8 00 00 00 00       	mov    $0x0,%eax
    992a:	e9 99 00 00 00       	jmp    99c8 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    992f:	e8 4b b0 ff ff       	call   497f <_ZSt23__is_constant_evaluatedv>
    9934:	84 c0                	test   %al,%al
    9936:	74 78                	je     99b0 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xa6>
	  {
	    for (size_t __i = 0; __i < __n; ++__i)
    9938:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    993f:	00 
    9940:	eb 5d                	jmp    999f <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x95>
	      if (lt(__s1[__i], __s2[__i]))
    9942:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9946:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    994a:	48 01 c2             	add    %rax,%rdx
    994d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    9951:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9955:	48 01 c8             	add    %rcx,%rax
    9958:	48 89 d6             	mov    %rdx,%rsi
    995b:	48 89 c7             	mov    %rax,%rdi
    995e:	e8 84 ff ff ff       	call   98e7 <_ZNSt11char_traitsIcE2ltERKcS2_>
    9963:	84 c0                	test   %al,%al
    9965:	74 07                	je     996e <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x64>
		return -1;
    9967:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    996c:	eb 5a                	jmp    99c8 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	      else if (lt(__s2[__i], __s1[__i]))
    996e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9972:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9976:	48 01 c2             	add    %rax,%rdx
    9979:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    997d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9981:	48 01 c8             	add    %rcx,%rax
    9984:	48 89 d6             	mov    %rdx,%rsi
    9987:	48 89 c7             	mov    %rax,%rdi
    998a:	e8 58 ff ff ff       	call   98e7 <_ZNSt11char_traitsIcE2ltERKcS2_>
    998f:	84 c0                	test   %al,%al
    9991:	74 07                	je     999a <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x90>
		return 1;
    9993:	b8 01 00 00 00       	mov    $0x1,%eax
    9998:	eb 2e                	jmp    99c8 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	    for (size_t __i = 0; __i < __n; ++__i)
    999a:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    999f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99a3:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    99a7:	72 99                	jb     9942 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x38>
	    return 0;
    99a9:	b8 00 00 00 00       	mov    $0x0,%eax
    99ae:	eb 18                	jmp    99c8 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	  }
#endif
	return __builtin_memcmp(__s1, __s2, __n);
    99b0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    99b4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    99b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    99bc:	48 89 ce             	mov    %rcx,%rsi
    99bf:	48 89 c7             	mov    %rax,%rdi
    99c2:	e8 19 97 ff ff       	call   30e0 <memcmp@plt>
    99c7:	90                   	nop
      }
    99c8:	c9                   	leave
    99c9:	c3                   	ret

00000000000099ca <_ZNSt11char_traitsIcE6lengthEPKc>:

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    99ca:	55                   	push   %rbp
    99cb:	48 89 e5             	mov    %rsp,%rbp
    99ce:	48 83 ec 10          	sub    $0x10,%rsp
    99d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    99d6:	e8 a4 af ff ff       	call   497f <_ZSt23__is_constant_evaluatedv>
    99db:	84 c0                	test   %al,%al
    99dd:	74 0e                	je     99ed <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    99df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99e3:	48 89 c7             	mov    %rax,%rdi
    99e6:	e8 43 00 00 00       	call   9a2e <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    99eb:	eb 0d                	jmp    99fa <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    99ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99f1:	48 89 c7             	mov    %rax,%rdi
    99f4:	e8 d7 96 ff ff       	call   30d0 <strlen@plt>
    99f9:	90                   	nop
      }
    99fa:	c9                   	leave
    99fb:	c3                   	ret

00000000000099fc <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>:
      { }

      constexpr basic_string_view(const basic_string_view&) noexcept = default;

      __attribute__((__nonnull__)) constexpr
      basic_string_view(const _CharT* __str) noexcept
    99fc:	55                   	push   %rbp
    99fd:	48 89 e5             	mov    %rsp,%rbp
    9a00:	48 83 ec 10          	sub    $0x10,%rsp
    9a04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_len{traits_type::length(__str)},
    9a0c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9a10:	48 89 c7             	mov    %rax,%rdi
    9a13:	e8 b2 ff ff ff       	call   99ca <_ZNSt11char_traitsIcE6lengthEPKc>
    9a18:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9a1c:	48 89 02             	mov    %rax,(%rdx)
	_M_str{__str}
    9a1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a23:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9a27:	48 89 50 08          	mov    %rdx,0x8(%rax)
      { }
    9a2b:	90                   	nop
    9a2c:	c9                   	leave
    9a2d:	c3                   	ret

0000000000009a2e <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    9a2e:	55                   	push   %rbp
    9a2f:	48 89 e5             	mov    %rsp,%rbp
    9a32:	48 83 ec 20          	sub    $0x20,%rsp
    9a36:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    9a3a:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    9a41:	00 
      while (!eq(__p[__i], char_type()))
    9a42:	eb 05                	jmp    9a49 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    9a44:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    9a49:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    9a4d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9a51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a55:	48 01 c2             	add    %rax,%rdx
    9a58:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    9a5c:	48 89 c6             	mov    %rax,%rsi
    9a5f:	48 89 d7             	mov    %rdx,%rdi
    9a62:	e8 0d 00 00 00       	call   9a74 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    9a67:	83 f0 01             	xor    $0x1,%eax
    9a6a:	84 c0                	test   %al,%al
    9a6c:	75 d6                	jne    9a44 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    9a6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    9a72:	c9                   	leave
    9a73:	c3                   	ret

0000000000009a74 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    9a74:	55                   	push   %rbp
    9a75:	48 89 e5             	mov    %rsp,%rbp
    9a78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    9a80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a84:	0f b6 10             	movzbl (%rax),%edx
    9a87:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9a8b:	0f b6 00             	movzbl (%rax),%eax
    9a8e:	38 c2                	cmp    %al,%dl
    9a90:	0f 94 c0             	sete   %al
    9a93:	5d                   	pop    %rbp
    9a94:	c3                   	ret
    9a95:	90                   	nop

0000000000009a96 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    9a96:	55                   	push   %rbp
    9a97:	48 89 e5             	mov    %rsp,%rbp
    9a9a:	48 83 ec 20          	sub    $0x20,%rsp
    9a9e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    9aa2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9aa6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9aaa:	48 89 d6             	mov    %rdx,%rsi
    9aad:	48 89 c7             	mov    %rax,%rdi
    9ab0:	e8 27 01 00 00       	call   9bdc <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    9ab5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ab9:	c9                   	leave
    9aba:	c3                   	ret
    9abb:	90                   	nop

0000000000009abc <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    9abc:	55                   	push   %rbp
    9abd:	48 89 e5             	mov    %rsp,%rbp
    9ac0:	48 83 ec 20          	sub    $0x20,%rsp
    9ac4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    9ac8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9acc:	48 8d 50 08          	lea    0x8(%rax),%rdx
    9ad0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9ad4:	48 89 d6             	mov    %rdx,%rsi
    9ad7:	48 89 c7             	mov    %rax,%rdi
    9ada:	e8 fd 00 00 00       	call   9bdc <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    9adf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ae3:	c9                   	leave
    9ae4:	c3                   	ret

0000000000009ae5 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    9ae5:	55                   	push   %rbp
    9ae6:	48 89 e5             	mov    %rsp,%rbp
    9ae9:	53                   	push   %rbx
    9aea:	48 83 ec 18          	sub    $0x18,%rsp
    9aee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9af2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    9af6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9afa:	48 89 c7             	mov    %rax,%rdi
    9afd:	e8 f8 00 00 00       	call   9bfa <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    9b02:	48 8b 18             	mov    (%rax),%rbx
    9b05:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9b09:	48 89 c7             	mov    %rax,%rdi
    9b0c:	e8 e9 00 00 00       	call   9bfa <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    9b11:	48 8b 00             	mov    (%rax),%rax
    9b14:	48 39 c3             	cmp    %rax,%rbx
    9b17:	0f 95 c0             	setne  %al
    9b1a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9b1e:	c9                   	leave
    9b1f:	c3                   	ret

0000000000009b20 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    9b20:	55                   	push   %rbp
    9b21:	48 89 e5             	mov    %rsp,%rbp
    9b24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    9b28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b2c:	48 8b 00             	mov    (%rax),%rax
    9b2f:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    9b36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b3a:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    9b3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    9b41:	5d                   	pop    %rbp
    9b42:	c3                   	ret
    9b43:	90                   	nop

0000000000009b44 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    9b44:	55                   	push   %rbp
    9b45:	48 89 e5             	mov    %rsp,%rbp
    9b48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    9b4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b50:	48 8b 00             	mov    (%rax),%rax
    9b53:	5d                   	pop    %rbp
    9b54:	c3                   	ret
    9b55:	90                   	nop

0000000000009b56 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>:
      { return const_reverse_iterator(this->begin()); }

      // [string.view.capacity], capacity

      constexpr size_type
      size() const noexcept
    9b56:	55                   	push   %rbp
    9b57:	48 89 e5             	mov    %rsp,%rbp
    9b5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_len; }
    9b5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b62:	48 8b 00             	mov    (%rax),%rax
    9b65:	5d                   	pop    %rbp
    9b66:	c3                   	ret

0000000000009b67 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>:
               basic_string_view<_CharT, _Traits> __y) noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }

  template<typename _CharT, typename _Traits>
    constexpr bool
    operator==(basic_string_view<_CharT, _Traits> __x,
    9b67:	55                   	push   %rbp
    9b68:	48 89 e5             	mov    %rsp,%rbp
    9b6b:	53                   	push   %rbx
    9b6c:	48 83 ec 28          	sub    $0x28,%rsp
    9b70:	48 89 f0             	mov    %rsi,%rax
    9b73:	49 89 f8             	mov    %rdi,%r8
    9b76:	4c 89 c6             	mov    %r8,%rsi
    9b79:	4c 89 cf             	mov    %r9,%rdi
    9b7c:	48 89 c7             	mov    %rax,%rdi
    9b7f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9b83:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9b87:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    9b8b:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
               __type_identity_t<basic_string_view<_CharT, _Traits>> __y)
    noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }
    9b8f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    9b93:	48 89 c7             	mov    %rax,%rdi
    9b96:	e8 bb ff ff ff       	call   9b56 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    9b9b:	48 89 c3             	mov    %rax,%rbx
    9b9e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    9ba2:	48 89 c7             	mov    %rax,%rdi
    9ba5:	e8 ac ff ff ff       	call   9b56 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    9baa:	48 39 c3             	cmp    %rax,%rbx
    9bad:	75 22                	jne    9bd1 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    9baf:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    9bb3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9bb7:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    9bbb:	48 89 ce             	mov    %rcx,%rsi
    9bbe:	48 89 c7             	mov    %rax,%rdi
    9bc1:	e8 42 00 00 00       	call   9c08 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>
    9bc6:	85 c0                	test   %eax,%eax
    9bc8:	75 07                	jne    9bd1 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    9bca:	b8 01 00 00 00       	mov    $0x1,%eax
    9bcf:	eb 05                	jmp    9bd6 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6f>
    9bd1:	b8 00 00 00 00       	mov    $0x0,%eax
    9bd6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9bda:	c9                   	leave
    9bdb:	c3                   	ret

0000000000009bdc <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    9bdc:	55                   	push   %rbp
    9bdd:	48 89 e5             	mov    %rsp,%rbp
    9be0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9be4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    9be8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9bec:	48 8b 10             	mov    (%rax),%rdx
    9bef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bf3:	48 89 10             	mov    %rdx,(%rax)
    9bf6:	90                   	nop
    9bf7:	5d                   	pop    %rbp
    9bf8:	c3                   	ret
    9bf9:	90                   	nop

0000000000009bfa <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    9bfa:	55                   	push   %rbp
    9bfb:	48 89 e5             	mov    %rsp,%rbp
    9bfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    9c02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c06:	5d                   	pop    %rbp
    9c07:	c3                   	ret

0000000000009c08 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>:
      compare(basic_string_view __str) const noexcept
    9c08:	55                   	push   %rbp
    9c09:	48 89 e5             	mov    %rsp,%rbp
    9c0c:	48 83 ec 30          	sub    $0x30,%rsp
    9c10:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9c14:	48 89 d1             	mov    %rdx,%rcx
    9c17:	48 89 f0             	mov    %rsi,%rax
    9c1a:	48 89 fa             	mov    %rdi,%rdx
    9c1d:	48 89 ca             	mov    %rcx,%rdx
    9c20:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    9c24:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const size_type __rlen = std::min(this->_M_len, __str._M_len);
    9c28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c2c:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    9c30:	48 89 d6             	mov    %rdx,%rsi
    9c33:	48 89 c7             	mov    %rax,%rdi
    9c36:	e8 fe d7 ff ff       	call   7439 <_ZSt3minImERKT_S2_S2_>
    9c3b:	48 8b 00             	mov    (%rax),%rax
    9c3e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	int __ret = traits_type::compare(this->_M_str, __str._M_str, __rlen);
    9c42:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    9c46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c4a:	48 8b 40 08          	mov    0x8(%rax),%rax
    9c4e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c52:	48 89 ce             	mov    %rcx,%rsi
    9c55:	48 89 c7             	mov    %rax,%rdi
    9c58:	e8 ad fc ff ff       	call   990a <_ZNSt11char_traitsIcE7compareEPKcS2_m>
    9c5d:	89 45 fc             	mov    %eax,-0x4(%rbp)
	if (__ret == 0)
    9c60:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    9c64:	75 19                	jne    9c7f <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_+0x77>
	  __ret = _S_compare(this->_M_len, __str._M_len);
    9c66:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9c6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c6e:	48 8b 00             	mov    (%rax),%rax
    9c71:	48 89 d6             	mov    %rdx,%rsi
    9c74:	48 89 c7             	mov    %rax,%rdi
    9c77:	e8 08 00 00 00       	call   9c84 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>
    9c7c:	89 45 fc             	mov    %eax,-0x4(%rbp)
	return __ret;
    9c7f:	8b 45 fc             	mov    -0x4(%rbp),%eax
      }
    9c82:	c9                   	leave
    9c83:	c3                   	ret

0000000000009c84 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>:
      _S_compare(size_type __n1, size_type __n2) noexcept
    9c84:	55                   	push   %rbp
    9c85:	48 89 e5             	mov    %rsp,%rbp
    9c88:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9c8c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const difference_type __diff = __n1 - __n2;
    9c90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c94:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    9c98:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (__diff > __limits::__max)
    9c9c:	b8 00 00 00 80       	mov    $0x80000000,%eax
    9ca1:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    9ca5:	7c 07                	jl     9cae <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x2a>
	  return __limits::__max;
    9ca7:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    9cac:	eb 1b                	jmp    9cc9 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	if (__diff < __limits::__min)
    9cae:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
    9cb5:	ff ff ff 
    9cb8:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    9cbc:	7f 07                	jg     9cc5 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x41>
	  return __limits::__min;
    9cbe:	b8 00 00 00 80       	mov    $0x80000000,%eax
    9cc3:	eb 04                	jmp    9cc9 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	return static_cast<int>(__diff);
    9cc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    9cc9:	5d                   	pop    %rbp
    9cca:	c3                   	ret
    9ccb:	90                   	nop

0000000000009ccc <_ZN9VulkanApp12createWindowEv>:
#include "vkh.hpp"

void VulkanApp::createWindow() {
    9ccc:	55                   	push   %rbp
    9ccd:	48 89 e5             	mov    %rsp,%rbp
    9cd0:	48 83 ec 10          	sub    $0x10,%rsp
    9cd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  glfwInit();
    9cd8:	e8 43 96 ff ff       	call   3320 <glfwInit@plt>
  window = vkh::createWindow(800, 600);
    9cdd:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    9ce3:	b9 00 00 00 00       	mov    $0x0,%ecx
    9ce8:	48 8d 05 25 7f 00 00 	lea    0x7f25(%rip),%rax        # 11c14 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    9cef:	48 89 c2             	mov    %rax,%rdx
    9cf2:	be 58 02 00 00       	mov    $0x258,%esi
    9cf7:	bf 20 03 00 00       	mov    $0x320,%edi
    9cfc:	e8 67 9a ff ff       	call   3768 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>
    9d01:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9d05:	48 89 02             	mov    %rax,(%rdx)
}
    9d08:	90                   	nop
    9d09:	c9                   	leave
    9d0a:	c3                   	ret
    9d0b:	90                   	nop

0000000000009d0c <_ZN9VulkanApp14createInstanceEv>:

void VulkanApp::createInstance() {
    9d0c:	55                   	push   %rbp
    9d0d:	48 89 e5             	mov    %rsp,%rbp
    9d10:	41 55                	push   %r13
    9d12:	41 54                	push   %r12
    9d14:	53                   	push   %rbx
    9d15:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    9d1c:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
  auto appInfo = vkh::makeApplicationInfo();
    9d23:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    9d27:	48 8d 15 e6 7e 00 00 	lea    0x7ee6(%rip),%rdx        # 11c14 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    9d2e:	48 89 d6             	mov    %rdx,%rsi
    9d31:	48 89 c7             	mov    %rax,%rdi
    9d34:	e8 e9 f5 ff ff       	call   9322 <_ZN3vkh19makeApplicationInfoEPKc>
  auto extensions = vkh::getRequiredInstanceExtensionNameList(true);
    9d39:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    9d3d:	be 01 00 00 00       	mov    $0x1,%esi
    9d42:	48 89 c7             	mov    %rax,%rdi
    9d45:	e8 82 a0 ff ff       	call   3dcc <_ZN3vkh36getRequiredInstanceExtensionNameListEb>
  auto debugCreateInfo = VkDebugUtilsMessengerCreateInfoEXT{};
    9d4a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9d4e:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    9d55:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    9d5c:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  vkh::populateDebugMessengerCreateInfo(debugCreateInfo);
    9d60:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    9d67:	48 89 c7             	mov    %rax,%rdi
    9d6a:	e8 62 f9 ff ff       	call   96d1 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  auto createInfo = vkh::makeInstanceCreateInfo(
    9d6f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    9d76:	48 83 c0 10          	add    $0x10,%rax
    9d7a:	48 89 c7             	mov    %rax,%rdi
    9d7d:	e8 34 18 00 00       	call   b5b6 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    9d82:	49 89 c4             	mov    %rax,%r12
      &appInfo, static_cast<uint32_t>(extensions.size()), extensions.data(),
      static_cast<uint32_t>(layers.size()), layers.data(),
    9d85:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    9d8c:	48 83 c0 10          	add    $0x10,%rax
    9d90:	48 89 c7             	mov    %rax,%rdi
    9d93:	e8 ec e1 ff ff       	call   7f84 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  auto createInfo = vkh::makeInstanceCreateInfo(
    9d98:	41 89 c5             	mov    %eax,%r13d
      &appInfo, static_cast<uint32_t>(extensions.size()), extensions.data(),
    9d9b:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    9d9f:	48 89 c7             	mov    %rax,%rdi
    9da2:	e8 eb 17 00 00       	call   b592 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    9da7:	48 89 c3             	mov    %rax,%rbx
    9daa:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    9dae:	48 89 c7             	mov    %rax,%rdi
    9db1:	e8 ce e1 ff ff       	call   7f84 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  auto createInfo = vkh::makeInstanceCreateInfo(
    9db6:	89 c7                	mov    %eax,%edi
    9db8:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    9dbf:	48 8d 75 b0          	lea    -0x50(%rbp),%rsi
    9dc3:	48 83 ec 08          	sub    $0x8,%rsp
    9dc7:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
    9dce:	52                   	push   %rdx
    9dcf:	4d 89 e1             	mov    %r12,%r9
    9dd2:	45 89 e8             	mov    %r13d,%r8d
    9dd5:	48 89 d9             	mov    %rbx,%rcx
    9dd8:	89 fa                	mov    %edi,%edx
    9dda:	48 89 c7             	mov    %rax,%rdi
    9ddd:	e8 ac f5 ff ff       	call   938e <_ZN3vkh22makeInstanceCreateInfoEPK17VkApplicationInfojPKPKcjS6_PKv>
    9de2:	48 83 c4 10          	add    $0x10,%rsp
      (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo);
  instance = vkh::createInstance(&createInfo);
    9de6:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    9ded:	be 00 00 00 00       	mov    $0x0,%esi
    9df2:	48 89 c7             	mov    %rax,%rdi
    9df5:	e8 c4 99 ff ff       	call   37be <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>
    9dfa:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    9e01:	48 89 42 08          	mov    %rax,0x8(%rdx)
}
    9e05:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    9e09:	48 89 c7             	mov    %rax,%rdi
    9e0c:	e8 95 ae ff ff       	call   4ca6 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    9e11:	eb 1a                	jmp    9e2d <_ZN9VulkanApp14createInstanceEv+0x121>
    9e13:	48 89 c3             	mov    %rax,%rbx
    9e16:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    9e1a:	48 89 c7             	mov    %rax,%rdi
    9e1d:	e8 84 ae ff ff       	call   4ca6 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    9e22:	48 89 d8             	mov    %rbx,%rax
    9e25:	48 89 c7             	mov    %rax,%rdi
    9e28:	e8 43 96 ff ff       	call   3470 <_Unwind_Resume@plt>
    9e2d:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
    9e31:	5b                   	pop    %rbx
    9e32:	41 5c                	pop    %r12
    9e34:	41 5d                	pop    %r13
    9e36:	5d                   	pop    %rbp
    9e37:	c3                   	ret

0000000000009e38 <_ZN9VulkanApp20createDebugMessengerEv>:

void VulkanApp::createDebugMessenger() {
    9e38:	55                   	push   %rbp
    9e39:	48 89 e5             	mov    %rsp,%rbp
    9e3c:	48 83 ec 10          	sub    $0x10,%rsp
    9e40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  debugMessenger = vkh::createDebugMessenger(instance);
    9e44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e48:	48 8b 40 08          	mov    0x8(%rax),%rax
    9e4c:	48 89 c7             	mov    %rax,%rdi
    9e4f:	e8 33 f9 ff ff       	call   9787 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>
    9e54:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9e58:	48 89 42 28          	mov    %rax,0x28(%rdx)
}
    9e5c:	90                   	nop
    9e5d:	c9                   	leave
    9e5e:	c3                   	ret
    9e5f:	90                   	nop

0000000000009e60 <_ZN9VulkanApp13createSurfaceEv>:

void VulkanApp::createSurface() {
    9e60:	55                   	push   %rbp
    9e61:	48 89 e5             	mov    %rsp,%rbp
    9e64:	48 83 ec 10          	sub    $0x10,%rsp
    9e68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  surface = vkh::createSurface(instance, window);
    9e6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e70:	48 8b 08             	mov    (%rax),%rcx
    9e73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e77:	48 8b 40 08          	mov    0x8(%rax),%rax
    9e7b:	ba 00 00 00 00       	mov    $0x0,%edx
    9e80:	48 89 ce             	mov    %rcx,%rsi
    9e83:	48 89 c7             	mov    %rax,%rdi
    9e86:	e8 5e 9a ff ff       	call   38e9 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>
    9e8b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9e8f:	48 89 42 30          	mov    %rax,0x30(%rdx)
}
    9e93:	90                   	nop
    9e94:	c9                   	leave
    9e95:	c3                   	ret

0000000000009e96 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>:

std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
VulkanApp::selectQueueFamily(VkPhysicalDevice physDev) {
    9e96:	55                   	push   %rbp
    9e97:	48 89 e5             	mov    %rsp,%rbp
    9e9a:	53                   	push   %rbx
    9e9b:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    9ea2:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    9ea9:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    9eb0:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
  auto graphicsFamilies = vkh::getGraphicsQueueFamilyPropertyList(physDev);
    9eb7:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9ebb:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    9ec2:	48 89 d6             	mov    %rdx,%rsi
    9ec5:	48 89 c7             	mov    %rax,%rdi
    9ec8:	e8 39 a3 ff ff       	call   4206 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto computeFamilies = vkh::getComputeQueueFamilyPropertyList(physDev);
    9ecd:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    9ed1:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    9ed8:	48 89 d6             	mov    %rdx,%rsi
    9edb:	48 89 c7             	mov    %rax,%rdi
    9ede:	e8 57 a4 ff ff       	call   433a <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto presentFamilies =
      vkh::getPresentQueueFamilyPropertyList(physDev, surface);
    9ee3:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    9eea:	48 8b 50 30          	mov    0x30(%rax),%rdx
    9eee:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    9ef5:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
    9efc:	48 89 ce             	mov    %rcx,%rsi
    9eff:	48 89 c7             	mov    %rax,%rdi
    9f02:	e8 6c a5 ff ff       	call   4473 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  /* Find a queue that is capable of handling graphics, computing, and
  supporting presentation to the surface */
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    9f07:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    9f0e:	00 
    9f0f:	e9 c5 00 00 00       	jmp    9fd9 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x143>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    9f14:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9f18:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9f1c:	48 89 d6             	mov    %rdx,%rsi
    9f1f:	48 89 c7             	mov    %rax,%rdi
    9f22:	e8 7f b4 ff ff       	call   53a6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    9f27:	48 89 c7             	mov    %rax,%rdi
    9f2a:	e8 d9 16 00 00       	call   b608 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    9f2f:	84 c0                	test   %al,%al
    9f31:	74 48                	je     9f7b <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    9f33:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9f37:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    9f3b:	48 89 d6             	mov    %rdx,%rsi
    9f3e:	48 89 c7             	mov    %rax,%rdi
    9f41:	e8 60 b4 ff ff       	call   53a6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    9f46:	48 89 c7             	mov    %rax,%rdi
    9f49:	e8 ba 16 00 00       	call   b608 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    9f4e:	84 c0                	test   %al,%al
    9f50:	74 29                	je     9f7b <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
        presentFamilies[i].has_value()) {
    9f52:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9f56:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    9f5d:	48 89 d6             	mov    %rdx,%rsi
    9f60:	48 89 c7             	mov    %rax,%rdi
    9f63:	e8 3e b4 ff ff       	call   53a6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    9f68:	48 89 c7             	mov    %rax,%rdi
    9f6b:	e8 98 16 00 00       	call   b608 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    9f70:	84 c0                	test   %al,%al
    9f72:	74 07                	je     9f7b <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    9f74:	b8 01 00 00 00       	mov    $0x1,%eax
    9f79:	eb 05                	jmp    9f80 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xea>
    9f7b:	b8 00 00 00 00       	mov    $0x0,%eax
    9f80:	84 c0                	test   %al,%al
    9f82:	74 50                	je     9fd4 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x13e>
      return {{static_cast<uint32_t>(i), graphicsFamilies[i].value()}};
    9f84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f88:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    9f8b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9f8f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9f93:	48 89 d6             	mov    %rdx,%rsi
    9f96:	48 89 c7             	mov    %rax,%rdi
    9f99:	e8 08 b4 ff ff       	call   53a6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    9f9e:	48 89 c7             	mov    %rax,%rdi
    9fa1:	e8 7c 16 00 00       	call   b622 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>
    9fa6:	48 89 c2             	mov    %rax,%rdx
    9fa9:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    9fad:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    9fb1:	48 89 ce             	mov    %rcx,%rsi
    9fb4:	48 89 c7             	mov    %rax,%rdi
    9fb7:	e8 98 16 00 00       	call   b654 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>
    9fbc:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    9fc0:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    9fc7:	48 89 d6             	mov    %rdx,%rsi
    9fca:	48 89 c7             	mov    %rax,%rdi
    9fcd:	e8 d8 16 00 00       	call   b6aa <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>
    9fd2:	eb 2f                	jmp    a003 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x16d>
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    9fd4:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    9fd9:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9fdd:	48 89 c7             	mov    %rax,%rdi
    9fe0:	e8 f5 15 00 00       	call   b5da <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>
    9fe5:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    9fe9:	0f 92 c0             	setb   %al
    9fec:	84 c0                	test   %al,%al
    9fee:	0f 85 20 ff ff ff    	jne    9f14 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x7e>
    }
  }
  return {};
    9ff4:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    9ffb:	48 89 c7             	mov    %rax,%rdi
    9ffe:	e8 77 12 00 00       	call   b27a <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
}
    a003:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    a00a:	48 89 c7             	mov    %rax,%rdi
    a00d:	e8 94 b2 ff ff       	call   52a6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    a012:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    a016:	48 89 c7             	mov    %rax,%rdi
    a019:	e8 88 b2 ff ff       	call   52a6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    a01e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    a022:	48 89 c7             	mov    %rax,%rdi
    a025:	e8 7c b2 ff ff       	call   52a6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    a02a:	eb 3f                	jmp    a06b <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1d5>
    a02c:	48 89 c3             	mov    %rax,%rbx
    a02f:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    a036:	48 89 c7             	mov    %rax,%rdi
    a039:	e8 68 b2 ff ff       	call   52a6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    a03e:	eb 03                	jmp    a043 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1ad>
    a040:	48 89 c3             	mov    %rax,%rbx
    a043:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    a047:	48 89 c7             	mov    %rax,%rdi
    a04a:	e8 57 b2 ff ff       	call   52a6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    a04f:	eb 03                	jmp    a054 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1be>
    a051:	48 89 c3             	mov    %rax,%rbx
    a054:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    a058:	48 89 c7             	mov    %rax,%rdi
    a05b:	e8 46 b2 ff ff       	call   52a6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    a060:	48 89 d8             	mov    %rbx,%rax
    a063:	48 89 c7             	mov    %rax,%rdi
    a066:	e8 05 94 ff ff       	call   3470 <_Unwind_Resume@plt>
    a06b:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a072:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a076:	c9                   	leave
    a077:	c3                   	ret

000000000000a078 <_ZN9VulkanApp12createDeviceEv>:

void VulkanApp::createDevice() {
    a078:	55                   	push   %rbp
    a079:	48 89 e5             	mov    %rsp,%rbp
    a07c:	41 55                	push   %r13
    a07e:	41 54                	push   %r12
    a080:	53                   	push   %rbx
    a081:	48 81 ec 78 05 00 00 	sub    $0x578,%rsp
    a088:	48 89 bd a8 fa ff ff 	mov    %rdi,-0x558(%rbp)
  /* Select a suitable physical device and one of its queue families */
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    a08f:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    a096:	48 8b 50 08          	mov    0x8(%rax),%rdx
    a09a:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    a09e:	48 89 d6             	mov    %rdx,%rsi
    a0a1:	48 89 c7             	mov    %rax,%rdi
    a0a4:	e8 c5 9e ff ff       	call   3f6e <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  VkPhysicalDevice selectedPhysDev = VK_NULL_HANDLE;
    a0a9:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    a0b0:	00 
  std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
      selectedQueueFamily;
    a0b1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a0b5:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    a0b9:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    a0bd:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    a0c1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    a0c5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a0c9:	48 89 c7             	mov    %rax,%rdi
    a0cc:	e8 0d 16 00 00       	call   b6de <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    a0d1:	48 89 85 18 fe ff ff 	mov    %rax,-0x1e8(%rbp)
    a0d8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a0dc:	48 89 c7             	mov    %rax,%rdi
    a0df:	e8 20 16 00 00       	call   b704 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    a0e4:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
    a0eb:	e9 e4 00 00 00       	jmp    a1d4 <_ZN9VulkanApp12createDeviceEv+0x15c>
    a0f0:	48 8d 85 18 fe ff ff 	lea    -0x1e8(%rbp),%rax
    a0f7:	48 89 c7             	mov    %rax,%rdi
    a0fa:	e8 89 16 00 00       	call   b788 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    a0ff:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    auto physDevPropList = vkh::getPhysicalDevicePropertyList(physDev);
    a103:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    a107:	48 8b 10             	mov    (%rax),%rdx
    a10a:	48 8d 85 d0 fa ff ff 	lea    -0x530(%rbp),%rax
    a111:	48 89 d6             	mov    %rdx,%rsi
    a114:	48 89 c7             	mov    %rax,%rdi
    a117:	e8 c1 9f ff ff       	call   40dd <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
    graphics, computing, and presentation commands */
    /* When the application creates a swapchain, the selected physical device
    must support VK_KHR_swapchain */
    /* Also, the selected physical device must be compatible with the swapchain
     that will be created. */
    if ((physDevPropList.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU) &&
    a11c:	8b 85 e0 fa ff ff    	mov    -0x520(%rbp),%eax
        checkDeviceExtensionSupport(physDev) &&
    a122:	83 f8 02             	cmp    $0x2,%eax
    a125:	75 41                	jne    a168 <_ZN9VulkanApp12createDeviceEv+0xf0>
    a127:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    a12b:	48 8b 10             	mov    (%rax),%rdx
    a12e:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    a135:	48 89 d6             	mov    %rdx,%rsi
    a138:	48 89 c7             	mov    %rax,%rdi
    a13b:	e8 e0 02 00 00       	call   a420 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>
    if ((physDevPropList.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU) &&
    a140:	84 c0                	test   %al,%al
    a142:	74 24                	je     a168 <_ZN9VulkanApp12createDeviceEv+0xf0>
        checkDeviceSwapchainSupport(physDev)) {
    a144:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    a148:	48 8b 10             	mov    (%rax),%rdx
    a14b:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    a152:	48 89 d6             	mov    %rdx,%rsi
    a155:	48 89 c7             	mov    %rax,%rdi
    a158:	e8 fb 05 00 00       	call   a758 <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    a15d:	84 c0                	test   %al,%al
    a15f:	74 07                	je     a168 <_ZN9VulkanApp12createDeviceEv+0xf0>
    a161:	b8 01 00 00 00       	mov    $0x1,%eax
    a166:	eb 05                	jmp    a16d <_ZN9VulkanApp12createDeviceEv+0xf5>
    a168:	b8 00 00 00 00       	mov    $0x0,%eax
    if ((physDevPropList.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU) &&
    a16d:	84 c0                	test   %al,%al
    a16f:	74 54                	je     a1c5 <_ZN9VulkanApp12createDeviceEv+0x14d>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    a171:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    a175:	48 8b 10             	mov    (%rax),%rdx
    a178:	48 8d 85 b0 fa ff ff 	lea    -0x550(%rbp),%rax
    a17f:	48 8b 8d a8 fa ff ff 	mov    -0x558(%rbp),%rcx
    a186:	48 89 ce             	mov    %rcx,%rsi
    a189:	48 89 c7             	mov    %rax,%rdi
    a18c:	e8 05 fd ff ff       	call   9e96 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>
          returnedQueueFamily.has_value()) {
    a191:	48 8d 85 b0 fa ff ff 	lea    -0x550(%rbp),%rax
    a198:	48 89 c7             	mov    %rax,%rdi
    a19b:	e8 fa 15 00 00       	call   b79a <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    a1a0:	84 c0                	test   %al,%al
    a1a2:	74 21                	je     a1c5 <_ZN9VulkanApp12createDeviceEv+0x14d>
        selectedQueueFamily = returnedQueueFamily;
    a1a4:	48 8d 95 b0 fa ff ff 	lea    -0x550(%rbp),%rdx
    a1ab:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    a1af:	48 89 d6             	mov    %rdx,%rsi
    a1b2:	48 89 c7             	mov    %rax,%rdi
    a1b5:	e8 12 11 00 00       	call   b2cc <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>
        selectedPhysDev = physDev;
    a1ba:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    a1be:	48 8b 00             	mov    (%rax),%rax
    a1c1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    a1c5:	48 8d 85 18 fe ff ff 	lea    -0x1e8(%rbp),%rax
    a1cc:	48 89 c7             	mov    %rax,%rdi
    a1cf:	e8 94 15 00 00       	call   b768 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    a1d4:	48 8d 95 10 fe ff ff 	lea    -0x1f0(%rbp),%rdx
    a1db:	48 8d 85 18 fe ff ff 	lea    -0x1e8(%rbp),%rax
    a1e2:	48 89 d6             	mov    %rdx,%rsi
    a1e5:	48 89 c7             	mov    %rax,%rdi
    a1e8:	e8 40 15 00 00       	call   b72d <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    a1ed:	84 c0                	test   %al,%al
    a1ef:	0f 85 fb fe ff ff    	jne    a0f0 <_ZN9VulkanApp12createDeviceEv+0x78>
      }
    }
  }
  if (selectedPhysDev == VK_NULL_HANDLE) {
    a1f5:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    a1fa:	75 3b                	jne    a237 <_ZN9VulkanApp12createDeviceEv+0x1bf>
    throw std::runtime_error("Failed to select a physical device.");
    a1fc:	bf 10 00 00 00       	mov    $0x10,%edi
    a201:	e8 ea 8e ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    a206:	48 89 c3             	mov    %rax,%rbx
    a209:	48 8d 05 18 7a 00 00 	lea    0x7a18(%rip),%rax        # 11c28 <_ZN6__pstl9execution2v1L5unseqE+0x15>
    a210:	48 89 c6             	mov    %rax,%rsi
    a213:	48 89 df             	mov    %rbx,%rdi
    a216:	e8 85 8e ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    a21b:	48 8b 05 86 0d 01 00 	mov    0x10d86(%rip),%rax        # 1afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a222:	48 89 c2             	mov    %rax,%rdx
    a225:	48 8d 05 14 0b 01 00 	lea    0x10b14(%rip),%rax        # 1ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a22c:	48 89 c6             	mov    %rax,%rsi
    a22f:	48 89 df             	mov    %rbx,%rdi
    a232:	e8 19 92 ff ff       	call   3450 <__cxa_throw@plt>
  }

  /* Set up the selected queue family's creation info */
  uint32_t selectedIndex = selectedQueueFamily.value().first;
    a237:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    a23b:	48 89 c7             	mov    %rax,%rdi
    a23e:	e8 b3 10 00 00       	call   b2f6 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>
    a243:	8b 00                	mov    (%rax),%eax
    a245:	89 45 cc             	mov    %eax,-0x34(%rbp)
  VkDeviceQueueCreateInfo queueCreateInfo;
  const float queuePriority = 1.0f;
    a248:	f3 0f 10 05 2c 7b 00 	movss  0x7b2c(%rip),%xmm0        # 11d7c <_ZN6__pstl9execution2v1L5unseqE+0x169>
    a24f:	00 
    a250:	f3 0f 11 85 4c ff ff 	movss  %xmm0,-0xb4(%rbp)
    a257:	ff 
  queueCreateInfo = vkh::makeDeviceQueueCreateInfo(
      selectedQueueFamily.value().first, 1, &queuePriority);
    a258:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    a25c:	48 89 c7             	mov    %rax,%rdi
    a25f:	e8 92 10 00 00       	call   b2f6 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>
  queueCreateInfo = vkh::makeDeviceQueueCreateInfo(
    a264:	8b 30                	mov    (%rax),%esi
    a266:	48 8d 85 70 fa ff ff 	lea    -0x590(%rbp),%rax
    a26d:	48 8d 95 4c ff ff ff 	lea    -0xb4(%rbp),%rdx
    a274:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    a27a:	48 89 d1             	mov    %rdx,%rcx
    a27d:	ba 01 00 00 00       	mov    $0x1,%edx
    a282:	48 89 c7             	mov    %rax,%rdi
    a285:	e8 2c f2 ff ff       	call   94b6 <_ZN3vkh25makeDeviceQueueCreateInfoEjjPKfPKv>
    a28a:	48 8b 85 70 fa ff ff 	mov    -0x590(%rbp),%rax
    a291:	48 8b 95 78 fa ff ff 	mov    -0x588(%rbp),%rdx
    a298:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    a29f:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
    a2a6:	48 8b 85 80 fa ff ff 	mov    -0x580(%rbp),%rax
    a2ad:	48 8b 95 88 fa ff ff 	mov    -0x578(%rbp),%rdx
    a2b4:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    a2bb:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
    a2c2:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
    a2c9:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)

  /* Create the logical device */
  VkPhysicalDeviceFeatures deviceFeatures{};
    a2d0:	48 8d 95 70 fe ff ff 	lea    -0x190(%rbp),%rdx
    a2d7:	b8 00 00 00 00       	mov    $0x0,%eax
    a2dc:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    a2e1:	48 89 d7             	mov    %rdx,%rdi
    a2e4:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    a2e7:	48 89 fa             	mov    %rdi,%rdx
    a2ea:	89 02                	mov    %eax,(%rdx)
    a2ec:	48 83 c2 04          	add    $0x4,%rdx
  auto deviceCreateInfo = vkh::makeDeviceCreateInfo(
    a2f0:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    a2f7:	48 83 c0 10          	add    $0x10,%rax
    a2fb:	48 89 c7             	mov    %rax,%rdi
    a2fe:	e8 b3 12 00 00       	call   b5b6 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    a303:	48 89 c3             	mov    %rax,%rbx
      1, &queueCreateInfo, static_cast<uint32_t>(deviceExtensions.size()),
      deviceExtensions.data(), &deviceFeatures,
      static_cast<uint32_t>(layers.size()), layers.data());
    a306:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    a30d:	48 83 c0 10          	add    $0x10,%rax
    a311:	48 89 c7             	mov    %rax,%rdi
    a314:	e8 6b dc ff ff       	call   7f84 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  auto deviceCreateInfo = vkh::makeDeviceCreateInfo(
    a319:	41 89 c5             	mov    %eax,%r13d
      deviceExtensions.data(), &deviceFeatures,
    a31c:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    a323:	48 83 c0 70          	add    $0x70,%rax
    a327:	48 89 c7             	mov    %rax,%rdi
    a32a:	e8 63 12 00 00       	call   b592 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    a32f:	49 89 c4             	mov    %rax,%r12
      1, &queueCreateInfo, static_cast<uint32_t>(deviceExtensions.size()),
    a332:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    a339:	48 83 c0 70          	add    $0x70,%rax
    a33d:	48 89 c7             	mov    %rax,%rdi
    a340:	e8 3f dc ff ff       	call   7f84 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  auto deviceCreateInfo = vkh::makeDeviceCreateInfo(
    a345:	89 c6                	mov    %eax,%esi
    a347:	48 8d 85 20 fe ff ff 	lea    -0x1e0(%rbp),%rax
    a34e:	48 8d 8d 70 fe ff ff 	lea    -0x190(%rbp),%rcx
    a355:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
    a35c:	48 83 ec 08          	sub    $0x8,%rsp
    a360:	6a 00                	push   $0x0
    a362:	53                   	push   %rbx
    a363:	41 55                	push   %r13
    a365:	49 89 c9             	mov    %rcx,%r9
    a368:	4d 89 e0             	mov    %r12,%r8
    a36b:	89 f1                	mov    %esi,%ecx
    a36d:	be 01 00 00 00       	mov    $0x1,%esi
    a372:	48 89 c7             	mov    %rax,%rdi
    a375:	e8 9b f0 ff ff       	call   9415 <_ZN3vkh20makeDeviceCreateInfoEjPK23VkDeviceQueueCreateInfojPKPKcPK24VkPhysicalDeviceFeaturesjS6_PKv>
    a37a:	48 83 c4 20          	add    $0x20,%rsp
  device = vkh::createDevice(selectedPhysDev, &deviceCreateInfo);
    a37e:	48 8d 8d 20 fe ff ff 	lea    -0x1e0(%rbp),%rcx
    a385:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a389:	ba 00 00 00 00       	mov    $0x0,%edx
    a38e:	48 89 ce             	mov    %rcx,%rsi
    a391:	48 89 c7             	mov    %rax,%rdi
    a394:	e8 b8 94 ff ff       	call   3851 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>
    a399:	48 8b 95 a8 fa ff ff 	mov    -0x558(%rbp),%rdx
    a3a0:	48 89 42 40          	mov    %rax,0x40(%rdx)

  /* Get a queue handle */
  vkGetDeviceQueue(device, selectedIndex, 0, &queue);
    a3a4:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    a3ab:	48 8d 50 48          	lea    0x48(%rax),%rdx
    a3af:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    a3b6:	48 8b 40 40          	mov    0x40(%rax),%rax
    a3ba:	8b 75 cc             	mov    -0x34(%rbp),%esi
    a3bd:	48 89 d1             	mov    %rdx,%rcx
    a3c0:	ba 00 00 00 00       	mov    $0x0,%edx
    a3c5:	48 89 c7             	mov    %rax,%rdi
    a3c8:	e8 d3 8f ff ff       	call   33a0 <vkGetDeviceQueue@plt>

  /* Store the selected device for later uses */
  this->physicalDevice = selectedPhysDev;
    a3cd:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    a3d4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a3d8:	48 89 50 38          	mov    %rdx,0x38(%rax)
}
    a3dc:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    a3e0:	48 89 c7             	mov    %rax,%rdi
    a3e3:	e8 be ab ff ff       	call   4fa6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    a3e8:	eb 2a                	jmp    a414 <_ZN9VulkanApp12createDeviceEv+0x39c>
    throw std::runtime_error("Failed to select a physical device.");
    a3ea:	49 89 c4             	mov    %rax,%r12
    a3ed:	48 89 df             	mov    %rbx,%rdi
    a3f0:	e8 7b 8d ff ff       	call   3170 <__cxa_free_exception@plt>
    a3f5:	4c 89 e3             	mov    %r12,%rbx
    a3f8:	eb 03                	jmp    a3fd <_ZN9VulkanApp12createDeviceEv+0x385>
}
    a3fa:	48 89 c3             	mov    %rax,%rbx
    a3fd:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    a401:	48 89 c7             	mov    %rax,%rdi
    a404:	e8 9d ab ff ff       	call   4fa6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    a409:	48 89 d8             	mov    %rbx,%rax
    a40c:	48 89 c7             	mov    %rax,%rdi
    a40f:	e8 5c 90 ff ff       	call   3470 <_Unwind_Resume@plt>
    a414:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
    a418:	5b                   	pop    %rbx
    a419:	41 5c                	pop    %r12
    a41b:	41 5d                	pop    %r13
    a41d:	5d                   	pop    %rbp
    a41e:	c3                   	ret
    a41f:	90                   	nop

000000000000a420 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceExtensionSupport(VkPhysicalDevice physDev) {
    a420:	55                   	push   %rbp
    a421:	48 89 e5             	mov    %rsp,%rbp
    a424:	53                   	push   %rbx
    a425:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
    a42c:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
    a433:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  auto availableExtensionsList = vkh::getAvailableDeviceExtensionList(physDev);
    a43a:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    a441:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
    a448:	ba 00 00 00 00       	mov    $0x0,%edx
    a44d:	48 89 ce             	mov    %rcx,%rsi
    a450:	48 89 c7             	mov    %rax,%rdi
    a453:	e8 fd 97 ff ff       	call   3c55 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
  std::map<std::string, uint32_t> helper;
    a458:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    a45f:	48 89 c7             	mov    %rax,%rdi
    a462:	e8 0b 0f 00 00       	call   b372 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
  for (const auto &availableExtension : availableExtensionsList) {
    a467:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    a46e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    a472:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a476:	48 89 c7             	mov    %rax,%rdi
    a479:	e8 32 14 00 00       	call   b8b0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    a47e:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    a485:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a489:	48 89 c7             	mov    %rax,%rdi
    a48c:	e8 45 14 00 00       	call   b8d6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    a491:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    a498:	e9 8c 00 00 00       	jmp    a529 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x109>
    a49d:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    a4a4:	48 89 c7             	mov    %rax,%rdi
    a4a7:	e8 b2 14 00 00       	call   b95e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    a4ac:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    helper[availableExtension.extensionName]++;
    a4b0:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    a4b7:	48 89 c7             	mov    %rax,%rdi
    a4ba:	e8 c1 8f ff ff       	call   3480 <_ZNSaIcEC1Ev@plt>
    a4bf:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    a4c3:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    a4ca:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a4d1:	48 89 ce             	mov    %rcx,%rsi
    a4d4:	48 89 c7             	mov    %rax,%rdi
    a4d7:	e8 8e 0f 00 00       	call   b46a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    a4dc:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    a4e3:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    a4ea:	48 89 d6             	mov    %rdx,%rsi
    a4ed:	48 89 c7             	mov    %rax,%rdi
    a4f0:	e8 7b 14 00 00       	call   b970 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    a4f5:	8b 10                	mov    (%rax),%edx
    a4f7:	83 c2 01             	add    $0x1,%edx
    a4fa:	89 10                	mov    %edx,(%rax)
    a4fc:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a503:	48 89 c7             	mov    %rax,%rdi
    a506:	e8 25 8c ff ff       	call   3130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    a50b:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    a512:	48 89 c7             	mov    %rax,%rdi
    a515:	e8 c6 8d ff ff       	call   32e0 <_ZNSaIcED1Ev@plt>
  for (const auto &availableExtension : availableExtensionsList) {
    a51a:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    a521:	48 89 c7             	mov    %rax,%rdi
    a524:	e8 11 14 00 00       	call   b93a <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    a529:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
    a530:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    a537:	48 89 d6             	mov    %rdx,%rsi
    a53a:	48 89 c7             	mov    %rax,%rdi
    a53d:	e8 bd 13 00 00       	call   b8ff <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    a542:	84 c0                	test   %al,%al
    a544:	0f 85 53 ff ff ff    	jne    a49d <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x7d>
  }
  for (const auto &deviceExtension : deviceExtensions) {
    a54a:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    a551:	48 83 c0 70          	add    $0x70,%rax
    a555:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    a559:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a55d:	48 89 c7             	mov    %rax,%rdi
    a560:	e8 af d1 ff ff       	call   7714 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    a565:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    a56c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a570:	48 89 c7             	mov    %rax,%rdi
    a573:	e8 ec c3 ff ff       	call   6964 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    a578:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    a57f:	e9 ed 00 00 00       	jmp    a671 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x251>
    a584:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    a58b:	48 89 c7             	mov    %rax,%rdi
    a58e:	e8 6b d2 ff ff       	call   77fe <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    a593:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    helper[deviceExtension]++;
    a597:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    a59b:	48 89 c7             	mov    %rax,%rdi
    a59e:	e8 dd 8e ff ff       	call   3480 <_ZNSaIcEC1Ev@plt>
    a5a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a5a7:	48 8b 08             	mov    (%rax),%rcx
    a5aa:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
    a5ae:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    a5b5:	48 89 ce             	mov    %rcx,%rsi
    a5b8:	48 89 c7             	mov    %rax,%rdi
    a5bb:	e8 aa 0e 00 00       	call   b46a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    a5c0:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    a5c7:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    a5ce:	48 89 d6             	mov    %rdx,%rsi
    a5d1:	48 89 c7             	mov    %rax,%rdi
    a5d4:	e8 97 13 00 00       	call   b970 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    a5d9:	8b 10                	mov    (%rax),%edx
    a5db:	83 c2 01             	add    $0x1,%edx
    a5de:	89 10                	mov    %edx,(%rax)
    a5e0:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    a5e7:	48 89 c7             	mov    %rax,%rdi
    a5ea:	e8 41 8b ff ff       	call   3130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    a5ef:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    a5f3:	48 89 c7             	mov    %rax,%rdi
    a5f6:	e8 e5 8c ff ff       	call   32e0 <_ZNSaIcED1Ev@plt>
    if (helper[deviceExtension] < 2) {
    a5fb:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    a5ff:	48 89 c7             	mov    %rax,%rdi
    a602:	e8 79 8e ff ff       	call   3480 <_ZNSaIcEC1Ev@plt>
    a607:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a60b:	48 8b 08             	mov    (%rax),%rcx
    a60e:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    a612:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    a616:	48 89 ce             	mov    %rcx,%rsi
    a619:	48 89 c7             	mov    %rax,%rdi
    a61c:	e8 49 0e 00 00       	call   b46a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    a621:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    a625:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    a62c:	48 89 d6             	mov    %rdx,%rsi
    a62f:	48 89 c7             	mov    %rax,%rdi
    a632:	e8 39 13 00 00       	call   b970 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    a637:	8b 00                	mov    (%rax),%eax
    a639:	83 f8 01             	cmp    $0x1,%eax
    a63c:	0f 96 c3             	setbe  %bl
    a63f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    a643:	48 89 c7             	mov    %rax,%rdi
    a646:	e8 e5 8a ff ff       	call   3130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    a64b:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    a64f:	48 89 c7             	mov    %rax,%rdi
    a652:	e8 89 8c ff ff       	call   32e0 <_ZNSaIcED1Ev@plt>
    a657:	84 db                	test   %bl,%bl
    a659:	74 07                	je     a662 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x242>
      return false;
    a65b:	bb 00 00 00 00       	mov    $0x0,%ebx
    a660:	eb 35                	jmp    a697 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x277>
  for (const auto &deviceExtension : deviceExtensions) {
    a662:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    a669:	48 89 c7             	mov    %rax,%rdi
    a66c:	e8 3f 14 00 00       	call   bab0 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    a671:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    a678:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    a67f:	48 89 d6             	mov    %rdx,%rsi
    a682:	48 89 c7             	mov    %rax,%rdi
    a685:	e8 ea 13 00 00       	call   ba74 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    a68a:	84 c0                	test   %al,%al
    a68c:	0f 85 f2 fe ff ff    	jne    a584 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x164>
    }
  }
  return true;
    a692:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    a697:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    a69e:	48 89 c7             	mov    %rax,%rdi
    a6a1:	e8 e8 0c 00 00       	call   b38e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    a6a6:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    a6ad:	48 89 c7             	mov    %rax,%rdi
    a6b0:	e8 83 a4 ff ff       	call   4b38 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    a6b5:	89 d8                	mov    %ebx,%eax
    a6b7:	e9 96 00 00 00       	jmp    a752 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x332>
    helper[availableExtension.extensionName]++;
    a6bc:	48 89 c3             	mov    %rax,%rbx
    a6bf:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a6c6:	48 89 c7             	mov    %rax,%rdi
    a6c9:	e8 62 8a ff ff       	call   3130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    a6ce:	eb 03                	jmp    a6d3 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2b3>
    a6d0:	48 89 c3             	mov    %rax,%rbx
    a6d3:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    a6da:	48 89 c7             	mov    %rax,%rdi
    a6dd:	e8 fe 8b ff ff       	call   32e0 <_ZNSaIcED1Ev@plt>
    a6e2:	eb 45                	jmp    a729 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x309>
    helper[deviceExtension]++;
    a6e4:	48 89 c3             	mov    %rax,%rbx
    a6e7:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    a6ee:	48 89 c7             	mov    %rax,%rdi
    a6f1:	e8 3a 8a ff ff       	call   3130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    a6f6:	eb 03                	jmp    a6fb <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2db>
    a6f8:	48 89 c3             	mov    %rax,%rbx
    a6fb:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    a6ff:	48 89 c7             	mov    %rax,%rdi
    a702:	e8 d9 8b ff ff       	call   32e0 <_ZNSaIcED1Ev@plt>
    a707:	eb 20                	jmp    a729 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x309>
    if (helper[deviceExtension] < 2) {
    a709:	48 89 c3             	mov    %rax,%rbx
    a70c:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    a710:	48 89 c7             	mov    %rax,%rdi
    a713:	e8 18 8a ff ff       	call   3130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    a718:	eb 03                	jmp    a71d <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2fd>
    a71a:	48 89 c3             	mov    %rax,%rbx
    a71d:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    a721:	48 89 c7             	mov    %rax,%rdi
    a724:	e8 b7 8b ff ff       	call   32e0 <_ZNSaIcED1Ev@plt>
}
    a729:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    a730:	48 89 c7             	mov    %rax,%rdi
    a733:	e8 56 0c 00 00       	call   b38e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    a738:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    a73f:	48 89 c7             	mov    %rax,%rdi
    a742:	e8 f1 a3 ff ff       	call   4b38 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    a747:	48 89 d8             	mov    %rbx,%rax
    a74a:	48 89 c7             	mov    %rax,%rdi
    a74d:	e8 1e 8d ff ff       	call   3470 <_Unwind_Resume@plt>
    a752:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a756:	c9                   	leave
    a757:	c3                   	ret

000000000000a758 <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceSwapchainSupport(
    [[maybe_unused]] VkPhysicalDevice physDev) {
    a758:	55                   	push   %rbp
    a759:	48 89 e5             	mov    %rsp,%rbp
    a75c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a760:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return true;
    a764:	b8 01 00 00 00       	mov    $0x1,%eax
}
    a769:	5d                   	pop    %rbp
    a76a:	c3                   	ret
    a76b:	90                   	nop

000000000000a76c <_ZN9VulkanApp27populateSwapchainCreateInfoEv>:

VkSwapchainCreateInfoKHR VulkanApp::populateSwapchainCreateInfo() {
    a76c:	55                   	push   %rbp
    a76d:	48 89 e5             	mov    %rsp,%rbp
    a770:	41 54                	push   %r12
    a772:	53                   	push   %rbx
    a773:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
    a77a:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    a781:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  /* Vulkan 1.3.231 - A Specification, pg 2235 */

  auto surfaceCapabilities =
      vkh::getPhysicalDeviceSurfaceCapabilities(physicalDevice, surface);
    a788:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    a78f:	48 8b 50 30          	mov    0x30(%rax),%rdx
    a793:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    a79a:	48 8b 48 38          	mov    0x38(%rax),%rcx
    a79e:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    a7a2:	48 89 ce             	mov    %rcx,%rsi
    a7a5:	48 89 c7             	mov    %rax,%rdi
    a7a8:	e8 36 9e ff ff       	call   45e3 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfaceFormats =
      vkh::getPhysicalDeviceSurfaceFormatList(physicalDevice, surface);
    a7ad:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    a7b4:	48 8b 50 30          	mov    0x30(%rax),%rdx
    a7b8:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    a7bf:	48 8b 48 38          	mov    0x38(%rax),%rcx
    a7c3:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    a7ca:	48 89 ce             	mov    %rcx,%rsi
    a7cd:	48 89 c7             	mov    %rax,%rdi
    a7d0:	e8 bc 9e ff ff       	call   4691 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfacePresentModes =
      vkh::getPhysicalDeviceSurfacePresentModeList(physicalDevice, surface);
    a7d5:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    a7dc:	48 8b 50 30          	mov    0x30(%rax),%rdx
    a7e0:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    a7e7:	48 8b 48 38          	mov    0x38(%rax),%rcx
    a7eb:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a7f2:	48 89 ce             	mov    %rcx,%rsi
    a7f5:	48 89 c7             	mov    %rax,%rdi
    a7f8:	e8 0b a0 ff ff       	call   4808 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  VkSwapchainCreateInfoKHR swapchainCreateInfo{};
    a7fd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a804:	48 89 c6             	mov    %rax,%rsi
    a807:	b8 00 00 00 00       	mov    $0x0,%eax
    a80c:	ba 0d 00 00 00       	mov    $0xd,%edx
    a811:	48 89 f7             	mov    %rsi,%rdi
    a814:	48 89 d1             	mov    %rdx,%rcx
    a817:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  swapchainCreateInfo.sType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR;
    a81a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a821:	c7 00 e8 cd 9a 3b    	movl   $0x3b9acde8,(%rax)
  swapchainCreateInfo.pNext = nullptr;
    a827:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a82e:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a835:	00 
  /* Images of the swapchain can be used to create a VkImageView with a
  different format than what the swapchain was create with. */
  /* {VK_KHR_swapchain_mutable_format} is not available */
  // swapchainCreateInfo.flags = VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR;

  swapchainCreateInfo.surface = surface;
    a836:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    a83d:	48 8b 50 30          	mov    0x30(%rax),%rdx
    a841:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a848:	48 89 50 18          	mov    %rdx,0x18(%rax)

  /* plus 1 to prevent waiting on the driver to complete internal operations
  before another image is accquired */
  uint32_t minImageCount = surfaceCapabilities.minImageCount + 1;
    a84c:	8b 45 80             	mov    -0x80(%rbp),%eax
    a84f:	83 c0 01             	add    $0x1,%eax
    a852:	89 45 ec             	mov    %eax,-0x14(%rbp)

  /* minImageCount <= surfaceCapabilities.maxImageCount, and
  surfaceCapabilities.maxImageCount might be less than
  surfaceCapabilities.minImageCount */
  if (surfaceCapabilities.maxImageCount > 0 &&
    a855:	8b 45 84             	mov    -0x7c(%rbp),%eax
    a858:	85 c0                	test   %eax,%eax
    a85a:	74 0e                	je     a86a <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
      minImageCount > surfaceCapabilities.maxImageCount) {
    a85c:	8b 45 84             	mov    -0x7c(%rbp),%eax
  if (surfaceCapabilities.maxImageCount > 0 &&
    a85f:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    a862:	73 06                	jae    a86a <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
    minImageCount = surfaceCapabilities.maxImageCount;
    a864:	8b 45 84             	mov    -0x7c(%rbp),%eax
    a867:	89 45 ec             	mov    %eax,-0x14(%rbp)
  }
  swapchainCreateInfo.minImageCount = minImageCount;
    a86a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a871:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a874:	89 50 20             	mov    %edx,0x20(%rax)

  /* imageFormat and imageColorSpace must match the surfaceFormats.format and
  surfaceFormats.colorSpace members, respectively */
  if (surfaceFormats.empty()) {
    a877:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    a87e:	48 89 c7             	mov    %rax,%rdi
    a881:	e8 4a 12 00 00       	call   bad0 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>
    a886:	84 c0                	test   %al,%al
    a888:	74 3b                	je     a8c5 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x159>
    throw std::runtime_error("No surface format available.");
    a88a:	bf 10 00 00 00       	mov    $0x10,%edi
    a88f:	e8 5c 88 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    a894:	48 89 c3             	mov    %rax,%rbx
    a897:	48 8d 05 ae 73 00 00 	lea    0x73ae(%rip),%rax        # 11c4c <_ZN6__pstl9execution2v1L5unseqE+0x39>
    a89e:	48 89 c6             	mov    %rax,%rsi
    a8a1:	48 89 df             	mov    %rbx,%rdi
    a8a4:	e8 f7 87 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    a8a9:	48 8b 05 f8 06 01 00 	mov    0x106f8(%rip),%rax        # 1afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a8b0:	48 89 c2             	mov    %rax,%rdx
    a8b3:	48 8d 05 86 04 01 00 	lea    0x10486(%rip),%rax        # 1ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a8ba:	48 89 c6             	mov    %rax,%rsi
    a8bd:	48 89 df             	mov    %rbx,%rdi
    a8c0:	e8 8b 8b ff ff       	call   3450 <__cxa_throw@plt>
  }
  swapchainCreateInfo.imageFormat = surfaceFormats[0].format;
    a8c5:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    a8cc:	be 00 00 00 00       	mov    $0x0,%esi
    a8d1:	48 89 c7             	mov    %rax,%rdi
    a8d4:	e8 39 12 00 00       	call   bb12 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    a8d9:	8b 10                	mov    (%rax),%edx
    a8db:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a8e2:	89 50 24             	mov    %edx,0x24(%rax)
  swapchainCreateInfo.imageColorSpace = surfaceFormats[0].colorSpace;
    a8e5:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    a8ec:	be 00 00 00 00       	mov    $0x0,%esi
    a8f1:	48 89 c7             	mov    %rax,%rdi
    a8f4:	e8 19 12 00 00       	call   bb12 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    a8f9:	8b 50 04             	mov    0x4(%rax),%edx
    a8fc:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a903:	89 50 28             	mov    %edx,0x28(%rax)
  for (const auto &format : surfaceFormats) {
    a906:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    a90d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    a911:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a915:	48 89 c7             	mov    %rax,%rdi
    a918:	e8 15 12 00 00       	call   bb32 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    a91d:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    a924:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a928:	48 89 c7             	mov    %rax,%rdi
    a92b:	e8 28 12 00 00       	call   bb58 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    a930:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    a937:	eb 5b                	jmp    a994 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x228>
    a939:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    a940:	48 89 c7             	mov    %rax,%rdi
    a943:	e8 94 12 00 00       	call   bbdc <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>
    a948:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    a94c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a950:	8b 00                	mov    (%rax),%eax
    a952:	83 f8 2b             	cmp    $0x2b,%eax
    a955:	75 2e                	jne    a985 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
        format.colorSpace == VK_COLOR_SPACE_SRGB_NONLINEAR_KHR) {
    a957:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a95b:	8b 40 04             	mov    0x4(%rax),%eax
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    a95e:	85 c0                	test   %eax,%eax
    a960:	75 23                	jne    a985 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
      swapchainCreateInfo.imageFormat = format.format;
    a962:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a966:	8b 10                	mov    (%rax),%edx
    a968:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a96f:	89 50 24             	mov    %edx,0x24(%rax)
      swapchainCreateInfo.imageColorSpace = format.colorSpace;
    a972:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a976:	8b 50 04             	mov    0x4(%rax),%edx
    a979:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a980:	89 50 28             	mov    %edx,0x28(%rax)
      break;
    a983:	eb 2c                	jmp    a9b1 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x245>
  for (const auto &format : surfaceFormats) {
    a985:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    a98c:	48 89 c7             	mov    %rax,%rdi
    a98f:	e8 28 12 00 00       	call   bbbc <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>
    a994:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    a99b:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    a9a2:	48 89 d6             	mov    %rdx,%rsi
    a9a5:	48 89 c7             	mov    %rax,%rdi
    a9a8:	e8 d4 11 00 00       	call   bb81 <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    a9ad:	84 c0                	test   %al,%al
    a9af:	75 88                	jne    a939 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x1cd>

  /* imageExtent is the size (in pixels) of the swapchain
  image(s). The behavior is platform-dependent if the image
  extent does not match the surface’s currentExtent as returned
  by vkGetPhysicalDeviceSurfaceCapabilitiesKHR. */
  uint32_t imageExtentWidth = surfaceCapabilities.currentExtent.width;
    a9b1:	8b 45 88             	mov    -0x78(%rbp),%eax
    a9b4:	89 45 e8             	mov    %eax,-0x18(%rbp)
  uint32_t imageExtentHeight = surfaceCapabilities.currentExtent.height;
    a9b7:	8b 45 8c             	mov    -0x74(%rbp),%eax
    a9ba:	89 45 e4             	mov    %eax,-0x1c(%rbp)

  /* {0, 0} <= minImageExtent <= imageExtent <= maxImageExtent */
  if (imageExtentWidth > surfaceCapabilities.maxImageExtent.width) {
    a9bd:	8b 45 98             	mov    -0x68(%rbp),%eax
    a9c0:	3b 45 e8             	cmp    -0x18(%rbp),%eax
    a9c3:	73 06                	jae    a9cb <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x25f>
    imageExtentWidth = surfaceCapabilities.maxImageExtent.width;
    a9c5:	8b 45 98             	mov    -0x68(%rbp),%eax
    a9c8:	89 45 e8             	mov    %eax,-0x18(%rbp)
  }
  if (imageExtentHeight > surfaceCapabilities.maxImageExtent.height) {
    a9cb:	8b 45 9c             	mov    -0x64(%rbp),%eax
    a9ce:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    a9d1:	73 06                	jae    a9d9 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x26d>
    imageExtentHeight = surfaceCapabilities.maxImageExtent.height;
    a9d3:	8b 45 9c             	mov    -0x64(%rbp),%eax
    a9d6:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  }
  swapchainCreateInfo.imageExtent = {imageExtentWidth, imageExtentHeight};
    a9d9:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a9e0:	8b 55 e8             	mov    -0x18(%rbp),%edx
    a9e3:	89 50 2c             	mov    %edx,0x2c(%rax)
    a9e6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a9ed:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    a9f0:	89 50 30             	mov    %edx,0x30(%rax)

  /* imageArrayLayers is the number of views in a multiview/stereo surface. For
  non-stereoscopic-3D applications, this value is 1. */
  /* 0 < imageArrayLayers <= maxImageArrayLayers */
  swapchainCreateInfo.imageArrayLayers = 1;
    a9f3:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a9fa:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%rax)

  /* {presentMode} determines how incoming present requests will be processed
  and queued internally. */
  /* enum {VkPresentModeKHR}, pg 2219 */
  /* {VK_PRESENT_MODE_FIFO_KHR} is guaranteed to be available */
  swapchainCreateInfo.presentMode = VK_PRESENT_MODE_FIFO_KHR;
    aa01:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    aa08:	c7 40 58 02 00 00 00 	movl   $0x2,0x58(%rax)
  auto preferredPresentMode = VK_PRESENT_MODE_IMMEDIATE_KHR;
    aa0f:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
  for (const auto &presentMode : surfacePresentModes) {
    aa16:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    aa1d:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    aa21:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    aa25:	48 89 c7             	mov    %rax,%rdi
    aa28:	e8 c1 11 00 00       	call   bbee <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>
    aa2d:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    aa34:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    aa38:	48 89 c7             	mov    %rax,%rdi
    aa3b:	e8 d4 11 00 00       	call   bc14 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>
    aa40:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    aa47:	eb 3c                	jmp    aa85 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x319>
    aa49:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    aa50:	48 89 c7             	mov    %rax,%rdi
    aa53:	e8 40 12 00 00       	call   bc98 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>
    aa58:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    if (presentMode == preferredPresentMode) {
    aa5c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    aa60:	8b 00                	mov    (%rax),%eax
    aa62:	39 45 cc             	cmp    %eax,-0x34(%rbp)
    aa65:	75 0f                	jne    aa76 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x30a>
      swapchainCreateInfo.presentMode = preferredPresentMode;
    aa67:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    aa6e:	8b 55 cc             	mov    -0x34(%rbp),%edx
    aa71:	89 50 58             	mov    %edx,0x58(%rax)
      break;
    aa74:	eb 2c                	jmp    aaa2 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x336>
  for (const auto &presentMode : surfacePresentModes) {
    aa76:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    aa7d:	48 89 c7             	mov    %rax,%rdi
    aa80:	e8 f3 11 00 00       	call   bc78 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>
    aa85:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
    aa8c:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    aa93:	48 89 d6             	mov    %rdx,%rsi
    aa96:	48 89 c7             	mov    %rax,%rdi
    aa99:	e8 9f 11 00 00       	call   bc3d <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    aa9e:	84 c0                	test   %al,%al
    aaa0:	75 a7                	jne    aa49 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x2dd>
  }

  /* {VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT} specifies that the image can be used
  to create a {VkImageView} suitable for use as a color or resolve attachment in
  a {VkFramebuffer}, pg 898 */
  swapchainCreateInfo.imageUsage = VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT;
    aaa2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    aaa9:	c7 40 38 10 00 00 00 	movl   $0x10,0x38(%rax)

  /* {VK_SHARING_MODE_EXCLUSIVE} requires some works to be done with ownership
   */
  swapchainCreateInfo.imageSharingMode = VK_SHARING_MODE_EXCLUSIVE;
    aab0:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    aab7:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%rax)
  swapchainCreateInfo.queueFamilyIndexCount = 0;
    aabe:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    aac5:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)
  swapchainCreateInfo.pQueueFamilyIndices = nullptr;
    aacc:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    aad3:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
    aada:	00 

  /* image content is presented without being transformed */
  if (surfaceCapabilities.supportedTransforms &
    aadb:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    aade:	83 e0 01             	and    $0x1,%eax
    aae1:	85 c0                	test   %eax,%eax
    aae3:	74 1e                	je     ab03 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x397>
      VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR) {
    swapchainCreateInfo.preTransform = VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR;
    aae5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    aaec:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%rax)
  } else {
    throw std::runtime_error(
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
  }

  if (surfaceCapabilities.supportedCompositeAlpha &
    aaf3:	8b 45 ac             	mov    -0x54(%rbp),%eax
    aaf6:	83 e0 01             	and    $0x1,%eax
    aaf9:	85 c0                	test   %eax,%eax
    aafb:	0f 84 9b 00 00 00    	je     ab9c <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x430>
    ab01:	eb 3b                	jmp    ab3e <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3d2>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    ab03:	bf 10 00 00 00       	mov    $0x10,%edi
    ab08:	e8 e3 85 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    ab0d:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    ab10:	48 8d 05 59 71 00 00 	lea    0x7159(%rip),%rax        # 11c70 <_ZN6__pstl9execution2v1L5unseqE+0x5d>
    ab17:	48 89 c6             	mov    %rax,%rsi
    ab1a:	48 89 df             	mov    %rbx,%rdi
    ab1d:	e8 7e 85 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    ab22:	48 8b 05 7f 04 01 00 	mov    0x1047f(%rip),%rax        # 1afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    ab29:	48 89 c2             	mov    %rax,%rdx
    ab2c:	48 8d 05 0d 02 01 00 	lea    0x1020d(%rip),%rax        # 1ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    ab33:	48 89 c6             	mov    %rax,%rsi
    ab36:	48 89 df             	mov    %rbx,%rdi
    ab39:	e8 12 89 ff ff       	call   3450 <__cxa_throw@plt>
      VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR) {
    swapchainCreateInfo.compositeAlpha = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR;
    ab3e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ab45:	c7 40 54 01 00 00 00 	movl   $0x1,0x54(%rax)
  } else {
    throw std::runtime_error(
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
  }

  swapchainCreateInfo.clipped = VK_TRUE;
    ab4c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ab53:	c7 40 5c 01 00 00 00 	movl   $0x1,0x5c(%rax)

  swapchainCreateInfo.pNext = nullptr;
    ab5a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ab61:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ab68:	00 
  swapchainCreateInfo.oldSwapchain = VK_NULL_HANDLE;
    ab69:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ab70:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
    ab77:	00 

  return swapchainCreateInfo;
    ab78:	90                   	nop
}
    ab79:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    ab80:	48 89 c7             	mov    %rax,%rdi
    ab83:	e8 32 ab ff ff       	call   56ba <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    ab88:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ab8f:	48 89 c7             	mov    %rax,%rdi
    ab92:	e8 bf a9 ff ff       	call   5556 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
  return swapchainCreateInfo;
    ab97:	e9 9c 00 00 00       	jmp    ac38 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4cc>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    ab9c:	bf 10 00 00 00       	mov    $0x10,%edi
    aba1:	e8 4a 85 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    aba6:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    aba9:	48 8d 05 f8 70 00 00 	lea    0x70f8(%rip),%rax        # 11ca8 <_ZN6__pstl9execution2v1L5unseqE+0x95>
    abb0:	48 89 c6             	mov    %rax,%rsi
    abb3:	48 89 df             	mov    %rbx,%rdi
    abb6:	e8 e5 84 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    abbb:	48 8b 05 e6 03 01 00 	mov    0x103e6(%rip),%rax        # 1afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    abc2:	48 89 c2             	mov    %rax,%rdx
    abc5:	48 8d 05 74 01 01 00 	lea    0x10174(%rip),%rax        # 1ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    abcc:	48 89 c6             	mov    %rax,%rsi
    abcf:	48 89 df             	mov    %rbx,%rdi
    abd2:	e8 79 88 ff ff       	call   3450 <__cxa_throw@plt>
    throw std::runtime_error("No surface format available.");
    abd7:	49 89 c4             	mov    %rax,%r12
    abda:	48 89 df             	mov    %rbx,%rdi
    abdd:	e8 8e 85 ff ff       	call   3170 <__cxa_free_exception@plt>
    abe2:	4c 89 e3             	mov    %r12,%rbx
    abe5:	eb 23                	jmp    ac0a <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x49e>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    abe7:	49 89 c4             	mov    %rax,%r12
    abea:	48 89 df             	mov    %rbx,%rdi
    abed:	e8 7e 85 ff ff       	call   3170 <__cxa_free_exception@plt>
    abf2:	4c 89 e3             	mov    %r12,%rbx
    abf5:	eb 13                	jmp    ac0a <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x49e>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    abf7:	49 89 c4             	mov    %rax,%r12
    abfa:	48 89 df             	mov    %rbx,%rdi
    abfd:	e8 6e 85 ff ff       	call   3170 <__cxa_free_exception@plt>
    ac02:	4c 89 e3             	mov    %r12,%rbx
    ac05:	eb 03                	jmp    ac0a <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x49e>
}
    ac07:	48 89 c3             	mov    %rax,%rbx
    ac0a:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    ac11:	48 89 c7             	mov    %rax,%rdi
    ac14:	e8 a1 aa ff ff       	call   56ba <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    ac19:	eb 03                	jmp    ac1e <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4b2>
    ac1b:	48 89 c3             	mov    %rax,%rbx
    ac1e:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ac25:	48 89 c7             	mov    %rax,%rdi
    ac28:	e8 29 a9 ff ff       	call   5556 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    ac2d:	48 89 d8             	mov    %rbx,%rax
    ac30:	48 89 c7             	mov    %rax,%rdi
    ac33:	e8 38 88 ff ff       	call   3470 <_Unwind_Resume@plt>
    ac38:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ac3f:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
    ac46:	5b                   	pop    %rbx
    ac47:	41 5c                	pop    %r12
    ac49:	5d                   	pop    %rbp
    ac4a:	c3                   	ret
    ac4b:	90                   	nop

000000000000ac4c <_ZN9VulkanApp15createSwapchainEv>:

void VulkanApp::createSwapchain() {
    ac4c:	55                   	push   %rbp
    ac4d:	48 89 e5             	mov    %rsp,%rbp
    ac50:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    ac54:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  auto swapchainCreateInfo = populateSwapchainCreateInfo();
    ac58:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    ac5c:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    ac60:	48 89 d6             	mov    %rdx,%rsi
    ac63:	48 89 c7             	mov    %rax,%rdi
    ac66:	e8 01 fb ff ff       	call   a76c <_ZN9VulkanApp27populateSwapchainCreateInfoEv>
  swapchain = vkh::createSwapchain(device, &swapchainCreateInfo);
    ac6b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    ac6f:	48 8b 40 40          	mov    0x40(%rax),%rax
    ac73:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    ac77:	ba 00 00 00 00       	mov    $0x0,%edx
    ac7c:	48 89 ce             	mov    %rcx,%rsi
    ac7f:	48 89 c7             	mov    %rax,%rdi
    ac82:	e8 fa 8c ff ff       	call   3981 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>
    ac87:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    ac8b:	48 89 42 50          	mov    %rax,0x50(%rdx)
}
    ac8f:	90                   	nop
    ac90:	c9                   	leave
    ac91:	c3                   	ret

000000000000ac92 <_ZN9VulkanAppC1Ev>:

VulkanApp::VulkanApp() {
    ac92:	55                   	push   %rbp
    ac93:	48 89 e5             	mov    %rsp,%rbp
    ac96:	41 57                	push   %r15
    ac98:	41 56                	push   %r14
    ac9a:	41 55                	push   %r13
    ac9c:	41 54                	push   %r12
    ac9e:	53                   	push   %rbx
    ac9f:	48 83 ec 38          	sub    $0x38,%rsp
    aca3:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    aca7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    acab:	48 8d 58 10          	lea    0x10(%rax),%rbx
    acaf:	48 8d 05 23 70 00 00 	lea    0x7023(%rip),%rax        # 11cd9 <_ZN6__pstl9execution2v1L5unseqE+0xc6>
    acb6:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    acba:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    acbe:	49 89 c6             	mov    %rax,%r14
    acc1:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    acc7:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    accb:	48 89 c7             	mov    %rax,%rdi
    acce:	e8 25 9f ff ff       	call   4bf8 <_ZNSaIPKcEC1Ev>
    acd3:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    acd7:	4d 89 f0             	mov    %r14,%r8
    acda:	4d 89 f9             	mov    %r15,%r9
    acdd:	4c 89 f6             	mov    %r14,%rsi
    ace0:	4c 89 ff             	mov    %r15,%rdi
    ace3:	48 89 fa             	mov    %rdi,%rdx
    ace6:	48 89 c1             	mov    %rax,%rcx
    ace9:	4c 89 c6             	mov    %r8,%rsi
    acec:	48 89 df             	mov    %rbx,%rdi
    acef:	e8 16 08 00 00       	call   b50a <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    acf4:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    acf8:	48 89 c7             	mov    %rax,%rdi
    acfb:	e8 14 9f ff ff       	call   4c14 <_ZNSaIPKcED1Ev>
    ad00:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ad04:	48 83 c0 58          	add    $0x58,%rax
    ad08:	48 89 c7             	mov    %rax,%rdi
    ad0b:	e8 d2 06 00 00       	call   b3e2 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>
    ad10:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ad14:	48 8d 58 70          	lea    0x70(%rax),%rbx
    ad18:	48 8d 05 d6 6f 00 00 	lea    0x6fd6(%rip),%rax        # 11cf5 <_ZN6__pstl9execution2v1L5unseqE+0xe2>
    ad1f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    ad23:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ad27:	49 89 c4             	mov    %rax,%r12
    ad2a:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    ad30:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    ad34:	48 89 c7             	mov    %rax,%rdi
    ad37:	e8 bc 9e ff ff       	call   4bf8 <_ZNSaIPKcEC1Ev>
    ad3c:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    ad40:	4d 89 e0             	mov    %r12,%r8
    ad43:	4d 89 e9             	mov    %r13,%r9
    ad46:	4c 89 e6             	mov    %r12,%rsi
    ad49:	4c 89 ef             	mov    %r13,%rdi
    ad4c:	48 89 fa             	mov    %rdi,%rdx
    ad4f:	48 89 c1             	mov    %rax,%rcx
    ad52:	4c 89 c6             	mov    %r8,%rsi
    ad55:	48 89 df             	mov    %rbx,%rdi
    ad58:	e8 ad 07 00 00       	call   b50a <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    ad5d:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    ad61:	48 89 c7             	mov    %rax,%rdi
    ad64:	e8 ab 9e ff ff       	call   4c14 <_ZNSaIPKcED1Ev>
  createWindow();
    ad69:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ad6d:	48 89 c7             	mov    %rax,%rdi
    ad70:	e8 57 ef ff ff       	call   9ccc <_ZN9VulkanApp12createWindowEv>
  createInstance();
    ad75:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ad79:	48 89 c7             	mov    %rax,%rdi
    ad7c:	e8 8b ef ff ff       	call   9d0c <_ZN9VulkanApp14createInstanceEv>
  createDebugMessenger();
    ad81:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ad85:	48 89 c7             	mov    %rax,%rdi
    ad88:	e8 ab f0 ff ff       	call   9e38 <_ZN9VulkanApp20createDebugMessengerEv>
  createSurface();
    ad8d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ad91:	48 89 c7             	mov    %rax,%rdi
    ad94:	e8 c7 f0 ff ff       	call   9e60 <_ZN9VulkanApp13createSurfaceEv>
  createDevice();
    ad99:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ad9d:	48 89 c7             	mov    %rax,%rdi
    ada0:	e8 d3 f2 ff ff       	call   a078 <_ZN9VulkanApp12createDeviceEv>
  createSwapchain();
    ada5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ada9:	48 89 c7             	mov    %rax,%rdi
    adac:	e8 9b fe ff ff       	call   ac4c <_ZN9VulkanApp15createSwapchainEv>
}
    adb1:	eb 69                	jmp    ae1c <_ZN9VulkanAppC1Ev+0x18a>
VulkanApp::VulkanApp() {
    adb3:	48 89 c3             	mov    %rax,%rbx
    adb6:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    adba:	48 89 c7             	mov    %rax,%rdi
    adbd:	e8 52 9e ff ff       	call   4c14 <_ZNSaIPKcED1Ev>
    adc2:	48 89 d8             	mov    %rbx,%rax
    adc5:	48 89 c7             	mov    %rax,%rdi
    adc8:	e8 a3 86 ff ff       	call   3470 <_Unwind_Resume@plt>
    adcd:	48 89 c3             	mov    %rax,%rbx
    add0:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    add4:	48 89 c7             	mov    %rax,%rdi
    add7:	e8 38 9e ff ff       	call   4c14 <_ZNSaIPKcED1Ev>
    addc:	eb 13                	jmp    adf1 <_ZN9VulkanAppC1Ev+0x15f>
}
    adde:	48 89 c3             	mov    %rax,%rbx
    ade1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ade5:	48 83 c0 70          	add    $0x70,%rax
    ade9:	48 89 c7             	mov    %rax,%rdi
    adec:	e8 b5 9e ff ff       	call   4ca6 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    adf1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    adf5:	48 83 c0 58          	add    $0x58,%rax
    adf9:	48 89 c7             	mov    %rax,%rdi
    adfc:	e8 3b 0f 00 00       	call   bd3c <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
VulkanApp::VulkanApp() {
    ae01:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ae05:	48 83 c0 10          	add    $0x10,%rax
}
    ae09:	48 89 c7             	mov    %rax,%rdi
    ae0c:	e8 95 9e ff ff       	call   4ca6 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ae11:	48 89 d8             	mov    %rbx,%rax
    ae14:	48 89 c7             	mov    %rax,%rdi
    ae17:	e8 54 86 ff ff       	call   3470 <_Unwind_Resume@plt>
    ae1c:	48 83 c4 38          	add    $0x38,%rsp
    ae20:	5b                   	pop    %rbx
    ae21:	41 5c                	pop    %r12
    ae23:	41 5d                	pop    %r13
    ae25:	41 5e                	pop    %r14
    ae27:	41 5f                	pop    %r15
    ae29:	5d                   	pop    %rbp
    ae2a:	c3                   	ret
    ae2b:	90                   	nop

000000000000ae2c <_ZN9VulkanAppD1Ev>:

VulkanApp::~VulkanApp() {
    ae2c:	55                   	push   %rbp
    ae2d:	48 89 e5             	mov    %rsp,%rbp
    ae30:	48 83 ec 10          	sub    $0x10,%rsp
    ae34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  vkh::destroySwapchain(device, swapchain);
    ae38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae3c:	48 8b 48 50          	mov    0x50(%rax),%rcx
    ae40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae44:	48 8b 40 40          	mov    0x40(%rax),%rax
    ae48:	ba 00 00 00 00       	mov    $0x0,%edx
    ae4d:	48 89 ce             	mov    %rcx,%rsi
    ae50:	48 89 c7             	mov    %rax,%rdi
    ae53:	e8 5e 8c ff ff       	call   3ab6 <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>
  vkh::destroyDevice(device);
    ae58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae5c:	48 8b 40 40          	mov    0x40(%rax),%rax
    ae60:	be 00 00 00 00       	mov    $0x0,%esi
    ae65:	48 89 c7             	mov    %rax,%rdi
    ae68:	e8 f5 8b ff ff       	call   3a62 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>
  vkh::destroyDebugUtilsMessengerEXT(instance, debugMessenger, nullptr);
    ae6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae71:	48 8b 48 28          	mov    0x28(%rax),%rcx
    ae75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae79:	48 8b 40 08          	mov    0x8(%rax),%rax
    ae7d:	ba 00 00 00 00       	mov    $0x0,%edx
    ae82:	48 89 ce             	mov    %rcx,%rsi
    ae85:	48 89 c7             	mov    %rax,%rdi
    ae88:	e8 a2 e9 ff ff       	call   982f <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
  vkh::destroySurface(instance, surface);
    ae8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae91:	48 8b 48 30          	mov    0x30(%rax),%rcx
    ae95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae99:	48 8b 40 08          	mov    0x8(%rax),%rax
    ae9d:	ba 00 00 00 00       	mov    $0x0,%edx
    aea2:	48 89 ce             	mov    %rcx,%rsi
    aea5:	48 89 c7             	mov    %rax,%rdi
    aea8:	e8 db 8b ff ff       	call   3a88 <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>
  vkh::destroyInstance(instance, nullptr);
    aead:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aeb1:	48 8b 40 08          	mov    0x8(%rax),%rax
    aeb5:	be 00 00 00 00       	mov    $0x0,%esi
    aeba:	48 89 c7             	mov    %rax,%rdi
    aebd:	e8 7a 8b ff ff       	call   3a3c <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>
  glfwDestroyWindow(window);
    aec2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aec6:	48 8b 00             	mov    (%rax),%rax
    aec9:	48 89 c7             	mov    %rax,%rdi
    aecc:	e8 af 81 ff ff       	call   3080 <glfwDestroyWindow@plt>
  glfwTerminate();
    aed1:	e8 ba 83 ff ff       	call   3290 <glfwTerminate@plt>
}
    aed6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aeda:	48 83 c0 70          	add    $0x70,%rax
    aede:	48 89 c7             	mov    %rax,%rdi
    aee1:	e8 c0 9d ff ff       	call   4ca6 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    aee6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aeea:	48 83 c0 58          	add    $0x58,%rax
    aeee:	48 89 c7             	mov    %rax,%rdi
    aef1:	e8 46 0e 00 00       	call   bd3c <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
VulkanApp::~VulkanApp() {
    aef6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aefa:	48 83 c0 10          	add    $0x10,%rax
}
    aefe:	48 89 c7             	mov    %rax,%rdi
    af01:	e8 a0 9d ff ff       	call   4ca6 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    af06:	90                   	nop
    af07:	c9                   	leave
    af08:	c3                   	ret
    af09:	90                   	nop

000000000000af0a <_ZN9VulkanApp3runEv>:

void VulkanApp::run() {
    af0a:	55                   	push   %rbp
    af0b:	48 89 e5             	mov    %rsp,%rbp
    af0e:	53                   	push   %rbx
    af0f:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    af16:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
  vkh::Timer time_total;
    af1d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    af21:	48 89 c7             	mov    %rax,%rdi
    af24:	e8 57 0e 00 00       	call   bd80 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>
  const double sec_to_mics = 1'000'000.0;
    af29:	f2 0f 10 05 4f 6e 00 	movsd  0x6e4f(%rip),%xmm0        # 11d80 <_ZN6__pstl9execution2v1L5unseqE+0x16d>
    af30:	00 
    af31:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  while (!glfwWindowShouldClose(window)) {
    af36:	e9 a1 00 00 00       	jmp    afdc <_ZN9VulkanApp3runEv+0xd2>
    vkh::Timer time_circle;
    af3b:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    af3f:	48 89 c7             	mov    %rax,%rdi
    af42:	e8 39 0e 00 00       	call   bd80 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>

    glfwPollEvents();
    af47:	e8 f4 82 ff ff       	call   3240 <glfwPollEvents@plt>

    double current = static_cast<double>(time_total.current());
    af4c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    af50:	48 89 c7             	mov    %rax,%rdi
    af53:	e8 a6 04 00 00       	call   b3fe <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    af58:	66 0f ef c0          	pxor   %xmm0,%xmm0
    af5c:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    af61:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
    if (current >= sec_to_mics) {
    af66:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
    af6b:	66 0f 2f 05 0d 6e 00 	comisd 0x6e0d(%rip),%xmm0        # 11d80 <_ZN6__pstl9execution2v1L5unseqE+0x16d>
    af72:	00 
    af73:	72 5b                	jb     afd0 <_ZN9VulkanApp3runEv+0xc6>
      std::cout << sec_to_mics / static_cast<double>(time_circle.current())
    af75:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    af79:	48 89 c7             	mov    %rax,%rdi
    af7c:	e8 7d 04 00 00       	call   b3fe <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    af81:	66 0f ef c9          	pxor   %xmm1,%xmm1
    af85:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    af8a:	f2 0f 10 05 ee 6d 00 	movsd  0x6dee(%rip),%xmm0        # 11d80 <_ZN6__pstl9execution2v1L5unseqE+0x16d>
    af91:	00 
    af92:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    af96:	66 48 0f 7e c0       	movq   %xmm0,%rax
    af9b:	66 48 0f 6e c0       	movq   %rax,%xmm0
    afa0:	48 8d 05 d9 02 01 00 	lea    0x102d9(%rip),%rax        # 1b280 <_ZSt4cout@GLIBCXX_3.4>
    afa7:	48 89 c7             	mov    %rax,%rdi
    afaa:	e8 11 85 ff ff       	call   34c0 <_ZNSolsEd@plt>
    afaf:	48 89 c2             	mov    %rax,%rdx
                << " FPS\n";
    afb2:	48 8d 05 4d 6d 00 00 	lea    0x6d4d(%rip),%rax        # 11d06 <_ZN6__pstl9execution2v1L5unseqE+0xf3>
    afb9:	48 89 c6             	mov    %rax,%rsi
    afbc:	48 89 d7             	mov    %rdx,%rdi
    afbf:	e8 8c 82 ff ff       	call   3250 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      time_total.reset();
    afc4:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    afc8:	48 89 c7             	mov    %rax,%rdi
    afcb:	e8 c0 0e 00 00       	call   be90 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>
    }
  }
    afd0:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    afd4:	48 89 c7             	mov    %rax,%rdi
    afd7:	e8 1a 0e 00 00       	call   bdf6 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
  while (!glfwWindowShouldClose(window)) {
    afdc:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    afe3:	48 8b 00             	mov    (%rax),%rax
    afe6:	48 89 c7             	mov    %rax,%rdi
    afe9:	e8 c2 84 ff ff       	call   34b0 <glfwWindowShouldClose@plt>
    afee:	85 c0                	test   %eax,%eax
    aff0:	0f 94 c0             	sete   %al
    aff3:	84 c0                	test   %al,%al
    aff5:	0f 85 40 ff ff ff    	jne    af3b <_ZN9VulkanApp3runEv+0x31>
  vkDeviceWaitIdle(device);
    affb:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    b002:	48 8b 40 40          	mov    0x40(%rax),%rax
    b006:	48 89 c7             	mov    %rax,%rdi
    b009:	e8 52 80 ff ff       	call   3060 <vkDeviceWaitIdle@plt>
    b00e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    b012:	48 89 c7             	mov    %rax,%rdi
    b015:	e8 dc 0d 00 00       	call   bdf6 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    b01a:	eb 2b                	jmp    b047 <_ZN9VulkanApp3runEv+0x13d>
  }
    b01c:	48 89 c3             	mov    %rax,%rbx
    b01f:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    b023:	48 89 c7             	mov    %rax,%rdi
    b026:	e8 cb 0d 00 00       	call   bdf6 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    b02b:	eb 03                	jmp    b030 <_ZN9VulkanApp3runEv+0x126>
    b02d:	48 89 c3             	mov    %rax,%rbx
    b030:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    b034:	48 89 c7             	mov    %rax,%rdi
    b037:	e8 ba 0d 00 00       	call   bdf6 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    b03c:	48 89 d8             	mov    %rbx,%rax
    b03f:	48 89 c7             	mov    %rax,%rdi
    b042:	e8 29 84 ff ff       	call   3470 <_Unwind_Resume@plt>
    b047:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b04b:	c9                   	leave
    b04c:	c3                   	ret

000000000000b04d <_Z41__static_initialization_and_destruction_0ii>:
    b04d:	55                   	push   %rbp
    b04e:	48 89 e5             	mov    %rsp,%rbp
    b051:	48 83 ec 10          	sub    $0x10,%rsp
    b055:	89 7d fc             	mov    %edi,-0x4(%rbp)
    b058:	89 75 f8             	mov    %esi,-0x8(%rbp)
    b05b:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    b05f:	75 3b                	jne    b09c <_Z41__static_initialization_and_destruction_0ii+0x4f>
    b061:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    b068:	75 32                	jne    b09c <_Z41__static_initialization_and_destruction_0ii+0x4f>
    b06a:	48 8d 05 42 04 01 00 	lea    0x10442(%rip),%rax        # 1b4b3 <_ZStL8__ioinit>
    b071:	48 89 c7             	mov    %rax,%rdi
    b074:	e8 87 83 ff ff       	call   3400 <_ZNSt8ios_base4InitC1Ev@plt>
    b079:	48 8d 05 e0 01 01 00 	lea    0x101e0(%rip),%rax        # 1b260 <__dso_handle>
    b080:	48 89 c2             	mov    %rax,%rdx
    b083:	48 8d 05 29 04 01 00 	lea    0x10429(%rip),%rax        # 1b4b3 <_ZStL8__ioinit>
    b08a:	48 89 c6             	mov    %rax,%rsi
    b08d:	48 8b 05 34 ff 00 00 	mov    0xff34(%rip),%rax        # 1afc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    b094:	48 89 c7             	mov    %rax,%rdi
    b097:	e8 74 81 ff ff       	call   3210 <__cxa_atexit@plt>
    b09c:	90                   	nop
    b09d:	c9                   	leave
    b09e:	c3                   	ret

000000000000b09f <_GLOBAL__sub_I__ZN9VulkanApp12createWindowEv>:
    b09f:	55                   	push   %rbp
    b0a0:	48 89 e5             	mov    %rsp,%rbp
    b0a3:	be ff ff 00 00       	mov    $0xffff,%esi
    b0a8:	bf 01 00 00 00       	mov    $0x1,%edi
    b0ad:	e8 9b ff ff ff       	call   b04d <_Z41__static_initialization_and_destruction_0ii>
    b0b2:	5d                   	pop    %rbp
    b0b3:	c3                   	ret

000000000000b0b4 <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
    b0b4:	55                   	push   %rbp
    b0b5:	48 89 e5             	mov    %rsp,%rbp
    b0b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0bc:	48 8d 15 4d fc 00 00 	lea    0xfc4d(%rip),%rdx        # 1ad10 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
    b0c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0c7:	48 89 10             	mov    %rdx,(%rax)
    b0ca:	90                   	nop
    b0cb:	5d                   	pop    %rbp
    b0cc:	c3                   	ret

000000000000b0cd <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
    b0cd:	55                   	push   %rbp
    b0ce:	48 89 e5             	mov    %rsp,%rbp
    b0d1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0d5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b0d9:	90                   	nop
    b0da:	5d                   	pop    %rbp
    b0db:	c3                   	ret

000000000000b0dc <_ZNKSt19bad_optional_access4whatEv>:
    const char* what() const noexcept override
    b0dc:	55                   	push   %rbp
    b0dd:	48 89 e5             	mov    %rsp,%rbp
    b0e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
    b0e4:	48 8d 05 0d 6b 00 00 	lea    0x6b0d(%rip),%rax        # 11bf8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    b0eb:	5d                   	pop    %rbp
    b0ec:	c3                   	ret
    b0ed:	90                   	nop

000000000000b0ee <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
    b0ee:	55                   	push   %rbp
    b0ef:	48 89 e5             	mov    %rsp,%rbp
    b0f2:	48 83 ec 10          	sub    $0x10,%rsp
    b0f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0fe:	48 89 c7             	mov    %rax,%rdi
    b101:	e8 ae ff ff ff       	call   b0b4 <_ZNSt9exceptionC1Ev>
    b106:	48 8d 15 d3 fb 00 00 	lea    0xfbd3(%rip),%rdx        # 1ace0 <_ZTVSt19bad_optional_access+0x10>
    b10d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b111:	48 89 10             	mov    %rdx,(%rax)
    b114:	90                   	nop
    b115:	c9                   	leave
    b116:	c3                   	ret

000000000000b117 <_ZSt27__throw_bad_optional_accessv>:
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
    b117:	55                   	push   %rbp
    b118:	48 89 e5             	mov    %rsp,%rbp
    b11b:	53                   	push   %rbx
    b11c:	48 83 ec 08          	sub    $0x8,%rsp
    b120:	bf 08 00 00 00       	mov    $0x8,%edi
    b125:	e8 c6 7f ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    b12a:	48 89 c3             	mov    %rax,%rbx
    b12d:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    b134:	48 89 df             	mov    %rbx,%rdi
    b137:	e8 b2 ff ff ff       	call   b0ee <_ZNSt19bad_optional_accessC1Ev>
    b13c:	48 8d 05 e7 2e 00 00 	lea    0x2ee7(%rip),%rax        # e02a <_ZNSt19bad_optional_accessD1Ev>
    b143:	48 89 c2             	mov    %rax,%rdx
    b146:	48 8d 05 0b fc 00 00 	lea    0xfc0b(%rip),%rax        # 1ad58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    b14d:	48 89 c6             	mov    %rax,%rsi
    b150:	48 89 df             	mov    %rbx,%rdi
    b153:	e8 f8 82 ff ff       	call   3450 <__cxa_throw@plt>

000000000000b158 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>:
	    return *this;
	  }

	// 20.11.5.4 special values
	static constexpr duration
	zero() noexcept
    b158:	55                   	push   %rbp
    b159:	48 89 e5             	mov    %rsp,%rbp
    b15c:	48 83 ec 10          	sub    $0x10,%rsp
	{ return duration(duration_values<rep>::zero()); }
    b160:	e8 3a 00 00 00       	call   b19f <_ZNSt6chrono15duration_valuesIlE4zeroEv>
    b165:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b169:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    b16d:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    b171:	48 89 d6             	mov    %rdx,%rsi
    b174:	48 89 c7             	mov    %rax,%rdi
    b177:	e8 06 00 00 00       	call   b182 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
    b17c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b180:	c9                   	leave
    b181:	c3                   	ret

000000000000b182 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
    b182:	55                   	push   %rbp
    b183:	48 89 e5             	mov    %rsp,%rbp
    b186:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b18a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    b18e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b192:	48 8b 10             	mov    (%rax),%rdx
    b195:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b199:	48 89 10             	mov    %rdx,(%rax)
    b19c:	90                   	nop
    b19d:	5d                   	pop    %rbp
    b19e:	c3                   	ret

000000000000b19f <_ZNSt6chrono15duration_valuesIlE4zeroEv>:
	zero() noexcept
    b19f:	55                   	push   %rbp
    b1a0:	48 89 e5             	mov    %rsp,%rbp
	{ return _Rep(0); }
    b1a3:	b8 00 00 00 00       	mov    $0x0,%eax
    b1a8:	5d                   	pop    %rbp
    b1a9:	c3                   	ret

000000000000b1aa <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>:
	count() const
    b1aa:	55                   	push   %rbp
    b1ab:	48 89 e5             	mov    %rsp,%rbp
    b1ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    b1b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1b6:	48 8b 00             	mov    (%rax),%rax
    b1b9:	5d                   	pop    %rbp
    b1ba:	c3                   	ret
    b1bb:	90                   	nop

000000000000b1bc <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
    b1bc:	55                   	push   %rbp
    b1bd:	48 89 e5             	mov    %rsp,%rbp
    b1c0:	48 83 ec 10          	sub    $0x10,%rsp
    b1c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
    b1c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1cc:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
    b1d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1d6:	48 89 c7             	mov    %rax,%rdi
    b1d9:	e8 04 00 00 00       	call   b1e2 <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
    b1de:	90                   	nop
    b1df:	c9                   	leave
    b1e0:	c3                   	ret
    b1e1:	90                   	nop

000000000000b1e2 <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
    b1e2:	55                   	push   %rbp
    b1e3:	48 89 e5             	mov    %rsp,%rbp
    b1e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
    b1ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1ee:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    b1f5:	00 
      _M_header._M_left = &_M_header;
    b1f6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b1fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1fe:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
    b202:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b206:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b20a:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
    b20e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b212:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    b219:	00 
    }
    b21a:	90                   	nop
    b21b:	5d                   	pop    %rbp
    b21c:	c3                   	ret
    b21d:	90                   	nop

000000000000b21e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      _Optional_payload_base() = default;
    b21e:	55                   	push   %rbp
    b21f:	48 89 e5             	mov    %rsp,%rbp
    b222:	48 83 ec 10          	sub    $0x10,%rsp
    b226:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b22a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b22e:	48 89 c7             	mov    %rax,%rdi
    b231:	e8 60 00 00 00       	call   b296 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>
    b236:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b23a:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
    b23e:	90                   	nop
    b23f:	c9                   	leave
    b240:	c3                   	ret
    b241:	90                   	nop

000000000000b242 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>:
      _Optional_payload() = default;
    b242:	55                   	push   %rbp
    b243:	48 89 e5             	mov    %rsp,%rbp
    b246:	48 83 ec 10          	sub    $0x10,%rsp
    b24a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b24e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b252:	48 89 c7             	mov    %rax,%rdi
    b255:	e8 c4 ff ff ff       	call   b21e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
    b25a:	90                   	nop
    b25b:	c9                   	leave
    b25c:	c3                   	ret
    b25d:	90                   	nop

000000000000b25e <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    b25e:	55                   	push   %rbp
    b25f:	48 89 e5             	mov    %rsp,%rbp
    b262:	48 83 ec 10          	sub    $0x10,%rsp
    b266:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b26a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b26e:	48 89 c7             	mov    %rax,%rdi
    b271:	e8 cc ff ff ff       	call   b242 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>
    b276:	90                   	nop
    b277:	c9                   	leave
    b278:	c3                   	ret
    b279:	90                   	nop

000000000000b27a <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      constexpr optional() noexcept { }
    b27a:	55                   	push   %rbp
    b27b:	48 89 e5             	mov    %rsp,%rbp
    b27e:	48 83 ec 10          	sub    $0x10,%rsp
    b282:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b286:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b28a:	48 89 c7             	mov    %rax,%rdi
    b28d:	e8 cc ff ff ff       	call   b25e <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>
    b292:	90                   	nop
    b293:	c9                   	leave
    b294:	c3                   	ret
    b295:	90                   	nop

000000000000b296 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    b296:	55                   	push   %rbp
    b297:	48 89 e5             	mov    %rsp,%rbp
    b29a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b29e:	90                   	nop
    b29f:	5d                   	pop    %rbp
    b2a0:	c3                   	ret
    b2a1:	90                   	nop

000000000000b2a2 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>:
      _Optional_base& operator=(const _Optional_base&) = default;
    b2a2:	55                   	push   %rbp
    b2a3:	48 89 e5             	mov    %rsp,%rbp
    b2a6:	48 83 ec 10          	sub    $0x10,%rsp
    b2aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b2ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b2b2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b2b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2ba:	48 89 d6             	mov    %rdx,%rsi
    b2bd:	48 89 c7             	mov    %rax,%rdi
    b2c0:	e8 ef 04 00 00       	call   b7b4 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>
    b2c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2c9:	c9                   	leave
    b2ca:	c3                   	ret
    b2cb:	90                   	nop

000000000000b2cc <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>:
    class optional
    b2cc:	55                   	push   %rbp
    b2cd:	48 89 e5             	mov    %rsp,%rbp
    b2d0:	48 83 ec 10          	sub    $0x10,%rsp
    b2d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b2d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b2dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2e0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b2e4:	48 89 d6             	mov    %rdx,%rsi
    b2e7:	48 89 c7             	mov    %rax,%rdi
    b2ea:	e8 b3 ff ff ff       	call   b2a2 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>
    b2ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2f3:	c9                   	leave
    b2f4:	c3                   	ret
    b2f5:	90                   	nop

000000000000b2f6 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
    b2f6:	55                   	push   %rbp
    b2f7:	48 89 e5             	mov    %rsp,%rbp
    b2fa:	48 83 ec 10          	sub    $0x10,%rsp
    b2fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
    b302:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b306:	48 89 c7             	mov    %rax,%rdi
    b309:	e8 1a 00 00 00       	call   b328 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
    b30e:	84 c0                	test   %al,%al
    b310:	74 0e                	je     b320 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2a>
	  return this->_M_get();
    b312:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b316:	48 89 c7             	mov    %rax,%rdi
    b319:	e8 c0 04 00 00       	call   b7de <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>
    b31e:	eb 05                	jmp    b325 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2f>
	__throw_bad_optional_access();
    b320:	e8 f2 fd ff ff       	call   b117 <_ZSt27__throw_bad_optional_accessv>
      }
    b325:	c9                   	leave
    b326:	c3                   	ret
    b327:	90                   	nop

000000000000b328 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    b328:	55                   	push   %rbp
    b329:	48 89 e5             	mov    %rsp,%rbp
    b32c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    b330:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b334:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    b338:	5d                   	pop    %rbp
    b339:	c3                   	ret

000000000000b33a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
    b33a:	55                   	push   %rbp
    b33b:	48 89 e5             	mov    %rsp,%rbp
    b33e:	48 83 ec 10          	sub    $0x10,%rsp
    b342:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b346:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b34a:	48 89 c7             	mov    %rax,%rdi
    b34d:	e8 08 05 00 00       	call   b85a <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
    b352:	90                   	nop
    b353:	c9                   	leave
    b354:	c3                   	ret
    b355:	90                   	nop

000000000000b356 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
    b356:	55                   	push   %rbp
    b357:	48 89 e5             	mov    %rsp,%rbp
    b35a:	48 83 ec 10          	sub    $0x10,%rsp
    b35e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b362:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b366:	48 89 c7             	mov    %rax,%rdi
    b369:	e8 b4 04 00 00       	call   b822 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
    b36e:	90                   	nop
    b36f:	c9                   	leave
    b370:	c3                   	ret
    b371:	90                   	nop

000000000000b372 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
    b372:	55                   	push   %rbp
    b373:	48 89 e5             	mov    %rsp,%rbp
    b376:	48 83 ec 10          	sub    $0x10,%rsp
    b37a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b37e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b382:	48 89 c7             	mov    %rax,%rdi
    b385:	e8 cc ff ff ff       	call   b356 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
    b38a:	90                   	nop
    b38b:	c9                   	leave
    b38c:	c3                   	ret
    b38d:	90                   	nop

000000000000b38e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
    b38e:	55                   	push   %rbp
    b38f:	48 89 e5             	mov    %rsp,%rbp
    b392:	48 83 ec 10          	sub    $0x10,%rsp
    b396:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b39a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b39e:	48 89 c7             	mov    %rax,%rdi
    b3a1:	e8 d0 04 00 00       	call   b876 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
    b3a6:	90                   	nop
    b3a7:	c9                   	leave
    b3a8:	c3                   	ret
    b3a9:	90                   	nop

000000000000b3aa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    b3aa:	55                   	push   %rbp
    b3ab:	48 89 e5             	mov    %rsp,%rbp
    b3ae:	48 83 ec 10          	sub    $0x10,%rsp
    b3b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b3b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3ba:	48 89 c7             	mov    %rax,%rdi
    b3bd:	e8 10 09 00 00       	call   bcd2 <_ZNSaIP9VkImage_TED1Ev>
    b3c2:	90                   	nop
    b3c3:	c9                   	leave
    b3c4:	c3                   	ret
    b3c5:	90                   	nop

000000000000b3c6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
    b3c6:	55                   	push   %rbp
    b3c7:	48 89 e5             	mov    %rsp,%rbp
    b3ca:	48 83 ec 10          	sub    $0x10,%rsp
    b3ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b3d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3d6:	48 89 c7             	mov    %rax,%rdi
    b3d9:	e8 cc 08 00 00       	call   bcaa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>
    b3de:	90                   	nop
    b3df:	c9                   	leave
    b3e0:	c3                   	ret
    b3e1:	90                   	nop

000000000000b3e2 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>:
      vector() = default;
    b3e2:	55                   	push   %rbp
    b3e3:	48 89 e5             	mov    %rsp,%rbp
    b3e6:	48 83 ec 10          	sub    $0x10,%rsp
    b3ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b3ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3f2:	48 89 c7             	mov    %rax,%rdi
    b3f5:	e8 cc ff ff ff       	call   b3c6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>
    b3fa:	90                   	nop
    b3fb:	c9                   	leave
    b3fc:	c3                   	ret
    b3fd:	90                   	nop

000000000000b3fe <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>:
          << "Time elapsed: "
          << std::chrono::duration_cast<DurationType>(stop - start).count()
          << ' ' << this->time_unit << "\n";
  }

  auto current() const {
    b3fe:	55                   	push   %rbp
    b3ff:	48 89 e5             	mov    %rsp,%rbp
    b402:	53                   	push   %rbx
    b403:	48 83 ec 38          	sub    $0x38,%rsp
    b407:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    return std::chrono::duration_cast<DurationType>(
               std::chrono::steady_clock::now() - start)
    b40b:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    b40f:	e8 7c 7f ff ff       	call   3390 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    b414:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    b418:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    b41c:	48 89 de             	mov    %rbx,%rsi
    b41f:	48 89 c7             	mov    %rax,%rdi
    b422:	e8 f7 09 00 00       	call   be1e <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>
    b427:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    return std::chrono::duration_cast<DurationType>(
    b42b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    b42f:	48 89 c7             	mov    %rax,%rdi
    b432:	e8 2c 0a 00 00       	call   be63 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>
    b437:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
        .count();
    b43b:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    b43f:	48 89 c7             	mov    %rax,%rdi
    b442:	e8 37 0a 00 00       	call   be7e <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>
  }
    b447:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b44b:	c9                   	leave
    b44c:	c3                   	ret
    b44d:	90                   	nop

000000000000b44e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    b44e:	55                   	push   %rbp
    b44f:	48 89 e5             	mov    %rsp,%rbp
    b452:	48 83 ec 10          	sub    $0x10,%rsp
    b456:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b45a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b45e:	48 89 c7             	mov    %rax,%rdi
    b461:	e8 ea 7b ff ff       	call   3050 <_ZNSaIcED2Ev@plt>
    b466:	90                   	nop
    b467:	c9                   	leave
    b468:	c3                   	ret
    b469:	90                   	nop

000000000000b46a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    b46a:	55                   	push   %rbp
    b46b:	48 89 e5             	mov    %rsp,%rbp
    b46e:	53                   	push   %rbx
    b46f:	48 83 ec 38          	sub    $0x38,%rsp
    b473:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b477:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    b47b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    b47f:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    b483:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b487:	48 89 c7             	mov    %rax,%rdi
    b48a:	e8 21 7d ff ff       	call   31b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    b48f:	48 89 c1             	mov    %rax,%rcx
    b492:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b496:	48 89 c2             	mov    %rax,%rdx
    b499:	48 89 ce             	mov    %rcx,%rsi
    b49c:	48 89 df             	mov    %rbx,%rdi
    b49f:	e8 1c 7e ff ff       	call   32c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    b4a4:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    b4a9:	75 0f                	jne    b4ba <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    b4ab:	48 8d 05 5e 68 00 00 	lea    0x685e(%rip),%rax        # 11d10 <_ZN6__pstl9execution2v1L5unseqE+0xfd>
    b4b2:	48 89 c7             	mov    %rax,%rdi
    b4b5:	e8 a6 7c ff ff       	call   3160 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    b4ba:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b4be:	48 89 c7             	mov    %rax,%rdi
    b4c1:	e8 04 e5 ff ff       	call   99ca <_ZNSt11char_traitsIcE6lengthEPKc>
    b4c6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b4ca:	48 01 d0             	add    %rdx,%rax
    b4cd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    b4d1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b4d5:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    b4d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b4dd:	48 89 ce             	mov    %rcx,%rsi
    b4e0:	48 89 c7             	mov    %rax,%rdi
    b4e3:	e8 0c 0a 00 00       	call   bef4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    b4e8:	eb 1a                	jmp    b504 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    b4ea:	48 89 c3             	mov    %rax,%rbx
    b4ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b4f1:	48 89 c7             	mov    %rax,%rdi
    b4f4:	e8 55 ff ff ff       	call   b44e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    b4f9:	48 89 d8             	mov    %rbx,%rax
    b4fc:	48 89 c7             	mov    %rax,%rdi
    b4ff:	e8 6c 7f ff ff       	call   3470 <_Unwind_Resume@plt>
    b504:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b508:	c9                   	leave
    b509:	c3                   	ret

000000000000b50a <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
    b50a:	55                   	push   %rbp
    b50b:	48 89 e5             	mov    %rsp,%rbp
    b50e:	53                   	push   %rbx
    b50f:	48 83 ec 38          	sub    $0x38,%rsp
    b513:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b517:	48 89 f0             	mov    %rsi,%rax
    b51a:	48 89 d6             	mov    %rdx,%rsi
    b51d:	48 89 f2             	mov    %rsi,%rdx
    b520:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    b524:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    b528:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    b52c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b530:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b534:	48 89 d6             	mov    %rdx,%rsi
    b537:	48 89 c7             	mov    %rax,%rdi
    b53a:	e8 ab 0a 00 00       	call   bfea <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
    b53f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    b543:	48 89 c7             	mov    %rax,%rdi
    b546:	e8 d7 0a 00 00       	call   c022 <_ZNKSt16initializer_listIPKcE3endEv>
    b54b:	48 89 c3             	mov    %rax,%rbx
    b54e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    b552:	48 89 c7             	mov    %rax,%rdi
    b555:	e8 b6 0a 00 00       	call   c010 <_ZNKSt16initializer_listIPKcE5beginEv>
    b55a:	48 89 c1             	mov    %rax,%rcx
    b55d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b561:	48 89 da             	mov    %rbx,%rdx
    b564:	48 89 ce             	mov    %rcx,%rsi
    b567:	48 89 c7             	mov    %rax,%rdi
    b56a:	e8 19 0b 00 00       	call   c088 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
    b56f:	eb 1a                	jmp    b58b <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
    b571:	48 89 c3             	mov    %rax,%rbx
    b574:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b578:	48 89 c7             	mov    %rax,%rdi
    b57b:	e8 bc 97 ff ff       	call   4d3c <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    b580:	48 89 d8             	mov    %rbx,%rax
    b583:	48 89 c7             	mov    %rax,%rdi
    b586:	e8 e5 7e ff ff       	call   3470 <_Unwind_Resume@plt>
    b58b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b58f:	c9                   	leave
    b590:	c3                   	ret
    b591:	90                   	nop

000000000000b592 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    b592:	55                   	push   %rbp
    b593:	48 89 e5             	mov    %rsp,%rbp
    b596:	48 83 ec 10          	sub    $0x10,%rsp
    b59a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    b59e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5a2:	48 8b 10             	mov    (%rax),%rdx
    b5a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5a9:	48 89 d6             	mov    %rdx,%rsi
    b5ac:	48 89 c7             	mov    %rax,%rdi
    b5af:	e8 84 0b 00 00       	call   c138 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    b5b4:	c9                   	leave
    b5b5:	c3                   	ret

000000000000b5b6 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    b5b6:	55                   	push   %rbp
    b5b7:	48 89 e5             	mov    %rsp,%rbp
    b5ba:	48 83 ec 10          	sub    $0x10,%rsp
    b5be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    b5c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5c6:	48 8b 10             	mov    (%rax),%rdx
    b5c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5cd:	48 89 d6             	mov    %rdx,%rsi
    b5d0:	48 89 c7             	mov    %rax,%rdi
    b5d3:	e8 60 0b 00 00       	call   c138 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    b5d8:	c9                   	leave
    b5d9:	c3                   	ret

000000000000b5da <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    b5da:	55                   	push   %rbp
    b5db:	48 89 e5             	mov    %rsp,%rbp
    b5de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    b5e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5e6:	48 8b 50 08          	mov    0x8(%rax),%rdx
    b5ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5ee:	48 8b 00             	mov    (%rax),%rax
    b5f1:	48 29 c2             	sub    %rax,%rdx
    b5f4:	48 c1 fa 02          	sar    $0x2,%rdx
    b5f8:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
    b5ff:	db b6 6d 
    b602:	48 0f af c2          	imul   %rdx,%rax
    b606:	5d                   	pop    %rbp
    b607:	c3                   	ret

000000000000b608 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>:
      constexpr bool has_value() const noexcept
    b608:	55                   	push   %rbp
    b609:	48 89 e5             	mov    %rsp,%rbp
    b60c:	48 83 ec 10          	sub    $0x10,%rsp
    b610:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
    b614:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b618:	48 89 c7             	mov    %rax,%rdi
    b61b:	e8 16 ac ff ff       	call   6236 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    b620:	c9                   	leave
    b621:	c3                   	ret

000000000000b622 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>:
      value()&
    b622:	55                   	push   %rbp
    b623:	48 89 e5             	mov    %rsp,%rbp
    b626:	48 83 ec 10          	sub    $0x10,%rsp
    b62a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_is_engaged())
    b62e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b632:	48 89 c7             	mov    %rax,%rdi
    b635:	e8 fc ab ff ff       	call   6236 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    b63a:	84 c0                	test   %al,%al
    b63c:	74 0e                	je     b64c <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2a>
	  return this->_M_get();
    b63e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b642:	48 89 c7             	mov    %rax,%rdi
    b645:	e8 fe ab ff ff       	call   6248 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
    b64a:	eb 05                	jmp    b651 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2f>
	__throw_bad_optional_access();
    b64c:	e8 c6 fa ff ff       	call   b117 <_ZSt27__throw_bad_optional_accessv>
      }
    b651:	c9                   	leave
    b652:	c3                   	ret
    b653:	90                   	nop

000000000000b654 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
    b654:	55                   	push   %rbp
    b655:	48 89 e5             	mov    %rsp,%rbp
    b658:	48 83 ec 20          	sub    $0x20,%rsp
    b65c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b660:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b664:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    b668:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b66c:	48 89 c7             	mov    %rax,%rdi
    b66f:	e8 d6 0a 00 00       	call   c14a <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>
    b674:	8b 10                	mov    (%rax),%edx
    b676:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b67a:	89 10                	mov    %edx,(%rax)
    b67c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b680:	48 89 c7             	mov    %rax,%rdi
    b683:	e8 d0 0a 00 00       	call   c158 <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>
    b688:	48 89 c1             	mov    %rax,%rcx
    b68b:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    b68f:	48 8b 01             	mov    (%rcx),%rax
    b692:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    b696:	48 89 46 04          	mov    %rax,0x4(%rsi)
    b69a:	48 89 56 0c          	mov    %rdx,0xc(%rsi)
    b69e:	48 8b 41 10          	mov    0x10(%rcx),%rax
    b6a2:	48 89 46 14          	mov    %rax,0x14(%rsi)
    b6a6:	90                   	nop
    b6a7:	c9                   	leave
    b6a8:	c3                   	ret
    b6a9:	90                   	nop

000000000000b6aa <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>:
	optional(_Up&& __t)
    b6aa:	55                   	push   %rbp
    b6ab:	48 89 e5             	mov    %rsp,%rbp
    b6ae:	53                   	push   %rbx
    b6af:	48 83 ec 18          	sub    $0x18,%rsp
    b6b3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b6b7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::in_place, std::forward<_Up>(__t)) { }
    b6bb:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    b6bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b6c3:	48 89 c7             	mov    %rax,%rdi
    b6c6:	e8 9b 0a 00 00       	call   c166 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
    b6cb:	48 89 c6             	mov    %rax,%rsi
    b6ce:	48 89 df             	mov    %rbx,%rdi
    b6d1:	e8 c4 0a 00 00       	call   c19a <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>
    b6d6:	90                   	nop
    b6d7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b6db:	c9                   	leave
    b6dc:	c3                   	ret
    b6dd:	90                   	nop

000000000000b6de <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    b6de:	55                   	push   %rbp
    b6df:	48 89 e5             	mov    %rsp,%rbp
    b6e2:	48 83 ec 20          	sub    $0x20,%rsp
    b6e6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    b6ea:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b6ee:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b6f2:	48 89 d6             	mov    %rdx,%rsi
    b6f5:	48 89 c7             	mov    %rax,%rdi
    b6f8:	e8 d1 0a 00 00       	call   c1ce <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    b6fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b701:	c9                   	leave
    b702:	c3                   	ret
    b703:	90                   	nop

000000000000b704 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    b704:	55                   	push   %rbp
    b705:	48 89 e5             	mov    %rsp,%rbp
    b708:	48 83 ec 20          	sub    $0x20,%rsp
    b70c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    b710:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b714:	48 8d 50 08          	lea    0x8(%rax),%rdx
    b718:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b71c:	48 89 d6             	mov    %rdx,%rsi
    b71f:	48 89 c7             	mov    %rax,%rdi
    b722:	e8 a7 0a 00 00       	call   c1ce <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    b727:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b72b:	c9                   	leave
    b72c:	c3                   	ret

000000000000b72d <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    b72d:	55                   	push   %rbp
    b72e:	48 89 e5             	mov    %rsp,%rbp
    b731:	53                   	push   %rbx
    b732:	48 83 ec 18          	sub    $0x18,%rsp
    b736:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b73a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    b73e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b742:	48 89 c7             	mov    %rax,%rdi
    b745:	e8 a2 0a 00 00       	call   c1ec <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    b74a:	48 8b 18             	mov    (%rax),%rbx
    b74d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b751:	48 89 c7             	mov    %rax,%rdi
    b754:	e8 93 0a 00 00       	call   c1ec <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    b759:	48 8b 00             	mov    (%rax),%rax
    b75c:	48 39 c3             	cmp    %rax,%rbx
    b75f:	0f 95 c0             	setne  %al
    b762:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b766:	c9                   	leave
    b767:	c3                   	ret

000000000000b768 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    b768:	55                   	push   %rbp
    b769:	48 89 e5             	mov    %rsp,%rbp
    b76c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    b770:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b774:	48 8b 00             	mov    (%rax),%rax
    b777:	48 8d 50 08          	lea    0x8(%rax),%rdx
    b77b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b77f:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    b782:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    b786:	5d                   	pop    %rbp
    b787:	c3                   	ret

000000000000b788 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    b788:	55                   	push   %rbp
    b789:	48 89 e5             	mov    %rsp,%rbp
    b78c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    b790:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b794:	48 8b 00             	mov    (%rax),%rax
    b797:	5d                   	pop    %rbp
    b798:	c3                   	ret
    b799:	90                   	nop

000000000000b79a <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>:
      constexpr bool has_value() const noexcept
    b79a:	55                   	push   %rbp
    b79b:	48 89 e5             	mov    %rsp,%rbp
    b79e:	48 83 ec 10          	sub    $0x10,%rsp
    b7a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
    b7a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7aa:	48 89 c7             	mov    %rax,%rdi
    b7ad:	e8 76 fb ff ff       	call   b328 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
    b7b2:	c9                   	leave
    b7b3:	c3                   	ret

000000000000b7b4 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>:
      operator=(const _Optional_payload& __other)
    b7b4:	55                   	push   %rbp
    b7b5:	48 89 e5             	mov    %rsp,%rbp
    b7b8:	48 83 ec 10          	sub    $0x10,%rsp
    b7bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b7c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_copy_assign(__other);
    b7c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7c8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b7cc:	48 89 d6             	mov    %rdx,%rsi
    b7cf:	48 89 c7             	mov    %rax,%rdi
    b7d2:	e8 23 0a 00 00       	call   c1fa <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>
	return *this;
    b7d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    b7db:	c9                   	leave
    b7dc:	c3                   	ret
    b7dd:	90                   	nop

000000000000b7de <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    b7de:	55                   	push   %rbp
    b7df:	48 89 e5             	mov    %rsp,%rbp
    b7e2:	48 83 ec 10          	sub    $0x10,%rsp
    b7e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    b7ea:	e8 90 91 ff ff       	call   497f <_ZSt23__is_constant_evaluatedv>
    b7ef:	84 c0                	test   %al,%al
    b7f1:	74 1a                	je     b80d <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
    b7f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7f7:	48 89 c7             	mov    %rax,%rdi
    b7fa:	e8 29 fb ff ff       	call   b328 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
    b7ff:	83 f0 01             	xor    $0x1,%eax
    b802:	84 c0                	test   %al,%al
    b804:	74 07                	je     b80d <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
    b806:	b8 01 00 00 00       	mov    $0x1,%eax
    b80b:	eb 05                	jmp    b812 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x34>
    b80d:	b8 00 00 00 00       	mov    $0x0,%eax
    b812:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    b814:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b818:	48 89 c7             	mov    %rax,%rdi
    b81b:	e8 6c 0a 00 00       	call   c28c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
      }
    b820:	c9                   	leave
    b821:	c3                   	ret

000000000000b822 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
    b822:	55                   	push   %rbp
    b823:	48 89 e5             	mov    %rsp,%rbp
    b826:	48 83 ec 10          	sub    $0x10,%rsp
    b82a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
    b82e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b832:	48 89 c7             	mov    %rax,%rdi
    b835:	e8 60 0a 00 00       	call   c29a <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
    b83a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b83e:	48 89 c7             	mov    %rax,%rdi
    b841:	e8 70 0a 00 00       	call   c2b6 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
    b846:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b84a:	48 83 c0 08          	add    $0x8,%rax
    b84e:	48 89 c7             	mov    %rax,%rdi
    b851:	e8 66 f9 ff ff       	call   b1bc <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
    b856:	90                   	nop
    b857:	c9                   	leave
    b858:	c3                   	ret
    b859:	90                   	nop

000000000000b85a <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    b85a:	55                   	push   %rbp
    b85b:	48 89 e5             	mov    %rsp,%rbp
    b85e:	48 83 ec 10          	sub    $0x10,%rsp
    b862:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b866:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b86a:	48 89 c7             	mov    %rax,%rdi
    b86d:	e8 50 0a 00 00       	call   c2c2 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
    b872:	90                   	nop
    b873:	c9                   	leave
    b874:	c3                   	ret
    b875:	90                   	nop

000000000000b876 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
    b876:	55                   	push   %rbp
    b877:	48 89 e5             	mov    %rsp,%rbp
    b87a:	48 83 ec 10          	sub    $0x10,%rsp
    b87e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
    b882:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b886:	48 89 c7             	mov    %rax,%rdi
    b889:	e8 a6 0a 00 00       	call   c334 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    b88e:	48 89 c2             	mov    %rax,%rdx
    b891:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b895:	48 89 d6             	mov    %rdx,%rsi
    b898:	48 89 c7             	mov    %rax,%rdi
    b89b:	e8 2e 0a 00 00       	call   c2ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
    b8a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8a4:	48 89 c7             	mov    %rax,%rdi
    b8a7:	e8 8e fa ff ff       	call   b33a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
    b8ac:	90                   	nop
    b8ad:	c9                   	leave
    b8ae:	c3                   	ret
    b8af:	90                   	nop

000000000000b8b0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    b8b0:	55                   	push   %rbp
    b8b1:	48 89 e5             	mov    %rsp,%rbp
    b8b4:	48 83 ec 20          	sub    $0x20,%rsp
    b8b8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    b8bc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b8c0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b8c4:	48 89 d6             	mov    %rdx,%rsi
    b8c7:	48 89 c7             	mov    %rax,%rdi
    b8ca:	e8 7f 0a 00 00       	call   c34e <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    b8cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8d3:	c9                   	leave
    b8d4:	c3                   	ret
    b8d5:	90                   	nop

000000000000b8d6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    b8d6:	55                   	push   %rbp
    b8d7:	48 89 e5             	mov    %rsp,%rbp
    b8da:	48 83 ec 20          	sub    $0x20,%rsp
    b8de:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    b8e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b8e6:	48 8d 50 08          	lea    0x8(%rax),%rdx
    b8ea:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b8ee:	48 89 d6             	mov    %rdx,%rsi
    b8f1:	48 89 c7             	mov    %rax,%rdi
    b8f4:	e8 55 0a 00 00       	call   c34e <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    b8f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8fd:	c9                   	leave
    b8fe:	c3                   	ret

000000000000b8ff <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    b8ff:	55                   	push   %rbp
    b900:	48 89 e5             	mov    %rsp,%rbp
    b903:	53                   	push   %rbx
    b904:	48 83 ec 18          	sub    $0x18,%rsp
    b908:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b90c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    b910:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b914:	48 89 c7             	mov    %rax,%rdi
    b917:	e8 50 0a 00 00       	call   c36c <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    b91c:	48 8b 18             	mov    (%rax),%rbx
    b91f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b923:	48 89 c7             	mov    %rax,%rdi
    b926:	e8 41 0a 00 00       	call   c36c <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    b92b:	48 8b 00             	mov    (%rax),%rax
    b92e:	48 39 c3             	cmp    %rax,%rbx
    b931:	0f 95 c0             	setne  %al
    b934:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b938:	c9                   	leave
    b939:	c3                   	ret

000000000000b93a <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    b93a:	55                   	push   %rbp
    b93b:	48 89 e5             	mov    %rsp,%rbp
    b93e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    b942:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b946:	48 8b 00             	mov    (%rax),%rax
    b949:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
    b950:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b954:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    b957:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    b95b:	5d                   	pop    %rbp
    b95c:	c3                   	ret
    b95d:	90                   	nop

000000000000b95e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    b95e:	55                   	push   %rbp
    b95f:	48 89 e5             	mov    %rsp,%rbp
    b962:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    b966:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b96a:	48 8b 00             	mov    (%rax),%rax
    b96d:	5d                   	pop    %rbp
    b96e:	c3                   	ret
    b96f:	90                   	nop

000000000000b970 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
    b970:	55                   	push   %rbp
    b971:	48 89 e5             	mov    %rsp,%rbp
    b974:	53                   	push   %rbx
    b975:	48 83 ec 48          	sub    $0x48,%rsp
    b979:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    b97d:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
    b981:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    b985:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b989:	48 89 d6             	mov    %rdx,%rsi
    b98c:	48 89 c7             	mov    %rax,%rdi
    b98f:	e8 e6 09 00 00       	call   c37a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
    b994:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
    b998:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b99c:	48 89 c7             	mov    %rax,%rdi
    b99f:	e8 fc 09 00 00       	call   c3a0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
    b9a4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    b9a8:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    b9ac:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    b9b0:	48 89 d6             	mov    %rdx,%rsi
    b9b3:	48 89 c7             	mov    %rax,%rdi
    b9b6:	e8 ff 09 00 00       	call   c3ba <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
    b9bb:	84 c0                	test   %al,%al
    b9bd:	75 32                	jne    b9f1 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
    b9bf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b9c3:	48 89 c7             	mov    %rax,%rdi
    b9c6:	e8 11 0a 00 00       	call   c3dc <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
    b9cb:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    b9cf:	48 89 c7             	mov    %rax,%rdi
    b9d2:	e8 21 0a 00 00       	call   c3f8 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
    b9d7:	48 89 c2             	mov    %rax,%rdx
    b9da:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    b9de:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    b9e2:	48 89 ce             	mov    %rcx,%rsi
    b9e5:	48 89 c7             	mov    %rax,%rdi
    b9e8:	e8 29 0a 00 00       	call   c416 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    b9ed:	84 c0                	test   %al,%al
    b9ef:	74 07                	je     b9f8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
    b9f1:	b8 01 00 00 00       	mov    $0x1,%eax
    b9f6:	eb 05                	jmp    b9fd <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
    b9f8:	b8 00 00 00 00       	mov    $0x0,%eax
    b9fd:	84 c0                	test   %al,%al
    b9ff:	74 5d                	je     ba5e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    ba01:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
    ba05:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ba09:	48 89 c7             	mov    %rax,%rdi
    ba0c:	e8 ca 05 00 00       	call   bfdb <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
    ba11:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    ba14:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    ba18:	48 89 d6             	mov    %rdx,%rsi
    ba1b:	48 89 c7             	mov    %rax,%rdi
    ba1e:	e8 1c 0a 00 00       	call   c43f <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
    ba23:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    ba27:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    ba2b:	48 89 d6             	mov    %rdx,%rsi
    ba2e:	48 89 c7             	mov    %rax,%rdi
    ba31:	e8 3e 0a 00 00       	call   c474 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
    ba36:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
    ba3a:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    ba3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ba42:	49 89 c8             	mov    %rcx,%r8
    ba45:	48 89 d1             	mov    %rdx,%rcx
    ba48:	48 8d 15 39 63 00 00 	lea    0x6339(%rip),%rdx        # 11d88 <_ZSt19piecewise_construct>
    ba4f:	48 89 c6             	mov    %rax,%rsi
    ba52:	48 89 df             	mov    %rbx,%rdi
    ba55:	e8 38 0a 00 00       	call   c492 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
    ba5a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
    ba5e:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    ba62:	48 89 c7             	mov    %rax,%rdi
    ba65:	e8 8e 09 00 00       	call   c3f8 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
    ba6a:	48 83 c0 20          	add    $0x20,%rax
      }
    ba6e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ba72:	c9                   	leave
    ba73:	c3                   	ret

000000000000ba74 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    ba74:	55                   	push   %rbp
    ba75:	48 89 e5             	mov    %rsp,%rbp
    ba78:	53                   	push   %rbx
    ba79:	48 83 ec 18          	sub    $0x18,%rsp
    ba7d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ba81:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    ba85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ba89:	48 89 c7             	mov    %rax,%rdi
    ba8c:	e8 1d bd ff ff       	call   77ae <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    ba91:	48 8b 18             	mov    (%rax),%rbx
    ba94:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ba98:	48 89 c7             	mov    %rax,%rdi
    ba9b:	e8 0e bd ff ff       	call   77ae <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    baa0:	48 8b 00             	mov    (%rax),%rax
    baa3:	48 39 c3             	cmp    %rax,%rbx
    baa6:	0f 95 c0             	setne  %al
    baa9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    baad:	c9                   	leave
    baae:	c3                   	ret
    baaf:	90                   	nop

000000000000bab0 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    bab0:	55                   	push   %rbp
    bab1:	48 89 e5             	mov    %rsp,%rbp
    bab4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    bab8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    babc:	48 8b 00             	mov    (%rax),%rax
    babf:	48 8d 50 08          	lea    0x8(%rax),%rdx
    bac3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bac7:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    baca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    bace:	5d                   	pop    %rbp
    bacf:	c3                   	ret

000000000000bad0 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    bad0:	55                   	push   %rbp
    bad1:	48 89 e5             	mov    %rsp,%rbp
    bad4:	48 83 ec 20          	sub    $0x20,%rsp
    bad8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
    badc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bae0:	48 89 c7             	mov    %rax,%rdi
    bae3:	e8 cc 0a 00 00       	call   c5b4 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    bae8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    baec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    baf0:	48 89 c7             	mov    %rax,%rdi
    baf3:	e8 96 0a 00 00       	call   c58e <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    baf8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    bafc:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    bb00:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bb04:	48 89 d6             	mov    %rdx,%rsi
    bb07:	48 89 c7             	mov    %rax,%rdi
    bb0a:	e8 ce 0a 00 00       	call   c5dd <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    bb0f:	c9                   	leave
    bb10:	c3                   	ret
    bb11:	90                   	nop

000000000000bb12 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    bb12:	55                   	push   %rbp
    bb13:	48 89 e5             	mov    %rsp,%rbp
    bb16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    bb1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb22:	48 8b 00             	mov    (%rax),%rax
    bb25:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bb29:	48 c1 e2 03          	shl    $0x3,%rdx
    bb2d:	48 01 d0             	add    %rdx,%rax
      }
    bb30:	5d                   	pop    %rbp
    bb31:	c3                   	ret

000000000000bb32 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    bb32:	55                   	push   %rbp
    bb33:	48 89 e5             	mov    %rsp,%rbp
    bb36:	48 83 ec 20          	sub    $0x20,%rsp
    bb3a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    bb3e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bb42:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bb46:	48 89 d6             	mov    %rdx,%rsi
    bb49:	48 89 c7             	mov    %rax,%rdi
    bb4c:	e8 c7 0a 00 00       	call   c618 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    bb51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb55:	c9                   	leave
    bb56:	c3                   	ret
    bb57:	90                   	nop

000000000000bb58 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    bb58:	55                   	push   %rbp
    bb59:	48 89 e5             	mov    %rsp,%rbp
    bb5c:	48 83 ec 20          	sub    $0x20,%rsp
    bb60:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    bb64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bb68:	48 8d 50 08          	lea    0x8(%rax),%rdx
    bb6c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bb70:	48 89 d6             	mov    %rdx,%rsi
    bb73:	48 89 c7             	mov    %rax,%rdi
    bb76:	e8 9d 0a 00 00       	call   c618 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    bb7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb7f:	c9                   	leave
    bb80:	c3                   	ret

000000000000bb81 <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    bb81:	55                   	push   %rbp
    bb82:	48 89 e5             	mov    %rsp,%rbp
    bb85:	53                   	push   %rbx
    bb86:	48 83 ec 18          	sub    $0x18,%rsp
    bb8a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bb8e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    bb92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bb96:	48 89 c7             	mov    %rax,%rdi
    bb99:	e8 98 0a 00 00       	call   c636 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    bb9e:	48 8b 18             	mov    (%rax),%rbx
    bba1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bba5:	48 89 c7             	mov    %rax,%rdi
    bba8:	e8 89 0a 00 00       	call   c636 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    bbad:	48 8b 00             	mov    (%rax),%rax
    bbb0:	48 39 c3             	cmp    %rax,%rbx
    bbb3:	0f 95 c0             	setne  %al
    bbb6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bbba:	c9                   	leave
    bbbb:	c3                   	ret

000000000000bbbc <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    bbbc:	55                   	push   %rbp
    bbbd:	48 89 e5             	mov    %rsp,%rbp
    bbc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    bbc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbc8:	48 8b 00             	mov    (%rax),%rax
    bbcb:	48 8d 50 08          	lea    0x8(%rax),%rdx
    bbcf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbd3:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    bbd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    bbda:	5d                   	pop    %rbp
    bbdb:	c3                   	ret

000000000000bbdc <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    bbdc:	55                   	push   %rbp
    bbdd:	48 89 e5             	mov    %rsp,%rbp
    bbe0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    bbe4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbe8:	48 8b 00             	mov    (%rax),%rax
    bbeb:	5d                   	pop    %rbp
    bbec:	c3                   	ret
    bbed:	90                   	nop

000000000000bbee <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    bbee:	55                   	push   %rbp
    bbef:	48 89 e5             	mov    %rsp,%rbp
    bbf2:	48 83 ec 20          	sub    $0x20,%rsp
    bbf6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    bbfa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bbfe:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bc02:	48 89 d6             	mov    %rdx,%rsi
    bc05:	48 89 c7             	mov    %rax,%rdi
    bc08:	e8 37 0a 00 00       	call   c644 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    bc0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc11:	c9                   	leave
    bc12:	c3                   	ret
    bc13:	90                   	nop

000000000000bc14 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    bc14:	55                   	push   %rbp
    bc15:	48 89 e5             	mov    %rsp,%rbp
    bc18:	48 83 ec 20          	sub    $0x20,%rsp
    bc1c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    bc20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bc24:	48 8d 50 08          	lea    0x8(%rax),%rdx
    bc28:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bc2c:	48 89 d6             	mov    %rdx,%rsi
    bc2f:	48 89 c7             	mov    %rax,%rdi
    bc32:	e8 0d 0a 00 00       	call   c644 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    bc37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc3b:	c9                   	leave
    bc3c:	c3                   	ret

000000000000bc3d <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    bc3d:	55                   	push   %rbp
    bc3e:	48 89 e5             	mov    %rsp,%rbp
    bc41:	53                   	push   %rbx
    bc42:	48 83 ec 18          	sub    $0x18,%rsp
    bc46:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bc4a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    bc4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bc52:	48 89 c7             	mov    %rax,%rdi
    bc55:	e8 08 0a 00 00       	call   c662 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    bc5a:	48 8b 18             	mov    (%rax),%rbx
    bc5d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bc61:	48 89 c7             	mov    %rax,%rdi
    bc64:	e8 f9 09 00 00       	call   c662 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    bc69:	48 8b 00             	mov    (%rax),%rax
    bc6c:	48 39 c3             	cmp    %rax,%rbx
    bc6f:	0f 95 c0             	setne  %al
    bc72:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bc76:	c9                   	leave
    bc77:	c3                   	ret

000000000000bc78 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    bc78:	55                   	push   %rbp
    bc79:	48 89 e5             	mov    %rsp,%rbp
    bc7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    bc80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc84:	48 8b 00             	mov    (%rax),%rax
    bc87:	48 8d 50 04          	lea    0x4(%rax),%rdx
    bc8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc8f:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    bc92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    bc96:	5d                   	pop    %rbp
    bc97:	c3                   	ret

000000000000bc98 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    bc98:	55                   	push   %rbp
    bc99:	48 89 e5             	mov    %rsp,%rbp
    bc9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    bca0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bca4:	48 8b 00             	mov    (%rax),%rax
    bca7:	5d                   	pop    %rbp
    bca8:	c3                   	ret
    bca9:	90                   	nop

000000000000bcaa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    bcaa:	55                   	push   %rbp
    bcab:	48 89 e5             	mov    %rsp,%rbp
    bcae:	48 83 ec 10          	sub    $0x10,%rsp
    bcb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    bcb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcba:	48 89 c7             	mov    %rax,%rdi
    bcbd:	e8 ae 09 00 00       	call   c670 <_ZNSaIP9VkImage_TEC1Ev>
    bcc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcc6:	48 89 c7             	mov    %rax,%rdi
    bcc9:	e8 be 09 00 00       	call   c68c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    bcce:	90                   	nop
    bccf:	c9                   	leave
    bcd0:	c3                   	ret
    bcd1:	90                   	nop

000000000000bcd2 <_ZNSaIP9VkImage_TED1Ev>:
    bcd2:	55                   	push   %rbp
    bcd3:	48 89 e5             	mov    %rsp,%rbp
    bcd6:	48 83 ec 10          	sub    $0x10,%rsp
    bcda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bcde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bce2:	48 89 c7             	mov    %rax,%rdi
    bce5:	e8 d0 09 00 00       	call   c6ba <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>
    bcea:	90                   	nop
    bceb:	c9                   	leave
    bcec:	c3                   	ret
    bced:	90                   	nop

000000000000bcee <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    bcee:	55                   	push   %rbp
    bcef:	48 89 e5             	mov    %rsp,%rbp
    bcf2:	48 83 ec 10          	sub    $0x10,%rsp
    bcf6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    bcfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcfe:	48 8b 50 10          	mov    0x10(%rax),%rdx
    bd02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd06:	48 8b 00             	mov    (%rax),%rax
    bd09:	48 29 c2             	sub    %rax,%rdx
    bd0c:	48 89 d0             	mov    %rdx,%rax
    bd0f:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    bd13:	48 89 c2             	mov    %rax,%rdx
    bd16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd1a:	48 8b 08             	mov    (%rax),%rcx
    bd1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd21:	48 89 ce             	mov    %rcx,%rsi
    bd24:	48 89 c7             	mov    %rax,%rdi
    bd27:	e8 9a 09 00 00       	call   c6c6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    bd2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd30:	48 89 c7             	mov    %rax,%rdi
    bd33:	e8 72 f6 ff ff       	call   b3aa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    bd38:	90                   	nop
    bd39:	c9                   	leave
    bd3a:	c3                   	ret
    bd3b:	90                   	nop

000000000000bd3c <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    bd3c:	55                   	push   %rbp
    bd3d:	48 89 e5             	mov    %rsp,%rbp
    bd40:	48 83 ec 10          	sub    $0x10,%rsp
    bd44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    bd48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd4c:	48 89 c7             	mov    %rax,%rdi
    bd4f:	e8 a8 09 00 00       	call   c6fc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    bd54:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    bd57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd5b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    bd5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd63:	48 8b 00             	mov    (%rax),%rax
    bd66:	48 89 ce             	mov    %rcx,%rsi
    bd69:	48 89 c7             	mov    %rax,%rdi
    bd6c:	e8 99 09 00 00       	call   c70a <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
      }
    bd71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd75:	48 89 c7             	mov    %rax,%rdi
    bd78:	e8 71 ff ff ff       	call   bcee <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    bd7d:	90                   	nop
    bd7e:	c9                   	leave
    bd7f:	c3                   	ret

000000000000bd80 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>:
  Timer() {
    bd80:	55                   	push   %rbp
    bd81:	48 89 e5             	mov    %rsp,%rbp
    bd84:	53                   	push   %rbx
    bd85:	48 83 ec 18          	sub    $0x18,%rsp
    bd89:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bd8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bd91:	48 89 c7             	mov    %rax,%rdi
    bd94:	e8 9b 09 00 00       	call   c734 <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>
    bd99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bd9d:	48 83 c0 08          	add    $0x8,%rax
    bda1:	48 89 c7             	mov    %rax,%rdi
    bda4:	e8 27 76 ff ff       	call   33d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>
      this->time_unit = "μs";
    bda9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bdad:	48 83 c0 08          	add    $0x8,%rax
    bdb1:	48 8d 15 8a 5f 00 00 	lea    0x5f8a(%rip),%rdx        # 11d42 <_ZN6__pstl9execution2v1L5unseqE+0x12f>
    bdb8:	48 89 d6             	mov    %rdx,%rsi
    bdbb:	48 89 c7             	mov    %rax,%rdi
    bdbe:	e8 ed 75 ff ff       	call   33b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    this->start = std::chrono::steady_clock::now();
    bdc3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    bdc7:	e8 c4 75 ff ff       	call   3390 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    bdcc:	48 89 03             	mov    %rax,(%rbx)
  }
    bdcf:	eb 1e                	jmp    bdef <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev+0x6f>
    bdd1:	48 89 c3             	mov    %rax,%rbx
    bdd4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bdd8:	48 83 c0 08          	add    $0x8,%rax
    bddc:	48 89 c7             	mov    %rax,%rdi
    bddf:	e8 4c 73 ff ff       	call   3130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    bde4:	48 89 d8             	mov    %rbx,%rax
    bde7:	48 89 c7             	mov    %rax,%rdi
    bdea:	e8 81 76 ff ff       	call   3470 <_Unwind_Resume@plt>
    bdef:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bdf3:	c9                   	leave
    bdf4:	c3                   	ret
    bdf5:	90                   	nop

000000000000bdf6 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>:
  ~Timer() {
    bdf6:	55                   	push   %rbp
    bdf7:	48 89 e5             	mov    %rsp,%rbp
    bdfa:	48 83 ec 20          	sub    $0x20,%rsp
    bdfe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    auto stop = std::chrono::steady_clock::now();
    be02:	e8 89 75 ff ff       	call   3390 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    be07:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  }
    be0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    be0f:	48 83 c0 08          	add    $0x8,%rax
    be13:	48 89 c7             	mov    %rax,%rdi
    be16:	e8 15 73 ff ff       	call   3130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    be1b:	90                   	nop
    be1c:	c9                   	leave
    be1d:	c3                   	ret

000000000000be1e <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>:
      }

    /// The difference between two time points (as a duration)
    template<typename _Clock, typename _Dur1, typename _Dur2>
      constexpr typename common_type<_Dur1, _Dur2>::type
      operator-(const time_point<_Clock, _Dur1>& __lhs,
    be1e:	55                   	push   %rbp
    be1f:	48 89 e5             	mov    %rsp,%rbp
    be22:	48 83 ec 20          	sub    $0x20,%rsp
    be26:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    be2a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
		const time_point<_Clock, _Dur2>& __rhs)
      { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
    be2e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    be32:	48 89 c7             	mov    %rax,%rdi
    be35:	e8 1a 09 00 00       	call   c754 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
    be3a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    be3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    be42:	48 89 c7             	mov    %rax,%rdi
    be45:	e8 0a 09 00 00       	call   c754 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
    be4a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    be4e:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    be52:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    be56:	48 89 d6             	mov    %rdx,%rsi
    be59:	48 89 c7             	mov    %rax,%rdi
    be5c:	e8 04 09 00 00       	call   c765 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>
    be61:	c9                   	leave
    be62:	c3                   	ret

000000000000be63 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>:
      duration_cast(const duration<_Rep, _Period>& __d)
    be63:	55                   	push   %rbp
    be64:	48 89 e5             	mov    %rsp,%rbp
    be67:	48 83 ec 10          	sub    $0x10,%rsp
    be6b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __dc::__cast(__d);
    be6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be73:	48 89 c7             	mov    %rax,%rdi
    be76:	e8 53 09 00 00       	call   c7ce <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>
      }
    be7b:	c9                   	leave
    be7c:	c3                   	ret
    be7d:	90                   	nop

000000000000be7e <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>:
	count() const
    be7e:	55                   	push   %rbp
    be7f:	48 89 e5             	mov    %rsp,%rbp
    be82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    be86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be8a:	48 8b 00             	mov    (%rax),%rax
    be8d:	5d                   	pop    %rbp
    be8e:	c3                   	ret
    be8f:	90                   	nop

000000000000be90 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>:

  void reset() { start = std::chrono::steady_clock::now(); }
    be90:	55                   	push   %rbp
    be91:	48 89 e5             	mov    %rsp,%rbp
    be94:	53                   	push   %rbx
    be95:	48 83 ec 18          	sub    $0x18,%rsp
    be99:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    be9d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    bea1:	e8 ea 74 ff ff       	call   3390 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    bea6:	48 89 03             	mov    %rax,(%rbx)
    bea9:	90                   	nop
    beaa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    beae:	c9                   	leave
    beaf:	c3                   	ret

000000000000beb0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    beb0:	55                   	push   %rbp
    beb1:	48 89 e5             	mov    %rsp,%rbp
    beb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    beb8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bebc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bec0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bec4:	48 89 10             	mov    %rdx,(%rax)
    bec7:	90                   	nop
    bec8:	5d                   	pop    %rbp
    bec9:	c3                   	ret

000000000000beca <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    beca:	55                   	push   %rbp
    becb:	48 89 e5             	mov    %rsp,%rbp
    bece:	48 83 ec 10          	sub    $0x10,%rsp
    bed2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bed6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    beda:	48 8b 00             	mov    (%rax),%rax
    bedd:	48 85 c0             	test   %rax,%rax
    bee0:	74 0f                	je     bef1 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    bee2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bee6:	48 8b 00             	mov    (%rax),%rax
    bee9:	48 89 c7             	mov    %rax,%rdi
    beec:	e8 6f 74 ff ff       	call   3360 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    bef1:	90                   	nop
    bef2:	c9                   	leave
    bef3:	c3                   	ret

000000000000bef4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    bef4:	55                   	push   %rbp
    bef5:	48 89 e5             	mov    %rsp,%rbp
    bef8:	48 83 ec 40          	sub    $0x40,%rsp
    befc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    bf00:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    bf04:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    bf08:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    bf0c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    bf10:	48 89 d6             	mov    %rdx,%rsi
    bf13:	48 89 c7             	mov    %rax,%rdi
    bf16:	e8 0c 09 00 00       	call   c827 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    bf1b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    bf1f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bf23:	48 83 f8 0f          	cmp    $0xf,%rax
    bf27:	76 3f                	jbe    bf68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    bf29:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    bf2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bf31:	ba 00 00 00 00       	mov    $0x0,%edx
    bf36:	48 89 ce             	mov    %rcx,%rsi
    bf39:	48 89 c7             	mov    %rax,%rdi
    bf3c:	e8 4f 75 ff ff       	call   3490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    bf41:	48 89 c2             	mov    %rax,%rdx
    bf44:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bf48:	48 89 d6             	mov    %rdx,%rsi
    bf4b:	48 89 c7             	mov    %rax,%rdi
    bf4e:	e8 8d 72 ff ff       	call   31e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    bf53:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bf57:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bf5b:	48 89 d6             	mov    %rdx,%rsi
    bf5e:	48 89 c7             	mov    %rax,%rdi
    bf61:	e8 6a 75 ff ff       	call   34d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    bf66:	eb 15                	jmp    bf7d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    bf68:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bf6c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    bf70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf74:	48 89 c7             	mov    %rax,%rdi
    bf77:	e8 34 72 ff ff       	call   31b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    bf7c:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    bf7d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    bf81:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    bf85:	48 89 d6             	mov    %rdx,%rsi
    bf88:	48 89 c7             	mov    %rax,%rdi
    bf8b:	e8 20 ff ff ff       	call   beb0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    bf90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bf94:	48 89 c7             	mov    %rax,%rdi
    bf97:	e8 54 73 ff ff       	call   32f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    bf9c:	48 89 c1             	mov    %rax,%rcx
    bf9f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    bfa3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    bfa7:	48 89 c6             	mov    %rax,%rsi
    bfaa:	48 89 cf             	mov    %rcx,%rdi
    bfad:	e8 4e 73 ff ff       	call   3300 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    bfb2:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    bfb9:	00 

	_M_set_length(__dnew);
    bfba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bfbe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bfc2:	48 89 d6             	mov    %rdx,%rsi
    bfc5:	48 89 c7             	mov    %rax,%rdi
    bfc8:	e8 73 71 ff ff       	call   3140 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    bfcd:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    bfd1:	48 89 c7             	mov    %rax,%rdi
    bfd4:	e8 f1 fe ff ff       	call   beca <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    bfd9:	c9                   	leave
    bfda:	c3                   	ret

000000000000bfdb <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
    move(_Tp&& __t) noexcept
    bfdb:	55                   	push   %rbp
    bfdc:	48 89 e5             	mov    %rsp,%rbp
    bfdf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    bfe3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfe7:	5d                   	pop    %rbp
    bfe8:	c3                   	ret
    bfe9:	90                   	nop

000000000000bfea <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    bfea:	55                   	push   %rbp
    bfeb:	48 89 e5             	mov    %rsp,%rbp
    bfee:	48 83 ec 10          	sub    $0x10,%rsp
    bff2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bff6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    bffa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bffe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c002:	48 89 d6             	mov    %rdx,%rsi
    c005:	48 89 c7             	mov    %rax,%rdi
    c008:	e8 39 a8 ff ff       	call   6846 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
    c00d:	90                   	nop
    c00e:	c9                   	leave
    c00f:	c3                   	ret

000000000000c010 <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
    c010:	55                   	push   %rbp
    c011:	48 89 e5             	mov    %rsp,%rbp
    c014:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c018:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c01c:	48 8b 00             	mov    (%rax),%rax
    c01f:	5d                   	pop    %rbp
    c020:	c3                   	ret
    c021:	90                   	nop

000000000000c022 <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
    c022:	55                   	push   %rbp
    c023:	48 89 e5             	mov    %rsp,%rbp
    c026:	53                   	push   %rbx
    c027:	48 83 ec 18          	sub    $0x18,%rsp
    c02b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c02f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c033:	48 89 c7             	mov    %rax,%rdi
    c036:	e8 d5 ff ff ff       	call   c010 <_ZNKSt16initializer_listIPKcE5beginEv>
    c03b:	48 89 c3             	mov    %rax,%rbx
    c03e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c042:	48 89 c7             	mov    %rax,%rdi
    c045:	e8 0e 08 00 00       	call   c858 <_ZNKSt16initializer_listIPKcE4sizeEv>
    c04a:	48 c1 e0 03          	shl    $0x3,%rax
    c04e:	48 01 d8             	add    %rbx,%rax
    c051:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c055:	c9                   	leave
    c056:	c3                   	ret

000000000000c057 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    c057:	55                   	push   %rbp
    c058:	48 89 e5             	mov    %rsp,%rbp
    c05b:	48 83 ec 10          	sub    $0x10,%rsp
    c05f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c063:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    c067:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c06b:	48 89 c7             	mov    %rax,%rdi
    c06e:	e8 f7 07 00 00       	call   c86a <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
    c073:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c077:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c07b:	48 89 d6             	mov    %rdx,%rsi
    c07e:	48 89 c7             	mov    %rax,%rdi
    c081:	e8 ef 07 00 00       	call   c875 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
    c086:	c9                   	leave
    c087:	c3                   	ret

000000000000c088 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    c088:	55                   	push   %rbp
    c089:	48 89 e5             	mov    %rsp,%rbp
    c08c:	53                   	push   %rbx
    c08d:	48 83 ec 38          	sub    $0x38,%rsp
    c091:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c095:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    c099:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    c09d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c0a1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c0a5:	48 89 d6             	mov    %rdx,%rsi
    c0a8:	48 89 c7             	mov    %rax,%rdi
    c0ab:	e8 a7 ff ff ff       	call   c057 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
    c0b0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    c0b4:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    c0b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c0bc:	48 89 c7             	mov    %rax,%rdi
    c0bf:	e8 7e 99 ff ff       	call   5a42 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    c0c4:	48 89 c2             	mov    %rax,%rdx
    c0c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c0cb:	48 89 d6             	mov    %rdx,%rsi
    c0ce:	48 89 c7             	mov    %rax,%rdi
    c0d1:	e8 6d 98 ff ff       	call   5943 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    c0d6:	48 89 c6             	mov    %rax,%rsi
    c0d9:	48 89 df             	mov    %rbx,%rdi
    c0dc:	e8 9f b4 ff ff       	call   7580 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    c0e1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c0e5:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    c0e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c0ec:	48 8b 00             	mov    (%rax),%rax
    c0ef:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c0f3:	48 c1 e2 03          	shl    $0x3,%rdx
    c0f7:	48 01 c2             	add    %rax,%rdx
    c0fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c0fe:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    c102:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c106:	48 89 c7             	mov    %rax,%rdi
    c109:	e8 34 99 ff ff       	call   5a42 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    c10e:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    c111:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c115:	48 8b 10             	mov    (%rax),%rdx
    c118:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    c11c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c120:	48 89 c7             	mov    %rax,%rdi
    c123:	e8 67 07 00 00       	call   c88f <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
    c128:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c12c:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    c130:	90                   	nop
    c131:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c135:	c9                   	leave
    c136:	c3                   	ret
    c137:	90                   	nop

000000000000c138 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    c138:	55                   	push   %rbp
    c139:	48 89 e5             	mov    %rsp,%rbp
    c13c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c140:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    c144:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c148:	5d                   	pop    %rbp
    c149:	c3                   	ret

000000000000c14a <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    c14a:	55                   	push   %rbp
    c14b:	48 89 e5             	mov    %rsp,%rbp
    c14e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    c152:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c156:	5d                   	pop    %rbp
    c157:	c3                   	ret

000000000000c158 <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    c158:	55                   	push   %rbp
    c159:	48 89 e5             	mov    %rsp,%rbp
    c15c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    c160:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c164:	5d                   	pop    %rbp
    c165:	c3                   	ret

000000000000c166 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    c166:	55                   	push   %rbp
    c167:	48 89 e5             	mov    %rsp,%rbp
    c16a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    c16e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c172:	5d                   	pop    %rbp
    c173:	c3                   	ret

000000000000c174 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>:
      using _Optional_payload_base<_Tp>::_Optional_payload_base;
    c174:	55                   	push   %rbp
    c175:	48 89 e5             	mov    %rsp,%rbp
    c178:	48 83 ec 20          	sub    $0x20,%rsp
    c17c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c180:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    c184:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c188:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c18c:	48 89 d6             	mov    %rdx,%rsi
    c18f:	48 89 c7             	mov    %rax,%rdi
    c192:	e8 29 07 00 00       	call   c8c0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>
    c197:	90                   	nop
    c198:	c9                   	leave
    c199:	c3                   	ret

000000000000c19a <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>:
	_Optional_base(in_place_t, _Args&&... __args)
    c19a:	55                   	push   %rbp
    c19b:	48 89 e5             	mov    %rsp,%rbp
    c19e:	53                   	push   %rbx
    c19f:	48 83 ec 18          	sub    $0x18,%rsp
    c1a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c1a7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _M_payload(in_place, std::forward<_Args>(__args)...)
    c1ab:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    c1af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c1b3:	48 89 c7             	mov    %rax,%rdi
    c1b6:	e8 ab ff ff ff       	call   c166 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
    c1bb:	48 89 c6             	mov    %rax,%rsi
    c1be:	48 89 df             	mov    %rbx,%rdi
    c1c1:	e8 ae ff ff ff       	call   c174 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>
	{ }
    c1c6:	90                   	nop
    c1c7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c1cb:	c9                   	leave
    c1cc:	c3                   	ret
    c1cd:	90                   	nop

000000000000c1ce <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    c1ce:	55                   	push   %rbp
    c1cf:	48 89 e5             	mov    %rsp,%rbp
    c1d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c1d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    c1da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c1de:	48 8b 10             	mov    (%rax),%rdx
    c1e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1e5:	48 89 10             	mov    %rdx,(%rax)
    c1e8:	90                   	nop
    c1e9:	5d                   	pop    %rbp
    c1ea:	c3                   	ret
    c1eb:	90                   	nop

000000000000c1ec <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    c1ec:	55                   	push   %rbp
    c1ed:	48 89 e5             	mov    %rsp,%rbp
    c1f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    c1f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1f8:	5d                   	pop    %rbp
    c1f9:	c3                   	ret

000000000000c1fa <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>:
      _M_copy_assign(const _Optional_payload_base& __other)
    c1fa:	55                   	push   %rbp
    c1fb:	48 89 e5             	mov    %rsp,%rbp
    c1fe:	53                   	push   %rbx
    c1ff:	48 83 ec 18          	sub    $0x18,%rsp
    c203:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c207:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_engaged && __other._M_engaged)
    c20b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c20f:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    c213:	84 c0                	test   %al,%al
    c215:	74 35                	je     c24c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
    c217:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c21b:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    c21f:	84 c0                	test   %al,%al
    c221:	74 29                	je     c24c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
	  this->_M_get() = __other._M_get();
    c223:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c227:	48 89 c7             	mov    %rax,%rdi
    c22a:	e8 cd 06 00 00       	call   c8fc <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
    c22f:	48 89 c3             	mov    %rax,%rbx
    c232:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c236:	48 89 c7             	mov    %rax,%rdi
    c239:	e8 4e 00 00 00       	call   c28c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
    c23e:	48 89 de             	mov    %rbx,%rsi
    c241:	48 89 c7             	mov    %rax,%rdi
    c244:	e8 c1 06 00 00       	call   c90a <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>
    c249:	90                   	nop
      }
    c24a:	eb 38                	jmp    c284 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	    if (__other._M_engaged)
    c24c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c250:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    c254:	84 c0                	test   %al,%al
    c256:	74 20                	je     c278 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x7e>
	      this->_M_construct(__other._M_get());
    c258:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c25c:	48 89 c7             	mov    %rax,%rdi
    c25f:	e8 98 06 00 00       	call   c8fc <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
    c264:	48 89 c2             	mov    %rax,%rdx
    c267:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c26b:	48 89 d6             	mov    %rdx,%rsi
    c26e:	48 89 c7             	mov    %rax,%rdi
    c271:	e8 d2 06 00 00       	call   c948 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>
      }
    c276:	eb 0c                	jmp    c284 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	      this->_M_reset();
    c278:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c27c:	48 89 c7             	mov    %rax,%rdi
    c27f:	e8 0a 07 00 00       	call   c98e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>
      }
    c284:	90                   	nop
    c285:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c289:	c9                   	leave
    c28a:	c3                   	ret
    c28b:	90                   	nop

000000000000c28c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() noexcept
    c28c:	55                   	push   %rbp
    c28d:	48 89 e5             	mov    %rsp,%rbp
    c290:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    c294:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c298:	5d                   	pop    %rbp
    c299:	c3                   	ret

000000000000c29a <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    c29a:	55                   	push   %rbp
    c29b:	48 89 e5             	mov    %rsp,%rbp
    c29e:	48 83 ec 10          	sub    $0x10,%rsp
    c2a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2aa:	48 89 c7             	mov    %rax,%rdi
    c2ad:	e8 04 07 00 00       	call   c9b6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
    c2b2:	90                   	nop
    c2b3:	c9                   	leave
    c2b4:	c3                   	ret
    c2b5:	90                   	nop

000000000000c2b6 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
    c2b6:	55                   	push   %rbp
    c2b7:	48 89 e5             	mov    %rsp,%rbp
    c2ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
    c2be:	90                   	nop
    c2bf:	5d                   	pop    %rbp
    c2c0:	c3                   	ret
    c2c1:	90                   	nop

000000000000c2c2 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c2c2:	55                   	push   %rbp
    c2c3:	48 89 e5             	mov    %rsp,%rbp
    c2c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2ca:	90                   	nop
    c2cb:	5d                   	pop    %rbp
    c2cc:	c3                   	ret
    c2cd:	90                   	nop

000000000000c2ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    c2ce:	55                   	push   %rbp
    c2cf:	48 89 e5             	mov    %rsp,%rbp
    c2d2:	48 83 ec 20          	sub    $0x20,%rsp
    c2d6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c2da:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
    c2de:	eb 49                	jmp    c329 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	{
	  _M_erase(_S_right(__x));
    c2e0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c2e4:	48 89 c7             	mov    %rax,%rdi
    c2e7:	e8 d5 06 00 00       	call   c9c1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    c2ec:	48 89 c2             	mov    %rax,%rdx
    c2ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c2f3:	48 89 d6             	mov    %rdx,%rsi
    c2f6:	48 89 c7             	mov    %rax,%rdi
    c2f9:	e8 d0 ff ff ff       	call   c2ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
    c2fe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c302:	48 89 c7             	mov    %rax,%rdi
    c305:	e8 c9 06 00 00       	call   c9d3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    c30a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
    c30e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c312:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c316:	48 89 d6             	mov    %rdx,%rsi
    c319:	48 89 c7             	mov    %rax,%rdi
    c31c:	e8 c5 06 00 00       	call   c9e6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
    c321:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c325:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
    c329:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    c32e:	75 b0                	jne    c2e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
	}
    }
    c330:	90                   	nop
    c331:	90                   	nop
    c332:	c9                   	leave
    c333:	c3                   	ret

000000000000c334 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
    c334:	55                   	push   %rbp
    c335:	48 89 e5             	mov    %rsp,%rbp
    c338:	48 83 ec 10          	sub    $0x10,%rsp
    c33c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
    c340:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c344:	48 89 c7             	mov    %rax,%rdi
    c347:	e8 d4 06 00 00       	call   ca20 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
    c34c:	c9                   	leave
    c34d:	c3                   	ret

000000000000c34e <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    c34e:	55                   	push   %rbp
    c34f:	48 89 e5             	mov    %rsp,%rbp
    c352:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c356:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    c35a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c35e:	48 8b 10             	mov    (%rax),%rdx
    c361:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c365:	48 89 10             	mov    %rdx,(%rax)
    c368:	90                   	nop
    c369:	5d                   	pop    %rbp
    c36a:	c3                   	ret
    c36b:	90                   	nop

000000000000c36c <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    c36c:	55                   	push   %rbp
    c36d:	48 89 e5             	mov    %rsp,%rbp
    c370:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    c374:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c378:	5d                   	pop    %rbp
    c379:	c3                   	ret

000000000000c37a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
    c37a:	55                   	push   %rbp
    c37b:	48 89 e5             	mov    %rsp,%rbp
    c37e:	48 83 ec 10          	sub    $0x10,%rsp
    c382:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c386:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
    c38a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c38e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c392:	48 89 d6             	mov    %rdx,%rsi
    c395:	48 89 c7             	mov    %rax,%rdi
    c398:	e8 95 06 00 00       	call   ca32 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
    c39d:	c9                   	leave
    c39e:	c3                   	ret
    c39f:	90                   	nop

000000000000c3a0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    c3a0:	55                   	push   %rbp
    c3a1:	48 89 e5             	mov    %rsp,%rbp
    c3a4:	48 83 ec 10          	sub    $0x10,%rsp
    c3a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
    c3ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3b0:	48 89 c7             	mov    %rax,%rdi
    c3b3:	e8 c6 06 00 00       	call   ca7e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
    c3b8:	c9                   	leave
    c3b9:	c3                   	ret

000000000000c3ba <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    c3ba:	55                   	push   %rbp
    c3bb:	48 89 e5             	mov    %rsp,%rbp
    c3be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c3c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
    c3c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3ca:	48 8b 10             	mov    (%rax),%rdx
    c3cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c3d1:	48 8b 00             	mov    (%rax),%rax
    c3d4:	48 39 c2             	cmp    %rax,%rdx
    c3d7:	0f 94 c0             	sete   %al
    c3da:	5d                   	pop    %rbp
    c3db:	c3                   	ret

000000000000c3dc <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
    c3dc:	55                   	push   %rbp
    c3dd:	48 89 e5             	mov    %rsp,%rbp
    c3e0:	48 83 ec 10          	sub    $0x10,%rsp
    c3e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
    c3e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3ec:	48 89 c7             	mov    %rax,%rdi
    c3ef:	e8 b4 06 00 00       	call   caa8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
    c3f4:	90                   	nop
    c3f5:	c9                   	leave
    c3f6:	c3                   	ret
    c3f7:	90                   	nop

000000000000c3f8 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    c3f8:	55                   	push   %rbp
    c3f9:	48 89 e5             	mov    %rsp,%rbp
    c3fc:	48 83 ec 10          	sub    $0x10,%rsp
    c400:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
    c404:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c408:	48 8b 00             	mov    (%rax),%rax
    c40b:	48 89 c7             	mov    %rax,%rdi
    c40e:	e8 a1 06 00 00       	call   cab4 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    c413:	c9                   	leave
    c414:	c3                   	ret
    c415:	90                   	nop

000000000000c416 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
    c416:	55                   	push   %rbp
    c417:	48 89 e5             	mov    %rsp,%rbp
    c41a:	48 83 ec 20          	sub    $0x20,%rsp
    c41e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c422:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c426:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
    c42a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c42e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c432:	48 89 d6             	mov    %rdx,%rsi
    c435:	48 89 c7             	mov    %rax,%rdi
    c438:	e8 95 06 00 00       	call   cad2 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
    c43d:	c9                   	leave
    c43e:	c3                   	ret

000000000000c43f <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
    c43f:	55                   	push   %rbp
    c440:	48 89 e5             	mov    %rsp,%rbp
    c443:	48 83 ec 10          	sub    $0x10,%rsp
    c447:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c44b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
    c44f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c453:	48 89 c7             	mov    %rax,%rdi
    c456:	e8 9f 06 00 00       	call   cafa <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    c45b:	48 89 c2             	mov    %rax,%rdx
    c45e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c462:	48 89 d6             	mov    %rdx,%rsi
    c465:	48 89 c7             	mov    %rax,%rdi
    c468:	e8 9b 06 00 00       	call   cb08 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
    c46d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c471:	c9                   	leave
    c472:	c3                   	ret
    c473:	90                   	nop

000000000000c474 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
    c474:	55                   	push   %rbp
    c475:	48 89 e5             	mov    %rsp,%rbp
    c478:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c47c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
    c480:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c484:	48 8b 10             	mov    (%rax),%rdx
    c487:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c48b:	48 89 10             	mov    %rdx,(%rax)
    c48e:	90                   	nop
    c48f:	5d                   	pop    %rbp
    c490:	c3                   	ret
    c491:	90                   	nop

000000000000c492 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    c492:	55                   	push   %rbp
    c493:	48 89 e5             	mov    %rsp,%rbp
    c496:	41 54                	push   %r12
    c498:	53                   	push   %rbx
    c499:	48 83 ec 60          	sub    $0x60,%rsp
    c49d:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    c4a1:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    c4a5:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    c4a9:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    c4ad:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
    c4b1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    c4b5:	48 89 c7             	mov    %rax,%rdi
    c4b8:	e8 9a 06 00 00       	call   cb57 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    c4bd:	49 89 c4             	mov    %rax,%r12
    c4c0:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    c4c4:	48 89 c7             	mov    %rax,%rdi
    c4c7:	e8 7d 06 00 00       	call   cb49 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    c4cc:	48 89 c3             	mov    %rax,%rbx
    c4cf:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c4d3:	48 89 c7             	mov    %rax,%rdi
    c4d6:	e8 60 06 00 00       	call   cb3b <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    c4db:	48 89 c2             	mov    %rax,%rdx
    c4de:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    c4e2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    c4e6:	4d 89 e0             	mov    %r12,%r8
    c4e9:	48 89 d9             	mov    %rbx,%rcx
    c4ec:	48 89 c7             	mov    %rax,%rdi
    c4ef:	e8 72 06 00 00       	call   cb66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
    c4f4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    c4f8:	48 89 c7             	mov    %rax,%rdi
    c4fb:	e8 66 0b 00 00       	call   d066 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
    c500:	48 89 c2             	mov    %rax,%rdx
    c503:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    c507:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c50b:	48 89 ce             	mov    %rcx,%rsi
    c50e:	48 89 c7             	mov    %rax,%rdi
    c511:	e8 02 07 00 00       	call   cc18 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
    c516:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    c51a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
    c51e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c522:	48 85 c0             	test   %rax,%rax
    c525:	74 1c                	je     c543 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
    c527:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    c52b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c52f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    c533:	48 89 ce             	mov    %rcx,%rsi
    c536:	48 89 c7             	mov    %rax,%rdi
    c539:	e8 46 0b 00 00       	call   d084 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
    c53e:	48 89 c3             	mov    %rax,%rbx
    c541:	eb 17                	jmp    c55a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
    c543:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    c547:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    c54b:	48 89 d6             	mov    %rdx,%rsi
    c54e:	48 89 c7             	mov    %rax,%rdi
    c551:	e8 84 0b 00 00       	call   d0da <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    c556:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
    c55a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    c55e:	48 89 c7             	mov    %rax,%rdi
    c561:	e8 7c 06 00 00       	call   cbe2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
    c566:	48 89 d8             	mov    %rbx,%rax
    c569:	eb 1a                	jmp    c585 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
    c56b:	48 89 c3             	mov    %rax,%rbx
    c56e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    c572:	48 89 c7             	mov    %rax,%rdi
    c575:	e8 68 06 00 00       	call   cbe2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
    c57a:	48 89 d8             	mov    %rbx,%rax
    c57d:	48 89 c7             	mov    %rax,%rdi
    c580:	e8 eb 6e ff ff       	call   3470 <_Unwind_Resume@plt>
    c585:	48 83 c4 60          	add    $0x60,%rsp
    c589:	5b                   	pop    %rbx
    c58a:	41 5c                	pop    %r12
    c58c:	5d                   	pop    %rbp
    c58d:	c3                   	ret

000000000000c58e <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    c58e:	55                   	push   %rbp
    c58f:	48 89 e5             	mov    %rsp,%rbp
    c592:	48 83 ec 20          	sub    $0x20,%rsp
    c596:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
    c59a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c59e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c5a2:	48 89 d6             	mov    %rdx,%rsi
    c5a5:	48 89 c7             	mov    %rax,%rdi
    c5a8:	e8 47 0b 00 00       	call   d0f4 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
    c5ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5b1:	c9                   	leave
    c5b2:	c3                   	ret
    c5b3:	90                   	nop

000000000000c5b4 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    c5b4:	55                   	push   %rbp
    c5b5:	48 89 e5             	mov    %rsp,%rbp
    c5b8:	48 83 ec 20          	sub    $0x20,%rsp
    c5bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
    c5c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c5c4:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c5c8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c5cc:	48 89 d6             	mov    %rdx,%rsi
    c5cf:	48 89 c7             	mov    %rax,%rdi
    c5d2:	e8 1d 0b 00 00       	call   d0f4 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
    c5d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5db:	c9                   	leave
    c5dc:	c3                   	ret

000000000000c5dd <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
    c5dd:	55                   	push   %rbp
    c5de:	48 89 e5             	mov    %rsp,%rbp
    c5e1:	53                   	push   %rbx
    c5e2:	48 83 ec 18          	sub    $0x18,%rsp
    c5e6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c5ea:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
    c5ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c5f2:	48 89 c7             	mov    %rax,%rdi
    c5f5:	e8 18 0b 00 00       	call   d112 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    c5fa:	48 8b 18             	mov    (%rax),%rbx
    c5fd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c601:	48 89 c7             	mov    %rax,%rdi
    c604:	e8 09 0b 00 00       	call   d112 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    c609:	48 8b 00             	mov    (%rax),%rax
    c60c:	48 39 c3             	cmp    %rax,%rbx
    c60f:	0f 94 c0             	sete   %al
    c612:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c616:	c9                   	leave
    c617:	c3                   	ret

000000000000c618 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    c618:	55                   	push   %rbp
    c619:	48 89 e5             	mov    %rsp,%rbp
    c61c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c620:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    c624:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c628:	48 8b 10             	mov    (%rax),%rdx
    c62b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c62f:	48 89 10             	mov    %rdx,(%rax)
    c632:	90                   	nop
    c633:	5d                   	pop    %rbp
    c634:	c3                   	ret
    c635:	90                   	nop

000000000000c636 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    c636:	55                   	push   %rbp
    c637:	48 89 e5             	mov    %rsp,%rbp
    c63a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    c63e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c642:	5d                   	pop    %rbp
    c643:	c3                   	ret

000000000000c644 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    c644:	55                   	push   %rbp
    c645:	48 89 e5             	mov    %rsp,%rbp
    c648:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c64c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    c650:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c654:	48 8b 10             	mov    (%rax),%rdx
    c657:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c65b:	48 89 10             	mov    %rdx,(%rax)
    c65e:	90                   	nop
    c65f:	5d                   	pop    %rbp
    c660:	c3                   	ret
    c661:	90                   	nop

000000000000c662 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    c662:	55                   	push   %rbp
    c663:	48 89 e5             	mov    %rsp,%rbp
    c666:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    c66a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c66e:	5d                   	pop    %rbp
    c66f:	c3                   	ret

000000000000c670 <_ZNSaIP9VkImage_TEC1Ev>:
    c670:	55                   	push   %rbp
    c671:	48 89 e5             	mov    %rsp,%rbp
    c674:	48 83 ec 10          	sub    $0x10,%rsp
    c678:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c67c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c680:	48 89 c7             	mov    %rax,%rdi
    c683:	e8 98 0a 00 00       	call   d120 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>
    c688:	90                   	nop
    c689:	c9                   	leave
    c68a:	c3                   	ret
    c68b:	90                   	nop

000000000000c68c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    c68c:	55                   	push   %rbp
    c68d:	48 89 e5             	mov    %rsp,%rbp
    c690:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    c694:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c698:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c69f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6a3:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    c6aa:	00 
    c6ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6af:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    c6b6:	00 
	{ }
    c6b7:	90                   	nop
    c6b8:	5d                   	pop    %rbp
    c6b9:	c3                   	ret

000000000000c6ba <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>:
    c6ba:	55                   	push   %rbp
    c6bb:	48 89 e5             	mov    %rsp,%rbp
    c6be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6c2:	90                   	nop
    c6c3:	5d                   	pop    %rbp
    c6c4:	c3                   	ret
    c6c5:	90                   	nop

000000000000c6c6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    c6c6:	55                   	push   %rbp
    c6c7:	48 89 e5             	mov    %rsp,%rbp
    c6ca:	48 83 ec 20          	sub    $0x20,%rsp
    c6ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c6d6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    c6da:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c6df:	74 17                	je     c6f8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    c6e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6e5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c6e9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c6ed:	48 89 ce             	mov    %rcx,%rsi
    c6f0:	48 89 c7             	mov    %rax,%rdi
    c6f3:	e8 33 0a 00 00       	call   d12b <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>
      }
    c6f8:	90                   	nop
    c6f9:	c9                   	leave
    c6fa:	c3                   	ret
    c6fb:	90                   	nop

000000000000c6fc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    c6fc:	55                   	push   %rbp
    c6fd:	48 89 e5             	mov    %rsp,%rbp
    c700:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    c704:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c708:	5d                   	pop    %rbp
    c709:	c3                   	ret

000000000000c70a <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    c70a:	55                   	push   %rbp
    c70b:	48 89 e5             	mov    %rsp,%rbp
    c70e:	48 83 ec 20          	sub    $0x20,%rsp
    c712:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c716:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c71a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    c71e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c722:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c726:	48 89 d6             	mov    %rdx,%rsi
    c729:	48 89 c7             	mov    %rax,%rdi
    c72c:	e8 28 0a 00 00       	call   d159 <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>
    }
    c731:	90                   	nop
    c732:	c9                   	leave
    c733:	c3                   	ret

000000000000c734 <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>:
	constexpr time_point() : __d(duration::zero())
    c734:	55                   	push   %rbp
    c735:	48 89 e5             	mov    %rsp,%rbp
    c738:	53                   	push   %rbx
    c739:	48 83 ec 18          	sub    $0x18,%rsp
    c73d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c741:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    c745:	e8 0e ea ff ff       	call   b158 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>
    c74a:	48 89 03             	mov    %rax,(%rbx)
	{ }
    c74d:	90                   	nop
    c74e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c752:	c9                   	leave
    c753:	c3                   	ret

000000000000c754 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>:
	time_since_epoch() const
    c754:	55                   	push   %rbp
    c755:	48 89 e5             	mov    %rsp,%rbp
    c758:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __d; }
    c75c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c760:	48 8b 00             	mov    (%rax),%rax
    c763:	5d                   	pop    %rbp
    c764:	c3                   	ret

000000000000c765 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>:
      operator-(const duration<_Rep1, _Period1>& __lhs,
    c765:	55                   	push   %rbp
    c766:	48 89 e5             	mov    %rsp,%rbp
    c769:	53                   	push   %rbx
    c76a:	48 83 ec 38          	sub    $0x38,%rsp
    c76e:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    c772:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
    c776:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c77a:	48 8b 00             	mov    (%rax),%rax
    c77d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    c781:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    c785:	48 89 c7             	mov    %rax,%rdi
    c788:	e8 1d ea ff ff       	call   b1aa <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    c78d:	48 89 c3             	mov    %rax,%rbx
    c790:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c794:	48 8b 00             	mov    (%rax),%rax
    c797:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    c79b:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    c79f:	48 89 c7             	mov    %rax,%rdi
    c7a2:	e8 03 ea ff ff       	call   b1aa <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    c7a7:	48 29 c3             	sub    %rax,%rbx
    c7aa:	48 89 da             	mov    %rbx,%rdx
    c7ad:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    c7b1:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    c7b5:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    c7b9:	48 89 d6             	mov    %rdx,%rsi
    c7bc:	48 89 c7             	mov    %rax,%rdi
    c7bf:	e8 be e9 ff ff       	call   b182 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
    c7c4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
      }
    c7c8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c7cc:	c9                   	leave
    c7cd:	c3                   	ret

000000000000c7ce <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>:
	  __cast(const duration<_Rep, _Period>& __d)
    c7ce:	55                   	push   %rbp
    c7cf:	48 89 e5             	mov    %rsp,%rbp
    c7d2:	48 83 ec 20          	sub    $0x20,%rsp
    c7d6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
    c7da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c7de:	48 89 c7             	mov    %rax,%rdi
    c7e1:	e8 c4 e9 ff ff       	call   b1aa <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    c7e6:	48 89 c1             	mov    %rax,%rcx
    c7e9:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
    c7f0:	9b c4 20 
    c7f3:	48 89 c8             	mov    %rcx,%rax
    c7f6:	48 f7 ea             	imul   %rdx
    c7f9:	48 89 d0             	mov    %rdx,%rax
    c7fc:	48 c1 f8 07          	sar    $0x7,%rax
    c800:	48 c1 f9 3f          	sar    $0x3f,%rcx
    c804:	48 89 ca             	mov    %rcx,%rdx
    c807:	48 29 d0             	sub    %rdx,%rax
	    return _ToDur(static_cast<__to_rep>(
    c80a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c80e:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    c812:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    c816:	48 89 d6             	mov    %rdx,%rsi
    c819:	48 89 c7             	mov    %rax,%rdi
    c81c:	e8 5f 09 00 00       	call   d180 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
    c821:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
	  }
    c825:	c9                   	leave
    c826:	c3                   	ret

000000000000c827 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
    distance(_InputIterator __first, _InputIterator __last)
    c827:	55                   	push   %rbp
    c828:	48 89 e5             	mov    %rsp,%rbp
    c82b:	48 83 ec 10          	sub    $0x10,%rsp
    c82f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c833:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    c837:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c83b:	48 89 c7             	mov    %rax,%rdi
    c83e:	e8 5a 09 00 00       	call   d19d <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    c843:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c847:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c84b:	48 89 d6             	mov    %rdx,%rsi
    c84e:	48 89 c7             	mov    %rax,%rdi
    c851:	e8 52 09 00 00       	call   d1a8 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    c856:	c9                   	leave
    c857:	c3                   	ret

000000000000c858 <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
    c858:	55                   	push   %rbp
    c859:	48 89 e5             	mov    %rsp,%rbp
    c85c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c860:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c864:	48 8b 40 08          	mov    0x8(%rax),%rax
    c868:	5d                   	pop    %rbp
    c869:	c3                   	ret

000000000000c86a <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
    c86a:	55                   	push   %rbp
    c86b:	48 89 e5             	mov    %rsp,%rbp
    c86e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c872:	90                   	nop
    c873:	5d                   	pop    %rbp
    c874:	c3                   	ret

000000000000c875 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    c875:	55                   	push   %rbp
    c876:	48 89 e5             	mov    %rsp,%rbp
    c879:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c87d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    c881:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c885:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    c889:	48 c1 f8 03          	sar    $0x3,%rax
    }
    c88d:	5d                   	pop    %rbp
    c88e:	c3                   	ret

000000000000c88f <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    c88f:	55                   	push   %rbp
    c890:	48 89 e5             	mov    %rsp,%rbp
    c893:	48 83 ec 20          	sub    $0x20,%rsp
    c897:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c89b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c89f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    c8a3:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
    c8a7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c8ab:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c8af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8b3:	48 89 ce             	mov    %rcx,%rsi
    c8b6:	48 89 c7             	mov    %rax,%rdi
    c8b9:	e8 00 09 00 00       	call   d1be <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
    c8be:	c9                   	leave
    c8bf:	c3                   	ret

000000000000c8c0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>:
	_Optional_payload_base(in_place_t __tag, _Args&&... __args)
    c8c0:	55                   	push   %rbp
    c8c1:	48 89 e5             	mov    %rsp,%rbp
    c8c4:	53                   	push   %rbx
    c8c5:	48 83 ec 28          	sub    $0x28,%rsp
    c8c9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c8cd:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
	: _M_payload(__tag, std::forward<_Args>(__args)...),
    c8d1:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    c8d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c8d9:	48 89 c7             	mov    %rax,%rdi
    c8dc:	e8 85 f8 ff ff       	call   c166 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
    c8e1:	48 89 c6             	mov    %rax,%rsi
    c8e4:	48 89 df             	mov    %rbx,%rdi
    c8e7:	e8 08 09 00 00       	call   d1f4 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>
	  _M_engaged(true)
    c8ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c8f0:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	{ }
    c8f4:	90                   	nop
    c8f5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c8f9:	c9                   	leave
    c8fa:	c3                   	ret
    c8fb:	90                   	nop

000000000000c8fc <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() const noexcept
    c8fc:	55                   	push   %rbp
    c8fd:	48 89 e5             	mov    %rsp,%rbp
    c900:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    c904:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c908:	5d                   	pop    %rbp
    c909:	c3                   	ret

000000000000c90a <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>:
	explicit constexpr pair(pair<_U1, _U2>&& __p)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }

      pair&
      operator=(__conditional_t<__and_<is_copy_assignable<_T1>,
    c90a:	55                   	push   %rbp
    c90b:	48 89 e5             	mov    %rsp,%rbp
    c90e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c912:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
				       is_copy_assignable<_T2>>::value,
				const pair&, const __nonesuch&> __p)
      {
	first = __p.first;
    c916:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c91a:	8b 10                	mov    (%rax),%edx
    c91c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c920:	89 10                	mov    %edx,(%rax)
	second = __p.second;
    c922:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    c926:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    c92a:	48 8b 46 04          	mov    0x4(%rsi),%rax
    c92e:	48 8b 56 0c          	mov    0xc(%rsi),%rdx
    c932:	48 89 41 04          	mov    %rax,0x4(%rcx)
    c936:	48 89 51 0c          	mov    %rdx,0xc(%rcx)
    c93a:	48 8b 46 14          	mov    0x14(%rsi),%rax
    c93e:	48 89 41 14          	mov    %rax,0x14(%rcx)
	return *this;
    c942:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    c946:	5d                   	pop    %rbp
    c947:	c3                   	ret

000000000000c948 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    c948:	55                   	push   %rbp
    c949:	48 89 e5             	mov    %rsp,%rbp
    c94c:	53                   	push   %rbx
    c94d:	48 83 ec 18          	sub    $0x18,%rsp
    c951:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c955:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    c959:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c95d:	48 89 c7             	mov    %rax,%rdi
    c960:	e8 e1 08 00 00       	call   d246 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
    c965:	48 89 c3             	mov    %rax,%rbx
    c968:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c96c:	48 89 c7             	mov    %rax,%rdi
    c96f:	e8 c4 08 00 00       	call   d238 <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>
    c974:	48 89 de             	mov    %rbx,%rsi
    c977:	48 89 c7             	mov    %rax,%rdi
    c97a:	e8 d5 08 00 00       	call   d254 <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>
	  this->_M_engaged = true;
    c97f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c983:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	}
    c987:	90                   	nop
    c988:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c98c:	c9                   	leave
    c98d:	c3                   	ret

000000000000c98e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>:
      _M_reset() noexcept
    c98e:	55                   	push   %rbp
    c98f:	48 89 e5             	mov    %rsp,%rbp
    c992:	48 83 ec 10          	sub    $0x10,%rsp
    c996:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_engaged)
    c99a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c99e:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    c9a2:	84 c0                	test   %al,%al
    c9a4:	74 0c                	je     c9b2 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv+0x24>
	  _M_destroy();
    c9a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9aa:	48 89 c7             	mov    %rax,%rdi
    c9ad:	e8 fc 08 00 00       	call   d2ae <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>
      }
    c9b2:	90                   	nop
    c9b3:	c9                   	leave
    c9b4:	c3                   	ret
    c9b5:	90                   	nop

000000000000c9b6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c9b6:	55                   	push   %rbp
    c9b7:	48 89 e5             	mov    %rsp,%rbp
    c9ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9be:	90                   	nop
    c9bf:	5d                   	pop    %rbp
    c9c0:	c3                   	ret

000000000000c9c1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    c9c1:	55                   	push   %rbp
    c9c2:	48 89 e5             	mov    %rsp,%rbp
    c9c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
    c9c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9cd:	48 8b 40 18          	mov    0x18(%rax),%rax
    c9d1:	5d                   	pop    %rbp
    c9d2:	c3                   	ret

000000000000c9d3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    c9d3:	55                   	push   %rbp
    c9d4:	48 89 e5             	mov    %rsp,%rbp
    c9d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
    c9db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9df:	48 8b 40 10          	mov    0x10(%rax),%rax
    c9e3:	5d                   	pop    %rbp
    c9e4:	c3                   	ret
    c9e5:	90                   	nop

000000000000c9e6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    c9e6:	55                   	push   %rbp
    c9e7:	48 89 e5             	mov    %rsp,%rbp
    c9ea:	48 83 ec 10          	sub    $0x10,%rsp
    c9ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
    c9f6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c9fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9fe:	48 89 d6             	mov    %rdx,%rsi
    ca01:	48 89 c7             	mov    %rax,%rdi
    ca04:	e8 b9 08 00 00       	call   d2c2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
    ca09:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ca0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca11:	48 89 d6             	mov    %rdx,%rsi
    ca14:	48 89 c7             	mov    %rax,%rdi
    ca17:	e8 e4 08 00 00       	call   d300 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
    ca1c:	90                   	nop
    ca1d:	c9                   	leave
    ca1e:	c3                   	ret
    ca1f:	90                   	nop

000000000000ca20 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
    ca20:	55                   	push   %rbp
    ca21:	48 89 e5             	mov    %rsp,%rbp
    ca24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    ca28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca2c:	48 8b 40 10          	mov    0x10(%rax),%rax
    ca30:	5d                   	pop    %rbp
    ca31:	c3                   	ret

000000000000ca32 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
    ca32:	55                   	push   %rbp
    ca33:	48 89 e5             	mov    %rsp,%rbp
    ca36:	53                   	push   %rbx
    ca37:	48 83 ec 18          	sub    $0x18,%rsp
    ca3b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ca3f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
    ca43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca47:	48 89 c7             	mov    %rax,%rdi
    ca4a:	e8 e7 08 00 00       	call   d336 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    ca4f:	48 89 c3             	mov    %rax,%rbx
    ca52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca56:	48 89 c7             	mov    %rax,%rdi
    ca59:	e8 d6 f8 ff ff       	call   c334 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    ca5e:	48 89 c6             	mov    %rax,%rsi
    ca61:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ca65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca69:	48 89 d1             	mov    %rdx,%rcx
    ca6c:	48 89 da             	mov    %rbx,%rdx
    ca6f:	48 89 c7             	mov    %rax,%rdi
    ca72:	e8 d1 08 00 00       	call   d348 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
    ca77:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ca7b:	c9                   	leave
    ca7c:	c3                   	ret
    ca7d:	90                   	nop

000000000000ca7e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    ca7e:	55                   	push   %rbp
    ca7f:	48 89 e5             	mov    %rsp,%rbp
    ca82:	48 83 ec 20          	sub    $0x20,%rsp
    ca86:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
    ca8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca8e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    ca92:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ca96:	48 89 d6             	mov    %rdx,%rsi
    ca99:	48 89 c7             	mov    %rax,%rdi
    ca9c:	e8 39 06 00 00       	call   d0da <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    caa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caa5:	c9                   	leave
    caa6:	c3                   	ret
    caa7:	90                   	nop

000000000000caa8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
    caa8:	55                   	push   %rbp
    caa9:	48 89 e5             	mov    %rsp,%rbp
    caac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
    cab0:	90                   	nop
    cab1:	5d                   	pop    %rbp
    cab2:	c3                   	ret
    cab3:	90                   	nop

000000000000cab4 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
    cab4:	55                   	push   %rbp
    cab5:	48 89 e5             	mov    %rsp,%rbp
    cab8:	48 83 ec 10          	sub    $0x10,%rsp
    cabc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    cac0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cac4:	48 83 c0 20          	add    $0x20,%rax
    cac8:	48 89 c7             	mov    %rax,%rdi
    cacb:	e8 0e 09 00 00       	call   d3de <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
    cad0:	c9                   	leave
    cad1:	c3                   	ret

000000000000cad2 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    cad2:	55                   	push   %rbp
    cad3:	48 89 e5             	mov    %rsp,%rbp
    cad6:	48 83 ec 10          	sub    $0x10,%rsp
    cada:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cade:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
    cae2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cae6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caea:	48 89 d6             	mov    %rdx,%rsi
    caed:	48 89 c7             	mov    %rax,%rdi
    caf0:	e8 3b 65 ff ff       	call   3030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
    caf5:	c1 e8 1f             	shr    $0x1f,%eax
    caf8:	c9                   	leave
    caf9:	c3                   	ret

000000000000cafa <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    cafa:	55                   	push   %rbp
    cafb:	48 89 e5             	mov    %rsp,%rbp
    cafe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    cb02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb06:	5d                   	pop    %rbp
    cb07:	c3                   	ret

000000000000cb08 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
    cb08:	55                   	push   %rbp
    cb09:	48 89 e5             	mov    %rsp,%rbp
    cb0c:	53                   	push   %rbx
    cb0d:	48 83 ec 18          	sub    $0x18,%rsp
    cb11:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cb15:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
    cb19:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    cb1d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cb21:	48 89 c7             	mov    %rax,%rdi
    cb24:	e8 d1 ff ff ff       	call   cafa <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    cb29:	48 89 c6             	mov    %rax,%rsi
    cb2c:	48 89 df             	mov    %rbx,%rdi
    cb2f:	e8 c4 08 00 00       	call   d3f8 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
    cb34:	90                   	nop
    cb35:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cb39:	c9                   	leave
    cb3a:	c3                   	ret

000000000000cb3b <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    cb3b:	55                   	push   %rbp
    cb3c:	48 89 e5             	mov    %rsp,%rbp
    cb3f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    cb43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb47:	5d                   	pop    %rbp
    cb48:	c3                   	ret

000000000000cb49 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    cb49:	55                   	push   %rbp
    cb4a:	48 89 e5             	mov    %rsp,%rbp
    cb4d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    cb51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb55:	5d                   	pop    %rbp
    cb56:	c3                   	ret

000000000000cb57 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    cb57:	55                   	push   %rbp
    cb58:	48 89 e5             	mov    %rsp,%rbp
    cb5b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    cb5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb63:	5d                   	pop    %rbp
    cb64:	c3                   	ret
    cb65:	90                   	nop

000000000000cb66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
    cb66:	55                   	push   %rbp
    cb67:	48 89 e5             	mov    %rsp,%rbp
    cb6a:	41 54                	push   %r12
    cb6c:	53                   	push   %rbx
    cb6d:	48 83 ec 30          	sub    $0x30,%rsp
    cb71:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cb75:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cb79:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    cb7d:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    cb81:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
    cb85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb89:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    cb8d:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
    cb90:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cb94:	48 89 c7             	mov    %rax,%rdi
    cb97:	e8 bb ff ff ff       	call   cb57 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    cb9c:	49 89 c4             	mov    %rax,%r12
    cb9f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    cba3:	48 89 c7             	mov    %rax,%rdi
    cba6:	e8 9e ff ff ff       	call   cb49 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    cbab:	48 89 c3             	mov    %rax,%rbx
    cbae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cbb2:	48 89 c7             	mov    %rax,%rdi
    cbb5:	e8 81 ff ff ff       	call   cb3b <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    cbba:	48 89 c6             	mov    %rax,%rsi
    cbbd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cbc1:	4c 89 e1             	mov    %r12,%rcx
    cbc4:	48 89 da             	mov    %rbx,%rdx
    cbc7:	48 89 c7             	mov    %rax,%rdi
    cbca:	e8 5d 08 00 00       	call   d42c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
    cbcf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cbd3:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
    cbd7:	90                   	nop
    cbd8:	48 83 c4 30          	add    $0x30,%rsp
    cbdc:	5b                   	pop    %rbx
    cbdd:	41 5c                	pop    %r12
    cbdf:	5d                   	pop    %rbp
    cbe0:	c3                   	ret
    cbe1:	90                   	nop

000000000000cbe2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
    cbe2:	55                   	push   %rbp
    cbe3:	48 89 e5             	mov    %rsp,%rbp
    cbe6:	48 83 ec 10          	sub    $0x10,%rsp
    cbea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
    cbee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbf2:	48 8b 40 08          	mov    0x8(%rax),%rax
    cbf6:	48 85 c0             	test   %rax,%rax
    cbf9:	74 1a                	je     cc15 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
    cbfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbff:	48 8b 00             	mov    (%rax),%rax
    cc02:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cc06:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    cc0a:	48 89 d6             	mov    %rdx,%rsi
    cc0d:	48 89 c7             	mov    %rax,%rdi
    cc10:	e8 d1 fd ff ff       	call   c9e6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
    cc15:	90                   	nop
    cc16:	c9                   	leave
    cc17:	c3                   	ret

000000000000cc18 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    cc18:	55                   	push   %rbp
    cc19:	48 89 e5             	mov    %rsp,%rbp
    cc1c:	53                   	push   %rbx
    cc1d:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    cc24:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
    cc2b:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
    cc32:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
    cc39:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    cc40:	48 89 c7             	mov    %rax,%rdi
    cc43:	e8 60 08 00 00       	call   d4a8 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
    cc48:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
    cc4f:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    cc56:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    cc5d:	48 89 c7             	mov    %rax,%rdi
    cc60:	e8 d1 06 00 00       	call   d336 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    cc65:	48 39 c3             	cmp    %rax,%rbx
    cc68:	0f 94 c0             	sete   %al
    cc6b:	84 c0                	test   %al,%al
    cc6d:	0f 84 c8 00 00 00    	je     cd3b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
    cc73:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    cc7a:	48 89 c7             	mov    %rax,%rdi
    cc7d:	e8 4e 08 00 00       	call   d4d0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
    cc82:	48 85 c0             	test   %rax,%rax
    cc85:	74 44                	je     cccb <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
    cc87:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    cc8e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    cc95:	48 89 c7             	mov    %rax,%rdi
    cc98:	e8 45 08 00 00       	call   d4e2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    cc9d:	48 8b 00             	mov    (%rax),%rax
    cca0:	48 89 c7             	mov    %rax,%rdi
    cca3:	e8 4c 08 00 00       	call   d4f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    cca8:	48 89 c1             	mov    %rax,%rcx
    ccab:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    ccb2:	48 89 c2             	mov    %rax,%rdx
    ccb5:	48 89 ce             	mov    %rcx,%rsi
    ccb8:	48 89 df             	mov    %rbx,%rdi
    ccbb:	e8 56 f7 ff ff       	call   c416 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    ccc0:	84 c0                	test   %al,%al
    ccc2:	74 07                	je     cccb <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
    ccc4:	b8 01 00 00 00       	mov    $0x1,%eax
    ccc9:	eb 05                	jmp    ccd0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
    cccb:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
    ccd0:	84 c0                	test   %al,%al
    ccd2:	74 49                	je     cd1d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
    ccd4:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    ccdb:	48 89 c7             	mov    %rax,%rdi
    ccde:	e8 ff 07 00 00       	call   d4e2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    cce3:	48 89 c2             	mov    %rax,%rdx
    cce6:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
    cced:	00 00 00 00 
    ccf1:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
    ccf8:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    ccff:	48 89 ce             	mov    %rcx,%rsi
    cd02:	48 89 c7             	mov    %rax,%rdi
    cd05:	e8 04 08 00 00       	call   d50e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    cd0a:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    cd11:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    cd18:	e9 43 03 00 00       	jmp    d060 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    cd1d:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    cd24:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    cd2b:	48 89 d6             	mov    %rdx,%rsi
    cd2e:	48 89 c7             	mov    %rax,%rdi
    cd31:	e8 08 08 00 00       	call   d53e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    cd36:	e9 25 03 00 00       	jmp    d060 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
    cd3b:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    cd42:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    cd49:	48 89 c7             	mov    %rax,%rdi
    cd4c:	e8 a3 07 00 00       	call   d4f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    cd51:	48 89 c2             	mov    %rax,%rdx
    cd54:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    cd5b:	48 89 c6             	mov    %rax,%rsi
    cd5e:	48 89 df             	mov    %rbx,%rdi
    cd61:	e8 b0 f6 ff ff       	call   c416 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    cd66:	84 c0                	test   %al,%al
    cd68:	0f 84 66 01 00 00    	je     ced4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
    cd6e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    cd75:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
    cd7c:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    cd83:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    cd8a:	48 89 c7             	mov    %rax,%rdi
    cd8d:	e8 22 09 00 00       	call   d6b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    cd92:	48 8b 00             	mov    (%rax),%rax
    cd95:	48 39 c3             	cmp    %rax,%rbx
    cd98:	0f 94 c0             	sete   %al
    cd9b:	84 c0                	test   %al,%al
    cd9d:	74 4c                	je     cdeb <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
    cd9f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    cda6:	48 89 c7             	mov    %rax,%rdi
    cda9:	e8 06 09 00 00       	call   d6b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    cdae:	48 89 c3             	mov    %rax,%rbx
    cdb1:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    cdb8:	48 89 c7             	mov    %rax,%rdi
    cdbb:	e8 f4 08 00 00       	call   d6b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    cdc0:	48 89 c1             	mov    %rax,%rcx
    cdc3:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    cdca:	48 89 da             	mov    %rbx,%rdx
    cdcd:	48 89 ce             	mov    %rcx,%rsi
    cdd0:	48 89 c7             	mov    %rax,%rdi
    cdd3:	e8 ee 08 00 00       	call   d6c6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    cdd8:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    cddf:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    cde6:	e9 75 02 00 00       	jmp    d060 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
    cdeb:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    cdf2:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    cdf9:	48 89 c7             	mov    %rax,%rdi
    cdfc:	e8 09 09 00 00       	call   d70a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
    ce01:	48 8b 00             	mov    (%rax),%rax
    ce04:	48 89 c7             	mov    %rax,%rdi
    ce07:	e8 e8 06 00 00       	call   d4f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    ce0c:	48 89 c1             	mov    %rax,%rcx
    ce0f:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    ce16:	48 89 c2             	mov    %rax,%rdx
    ce19:	48 89 ce             	mov    %rcx,%rsi
    ce1c:	48 89 df             	mov    %rbx,%rdi
    ce1f:	e8 f2 f5 ff ff       	call   c416 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    ce24:	84 c0                	test   %al,%al
    ce26:	0f 84 8a 00 00 00    	je     ceb6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
    ce2c:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    ce33:	48 89 c7             	mov    %rax,%rdi
    ce36:	e8 86 fb ff ff       	call   c9c1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    ce3b:	48 85 c0             	test   %rax,%rax
    ce3e:	0f 94 c0             	sete   %al
    ce41:	84 c0                	test   %al,%al
    ce43:	74 3e                	je     ce83 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
    ce45:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    ce4c:	00 00 00 00 
    ce50:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    ce57:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
    ce5e:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    ce65:	48 89 ce             	mov    %rcx,%rsi
    ce68:	48 89 c7             	mov    %rax,%rdi
    ce6b:	e8 9e 06 00 00       	call   d50e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    ce70:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    ce77:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    ce7e:	e9 dd 01 00 00       	jmp    d060 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
    ce83:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    ce8a:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    ce91:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    ce98:	48 89 ce             	mov    %rcx,%rsi
    ce9b:	48 89 c7             	mov    %rax,%rdi
    ce9e:	e8 23 08 00 00       	call   d6c6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    cea3:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    ceaa:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    ceb1:	e9 aa 01 00 00       	jmp    d060 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    ceb6:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    cebd:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    cec4:	48 89 d6             	mov    %rdx,%rsi
    cec7:	48 89 c7             	mov    %rax,%rdi
    ceca:	e8 6f 06 00 00       	call   d53e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    cecf:	e9 8c 01 00 00       	jmp    d060 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
    ced4:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    cedb:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    cee2:	48 89 c7             	mov    %rax,%rdi
    cee5:	e8 0a 06 00 00       	call   d4f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    ceea:	48 89 c1             	mov    %rax,%rcx
    ceed:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    cef4:	48 89 c2             	mov    %rax,%rdx
    cef7:	48 89 ce             	mov    %rcx,%rsi
    cefa:	48 89 df             	mov    %rbx,%rdi
    cefd:	e8 14 f5 ff ff       	call   c416 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    cf02:	84 c0                	test   %al,%al
    cf04:	0f 84 2c 01 00 00    	je     d036 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
    cf0a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    cf11:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
    cf18:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    cf1f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    cf26:	48 89 c7             	mov    %rax,%rdi
    cf29:	e8 b4 05 00 00       	call   d4e2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    cf2e:	48 8b 00             	mov    (%rax),%rax
    cf31:	48 39 c3             	cmp    %rax,%rbx
    cf34:	0f 94 c0             	sete   %al
    cf37:	84 c0                	test   %al,%al
    cf39:	74 3a                	je     cf75 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
    cf3b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    cf42:	48 89 c7             	mov    %rax,%rdi
    cf45:	e8 98 05 00 00       	call   d4e2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    cf4a:	48 89 c2             	mov    %rax,%rdx
    cf4d:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    cf54:	00 
    cf55:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
    cf59:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    cf5d:	48 89 ce             	mov    %rcx,%rsi
    cf60:	48 89 c7             	mov    %rax,%rdi
    cf63:	e8 a6 05 00 00       	call   d50e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    cf68:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    cf6c:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    cf70:	e9 eb 00 00 00       	jmp    d060 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
    cf75:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    cf7c:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    cf83:	48 89 c7             	mov    %rax,%rdi
    cf86:	e8 a7 07 00 00       	call   d732 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
    cf8b:	48 8b 00             	mov    (%rax),%rax
    cf8e:	48 89 c7             	mov    %rax,%rdi
    cf91:	e8 5e 05 00 00       	call   d4f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    cf96:	48 89 c2             	mov    %rax,%rdx
    cf99:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    cfa0:	48 89 c6             	mov    %rax,%rsi
    cfa3:	48 89 df             	mov    %rbx,%rdi
    cfa6:	e8 6b f4 ff ff       	call   c416 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    cfab:	84 c0                	test   %al,%al
    cfad:	74 6c                	je     d01b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
    cfaf:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    cfb6:	48 89 c7             	mov    %rax,%rdi
    cfb9:	e8 03 fa ff ff       	call   c9c1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    cfbe:	48 85 c0             	test   %rax,%rax
    cfc1:	0f 94 c0             	sete   %al
    cfc4:	84 c0                	test   %al,%al
    cfc6:	74 2c                	je     cff4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
    cfc8:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    cfcf:	00 
    cfd0:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    cfd7:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    cfdb:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    cfdf:	48 89 ce             	mov    %rcx,%rsi
    cfe2:	48 89 c7             	mov    %rax,%rdi
    cfe5:	e8 24 05 00 00       	call   d50e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    cfea:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    cfee:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    cff2:	eb 6c                	jmp    d060 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
    cff4:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
    cffb:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
    d002:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    d006:	48 89 ce             	mov    %rcx,%rsi
    d009:	48 89 c7             	mov    %rax,%rdi
    d00c:	e8 b5 06 00 00       	call   d6c6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    d011:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d015:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    d019:	eb 45                	jmp    d060 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    d01b:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    d022:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d029:	48 89 d6             	mov    %rdx,%rsi
    d02c:	48 89 c7             	mov    %rax,%rdi
    d02f:	e8 0a 05 00 00       	call   d53e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    d034:	eb 2a                	jmp    d060 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
    d036:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    d03d:	00 
    d03e:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    d042:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    d049:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    d04d:	48 89 ce             	mov    %rcx,%rsi
    d050:	48 89 c7             	mov    %rax,%rdi
    d053:	e8 b6 04 00 00       	call   d50e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    d058:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d05c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    d060:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d064:	c9                   	leave
    d065:	c3                   	ret

000000000000d066 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
    d066:	55                   	push   %rbp
    d067:	48 89 e5             	mov    %rsp,%rbp
    d06a:	48 83 ec 10          	sub    $0x10,%rsp
    d06e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
    d072:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d076:	48 8b 40 08          	mov    0x8(%rax),%rax
    d07a:	48 89 c7             	mov    %rax,%rdi
    d07d:	e8 d8 06 00 00       	call   d75a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    d082:	c9                   	leave
    d083:	c3                   	ret

000000000000d084 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
    d084:	55                   	push   %rbp
    d085:	48 89 e5             	mov    %rsp,%rbp
    d088:	48 83 ec 30          	sub    $0x30,%rsp
    d08c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d090:	48 89 d1             	mov    %rdx,%rcx
    d093:	48 89 f0             	mov    %rsi,%rax
    d096:	48 89 fa             	mov    %rdi,%rdx
    d099:	48 89 ca             	mov    %rcx,%rdx
    d09c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    d0a0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
    d0a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d0a8:	48 8b 00             	mov    (%rax),%rax
    d0ab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d0af:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    d0b3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d0b7:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    d0bb:	48 89 c7             	mov    %rax,%rdi
    d0be:	e8 c3 06 00 00       	call   d786 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
    d0c3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
    d0c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d0cb:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    d0d2:	00 
	  return __it;
    d0d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    d0d7:	c9                   	leave
    d0d8:	c3                   	ret
    d0d9:	90                   	nop

000000000000d0da <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    d0da:	55                   	push   %rbp
    d0db:	48 89 e5             	mov    %rsp,%rbp
    d0de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d0e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
    d0e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d0ee:	48 89 10             	mov    %rdx,(%rax)
    d0f1:	90                   	nop
    d0f2:	5d                   	pop    %rbp
    d0f3:	c3                   	ret

000000000000d0f4 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    d0f4:	55                   	push   %rbp
    d0f5:	48 89 e5             	mov    %rsp,%rbp
    d0f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d0fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    d100:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d104:	48 8b 10             	mov    (%rax),%rdx
    d107:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d10b:	48 89 10             	mov    %rdx,(%rax)
    d10e:	90                   	nop
    d10f:	5d                   	pop    %rbp
    d110:	c3                   	ret
    d111:	90                   	nop

000000000000d112 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    d112:	55                   	push   %rbp
    d113:	48 89 e5             	mov    %rsp,%rbp
    d116:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    d11a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d11e:	5d                   	pop    %rbp
    d11f:	c3                   	ret

000000000000d120 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>:
    d120:	55                   	push   %rbp
    d121:	48 89 e5             	mov    %rsp,%rbp
    d124:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d128:	90                   	nop
    d129:	5d                   	pop    %rbp
    d12a:	c3                   	ret

000000000000d12b <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    d12b:	55                   	push   %rbp
    d12c:	48 89 e5             	mov    %rsp,%rbp
    d12f:	48 83 ec 20          	sub    $0x20,%rsp
    d133:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d137:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d13b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    d13f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d143:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d147:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d14b:	48 89 ce             	mov    %rcx,%rsi
    d14e:	48 89 c7             	mov    %rax,%rdi
    d151:	e8 f4 06 00 00       	call   d84a <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>
    d156:	90                   	nop
    d157:	c9                   	leave
    d158:	c3                   	ret

000000000000d159 <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    d159:	55                   	push   %rbp
    d15a:	48 89 e5             	mov    %rsp,%rbp
    d15d:	48 83 ec 10          	sub    $0x10,%rsp
    d161:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d165:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    d169:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d16d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d171:	48 89 d6             	mov    %rdx,%rsi
    d174:	48 89 c7             	mov    %rax,%rdi
    d177:	e8 ff 06 00 00       	call   d87b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>
    }
    d17c:	90                   	nop
    d17d:	c9                   	leave
    d17e:	c3                   	ret
    d17f:	90                   	nop

000000000000d180 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
    d180:	55                   	push   %rbp
    d181:	48 89 e5             	mov    %rsp,%rbp
    d184:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d188:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    d18c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d190:	48 8b 10             	mov    (%rax),%rdx
    d193:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d197:	48 89 10             	mov    %rdx,(%rax)
    d19a:	90                   	nop
    d19b:	5d                   	pop    %rbp
    d19c:	c3                   	ret

000000000000d19d <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    d19d:	55                   	push   %rbp
    d19e:	48 89 e5             	mov    %rsp,%rbp
    d1a1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    d1a5:	90                   	nop
    d1a6:	5d                   	pop    %rbp
    d1a7:	c3                   	ret

000000000000d1a8 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    d1a8:	55                   	push   %rbp
    d1a9:	48 89 e5             	mov    %rsp,%rbp
    d1ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d1b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    d1b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d1b8:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    d1bc:	5d                   	pop    %rbp
    d1bd:	c3                   	ret

000000000000d1be <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    d1be:	55                   	push   %rbp
    d1bf:	48 89 e5             	mov    %rsp,%rbp
    d1c2:	48 83 ec 30          	sub    $0x30,%rsp
    d1c6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d1ca:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d1ce:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    d1d2:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    d1d6:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    d1da:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d1de:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d1e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d1e6:	48 89 ce             	mov    %rcx,%rsi
    d1e9:	48 89 c7             	mov    %rax,%rdi
    d1ec:	e8 99 06 00 00       	call   d88a <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
    d1f1:	c9                   	leave
    d1f2:	c3                   	ret
    d1f3:	90                   	nop

000000000000d1f4 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>:
	    _Storage(in_place_t, _Args&&... __args)
    d1f4:	55                   	push   %rbp
    d1f5:	48 89 e5             	mov    %rsp,%rbp
    d1f8:	48 83 ec 10          	sub    $0x10,%rsp
    d1fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d200:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    : _M_value(std::forward<_Args>(__args)...)
    d204:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d208:	48 89 c7             	mov    %rax,%rdi
    d20b:	e8 56 ef ff ff       	call   c166 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
    d210:	48 89 c1             	mov    %rax,%rcx
    d213:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    d217:	48 8b 01             	mov    (%rcx),%rax
    d21a:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    d21e:	48 89 06             	mov    %rax,(%rsi)
    d221:	48 89 56 08          	mov    %rdx,0x8(%rsi)
    d225:	48 8b 41 0c          	mov    0xc(%rcx),%rax
    d229:	48 8b 51 14          	mov    0x14(%rcx),%rdx
    d22d:	48 89 46 0c          	mov    %rax,0xc(%rsi)
    d231:	48 89 56 14          	mov    %rdx,0x14(%rsi)
	    { }
    d235:	90                   	nop
    d236:	c9                   	leave
    d237:	c3                   	ret

000000000000d238 <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    d238:	55                   	push   %rbp
    d239:	48 89 e5             	mov    %rsp,%rbp
    d23c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    d240:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d244:	5d                   	pop    %rbp
    d245:	c3                   	ret

000000000000d246 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    d246:	55                   	push   %rbp
    d247:	48 89 e5             	mov    %rsp,%rbp
    d24a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    d24e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d252:	5d                   	pop    %rbp
    d253:	c3                   	ret

000000000000d254 <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    d254:	55                   	push   %rbp
    d255:	48 89 e5             	mov    %rsp,%rbp
    d258:	53                   	push   %rbx
    d259:	48 83 ec 18          	sub    $0x18,%rsp
    d25d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d261:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    d265:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d269:	48 89 c6             	mov    %rax,%rsi
    d26c:	bf 1c 00 00 00       	mov    $0x1c,%edi
    d271:	e8 14 77 ff ff       	call   498a <_ZnwmPv>
    d276:	48 89 c3             	mov    %rax,%rbx
    d279:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d27d:	48 89 c7             	mov    %rax,%rdi
    d280:	e8 c1 ff ff ff       	call   d246 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
    d285:	48 89 c1             	mov    %rax,%rcx
    d288:	48 8b 01             	mov    (%rcx),%rax
    d28b:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    d28f:	48 89 03             	mov    %rax,(%rbx)
    d292:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    d296:	48 8b 41 0c          	mov    0xc(%rcx),%rax
    d29a:	48 8b 51 14          	mov    0x14(%rcx),%rdx
    d29e:	48 89 43 0c          	mov    %rax,0xc(%rbx)
    d2a2:	48 89 53 14          	mov    %rdx,0x14(%rbx)
    }
    d2a6:	90                   	nop
    d2a7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d2ab:	c9                   	leave
    d2ac:	c3                   	ret
    d2ad:	90                   	nop

000000000000d2ae <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>:
      _M_destroy() noexcept
    d2ae:	55                   	push   %rbp
    d2af:	48 89 e5             	mov    %rsp,%rbp
    d2b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_engaged = false;
    d2b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2ba:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
      }
    d2be:	90                   	nop
    d2bf:	5d                   	pop    %rbp
    d2c0:	c3                   	ret
    d2c1:	90                   	nop

000000000000d2c2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    d2c2:	55                   	push   %rbp
    d2c3:	48 89 e5             	mov    %rsp,%rbp
    d2c6:	53                   	push   %rbx
    d2c7:	48 83 ec 18          	sub    $0x18,%rsp
    d2cb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d2cf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
    d2d3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d2d7:	48 89 c7             	mov    %rax,%rdi
    d2da:	e8 d5 f7 ff ff       	call   cab4 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    d2df:	48 89 c3             	mov    %rax,%rbx
    d2e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d2e6:	48 89 c7             	mov    %rax,%rdi
    d2e9:	e8 ca 05 00 00       	call   d8b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    d2ee:	48 89 de             	mov    %rbx,%rsi
    d2f1:	48 89 c7             	mov    %rax,%rdi
    d2f4:	e8 cd 05 00 00       	call   d8c6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
    d2f9:	90                   	nop
    d2fa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d2fe:	c9                   	leave
    d2ff:	c3                   	ret

000000000000d300 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    d300:	55                   	push   %rbp
    d301:	48 89 e5             	mov    %rsp,%rbp
    d304:	48 83 ec 10          	sub    $0x10,%rsp
    d308:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d30c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
    d310:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d314:	48 89 c7             	mov    %rax,%rdi
    d317:	e8 9c 05 00 00       	call   d8b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    d31c:	48 89 c1             	mov    %rax,%rcx
    d31f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d323:	ba 01 00 00 00       	mov    $0x1,%edx
    d328:	48 89 c6             	mov    %rax,%rsi
    d32b:	48 89 cf             	mov    %rcx,%rdi
    d32e:	e8 b9 05 00 00       	call   d8ec <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
    d333:	90                   	nop
    d334:	c9                   	leave
    d335:	c3                   	ret

000000000000d336 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
    d336:	55                   	push   %rbp
    d337:	48 89 e5             	mov    %rsp,%rbp
    d33a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
    d33e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d342:	48 83 c0 08          	add    $0x8,%rax
    d346:	5d                   	pop    %rbp
    d347:	c3                   	ret

000000000000d348 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    d348:	55                   	push   %rbp
    d349:	48 89 e5             	mov    %rsp,%rbp
    d34c:	53                   	push   %rbx
    d34d:	48 83 ec 38          	sub    $0x38,%rsp
    d351:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    d355:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    d359:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    d35d:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
    d361:	eb 56                	jmp    d3b9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
    d363:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    d367:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d36b:	48 89 c7             	mov    %rax,%rdi
    d36e:	e8 e7 03 00 00       	call   d75a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    d373:	48 89 c1             	mov    %rax,%rcx
    d376:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d37a:	48 89 c2             	mov    %rax,%rdx
    d37d:	48 89 ce             	mov    %rcx,%rsi
    d380:	48 89 df             	mov    %rbx,%rdi
    d383:	e8 8e f0 ff ff       	call   c416 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    d388:	83 f0 01             	xor    $0x1,%eax
    d38b:	84 c0                	test   %al,%al
    d38d:	74 1a                	je     d3a9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
    d38f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d393:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    d397:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d39b:	48 89 c7             	mov    %rax,%rdi
    d39e:	e8 30 f6 ff ff       	call   c9d3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    d3a3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    d3a7:	eb 10                	jmp    d3b9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
    d3a9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d3ad:	48 89 c7             	mov    %rax,%rdi
    d3b0:	e8 0c f6 ff ff       	call   c9c1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    d3b5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
    d3b9:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    d3be:	75 a3                	jne    d363 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
    d3c0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    d3c4:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    d3c8:	48 89 d6             	mov    %rdx,%rsi
    d3cb:	48 89 c7             	mov    %rax,%rdi
    d3ce:	e8 07 fd ff ff       	call   d0da <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    d3d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    d3d7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d3db:	c9                   	leave
    d3dc:	c3                   	ret
    d3dd:	90                   	nop

000000000000d3de <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
    d3de:	55                   	push   %rbp
    d3df:	48 89 e5             	mov    %rsp,%rbp
    d3e2:	48 83 ec 10          	sub    $0x10,%rsp
    d3e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
    d3ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3ee:	48 89 c7             	mov    %rax,%rdi
    d3f1:	e8 24 05 00 00       	call   d91a <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
    d3f6:	c9                   	leave
    d3f7:	c3                   	ret

000000000000d3f8 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
    d3f8:	55                   	push   %rbp
    d3f9:	48 89 e5             	mov    %rsp,%rbp
    d3fc:	53                   	push   %rbx
    d3fd:	48 83 ec 18          	sub    $0x18,%rsp
    d401:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d405:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
    d409:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    d40d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d411:	48 89 c7             	mov    %rax,%rdi
    d414:	e8 e1 f6 ff ff       	call   cafa <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    d419:	48 89 c6             	mov    %rax,%rsi
    d41c:	48 89 df             	mov    %rbx,%rdi
    d41f:	e8 04 05 00 00       	call   d928 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
    d424:	90                   	nop
    d425:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d429:	c9                   	leave
    d42a:	c3                   	ret
    d42b:	90                   	nop

000000000000d42c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
    d42c:	55                   	push   %rbp
    d42d:	48 89 e5             	mov    %rsp,%rbp
    d430:	41 54                	push   %r12
    d432:	53                   	push   %rbx
    d433:	48 83 ec 30          	sub    $0x30,%rsp
    d437:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    d43b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    d43f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    d443:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
    d447:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d44b:	48 89 c7             	mov    %rax,%rdi
    d44e:	e8 fb 04 00 00       	call   d94e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
    d453:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
    d457:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d45b:	48 89 c7             	mov    %rax,%rdi
    d45e:	e8 f4 f6 ff ff       	call   cb57 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    d463:	49 89 c4             	mov    %rax,%r12
    d466:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d46a:	48 89 c7             	mov    %rax,%rdi
    d46d:	e8 d7 f6 ff ff       	call   cb49 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    d472:	48 89 c3             	mov    %rax,%rbx
    d475:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d479:	48 89 c7             	mov    %rax,%rdi
    d47c:	e8 ba f6 ff ff       	call   cb3b <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    d481:	48 89 c2             	mov    %rax,%rdx
    d484:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    d488:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d48c:	4d 89 e0             	mov    %r12,%r8
    d48f:	48 89 d9             	mov    %rbx,%rcx
    d492:	48 89 c7             	mov    %rax,%rdi
    d495:	e8 dc 04 00 00       	call   d976 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
    d49a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    d49e:	48 83 c4 30          	add    $0x30,%rsp
    d4a2:	5b                   	pop    %rbx
    d4a3:	41 5c                	pop    %r12
    d4a5:	5d                   	pop    %rbp
    d4a6:	c3                   	ret
    d4a7:	90                   	nop

000000000000d4a8 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
    d4a8:	55                   	push   %rbp
    d4a9:	48 89 e5             	mov    %rsp,%rbp
    d4ac:	48 83 ec 20          	sub    $0x20,%rsp
    d4b0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
    d4b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d4b8:	48 8b 10             	mov    (%rax),%rdx
    d4bb:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d4bf:	48 89 d6             	mov    %rdx,%rsi
    d4c2:	48 89 c7             	mov    %rax,%rdi
    d4c5:	e8 10 fc ff ff       	call   d0da <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    d4ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4ce:	c9                   	leave
    d4cf:	c3                   	ret

000000000000d4d0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    d4d0:	55                   	push   %rbp
    d4d1:	48 89 e5             	mov    %rsp,%rbp
    d4d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
    d4d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4dc:	48 8b 40 28          	mov    0x28(%rax),%rax
    d4e0:	5d                   	pop    %rbp
    d4e1:	c3                   	ret

000000000000d4e2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
    d4e2:	55                   	push   %rbp
    d4e3:	48 89 e5             	mov    %rsp,%rbp
    d4e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
    d4ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4ee:	48 83 c0 20          	add    $0x20,%rax
    d4f2:	5d                   	pop    %rbp
    d4f3:	c3                   	ret

000000000000d4f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
    d4f4:	55                   	push   %rbp
    d4f5:	48 89 e5             	mov    %rsp,%rbp
    d4f8:	48 83 ec 10          	sub    $0x10,%rsp
    d4fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
    d500:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d504:	48 89 c7             	mov    %rax,%rdi
    d507:	e8 4e 02 00 00       	call   d75a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    d50c:	c9                   	leave
    d50d:	c3                   	ret

000000000000d50e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
      constexpr pair(const _T1& __a, const _T2& __b)
    d50e:	55                   	push   %rbp
    d50f:	48 89 e5             	mov    %rsp,%rbp
    d512:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d516:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d51a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
    d51e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d522:	48 8b 10             	mov    (%rax),%rdx
    d525:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d529:	48 89 10             	mov    %rdx,(%rax)
    d52c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d530:	48 8b 10             	mov    (%rax),%rdx
    d533:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d537:	48 89 50 08          	mov    %rdx,0x8(%rax)
    d53b:	90                   	nop
    d53c:	5d                   	pop    %rbp
    d53d:	c3                   	ret

000000000000d53e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    d53e:	55                   	push   %rbp
    d53f:	48 89 e5             	mov    %rsp,%rbp
    d542:	53                   	push   %rbx
    d543:	48 83 ec 78          	sub    $0x78,%rsp
    d547:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    d54b:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
    d54f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    d553:	48 89 c7             	mov    %rax,%rdi
    d556:	e8 d9 ed ff ff       	call   c334 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    d55b:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
    d55f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    d563:	48 89 c7             	mov    %rax,%rdi
    d566:	e8 cb fd ff ff       	call   d336 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    d56b:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
    d56f:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
    d573:	eb 51                	jmp    d5c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
    d575:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d579:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
    d57d:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    d581:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d585:	48 89 c7             	mov    %rax,%rdi
    d588:	e8 cd 01 00 00       	call   d75a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    d58d:	48 89 c2             	mov    %rax,%rdx
    d590:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d594:	48 89 c6             	mov    %rax,%rsi
    d597:	48 89 df             	mov    %rbx,%rdi
    d59a:	e8 77 ee ff ff       	call   c416 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    d59f:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
    d5a2:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    d5a6:	74 0e                	je     d5b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
    d5a8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d5ac:	48 89 c7             	mov    %rax,%rdi
    d5af:	e8 1f f4 ff ff       	call   c9d3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    d5b4:	eb 0c                	jmp    d5c2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
    d5b6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d5ba:	48 89 c7             	mov    %rax,%rdi
    d5bd:	e8 ff f3 ff ff       	call   c9c1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    d5c2:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
    d5c6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d5ca:	48 85 c0             	test   %rax,%rax
    d5cd:	75 a6                	jne    d575 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
    d5cf:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    d5d3:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d5d7:	48 89 d6             	mov    %rdx,%rsi
    d5da:	48 89 c7             	mov    %rax,%rdi
    d5dd:	e8 f8 fa ff ff       	call   d0da <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
    d5e2:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    d5e6:	74 54                	je     d63c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
    d5e8:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    d5ec:	48 89 c7             	mov    %rax,%rdi
    d5ef:	e8 54 04 00 00       	call   da48 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
    d5f4:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    d5f8:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
    d5fc:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d600:	48 89 d6             	mov    %rdx,%rsi
    d603:	48 89 c7             	mov    %rax,%rdi
    d606:	e8 af ed ff ff       	call   c3ba <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
    d60b:	84 c0                	test   %al,%al
    d60d:	74 21                	je     d630 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
    d60f:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    d613:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    d617:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d61b:	48 89 ce             	mov    %rcx,%rsi
    d61e:	48 89 c7             	mov    %rax,%rdi
    d621:	e8 4c 04 00 00       	call   da72 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
    d626:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d62a:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    d62e:	eb 7d                	jmp    d6ad <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
    d630:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d634:	48 89 c7             	mov    %rax,%rdi
    d637:	e8 ce 00 00 00       	call   d70a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
    d63c:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    d640:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    d644:	48 89 c7             	mov    %rax,%rdi
    d647:	e8 a8 fe ff ff       	call   d4f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    d64c:	48 89 c1             	mov    %rax,%rcx
    d64f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d653:	48 89 c2             	mov    %rax,%rdx
    d656:	48 89 ce             	mov    %rcx,%rsi
    d659:	48 89 df             	mov    %rbx,%rdi
    d65c:	e8 b5 ed ff ff       	call   c416 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    d661:	84 c0                	test   %al,%al
    d663:	74 21                	je     d686 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
    d665:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    d669:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    d66d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    d671:	48 89 ce             	mov    %rcx,%rsi
    d674:	48 89 c7             	mov    %rax,%rdi
    d677:	e8 f6 03 00 00       	call   da72 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
    d67c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d680:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    d684:	eb 27                	jmp    d6ad <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
    d686:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    d68d:	00 
    d68e:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    d692:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    d696:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    d69a:	48 89 ce             	mov    %rcx,%rsi
    d69d:	48 89 c7             	mov    %rax,%rdi
    d6a0:	e8 69 fe ff ff       	call   d50e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    d6a5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d6a9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    d6ad:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d6b1:	c9                   	leave
    d6b2:	c3                   	ret
    d6b3:	90                   	nop

000000000000d6b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
    d6b4:	55                   	push   %rbp
    d6b5:	48 89 e5             	mov    %rsp,%rbp
    d6b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
    d6bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6c0:	48 83 c0 18          	add    $0x18,%rax
    d6c4:	5d                   	pop    %rbp
    d6c5:	c3                   	ret

000000000000d6c6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
    d6c6:	55                   	push   %rbp
    d6c7:	48 89 e5             	mov    %rsp,%rbp
    d6ca:	48 83 ec 20          	sub    $0x20,%rsp
    d6ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d6d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d6d6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    d6da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d6de:	48 89 c7             	mov    %rax,%rdi
    d6e1:	e8 d0 03 00 00       	call   dab6 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    d6e6:	48 8b 10             	mov    (%rax),%rdx
    d6e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6ed:	48 89 10             	mov    %rdx,(%rax)
    d6f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d6f4:	48 89 c7             	mov    %rax,%rdi
    d6f7:	e8 ba 03 00 00       	call   dab6 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    d6fc:	48 8b 10             	mov    (%rax),%rdx
    d6ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d703:	48 89 50 08          	mov    %rdx,0x8(%rax)
    d707:	90                   	nop
    d708:	c9                   	leave
    d709:	c3                   	ret

000000000000d70a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
    d70a:	55                   	push   %rbp
    d70b:	48 89 e5             	mov    %rsp,%rbp
    d70e:	48 83 ec 10          	sub    $0x10,%rsp
    d712:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
    d716:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d71a:	48 8b 00             	mov    (%rax),%rax
    d71d:	48 89 c7             	mov    %rax,%rdi
    d720:	e8 7b 5b ff ff       	call   32a0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
    d725:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d729:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    d72c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    d730:	c9                   	leave
    d731:	c3                   	ret

000000000000d732 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    d732:	55                   	push   %rbp
    d733:	48 89 e5             	mov    %rsp,%rbp
    d736:	48 83 ec 10          	sub    $0x10,%rsp
    d73a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
    d73e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d742:	48 8b 00             	mov    (%rax),%rax
    d745:	48 89 c7             	mov    %rax,%rdi
    d748:	e8 03 5a ff ff       	call   3150 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
    d74d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d751:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    d754:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    d758:	c9                   	leave
    d759:	c3                   	ret

000000000000d75a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
    d75a:	55                   	push   %rbp
    d75b:	48 89 e5             	mov    %rsp,%rbp
    d75e:	48 83 ec 20          	sub    $0x20,%rsp
    d762:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
    d766:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d76a:	48 89 c7             	mov    %rax,%rdi
    d76d:	e8 52 03 00 00       	call   dac4 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    d772:	48 89 c2             	mov    %rax,%rdx
    d775:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    d779:	48 89 d6             	mov    %rdx,%rsi
    d77c:	48 89 c7             	mov    %rax,%rdi
    d77f:	e8 5e 03 00 00       	call   dae2 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
    d784:	c9                   	leave
    d785:	c3                   	ret

000000000000d786 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    d786:	55                   	push   %rbp
    d787:	48 89 e5             	mov    %rsp,%rbp
    d78a:	41 54                	push   %r12
    d78c:	53                   	push   %rbx
    d78d:	48 83 ec 30          	sub    $0x30,%rsp
    d791:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    d795:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    d799:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    d79d:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
    d7a1:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    d7a6:	75 43                	jne    d7eb <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
    d7a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d7ac:	48 89 c7             	mov    %rax,%rdi
    d7af:	e8 82 fb ff ff       	call   d336 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    d7b4:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    d7b8:	74 31                	je     d7eb <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
    d7ba:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    d7be:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d7c2:	48 89 c7             	mov    %rax,%rdi
    d7c5:	e8 2a fd ff ff       	call   d4f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    d7ca:	49 89 c4             	mov    %rax,%r12
    d7cd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d7d1:	48 89 c7             	mov    %rax,%rdi
    d7d4:	e8 81 ff ff ff       	call   d75a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    d7d9:	4c 89 e2             	mov    %r12,%rdx
    d7dc:	48 89 c6             	mov    %rax,%rsi
    d7df:	48 89 df             	mov    %rbx,%rdi
    d7e2:	e8 2f ec ff ff       	call   c416 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    d7e7:	84 c0                	test   %al,%al
    d7e9:	74 07                	je     d7f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
    d7eb:	b8 01 00 00 00       	mov    $0x1,%eax
    d7f0:	eb 05                	jmp    d7f7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
    d7f2:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
    d7f7:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
    d7fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d7fe:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
    d802:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
    d806:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    d80a:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    d80e:	89 c7                	mov    %eax,%edi
    d810:	e8 2b 58 ff ff       	call   3040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
    d815:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d819:	48 8b 40 28          	mov    0x28(%rax),%rax
    d81d:	48 8d 50 01          	lea    0x1(%rax),%rdx
    d821:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d825:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
    d829:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    d82d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    d831:	48 89 d6             	mov    %rdx,%rsi
    d834:	48 89 c7             	mov    %rax,%rdi
    d837:	e8 9e f8 ff ff       	call   d0da <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    d83c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
    d840:	48 83 c4 30          	add    $0x30,%rsp
    d844:	5b                   	pop    %rbx
    d845:	41 5c                	pop    %r12
    d847:	5d                   	pop    %rbp
    d848:	c3                   	ret
    d849:	90                   	nop

000000000000d84a <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    d84a:	55                   	push   %rbp
    d84b:	48 89 e5             	mov    %rsp,%rbp
    d84e:	48 83 ec 20          	sub    $0x20,%rsp
    d852:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d856:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d85a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    d85e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d862:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    d869:	00 
    d86a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d86e:	48 89 d6             	mov    %rdx,%rsi
    d871:	48 89 c7             	mov    %rax,%rdi
    d874:	e8 f7 59 ff ff       	call   3270 <_ZdlPvm@plt>
      }
    d879:	c9                   	leave
    d87a:	c3                   	ret

000000000000d87b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    d87b:	55                   	push   %rbp
    d87c:	48 89 e5             	mov    %rsp,%rbp
    d87f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d883:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d887:	90                   	nop
    d888:	5d                   	pop    %rbp
    d889:	c3                   	ret

000000000000d88a <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    d88a:	55                   	push   %rbp
    d88b:	48 89 e5             	mov    %rsp,%rbp
    d88e:	48 83 ec 20          	sub    $0x20,%rsp
    d892:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d896:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d89a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    d89e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d8a2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d8a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8aa:	48 89 ce             	mov    %rcx,%rsi
    d8ad:	48 89 c7             	mov    %rax,%rdi
    d8b0:	e8 3f 02 00 00       	call   daf4 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
    d8b5:	c9                   	leave
    d8b6:	c3                   	ret
    d8b7:	90                   	nop

000000000000d8b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
    d8b8:	55                   	push   %rbp
    d8b9:	48 89 e5             	mov    %rsp,%rbp
    d8bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    d8c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8c4:	5d                   	pop    %rbp
    d8c5:	c3                   	ret

000000000000d8c6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
    d8c6:	55                   	push   %rbp
    d8c7:	48 89 e5             	mov    %rsp,%rbp
    d8ca:	48 83 ec 10          	sub    $0x10,%rsp
    d8ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d8d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
    d8d6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d8da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8de:	48 89 d6             	mov    %rdx,%rsi
    d8e1:	48 89 c7             	mov    %rax,%rdi
    d8e4:	e8 73 02 00 00       	call   db5c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>
	}
    d8e9:	90                   	nop
    d8ea:	c9                   	leave
    d8eb:	c3                   	ret

000000000000d8ec <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    d8ec:	55                   	push   %rbp
    d8ed:	48 89 e5             	mov    %rsp,%rbp
    d8f0:	48 83 ec 20          	sub    $0x20,%rsp
    d8f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d8f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d8fc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    d900:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d904:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d908:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d90c:	48 89 ce             	mov    %rcx,%rsi
    d90f:	48 89 c7             	mov    %rax,%rdi
    d912:	e8 65 02 00 00       	call   db7c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
    d917:	90                   	nop
    d918:	c9                   	leave
    d919:	c3                   	ret

000000000000d91a <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
    d91a:	55                   	push   %rbp
    d91b:	48 89 e5             	mov    %rsp,%rbp
    d91e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
    d922:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d926:	5d                   	pop    %rbp
    d927:	c3                   	ret

000000000000d928 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
    d928:	55                   	push   %rbp
    d929:	48 89 e5             	mov    %rsp,%rbp
    d92c:	48 83 ec 10          	sub    $0x10,%rsp
    d930:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d934:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
    d938:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d93c:	48 89 c7             	mov    %rax,%rdi
    d93f:	e8 b6 f1 ff ff       	call   cafa <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    d944:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d948:	48 89 02             	mov    %rax,(%rdx)
    d94b:	90                   	nop
    d94c:	c9                   	leave
    d94d:	c3                   	ret

000000000000d94e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
    d94e:	55                   	push   %rbp
    d94f:	48 89 e5             	mov    %rsp,%rbp
    d952:	48 83 ec 10          	sub    $0x10,%rsp
    d956:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
    d95a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d95e:	48 89 c7             	mov    %rax,%rdi
    d961:	e8 52 ff ff ff       	call   d8b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    d966:	be 01 00 00 00       	mov    $0x1,%esi
    d96b:	48 89 c7             	mov    %rax,%rdi
    d96e:	e8 43 02 00 00       	call   dbb6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
    d973:	c9                   	leave
    d974:	c3                   	ret
    d975:	90                   	nop

000000000000d976 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
    d976:	55                   	push   %rbp
    d977:	48 89 e5             	mov    %rsp,%rbp
    d97a:	41 56                	push   %r14
    d97c:	41 55                	push   %r13
    d97e:	41 54                	push   %r12
    d980:	53                   	push   %rbx
    d981:	48 83 ec 30          	sub    $0x30,%rsp
    d985:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    d989:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    d98d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    d991:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    d995:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
    d999:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d99d:	48 89 c6             	mov    %rax,%rsi
    d9a0:	bf 48 00 00 00       	mov    $0x48,%edi
    d9a5:	e8 e0 6f ff ff       	call   498a <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
    d9aa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d9ae:	48 89 c7             	mov    %rax,%rdi
    d9b1:	e8 a1 f1 ff ff       	call   cb57 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    d9b6:	49 89 c6             	mov    %rax,%r14
    d9b9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d9bd:	48 89 c7             	mov    %rax,%rdi
    d9c0:	e8 84 f1 ff ff       	call   cb49 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    d9c5:	49 89 c5             	mov    %rax,%r13
    d9c8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d9cc:	48 89 c7             	mov    %rax,%rdi
    d9cf:	e8 67 f1 ff ff       	call   cb3b <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    d9d4:	49 89 c4             	mov    %rax,%r12
    d9d7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d9db:	48 89 c7             	mov    %rax,%rdi
    d9de:	e8 d1 f0 ff ff       	call   cab4 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    d9e3:	48 89 c3             	mov    %rax,%rbx
    d9e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d9ea:	48 89 c7             	mov    %rax,%rdi
    d9ed:	e8 c6 fe ff ff       	call   d8b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    d9f2:	4d 89 f0             	mov    %r14,%r8
    d9f5:	4c 89 e9             	mov    %r13,%rcx
    d9f8:	4c 89 e2             	mov    %r12,%rdx
    d9fb:	48 89 de             	mov    %rbx,%rsi
    d9fe:	48 89 c7             	mov    %rax,%rdi
    da01:	e8 da 01 00 00       	call   dbe0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
    da06:	eb 33                	jmp    da3b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
    da08:	48 89 c7             	mov    %rax,%rdi
    da0b:	e8 b0 56 ff ff       	call   30c0 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
    da10:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    da14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    da18:	48 89 d6             	mov    %rdx,%rsi
    da1b:	48 89 c7             	mov    %rax,%rdi
    da1e:	e8 dd f8 ff ff       	call   d300 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
    da23:	e8 b8 59 ff ff       	call   33e0 <__cxa_rethrow@plt>
	  __catch(...)
    da28:	48 89 c3             	mov    %rax,%rbx
    da2b:	e8 10 5a ff ff       	call   3440 <__cxa_end_catch@plt>
    da30:	48 89 d8             	mov    %rbx,%rax
    da33:	48 89 c7             	mov    %rax,%rdi
    da36:	e8 35 5a ff ff       	call   3470 <_Unwind_Resume@plt>
	}
    da3b:	48 83 c4 30          	add    $0x30,%rsp
    da3f:	5b                   	pop    %rbx
    da40:	41 5c                	pop    %r12
    da42:	41 5d                	pop    %r13
    da44:	41 5e                	pop    %r14
    da46:	5d                   	pop    %rbp
    da47:	c3                   	ret

000000000000da48 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    da48:	55                   	push   %rbp
    da49:	48 89 e5             	mov    %rsp,%rbp
    da4c:	48 83 ec 20          	sub    $0x20,%rsp
    da50:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
    da54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    da58:	48 8b 50 18          	mov    0x18(%rax),%rdx
    da5c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    da60:	48 89 d6             	mov    %rdx,%rsi
    da63:	48 89 c7             	mov    %rax,%rdi
    da66:	e8 6f f6 ff ff       	call   d0da <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    da6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da6f:	c9                   	leave
    da70:	c3                   	ret
    da71:	90                   	nop

000000000000da72 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
    da72:	55                   	push   %rbp
    da73:	48 89 e5             	mov    %rsp,%rbp
    da76:	48 83 ec 20          	sub    $0x20,%rsp
    da7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    da82:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    da86:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    da8a:	48 89 c7             	mov    %rax,%rdi
    da8d:	e8 ba 01 00 00       	call   dc4c <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
    da92:	48 8b 10             	mov    (%rax),%rdx
    da95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da99:	48 89 10             	mov    %rdx,(%rax)
    da9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    daa0:	48 89 c7             	mov    %rax,%rdi
    daa3:	e8 0e 00 00 00       	call   dab6 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    daa8:	48 8b 10             	mov    (%rax),%rdx
    daab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    daaf:	48 89 50 08          	mov    %rdx,0x8(%rax)
    dab3:	90                   	nop
    dab4:	c9                   	leave
    dab5:	c3                   	ret

000000000000dab6 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    dab6:	55                   	push   %rbp
    dab7:	48 89 e5             	mov    %rsp,%rbp
    daba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    dabe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dac2:	5d                   	pop    %rbp
    dac3:	c3                   	ret

000000000000dac4 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
    dac4:	55                   	push   %rbp
    dac5:	48 89 e5             	mov    %rsp,%rbp
    dac8:	48 83 ec 10          	sub    $0x10,%rsp
    dacc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    dad0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dad4:	48 83 c0 20          	add    $0x20,%rax
    dad8:	48 89 c7             	mov    %rax,%rdi
    dadb:	e8 7a 01 00 00       	call   dc5a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
    dae0:	c9                   	leave
    dae1:	c3                   	ret

000000000000dae2 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
    dae2:	55                   	push   %rbp
    dae3:	48 89 e5             	mov    %rsp,%rbp
    dae6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    daea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
    daee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    daf2:	5d                   	pop    %rbp
    daf3:	c3                   	ret

000000000000daf4 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
    daf4:	55                   	push   %rbp
    daf5:	48 89 e5             	mov    %rsp,%rbp
    daf8:	53                   	push   %rbx
    daf9:	48 83 ec 28          	sub    $0x28,%rsp
    dafd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    db01:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    db05:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    db09:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    db0d:	48 89 c7             	mov    %rax,%rdi
    db10:	e8 5f 01 00 00       	call   dc74 <_ZSt12__miter_baseIPKPKcET_S4_>
    db15:	48 89 c3             	mov    %rax,%rbx
    db18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    db1c:	48 89 c7             	mov    %rax,%rdi
    db1f:	e8 50 01 00 00       	call   dc74 <_ZSt12__miter_baseIPKPKcET_S4_>
    db24:	48 89 c1             	mov    %rax,%rcx
    db27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    db2b:	48 89 c2             	mov    %rax,%rdx
    db2e:	48 89 de             	mov    %rbx,%rsi
    db31:	48 89 cf             	mov    %rcx,%rdi
    db34:	e8 49 01 00 00       	call   dc82 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
    db39:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    db3d:	c9                   	leave
    db3e:	c3                   	ret
    db3f:	90                   	nop

000000000000db40 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
    db40:	55                   	push   %rbp
    db41:	48 89 e5             	mov    %rsp,%rbp
    db44:	48 83 ec 10          	sub    $0x10,%rsp
    db48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db50:	48 89 c7             	mov    %rax,%rdi
    db53:	e8 d8 55 ff ff       	call   3130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    db58:	90                   	nop
    db59:	c9                   	leave
    db5a:	c3                   	ret
    db5b:	90                   	nop

000000000000db5c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>:
	destroy(_Up* __p)
    db5c:	55                   	push   %rbp
    db5d:	48 89 e5             	mov    %rsp,%rbp
    db60:	48 83 ec 10          	sub    $0x10,%rsp
    db64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
    db6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    db70:	48 89 c7             	mov    %rax,%rdi
    db73:	e8 c8 ff ff ff       	call   db40 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
    db78:	90                   	nop
    db79:	c9                   	leave
    db7a:	c3                   	ret
    db7b:	90                   	nop

000000000000db7c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    db7c:	55                   	push   %rbp
    db7d:	48 89 e5             	mov    %rsp,%rbp
    db80:	48 83 ec 20          	sub    $0x20,%rsp
    db84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db88:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    db8c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    db90:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    db94:	48 89 d0             	mov    %rdx,%rax
    db97:	48 c1 e0 03          	shl    $0x3,%rax
    db9b:	48 01 d0             	add    %rdx,%rax
    db9e:	48 c1 e0 03          	shl    $0x3,%rax
    dba2:	48 89 c2             	mov    %rax,%rdx
    dba5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dba9:	48 89 d6             	mov    %rdx,%rsi
    dbac:	48 89 c7             	mov    %rax,%rdi
    dbaf:	e8 bc 56 ff ff       	call   3270 <_ZdlPvm@plt>
      }
    dbb4:	c9                   	leave
    dbb5:	c3                   	ret

000000000000dbb6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
    dbb6:	55                   	push   %rbp
    dbb7:	48 89 e5             	mov    %rsp,%rbp
    dbba:	48 83 ec 10          	sub    $0x10,%rsp
    dbbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dbc2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    dbc6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dbca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbce:	ba 00 00 00 00       	mov    $0x0,%edx
    dbd3:	48 89 ce             	mov    %rcx,%rsi
    dbd6:	48 89 c7             	mov    %rax,%rdi
    dbd9:	e8 0e 01 00 00       	call   dcec <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
    dbde:	c9                   	leave
    dbdf:	c3                   	ret

000000000000dbe0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    dbe0:	55                   	push   %rbp
    dbe1:	48 89 e5             	mov    %rsp,%rbp
    dbe4:	41 54                	push   %r12
    dbe6:	53                   	push   %rbx
    dbe7:	48 83 ec 30          	sub    $0x30,%rsp
    dbeb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dbef:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    dbf3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    dbf7:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    dbfb:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    dbff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    dc03:	48 89 c7             	mov    %rax,%rdi
    dc06:	e8 4c ef ff ff       	call   cb57 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    dc0b:	49 89 c4             	mov    %rax,%r12
    dc0e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dc12:	48 89 c7             	mov    %rax,%rdi
    dc15:	e8 2f ef ff ff       	call   cb49 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    dc1a:	48 89 c3             	mov    %rax,%rbx
    dc1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dc21:	48 89 c7             	mov    %rax,%rdi
    dc24:	e8 12 ef ff ff       	call   cb3b <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    dc29:	48 89 c2             	mov    %rax,%rdx
    dc2c:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    dc30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dc34:	4d 89 e0             	mov    %r12,%r8
    dc37:	48 89 d9             	mov    %rbx,%rcx
    dc3a:	48 89 c7             	mov    %rax,%rdi
    dc3d:	e8 3c 01 00 00       	call   dd7e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>
	}
    dc42:	90                   	nop
    dc43:	48 83 c4 30          	add    $0x30,%rsp
    dc47:	5b                   	pop    %rbx
    dc48:	41 5c                	pop    %r12
    dc4a:	5d                   	pop    %rbp
    dc4b:	c3                   	ret

000000000000dc4c <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    dc4c:	55                   	push   %rbp
    dc4d:	48 89 e5             	mov    %rsp,%rbp
    dc50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    dc54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc58:	5d                   	pop    %rbp
    dc59:	c3                   	ret

000000000000dc5a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
    dc5a:	55                   	push   %rbp
    dc5b:	48 89 e5             	mov    %rsp,%rbp
    dc5e:	48 83 ec 10          	sub    $0x10,%rsp
    dc62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
    dc66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc6a:	48 89 c7             	mov    %rax,%rdi
    dc6d:	e8 bc 01 00 00       	call   de2e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
    dc72:	c9                   	leave
    dc73:	c3                   	ret

000000000000dc74 <_ZSt12__miter_baseIPKPKcET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    dc74:	55                   	push   %rbp
    dc75:	48 89 e5             	mov    %rsp,%rbp
    dc78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    dc7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc80:	5d                   	pop    %rbp
    dc81:	c3                   	ret

000000000000dc82 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    dc82:	55                   	push   %rbp
    dc83:	48 89 e5             	mov    %rsp,%rbp
    dc86:	41 54                	push   %r12
    dc88:	53                   	push   %rbx
    dc89:	48 83 ec 20          	sub    $0x20,%rsp
    dc8d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dc91:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    dc95:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    dc99:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dc9d:	48 89 c7             	mov    %rax,%rdi
    dca0:	e8 6f a9 ff ff       	call   8614 <_ZSt12__niter_baseIPPKcET_S3_>
    dca5:	49 89 c4             	mov    %rax,%r12
    dca8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dcac:	48 89 c7             	mov    %rax,%rdi
    dcaf:	e8 88 01 00 00       	call   de3c <_ZSt12__niter_baseIPKPKcET_S4_>
    dcb4:	48 89 c3             	mov    %rax,%rbx
    dcb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dcbb:	48 89 c7             	mov    %rax,%rdi
    dcbe:	e8 79 01 00 00       	call   de3c <_ZSt12__niter_baseIPKPKcET_S4_>
    dcc3:	4c 89 e2             	mov    %r12,%rdx
    dcc6:	48 89 de             	mov    %rbx,%rsi
    dcc9:	48 89 c7             	mov    %rax,%rdi
    dccc:	e8 79 01 00 00       	call   de4a <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    dcd1:	48 89 c2             	mov    %rax,%rdx
    dcd4:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    dcd8:	48 89 d6             	mov    %rdx,%rsi
    dcdb:	48 89 c7             	mov    %rax,%rdi
    dcde:	e8 94 01 00 00       	call   de77 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
    dce3:	48 83 c4 20          	add    $0x20,%rsp
    dce7:	5b                   	pop    %rbx
    dce8:	41 5c                	pop    %r12
    dcea:	5d                   	pop    %rbp
    dceb:	c3                   	ret

000000000000dcec <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    dcec:	55                   	push   %rbp
    dced:	48 89 e5             	mov    %rsp,%rbp
    dcf0:	48 83 ec 20          	sub    $0x20,%rsp
    dcf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dcf8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dcfc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    dd00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd04:	48 89 c7             	mov    %rax,%rdi
    dd07:	e8 7e 01 00 00       	call   de8a <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
    dd0c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    dd10:	0f 92 c0             	setb   %al
    dd13:	0f b6 c0             	movzbl %al,%eax
    dd16:	48 85 c0             	test   %rax,%rax
    dd19:	0f 95 c0             	setne  %al
    dd1c:	84 c0                	test   %al,%al
    dd1e:	74 1a                	je     dd3a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    dd20:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
    dd27:	38 8e 03 
    dd2a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    dd2e:	73 05                	jae    dd35 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    dd30:	e8 6b 54 ff ff       	call   31a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    dd35:	e8 56 53 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    dd3a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dd3e:	48 89 d0             	mov    %rdx,%rax
    dd41:	48 c1 e0 03          	shl    $0x3,%rax
    dd45:	48 01 d0             	add    %rdx,%rax
    dd48:	48 c1 e0 03          	shl    $0x3,%rax
    dd4c:	48 89 c7             	mov    %rax,%rdi
    dd4f:	e8 0c 55 ff ff       	call   3260 <_Znwm@plt>
    dd54:	90                   	nop
      }
    dd55:	c9                   	leave
    dd56:	c3                   	ret
    dd57:	90                   	nop

000000000000dd58 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
    dd58:	55                   	push   %rbp
    dd59:	48 89 e5             	mov    %rsp,%rbp
    dd5c:	48 83 ec 10          	sub    $0x10,%rsp
    dd60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dd64:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dd68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd6c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dd70:	48 89 d6             	mov    %rdx,%rsi
    dd73:	48 89 c7             	mov    %rax,%rdi
    dd76:	e8 23 01 00 00       	call   de9e <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
    dd7b:	90                   	nop
    dd7c:	c9                   	leave
    dd7d:	c3                   	ret

000000000000dd7e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    dd7e:	55                   	push   %rbp
    dd7f:	48 89 e5             	mov    %rsp,%rbp
    dd82:	41 56                	push   %r14
    dd84:	41 55                	push   %r13
    dd86:	41 54                	push   %r12
    dd88:	53                   	push   %rbx
    dd89:	48 83 ec 40          	sub    $0x40,%rsp
    dd8d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    dd91:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    dd95:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    dd99:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    dd9d:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    dda1:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
    dda5:	48 89 de             	mov    %rbx,%rsi
    dda8:	bf 28 00 00 00       	mov    $0x28,%edi
    ddad:	e8 d8 6b ff ff       	call   498a <_ZnwmPv>
    ddb2:	49 89 c4             	mov    %rax,%r12
    ddb5:	41 be 01 00 00 00    	mov    $0x1,%r14d
    ddbb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ddbf:	48 89 c7             	mov    %rax,%rdi
    ddc2:	e8 90 ed ff ff       	call   cb57 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    ddc7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ddcb:	48 89 c7             	mov    %rax,%rdi
    ddce:	e8 76 ed ff ff       	call   cb49 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    ddd3:	48 89 c2             	mov    %rax,%rdx
    ddd6:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    ddda:	48 89 d6             	mov    %rdx,%rsi
    dddd:	48 89 c7             	mov    %rax,%rdi
    dde0:	e8 73 ff ff ff       	call   dd58 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
    dde5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dde9:	48 89 c7             	mov    %rax,%rdi
    ddec:	e8 4a ed ff ff       	call   cb3b <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    ddf1:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    ddf5:	48 89 c6             	mov    %rax,%rsi
    ddf8:	4c 89 e7             	mov    %r12,%rdi
    ddfb:	e8 bc 00 00 00       	call   debc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
    de00:	eb 1e                	jmp    de20 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0xa2>
    de02:	49 89 c5             	mov    %rax,%r13
    de05:	45 84 f6             	test   %r14b,%r14b
    de08:	74 0b                	je     de15 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0x97>
    de0a:	48 89 de             	mov    %rbx,%rsi
    de0d:	4c 89 e7             	mov    %r12,%rdi
    de10:	e8 b8 d2 ff ff       	call   b0cd <_ZdlPvS_>
    de15:	4c 89 e8             	mov    %r13,%rax
    de18:	48 89 c7             	mov    %rax,%rdi
    de1b:	e8 50 56 ff ff       	call   3470 <_Unwind_Resume@plt>
    de20:	48 83 c4 40          	add    $0x40,%rsp
    de24:	5b                   	pop    %rbx
    de25:	41 5c                	pop    %r12
    de27:	41 5d                	pop    %r13
    de29:	41 5e                	pop    %r14
    de2b:	5d                   	pop    %rbp
    de2c:	c3                   	ret
    de2d:	90                   	nop

000000000000de2e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
    de2e:	55                   	push   %rbp
    de2f:	48 89 e5             	mov    %rsp,%rbp
    de32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
    de36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de3a:	5d                   	pop    %rbp
    de3b:	c3                   	ret

000000000000de3c <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
    de3c:	55                   	push   %rbp
    de3d:	48 89 e5             	mov    %rsp,%rbp
    de40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    de44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de48:	5d                   	pop    %rbp
    de49:	c3                   	ret

000000000000de4a <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    de4a:	55                   	push   %rbp
    de4b:	48 89 e5             	mov    %rsp,%rbp
    de4e:	48 83 ec 20          	sub    $0x20,%rsp
    de52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    de56:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    de5a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    de5e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    de62:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    de66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de6a:	48 89 ce             	mov    %rcx,%rsi
    de6d:	48 89 c7             	mov    %rax,%rdi
    de70:	e8 71 00 00 00       	call   dee6 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    de75:	c9                   	leave
    de76:	c3                   	ret

000000000000de77 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    de77:	55                   	push   %rbp
    de78:	48 89 e5             	mov    %rsp,%rbp
    de7b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    de7f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    de83:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    de87:	5d                   	pop    %rbp
    de88:	c3                   	ret
    de89:	90                   	nop

000000000000de8a <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    de8a:	55                   	push   %rbp
    de8b:	48 89 e5             	mov    %rsp,%rbp
    de8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    de92:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
    de99:	1c c7 01 
      }
    de9c:	5d                   	pop    %rbp
    de9d:	c3                   	ret

000000000000de9e <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
    de9e:	55                   	push   %rbp
    de9f:	48 89 e5             	mov    %rsp,%rbp
    dea2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dea6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
    deaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    deae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    deb2:	48 8b 12             	mov    (%rdx),%rdx
    deb5:	48 89 10             	mov    %rdx,(%rax)
      { }
    deb8:	90                   	nop
    deb9:	5d                   	pop    %rbp
    deba:	c3                   	ret
    debb:	90                   	nop

000000000000debc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
    debc:	55                   	push   %rbp
    debd:	48 89 e5             	mov    %rsp,%rbp
    dec0:	48 83 ec 20          	sub    $0x20,%rsp
    dec4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dec8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
    decc:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    ded0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ded4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ded8:	48 89 ce             	mov    %rcx,%rsi
    dedb:	48 89 c7             	mov    %rax,%rdi
    dede:	e8 31 00 00 00       	call   df14 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
    dee3:	90                   	nop
    dee4:	c9                   	leave
    dee5:	c3                   	ret

000000000000dee6 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    dee6:	55                   	push   %rbp
    dee7:	48 89 e5             	mov    %rsp,%rbp
    deea:	48 83 ec 20          	sub    $0x20,%rsp
    deee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    def2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    def6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    defa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    defe:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    df02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df06:	48 89 ce             	mov    %rcx,%rsi
    df09:	48 89 c7             	mov    %rax,%rdi
    df0c:	e8 4d 00 00 00       	call   df5e <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
    df11:	c9                   	leave
    df12:	c3                   	ret
    df13:	90                   	nop

000000000000df14 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
    df14:	55                   	push   %rbp
    df15:	48 89 e5             	mov    %rsp,%rbp
    df18:	53                   	push   %rbx
    df19:	48 83 ec 28          	sub    $0x28,%rsp
    df1d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    df21:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    df25:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
    df29:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    df2d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    df31:	48 89 c7             	mov    %rax,%rdi
    df34:	e8 84 00 00 00       	call   dfbd <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
    df39:	48 89 c7             	mov    %rax,%rdi
    df3c:	e8 96 00 00 00       	call   dfd7 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
    df41:	48 89 c6             	mov    %rax,%rsi
    df44:	48 89 df             	mov    %rbx,%rdi
    df47:	e8 d4 51 ff ff       	call   3120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
    df4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df50:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
    df57:	90                   	nop
    df58:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    df5c:	c9                   	leave
    df5d:	c3                   	ret

000000000000df5e <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    df5e:	55                   	push   %rbp
    df5f:	48 89 e5             	mov    %rsp,%rbp
    df62:	48 83 ec 30          	sub    $0x30,%rsp
    df66:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    df6a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    df6e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    df72:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    df76:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    df7a:	48 c1 f8 03          	sar    $0x3,%rax
    df7e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    df82:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    df87:	74 1f                	je     dfa8 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    df89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df8d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    df94:	00 
    df95:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    df99:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    df9d:	48 89 ce             	mov    %rcx,%rsi
    dfa0:	48 89 c7             	mov    %rax,%rdi
    dfa3:	e8 88 54 ff ff       	call   3430 <memmove@plt>
	  return __result + _Num;
    dfa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dfac:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    dfb3:	00 
    dfb4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dfb8:	48 01 d0             	add    %rdx,%rax
	}
    dfbb:	c9                   	leave
    dfbc:	c3                   	ret

000000000000dfbd <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
    dfbd:	55                   	push   %rbp
    dfbe:	48 89 e5             	mov    %rsp,%rbp
    dfc1:	48 83 ec 10          	sub    $0x10,%rsp
    dfc5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    dfc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dfcd:	48 89 c7             	mov    %rax,%rdi
    dfd0:	e8 10 00 00 00       	call   dfe5 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
    dfd5:	c9                   	leave
    dfd6:	c3                   	ret

000000000000dfd7 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    dfd7:	55                   	push   %rbp
    dfd8:	48 89 e5             	mov    %rsp,%rbp
    dfdb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    dfdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dfe3:	5d                   	pop    %rbp
    dfe4:	c3                   	ret

000000000000dfe5 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    dfe5:	55                   	push   %rbp
    dfe6:	48 89 e5             	mov    %rsp,%rbp
    dfe9:	48 83 ec 10          	sub    $0x10,%rsp
    dfed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    dff1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dff5:	48 89 c7             	mov    %rax,%rdi
    dff8:	e8 02 00 00 00       	call   dfff <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
    dffd:	c9                   	leave
    dffe:	c3                   	ret

000000000000dfff <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    dfff:	55                   	push   %rbp
    e000:	48 89 e5             	mov    %rsp,%rbp
    e003:	48 83 ec 10          	sub    $0x10,%rsp
    e007:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e00b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e00f:	48 89 c7             	mov    %rax,%rdi
    e012:	e8 02 00 00 00       	call   e019 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
    e017:	c9                   	leave
    e018:	c3                   	ret

000000000000e019 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    e019:	55                   	push   %rbp
    e01a:	48 89 e5             	mov    %rsp,%rbp
    e01d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e021:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e025:	48 8b 00             	mov    (%rax),%rax
    e028:	5d                   	pop    %rbp
    e029:	c3                   	ret

000000000000e02a <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
    e02a:	55                   	push   %rbp
    e02b:	48 89 e5             	mov    %rsp,%rbp
    e02e:	48 83 ec 10          	sub    $0x10,%rsp
    e032:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e036:	48 8d 15 a3 cc 00 00 	lea    0xcca3(%rip),%rdx        # 1ace0 <_ZTVSt19bad_optional_access+0x10>
    e03d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e041:	48 89 10             	mov    %rdx,(%rax)
    e044:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e048:	48 89 c7             	mov    %rax,%rdi
    e04b:	e8 50 54 ff ff       	call   34a0 <_ZNSt9exceptionD2Ev@plt>
    e050:	90                   	nop
    e051:	c9                   	leave
    e052:	c3                   	ret
    e053:	90                   	nop

000000000000e054 <_ZNSt19bad_optional_accessD0Ev>:
    e054:	55                   	push   %rbp
    e055:	48 89 e5             	mov    %rsp,%rbp
    e058:	48 83 ec 10          	sub    $0x10,%rsp
    e05c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e060:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e064:	48 89 c7             	mov    %rax,%rdi
    e067:	e8 be ff ff ff       	call   e02a <_ZNSt19bad_optional_accessD1Ev>
    e06c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e070:	be 08 00 00 00       	mov    $0x8,%esi
    e075:	48 89 c7             	mov    %rax,%rdi
    e078:	e8 f3 51 ff ff       	call   3270 <_ZdlPvm@plt>
    e07d:	c9                   	leave
    e07e:	c3                   	ret

Disassembly of section .fini:

000000000000e080 <_fini>:
    e080:	48 83 ec 08          	sub    $0x8,%rsp
    e084:	48 83 c4 08          	add    $0x8,%rsp
    e088:	c3                   	ret
