
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000004000 <_init>:
    4000:	48 83 ec 08          	sub    $0x8,%rsp
    4004:	48 8b 05 ad cf 02 00 	mov    0x2cfad(%rip),%rax        # 30fb8 <__gmon_start__@Base>
    400b:	48 85 c0             	test   %rax,%rax
    400e:	74 02                	je     4012 <_init+0x12>
    4010:	ff d0                	call   *%rax
    4012:	48 83 c4 08          	add    $0x8,%rsp
    4016:	c3                   	ret

Disassembly of section .plt:

0000000000004020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    4020:	ff 35 ca cf 02 00    	push   0x2cfca(%rip)        # 30ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    4026:	ff 25 cc cf 02 00    	jmp    *0x2cfcc(%rip)        # 30ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    402c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    4030:	ff 25 ca cf 02 00    	jmp    *0x2cfca(%rip)        # 31000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    4036:	68 00 00 00 00       	push   $0x0
    403b:	e9 e0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>:
    4040:	ff 25 c2 cf 02 00    	jmp    *0x2cfc2(%rip)        # 31008 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@GLIBCXX_3.4.21>
    4046:	68 01 00 00 00       	push   $0x1
    404b:	e9 d0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004050 <vkCmdEndRenderPass@plt>:
    4050:	ff 25 ba cf 02 00    	jmp    *0x2cfba(%rip)        # 31010 <vkCmdEndRenderPass@Base>
    4056:	68 02 00 00 00       	push   $0x2
    405b:	e9 c0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004060 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    4060:	ff 25 b2 cf 02 00    	jmp    *0x2cfb2(%rip)        # 31018 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    4066:	68 03 00 00 00       	push   $0x3
    406b:	e9 b0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004070 <_ZNSaIcED2Ev@plt>:
    4070:	ff 25 aa cf 02 00    	jmp    *0x2cfaa(%rip)        # 31020 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    4076:	68 04 00 00 00       	push   $0x4
    407b:	e9 a0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004080 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>:
    4080:	ff 25 a2 cf 02 00    	jmp    *0x2cfa2(%rip)        # 31028 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@GLIBCXX_3.4>
    4086:	68 05 00 00 00       	push   $0x5
    408b:	e9 90 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004090 <vkGetBufferMemoryRequirements@plt>:
    4090:	ff 25 9a cf 02 00    	jmp    *0x2cf9a(%rip)        # 31030 <vkGetBufferMemoryRequirements@Base>
    4096:	68 06 00 00 00       	push   $0x6
    409b:	e9 80 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040a0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>:
    40a0:	ff 25 92 cf 02 00    	jmp    *0x2cf92(%rip)        # 31038 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    40a6:	68 07 00 00 00       	push   $0x7
    40ab:	e9 70 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040b0 <_ZNSolsEm@plt>:
    40b0:	ff 25 8a cf 02 00    	jmp    *0x2cf8a(%rip)        # 31040 <_ZNSolsEm@GLIBCXX_3.4>
    40b6:	68 08 00 00 00       	push   $0x8
    40bb:	e9 60 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040c0 <vkDeviceWaitIdle@plt>:
    40c0:	ff 25 82 cf 02 00    	jmp    *0x2cf82(%rip)        # 31048 <vkDeviceWaitIdle@Base>
    40c6:	68 09 00 00 00       	push   $0x9
    40cb:	e9 50 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040d0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>:
    40d0:	ff 25 7a cf 02 00    	jmp    *0x2cf7a(%rip)        # 31050 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    40d6:	68 0a 00 00 00       	push   $0xa
    40db:	e9 40 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040e0 <vkDestroySwapchainKHR@plt>:
    40e0:	ff 25 72 cf 02 00    	jmp    *0x2cf72(%rip)        # 31058 <vkDestroySwapchainKHR@Base>
    40e6:	68 0b 00 00 00       	push   $0xb
    40eb:	e9 30 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040f0 <vkDestroySemaphore@plt>:
    40f0:	ff 25 6a cf 02 00    	jmp    *0x2cf6a(%rip)        # 31060 <vkDestroySemaphore@Base>
    40f6:	68 0c 00 00 00       	push   $0xc
    40fb:	e9 20 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004100 <glfwDestroyWindow@plt>:
    4100:	ff 25 62 cf 02 00    	jmp    *0x2cf62(%rip)        # 31068 <glfwDestroyWindow@Base>
    4106:	68 0d 00 00 00       	push   $0xd
    410b:	e9 10 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004110 <_ZSt17__throw_bad_allocv@plt>:
    4110:	ff 25 5a cf 02 00    	jmp    *0x2cf5a(%rip)        # 31070 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    4116:	68 0e 00 00 00       	push   $0xe
    411b:	e9 00 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004120 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>:
    4120:	ff 25 52 cf 02 00    	jmp    *0x2cf52(%rip)        # 31078 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@GLIBCXX_3.4.21>
    4126:	68 0f 00 00 00       	push   $0xf
    412b:	e9 f0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004130 <_ZNSt13runtime_errorC1EPKc@plt>:
    4130:	ff 25 4a cf 02 00    	jmp    *0x2cf4a(%rip)        # 31080 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    4136:	68 10 00 00 00       	push   $0x10
    413b:	e9 e0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004140 <vkGetPhysicalDeviceProperties@plt>:
    4140:	ff 25 42 cf 02 00    	jmp    *0x2cf42(%rip)        # 31088 <vkGetPhysicalDeviceProperties@Base>
    4146:	68 11 00 00 00       	push   $0x11
    414b:	e9 d0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004150 <vkCmdDrawIndexed@plt>:
    4150:	ff 25 3a cf 02 00    	jmp    *0x2cf3a(%rip)        # 31090 <vkCmdDrawIndexed@Base>
    4156:	68 12 00 00 00       	push   $0x12
    415b:	e9 c0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004160 <__cxa_begin_catch@plt>:
    4160:	ff 25 32 cf 02 00    	jmp    *0x2cf32(%rip)        # 31098 <__cxa_begin_catch@CXXABI_1.3>
    4166:	68 13 00 00 00       	push   $0x13
    416b:	e9 b0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004170 <vkAcquireNextImageKHR@plt>:
    4170:	ff 25 2a cf 02 00    	jmp    *0x2cf2a(%rip)        # 310a0 <vkAcquireNextImageKHR@Base>
    4176:	68 14 00 00 00       	push   $0x14
    417b:	e9 a0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004180 <vkCreateCommandPool@plt>:
    4180:	ff 25 22 cf 02 00    	jmp    *0x2cf22(%rip)        # 310a8 <vkCreateCommandPool@Base>
    4186:	68 15 00 00 00       	push   $0x15
    418b:	e9 90 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004190 <strlen@plt>:
    4190:	ff 25 1a cf 02 00    	jmp    *0x2cf1a(%rip)        # 310b0 <strlen@GLIBC_2.2.5>
    4196:	68 16 00 00 00       	push   $0x16
    419b:	e9 80 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041a0 <memcmp@plt>:
    41a0:	ff 25 12 cf 02 00    	jmp    *0x2cf12(%rip)        # 310b8 <memcmp@GLIBC_2.2.5>
    41a6:	68 17 00 00 00       	push   $0x17
    41ab:	e9 70 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041b0 <vkCreateGraphicsPipelines@plt>:
    41b0:	ff 25 0a cf 02 00    	jmp    *0x2cf0a(%rip)        # 310c0 <vkCreateGraphicsPipelines@Base>
    41b6:	68 18 00 00 00       	push   $0x18
    41bb:	e9 60 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041c0 <__cxa_allocate_exception@plt>:
    41c0:	ff 25 02 cf 02 00    	jmp    *0x2cf02(%rip)        # 310c8 <__cxa_allocate_exception@CXXABI_1.3>
    41c6:	68 19 00 00 00       	push   $0x19
    41cb:	e9 50 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041d0 <vkDestroyBuffer@plt>:
    41d0:	ff 25 fa ce 02 00    	jmp    *0x2cefa(%rip)        # 310d0 <vkDestroyBuffer@Base>
    41d6:	68 1a 00 00 00       	push   $0x1a
    41db:	e9 40 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041e0 <glfwSetWindowUserPointer@plt>:
    41e0:	ff 25 f2 ce 02 00    	jmp    *0x2cef2(%rip)        # 310d8 <glfwSetWindowUserPointer@Base>
    41e6:	68 1b 00 00 00       	push   $0x1b
    41eb:	e9 30 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041f0 <_ZSt20__throw_length_errorPKc@plt>:
    41f0:	ff 25 ea ce 02 00    	jmp    *0x2ceea(%rip)        # 310e0 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    41f6:	68 1c 00 00 00       	push   $0x1c
    41fb:	e9 20 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004200 <vkEnumeratePhysicalDevices@plt>:
    4200:	ff 25 e2 ce 02 00    	jmp    *0x2cee2(%rip)        # 310e8 <vkEnumeratePhysicalDevices@Base>
    4206:	68 1d 00 00 00       	push   $0x1d
    420b:	e9 10 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004210 <memset@plt>:
    4210:	ff 25 da ce 02 00    	jmp    *0x2ceda(%rip)        # 310f0 <memset@GLIBC_2.2.5>
    4216:	68 1e 00 00 00       	push   $0x1e
    421b:	e9 00 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004220 <_ZNSaIcEC1ERKS_@plt>:
    4220:	ff 25 d2 ce 02 00    	jmp    *0x2ced2(%rip)        # 310f8 <_ZNSaIcEC1ERKS_@GLIBCXX_3.4>
    4226:	68 1f 00 00 00       	push   $0x1f
    422b:	e9 f0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004230 <vkWaitForFences@plt>:
    4230:	ff 25 ca ce 02 00    	jmp    *0x2ceca(%rip)        # 31100 <vkWaitForFences@Base>
    4236:	68 20 00 00 00       	push   $0x20
    423b:	e9 e0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004240 <glfwWaitEvents@plt>:
    4240:	ff 25 c2 ce 02 00    	jmp    *0x2cec2(%rip)        # 31108 <glfwWaitEvents@Base>
    4246:	68 21 00 00 00       	push   $0x21
    424b:	e9 d0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004250 <vkGetSwapchainImagesKHR@plt>:
    4250:	ff 25 ba ce 02 00    	jmp    *0x2ceba(%rip)        # 31110 <vkGetSwapchainImagesKHR@Base>
    4256:	68 22 00 00 00       	push   $0x22
    425b:	e9 c0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>:
    4260:	ff 25 b2 ce 02 00    	jmp    *0x2ceb2(%rip)        # 31118 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@GLIBCXX_3.4.21>
    4266:	68 23 00 00 00       	push   $0x23
    426b:	e9 b0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    4270:	ff 25 aa ce 02 00    	jmp    *0x2ceaa(%rip)        # 31120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    4276:	68 24 00 00 00       	push   $0x24
    427b:	e9 a0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004280 <vkCreateRenderPass@plt>:
    4280:	ff 25 a2 ce 02 00    	jmp    *0x2cea2(%rip)        # 31128 <vkCreateRenderPass@Base>
    4286:	68 25 00 00 00       	push   $0x25
    428b:	e9 90 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    4290:	ff 25 9a ce 02 00    	jmp    *0x2ce9a(%rip)        # 31130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    4296:	68 26 00 00 00       	push   $0x26
    429b:	e9 80 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042a0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    42a0:	ff 25 92 ce 02 00    	jmp    *0x2ce92(%rip)        # 31138 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    42a6:	68 27 00 00 00       	push   $0x27
    42ab:	e9 70 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>:
    42b0:	ff 25 8a ce 02 00    	jmp    *0x2ce8a(%rip)        # 31140 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@GLIBCXX_3.4.21>
    42b6:	68 28 00 00 00       	push   $0x28
    42bb:	e9 60 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042c0 <_ZSt19__throw_logic_errorPKc@plt>:
    42c0:	ff 25 82 ce 02 00    	jmp    *0x2ce82(%rip)        # 31148 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    42c6:	68 29 00 00 00       	push   $0x29
    42cb:	e9 50 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042d0 <__cxa_free_exception@plt>:
    42d0:	ff 25 7a ce 02 00    	jmp    *0x2ce7a(%rip)        # 31150 <__cxa_free_exception@CXXABI_1.3>
    42d6:	68 2a 00 00 00       	push   $0x2a
    42db:	e9 40 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042e0 <vkFreeCommandBuffers@plt>:
    42e0:	ff 25 72 ce 02 00    	jmp    *0x2ce72(%rip)        # 31158 <vkFreeCommandBuffers@Base>
    42e6:	68 2b 00 00 00       	push   $0x2b
    42eb:	e9 30 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042f0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    42f0:	ff 25 6a ce 02 00    	jmp    *0x2ce6a(%rip)        # 31160 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    42f6:	68 2c 00 00 00       	push   $0x2c
    42fb:	e9 20 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004300 <glfwGetRequiredInstanceExtensions@plt>:
    4300:	ff 25 62 ce 02 00    	jmp    *0x2ce62(%rip)        # 31168 <glfwGetRequiredInstanceExtensions@Base>
    4306:	68 2d 00 00 00       	push   $0x2d
    430b:	e9 10 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004310 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    4310:	ff 25 5a ce 02 00    	jmp    *0x2ce5a(%rip)        # 31170 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    4316:	68 2e 00 00 00       	push   $0x2e
    431b:	e9 00 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004320 <vkCreateShaderModule@plt>:
    4320:	ff 25 52 ce 02 00    	jmp    *0x2ce52(%rip)        # 31178 <vkCreateShaderModule@Base>
    4326:	68 2f 00 00 00       	push   $0x2f
    432b:	e9 f0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004330 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    4330:	ff 25 4a ce 02 00    	jmp    *0x2ce4a(%rip)        # 31180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    4336:	68 30 00 00 00       	push   $0x30
    433b:	e9 e0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004340 <vkUnmapMemory@plt>:
    4340:	ff 25 42 ce 02 00    	jmp    *0x2ce42(%rip)        # 31188 <vkUnmapMemory@Base>
    4346:	68 31 00 00 00       	push   $0x31
    434b:	e9 d0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004350 <memcpy@plt>:
    4350:	ff 25 3a ce 02 00    	jmp    *0x2ce3a(%rip)        # 31190 <memcpy@GLIBC_2.14>
    4356:	68 32 00 00 00       	push   $0x32
    435b:	e9 c0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004360 <vkDestroyDevice@plt>:
    4360:	ff 25 32 ce 02 00    	jmp    *0x2ce32(%rip)        # 31198 <vkDestroyDevice@Base>
    4366:	68 33 00 00 00       	push   $0x33
    436b:	e9 b0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004370 <vkCreatePipelineLayout@plt>:
    4370:	ff 25 2a ce 02 00    	jmp    *0x2ce2a(%rip)        # 311a0 <vkCreatePipelineLayout@Base>
    4376:	68 34 00 00 00       	push   $0x34
    437b:	e9 a0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004380 <vkEnumerateInstanceExtensionProperties@plt>:
    4380:	ff 25 22 ce 02 00    	jmp    *0x2ce22(%rip)        # 311a8 <vkEnumerateInstanceExtensionProperties@Base>
    4386:	68 35 00 00 00       	push   $0x35
    438b:	e9 90 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004390 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    4390:	ff 25 1a ce 02 00    	jmp    *0x2ce1a(%rip)        # 311b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    4396:	68 36 00 00 00       	push   $0x36
    439b:	e9 80 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043a0 <glfwWindowHint@plt>:
    43a0:	ff 25 12 ce 02 00    	jmp    *0x2ce12(%rip)        # 311b8 <glfwWindowHint@Base>
    43a6:	68 37 00 00 00       	push   $0x37
    43ab:	e9 70 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043b0 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>:
    43b0:	ff 25 0a ce 02 00    	jmp    *0x2ce0a(%rip)        # 311c0 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@Base>
    43b6:	68 38 00 00 00       	push   $0x38
    43bb:	e9 60 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043c0 <vkCmdBindPipeline@plt>:
    43c0:	ff 25 02 ce 02 00    	jmp    *0x2ce02(%rip)        # 311c8 <vkCmdBindPipeline@Base>
    43c6:	68 39 00 00 00       	push   $0x39
    43cb:	e9 50 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043d0 <__cxa_atexit@plt>:
    43d0:	ff 25 fa cd 02 00    	jmp    *0x2cdfa(%rip)        # 311d0 <__cxa_atexit@GLIBC_2.2.5>
    43d6:	68 3a 00 00 00       	push   $0x3a
    43db:	e9 40 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043e0 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>:
    43e0:	ff 25 f2 cd 02 00    	jmp    *0x2cdf2(%rip)        # 311d8 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@GLIBCXX_3.4.21>
    43e6:	68 3b 00 00 00       	push   $0x3b
    43eb:	e9 30 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043f0 <vkMapMemory@plt>:
    43f0:	ff 25 ea cd 02 00    	jmp    *0x2cdea(%rip)        # 311e0 <vkMapMemory@Base>
    43f6:	68 3c 00 00 00       	push   $0x3c
    43fb:	e9 20 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004400 <vkFreeMemory@plt>:
    4400:	ff 25 e2 cd 02 00    	jmp    *0x2cde2(%rip)        # 311e8 <vkFreeMemory@Base>
    4406:	68 3d 00 00 00       	push   $0x3d
    440b:	e9 10 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004410 <vkAllocateCommandBuffers@plt>:
    4410:	ff 25 da cd 02 00    	jmp    *0x2cdda(%rip)        # 311f0 <vkAllocateCommandBuffers@Base>
    4416:	68 3e 00 00 00       	push   $0x3e
    441b:	e9 00 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004420 <vkGetPhysicalDeviceProperties2@plt>:
    4420:	ff 25 d2 cd 02 00    	jmp    *0x2cdd2(%rip)        # 311f8 <vkGetPhysicalDeviceProperties2@Base>
    4426:	68 3f 00 00 00       	push   $0x3f
    442b:	e9 f0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004430 <vkGetInstanceProcAddr@plt>:
    4430:	ff 25 ca cd 02 00    	jmp    *0x2cdca(%rip)        # 31200 <vkGetInstanceProcAddr@Base>
    4436:	68 40 00 00 00       	push   $0x40
    443b:	e9 e0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004440 <glfwPollEvents@plt>:
    4440:	ff 25 c2 cd 02 00    	jmp    *0x2cdc2(%rip)        # 31208 <glfwPollEvents@Base>
    4446:	68 41 00 00 00       	push   $0x41
    444b:	e9 d0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004450 <vkDestroyRenderPass@plt>:
    4450:	ff 25 ba cd 02 00    	jmp    *0x2cdba(%rip)        # 31210 <vkDestroyRenderPass@Base>
    4456:	68 42 00 00 00       	push   $0x42
    445b:	e9 c0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004460 <vkCreateBuffer@plt>:
    4460:	ff 25 b2 cd 02 00    	jmp    *0x2cdb2(%rip)        # 31218 <vkCreateBuffer@Base>
    4466:	68 43 00 00 00       	push   $0x43
    446b:	e9 b0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    4470:	ff 25 aa cd 02 00    	jmp    *0x2cdaa(%rip)        # 31220 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    4476:	68 44 00 00 00       	push   $0x44
    447b:	e9 a0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004480 <_Znwm@plt>:
    4480:	ff 25 a2 cd 02 00    	jmp    *0x2cda2(%rip)        # 31228 <_Znwm@GLIBCXX_3.4>
    4486:	68 45 00 00 00       	push   $0x45
    448b:	e9 90 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004490 <vkBeginCommandBuffer@plt>:
    4490:	ff 25 9a cd 02 00    	jmp    *0x2cd9a(%rip)        # 31230 <vkBeginCommandBuffer@Base>
    4496:	68 46 00 00 00       	push   $0x46
    449b:	e9 80 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044a0 <_ZdlPvm@plt>:
    44a0:	ff 25 92 cd 02 00    	jmp    *0x2cd92(%rip)        # 31238 <_ZdlPvm@CXXABI_1.3.9>
    44a6:	68 47 00 00 00       	push   $0x47
    44ab:	e9 70 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044b0 <vkDestroyInstance@plt>:
    44b0:	ff 25 8a cd 02 00    	jmp    *0x2cd8a(%rip)        # 31240 <vkDestroyInstance@Base>
    44b6:	68 48 00 00 00       	push   $0x48
    44bb:	e9 60 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044c0 <glfwTerminate@plt>:
    44c0:	ff 25 82 cd 02 00    	jmp    *0x2cd82(%rip)        # 31248 <glfwTerminate@Base>
    44c6:	68 49 00 00 00       	push   $0x49
    44cb:	e9 50 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044d0 <vkCreateImageView@plt>:
    44d0:	ff 25 7a cd 02 00    	jmp    *0x2cd7a(%rip)        # 31250 <vkCreateImageView@Base>
    44d6:	68 4a 00 00 00       	push   $0x4a
    44db:	e9 40 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044e0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    44e0:	ff 25 72 cd 02 00    	jmp    *0x2cd72(%rip)        # 31258 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    44e6:	68 4b 00 00 00       	push   $0x4b
    44eb:	e9 30 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044f0 <_ZNSolsEPFRSoS_E@plt>:
    44f0:	ff 25 6a cd 02 00    	jmp    *0x2cd6a(%rip)        # 31260 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    44f6:	68 4c 00 00 00       	push   $0x4c
    44fb:	e9 20 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004500 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    4500:	ff 25 62 cd 02 00    	jmp    *0x2cd62(%rip)        # 31268 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    4506:	68 4d 00 00 00       	push   $0x4d
    450b:	e9 10 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004510 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    4510:	ff 25 5a cd 02 00    	jmp    *0x2cd5a(%rip)        # 31270 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    4516:	68 4e 00 00 00       	push   $0x4e
    451b:	e9 00 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004520 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>:
    4520:	ff 25 52 cd 02 00    	jmp    *0x2cd52(%rip)        # 31278 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@GLIBCXX_3.4.21>
    4526:	68 4f 00 00 00       	push   $0x4f
    452b:	e9 f0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004530 <_ZNSaIcED1Ev@plt>:
    4530:	ff 25 4a cd 02 00    	jmp    *0x2cd4a(%rip)        # 31280 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    4536:	68 50 00 00 00       	push   $0x50
    453b:	e9 e0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004540 <vkDestroyFence@plt>:
    4540:	ff 25 42 cd 02 00    	jmp    *0x2cd42(%rip)        # 31288 <vkDestroyFence@Base>
    4546:	68 51 00 00 00       	push   $0x51
    454b:	e9 d0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004550 <vkDestroyPipeline@plt>:
    4550:	ff 25 3a cd 02 00    	jmp    *0x2cd3a(%rip)        # 31290 <vkDestroyPipeline@Base>
    4556:	68 52 00 00 00       	push   $0x52
    455b:	e9 c0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004560 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    4560:	ff 25 32 cd 02 00    	jmp    *0x2cd32(%rip)        # 31298 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    4566:	68 53 00 00 00       	push   $0x53
    456b:	e9 b0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004570 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    4570:	ff 25 2a cd 02 00    	jmp    *0x2cd2a(%rip)        # 312a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    4576:	68 54 00 00 00       	push   $0x54
    457b:	e9 a0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004580 <vkEnumerateInstanceLayerProperties@plt>:
    4580:	ff 25 22 cd 02 00    	jmp    *0x2cd22(%rip)        # 312a8 <vkEnumerateInstanceLayerProperties@Base>
    4586:	68 55 00 00 00       	push   $0x55
    458b:	e9 90 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004590 <glfwInit@plt>:
    4590:	ff 25 1a cd 02 00    	jmp    *0x2cd1a(%rip)        # 312b0 <glfwInit@Base>
    4596:	68 56 00 00 00       	push   $0x56
    459b:	e9 80 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    45a0:	ff 25 12 cd 02 00    	jmp    *0x2cd12(%rip)        # 312b8 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    45a6:	68 57 00 00 00       	push   $0x57
    45ab:	e9 70 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045b0 <vkBindBufferMemory@plt>:
    45b0:	ff 25 0a cd 02 00    	jmp    *0x2cd0a(%rip)        # 312c0 <vkBindBufferMemory@Base>
    45b6:	68 58 00 00 00       	push   $0x58
    45bb:	e9 60 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045c0 <vkCreateSwapchainKHR@plt>:
    45c0:	ff 25 02 cd 02 00    	jmp    *0x2cd02(%rip)        # 312c8 <vkCreateSwapchainKHR@Base>
    45c6:	68 59 00 00 00       	push   $0x59
    45cb:	e9 50 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045d0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>:
    45d0:	ff 25 fa cc 02 00    	jmp    *0x2ccfa(%rip)        # 312d0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@GLIBCXX_3.4>
    45d6:	68 5a 00 00 00       	push   $0x5a
    45db:	e9 40 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045e0 <vkDestroyShaderModule@plt>:
    45e0:	ff 25 f2 cc 02 00    	jmp    *0x2ccf2(%rip)        # 312d8 <vkDestroyShaderModule@Base>
    45e6:	68 5b 00 00 00       	push   $0x5b
    45eb:	e9 30 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045f0 <vkCreateInstance@plt>:
    45f0:	ff 25 ea cc 02 00    	jmp    *0x2ccea(%rip)        # 312e0 <vkCreateInstance@Base>
    45f6:	68 5c 00 00 00       	push   $0x5c
    45fb:	e9 20 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004600 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    4600:	ff 25 e2 cc 02 00    	jmp    *0x2cce2(%rip)        # 312e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    4606:	68 5d 00 00 00       	push   $0x5d
    460b:	e9 10 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004610 <vkCreateFence@plt>:
    4610:	ff 25 da cc 02 00    	jmp    *0x2ccda(%rip)        # 312f0 <vkCreateFence@Base>
    4616:	68 5e 00 00 00       	push   $0x5e
    461b:	e9 00 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004620 <vkResetCommandBuffer@plt>:
    4620:	ff 25 d2 cc 02 00    	jmp    *0x2ccd2(%rip)        # 312f8 <vkResetCommandBuffer@Base>
    4626:	68 5f 00 00 00       	push   $0x5f
    462b:	e9 f0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004630 <vkDestroyPipelineLayout@plt>:
    4630:	ff 25 ca cc 02 00    	jmp    *0x2ccca(%rip)        # 31300 <vkDestroyPipelineLayout@Base>
    4636:	68 60 00 00 00       	push   $0x60
    463b:	e9 e0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004640 <_ZNSi4readEPcl@plt>:
    4640:	ff 25 c2 cc 02 00    	jmp    *0x2ccc2(%rip)        # 31308 <_ZNSi4readEPcl@GLIBCXX_3.4>
    4646:	68 61 00 00 00       	push   $0x61
    464b:	e9 d0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004650 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>:
    4650:	ff 25 ba cc 02 00    	jmp    *0x2ccba(%rip)        # 31310 <_ZNSi5seekgESt4fposI11__mbstate_tE@GLIBCXX_3.4>
    4656:	68 62 00 00 00       	push   $0x62
    465b:	e9 c0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004660 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>:
    4660:	ff 25 b2 cc 02 00    	jmp    *0x2ccb2(%rip)        # 31318 <vkGetPhysicalDeviceSurfaceFormatsKHR@Base>
    4666:	68 63 00 00 00       	push   $0x63
    466b:	e9 b0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004670 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>:
    4670:	ff 25 aa cc 02 00    	jmp    *0x2ccaa(%rip)        # 31320 <vkGetPhysicalDeviceSurfacePresentModesKHR@Base>
    4676:	68 64 00 00 00       	push   $0x64
    467b:	e9 a0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004680 <vkQueueSubmit@plt>:
    4680:	ff 25 a2 cc 02 00    	jmp    *0x2cca2(%rip)        # 31328 <vkQueueSubmit@Base>
    4686:	68 65 00 00 00       	push   $0x65
    468b:	e9 90 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004690 <vkGetDeviceQueue@plt>:
    4690:	ff 25 9a cc 02 00    	jmp    *0x2cc9a(%rip)        # 31330 <vkGetDeviceQueue@Base>
    4696:	68 66 00 00 00       	push   $0x66
    469b:	e9 80 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046a0 <_ZNSolsEj@plt>:
    46a0:	ff 25 92 cc 02 00    	jmp    *0x2cc92(%rip)        # 31338 <_ZNSolsEj@GLIBCXX_3.4>
    46a6:	68 67 00 00 00       	push   $0x67
    46ab:	e9 70 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046b0 <vkCreateFramebuffer@plt>:
    46b0:	ff 25 8a cc 02 00    	jmp    *0x2cc8a(%rip)        # 31340 <vkCreateFramebuffer@Base>
    46b6:	68 68 00 00 00       	push   $0x68
    46bb:	e9 60 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046c0 <glfwGetWindowUserPointer@plt>:
    46c0:	ff 25 82 cc 02 00    	jmp    *0x2cc82(%rip)        # 31348 <glfwGetWindowUserPointer@Base>
    46c6:	68 69 00 00 00       	push   $0x69
    46cb:	e9 50 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
    46d0:	ff 25 7a cc 02 00    	jmp    *0x2cc7a(%rip)        # 31350 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@GLIBCXX_3.4.21>
    46d6:	68 6a 00 00 00       	push   $0x6a
    46db:	e9 40 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046e0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    46e0:	ff 25 72 cc 02 00    	jmp    *0x2cc72(%rip)        # 31358 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    46e6:	68 6b 00 00 00       	push   $0x6b
    46eb:	e9 30 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046f0 <vkEnumerateDeviceExtensionProperties@plt>:
    46f0:	ff 25 6a cc 02 00    	jmp    *0x2cc6a(%rip)        # 31360 <vkEnumerateDeviceExtensionProperties@Base>
    46f6:	68 6c 00 00 00       	push   $0x6c
    46fb:	e9 20 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004700 <vkCreateSemaphore@plt>:
    4700:	ff 25 62 cc 02 00    	jmp    *0x2cc62(%rip)        # 31368 <vkCreateSemaphore@Base>
    4706:	68 6d 00 00 00       	push   $0x6d
    470b:	e9 10 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004710 <vkCmdBeginRenderPass@plt>:
    4710:	ff 25 5a cc 02 00    	jmp    *0x2cc5a(%rip)        # 31370 <vkCmdBeginRenderPass@Base>
    4716:	68 6e 00 00 00       	push   $0x6e
    471b:	e9 00 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004720 <vkDestroyCommandPool@plt>:
    4720:	ff 25 52 cc 02 00    	jmp    *0x2cc52(%rip)        # 31378 <vkDestroyCommandPool@Base>
    4726:	68 6f 00 00 00       	push   $0x6f
    472b:	e9 f0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004730 <vkCmdBindIndexBuffer@plt>:
    4730:	ff 25 4a cc 02 00    	jmp    *0x2cc4a(%rip)        # 31380 <vkCmdBindIndexBuffer@Base>
    4736:	68 70 00 00 00       	push   $0x70
    473b:	e9 e0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004740 <vkCmdBindVertexBuffers@plt>:
    4740:	ff 25 42 cc 02 00    	jmp    *0x2cc42(%rip)        # 31388 <vkCmdBindVertexBuffers@Base>
    4746:	68 71 00 00 00       	push   $0x71
    474b:	e9 d0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004750 <_ZNSaIcEC2ERKS_@plt>:
    4750:	ff 25 3a cc 02 00    	jmp    *0x2cc3a(%rip)        # 31390 <_ZNSaIcEC2ERKS_@GLIBCXX_3.4>
    4756:	68 72 00 00 00       	push   $0x72
    475b:	e9 c0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004760 <vkCmdCopyBuffer@plt>:
    4760:	ff 25 32 cc 02 00    	jmp    *0x2cc32(%rip)        # 31398 <vkCmdCopyBuffer@Base>
    4766:	68 73 00 00 00       	push   $0x73
    476b:	e9 b0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004770 <__cxa_rethrow@plt>:
    4770:	ff 25 2a cc 02 00    	jmp    *0x2cc2a(%rip)        # 313a0 <__cxa_rethrow@CXXABI_1.3>
    4776:	68 74 00 00 00       	push   $0x74
    477b:	e9 a0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004780 <vkCreateDevice@plt>:
    4780:	ff 25 22 cc 02 00    	jmp    *0x2cc22(%rip)        # 313a8 <vkCreateDevice@Base>
    4786:	68 75 00 00 00       	push   $0x75
    478b:	e9 90 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004790 <glfwSetFramebufferSizeCallback@plt>:
    4790:	ff 25 1a cc 02 00    	jmp    *0x2cc1a(%rip)        # 313b0 <glfwSetFramebufferSizeCallback@Base>
    4796:	68 76 00 00 00       	push   $0x76
    479b:	e9 80 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047a0 <_ZNSt8ios_base4InitC1Ev@plt>:
    47a0:	ff 25 12 cc 02 00    	jmp    *0x2cc12(%rip)        # 313b8 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    47a6:	68 77 00 00 00       	push   $0x77
    47ab:	e9 70 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047b0 <glfwCreateWindowSurface@plt>:
    47b0:	ff 25 0a cc 02 00    	jmp    *0x2cc0a(%rip)        # 313c0 <glfwCreateWindowSurface@Base>
    47b6:	68 78 00 00 00       	push   $0x78
    47bb:	e9 60 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047c0 <vkResetFences@plt>:
    47c0:	ff 25 02 cc 02 00    	jmp    *0x2cc02(%rip)        # 313c8 <vkResetFences@Base>
    47c6:	68 79 00 00 00       	push   $0x79
    47cb:	e9 50 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047d0 <glfwCreateWindow@plt>:
    47d0:	ff 25 fa cb 02 00    	jmp    *0x2cbfa(%rip)        # 313d0 <glfwCreateWindow@Base>
    47d6:	68 7a 00 00 00       	push   $0x7a
    47db:	e9 40 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>:
    47e0:	ff 25 f2 cb 02 00    	jmp    *0x2cbf2(%rip)        # 313d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@GLIBCXX_3.4.21>
    47e6:	68 7b 00 00 00       	push   $0x7b
    47eb:	e9 30 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047f0 <vkQueuePresentKHR@plt>:
    47f0:	ff 25 ea cb 02 00    	jmp    *0x2cbea(%rip)        # 313e0 <vkQueuePresentKHR@Base>
    47f6:	68 7c 00 00 00       	push   $0x7c
    47fb:	e9 20 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004800 <vkGetPhysicalDeviceMemoryProperties@plt>:
    4800:	ff 25 e2 cb 02 00    	jmp    *0x2cbe2(%rip)        # 313e8 <vkGetPhysicalDeviceMemoryProperties@Base>
    4806:	68 7d 00 00 00       	push   $0x7d
    480b:	e9 10 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004810 <glfwGetFramebufferSize@plt>:
    4810:	ff 25 da cb 02 00    	jmp    *0x2cbda(%rip)        # 313f0 <glfwGetFramebufferSize@Base>
    4816:	68 7e 00 00 00       	push   $0x7e
    481b:	e9 00 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004820 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    4820:	ff 25 d2 cb 02 00    	jmp    *0x2cbd2(%rip)        # 313f8 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    4826:	68 7f 00 00 00       	push   $0x7f
    482b:	e9 f0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004830 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    4830:	ff 25 ca cb 02 00    	jmp    *0x2cbca(%rip)        # 31400 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    4836:	68 80 00 00 00       	push   $0x80
    483b:	e9 e0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004840 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
    4840:	ff 25 c2 cb 02 00    	jmp    *0x2cbc2(%rip)        # 31408 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GLIBCXX_3.4.21>
    4846:	68 81 00 00 00       	push   $0x81
    484b:	e9 d0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004850 <memmove@plt>:
    4850:	ff 25 ba cb 02 00    	jmp    *0x2cbba(%rip)        # 31410 <memmove@GLIBC_2.2.5>
    4856:	68 82 00 00 00       	push   $0x82
    485b:	e9 c0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004860 <__cxa_end_catch@plt>:
    4860:	ff 25 b2 cb 02 00    	jmp    *0x2cbb2(%rip)        # 31418 <__cxa_end_catch@CXXABI_1.3>
    4866:	68 83 00 00 00       	push   $0x83
    486b:	e9 b0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004870 <vkAllocateMemory@plt>:
    4870:	ff 25 aa cb 02 00    	jmp    *0x2cbaa(%rip)        # 31420 <vkAllocateMemory@Base>
    4876:	68 84 00 00 00       	push   $0x84
    487b:	e9 a0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004880 <vkDestroyFramebuffer@plt>:
    4880:	ff 25 a2 cb 02 00    	jmp    *0x2cba2(%rip)        # 31428 <vkDestroyFramebuffer@Base>
    4886:	68 85 00 00 00       	push   $0x85
    488b:	e9 90 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004890 <__cxa_throw@plt>:
    4890:	ff 25 9a cb 02 00    	jmp    *0x2cb9a(%rip)        # 31430 <__cxa_throw@CXXABI_1.3>
    4896:	68 86 00 00 00       	push   $0x86
    489b:	e9 80 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>:
    48a0:	ff 25 92 cb 02 00    	jmp    *0x2cb92(%rip)        # 31438 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@GLIBCXX_3.4.21>
    48a6:	68 87 00 00 00       	push   $0x87
    48ab:	e9 70 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048b0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    48b0:	ff 25 8a cb 02 00    	jmp    *0x2cb8a(%rip)        # 31440 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    48b6:	68 88 00 00 00       	push   $0x88
    48bb:	e9 60 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048c0 <_ZNSolsEi@plt>:
    48c0:	ff 25 82 cb 02 00    	jmp    *0x2cb82(%rip)        # 31448 <_ZNSolsEi@GLIBCXX_3.4>
    48c6:	68 89 00 00 00       	push   $0x89
    48cb:	e9 50 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048d0 <_ZNSi5tellgEv@plt>:
    48d0:	ff 25 7a cb 02 00    	jmp    *0x2cb7a(%rip)        # 31450 <_ZNSi5tellgEv@GLIBCXX_3.4>
    48d6:	68 8a 00 00 00       	push   $0x8a
    48db:	e9 40 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048e0 <vkQueueWaitIdle@plt>:
    48e0:	ff 25 72 cb 02 00    	jmp    *0x2cb72(%rip)        # 31458 <vkQueueWaitIdle@Base>
    48e6:	68 8b 00 00 00       	push   $0x8b
    48eb:	e9 30 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048f0 <vkDestroySurfaceKHR@plt>:
    48f0:	ff 25 6a cb 02 00    	jmp    *0x2cb6a(%rip)        # 31460 <vkDestroySurfaceKHR@Base>
    48f6:	68 8c 00 00 00       	push   $0x8c
    48fb:	e9 20 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004900 <_Unwind_Resume@plt>:
    4900:	ff 25 62 cb 02 00    	jmp    *0x2cb62(%rip)        # 31468 <_Unwind_Resume@GCC_3.0>
    4906:	68 8d 00 00 00       	push   $0x8d
    490b:	e9 10 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004910 <_ZNSaIcEC1Ev@plt>:
    4910:	ff 25 5a cb 02 00    	jmp    *0x2cb5a(%rip)        # 31470 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    4916:	68 8e 00 00 00       	push   $0x8e
    491b:	e9 00 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004920 <vkDestroyImageView@plt>:
    4920:	ff 25 52 cb 02 00    	jmp    *0x2cb52(%rip)        # 31478 <vkDestroyImageView@Base>
    4926:	68 8f 00 00 00       	push   $0x8f
    492b:	e9 f0 f6 ff ff       	jmp    4020 <_init+0x20>

0000000000004930 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    4930:	ff 25 4a cb 02 00    	jmp    *0x2cb4a(%rip)        # 31480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    4936:	68 90 00 00 00       	push   $0x90
    493b:	e9 e0 f6 ff ff       	jmp    4020 <_init+0x20>

0000000000004940 <_ZNSt9exceptionD2Ev@plt>:
    4940:	ff 25 42 cb 02 00    	jmp    *0x2cb42(%rip)        # 31488 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    4946:	68 91 00 00 00       	push   $0x91
    494b:	e9 d0 f6 ff ff       	jmp    4020 <_init+0x20>

0000000000004950 <glfwWindowShouldClose@plt>:
    4950:	ff 25 3a cb 02 00    	jmp    *0x2cb3a(%rip)        # 31490 <glfwWindowShouldClose@Base>
    4956:	68 92 00 00 00       	push   $0x92
    495b:	e9 c0 f6 ff ff       	jmp    4020 <_init+0x20>

0000000000004960 <vkEndCommandBuffer@plt>:
    4960:	ff 25 32 cb 02 00    	jmp    *0x2cb32(%rip)        # 31498 <vkEndCommandBuffer@Base>
    4966:	68 93 00 00 00       	push   $0x93
    496b:	e9 b0 f6 ff ff       	jmp    4020 <_init+0x20>

0000000000004970 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>:
    4970:	ff 25 2a cb 02 00    	jmp    *0x2cb2a(%rip)        # 314a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@GLIBCXX_3.4.21>
    4976:	68 94 00 00 00       	push   $0x94
    497b:	e9 a0 f6 ff ff       	jmp    4020 <_init+0x20>

0000000000004980 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    4980:	ff 25 22 cb 02 00    	jmp    *0x2cb22(%rip)        # 314a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    4986:	68 95 00 00 00       	push   $0x95
    498b:	e9 90 f6 ff ff       	jmp    4020 <_init+0x20>

Disassembly of section .plt.got:

0000000000004990 <__cxa_finalize@plt>:
    4990:	ff 25 fa c5 02 00    	jmp    *0x2c5fa(%rip)        # 30f90 <__cxa_finalize@GLIBC_2.2.5>
    4996:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000049a0 <_start>:
    49a0:	31 ed                	xor    %ebp,%ebp
    49a2:	49 89 d1             	mov    %rdx,%r9
    49a5:	5e                   	pop    %rsi
    49a6:	48 89 e2             	mov    %rsp,%rdx
    49a9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    49ad:	50                   	push   %rax
    49ae:	54                   	push   %rsp
    49af:	45 31 c0             	xor    %r8d,%r8d
    49b2:	31 c9                	xor    %ecx,%ecx
    49b4:	48 8d 3d a9 01 00 00 	lea    0x1a9(%rip),%rdi        # 4b64 <main>
    49bb:	ff 15 df c5 02 00    	call   *0x2c5df(%rip)        # 30fa0 <__libc_start_main@GLIBC_2.34>
    49c1:	f4                   	hlt
    49c2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    49c9:	00 00 00 
    49cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000049d0 <deregister_tm_clones>:
    49d0:	48 8d 3d f9 ca 02 00 	lea    0x2caf9(%rip),%rdi        # 314d0 <__TMC_END__>
    49d7:	48 8d 05 f2 ca 02 00 	lea    0x2caf2(%rip),%rax        # 314d0 <__TMC_END__>
    49de:	48 39 f8             	cmp    %rdi,%rax
    49e1:	74 15                	je     49f8 <deregister_tm_clones+0x28>
    49e3:	48 8b 05 c6 c5 02 00 	mov    0x2c5c6(%rip),%rax        # 30fb0 <_ITM_deregisterTMCloneTable@Base>
    49ea:	48 85 c0             	test   %rax,%rax
    49ed:	74 09                	je     49f8 <deregister_tm_clones+0x28>
    49ef:	ff e0                	jmp    *%rax
    49f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    49f8:	c3                   	ret
    49f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004a00 <register_tm_clones>:
    4a00:	48 8d 3d c9 ca 02 00 	lea    0x2cac9(%rip),%rdi        # 314d0 <__TMC_END__>
    4a07:	48 8d 35 c2 ca 02 00 	lea    0x2cac2(%rip),%rsi        # 314d0 <__TMC_END__>
    4a0e:	48 29 fe             	sub    %rdi,%rsi
    4a11:	48 89 f0             	mov    %rsi,%rax
    4a14:	48 c1 ee 3f          	shr    $0x3f,%rsi
    4a18:	48 c1 f8 03          	sar    $0x3,%rax
    4a1c:	48 01 c6             	add    %rax,%rsi
    4a1f:	48 d1 fe             	sar    %rsi
    4a22:	74 14                	je     4a38 <register_tm_clones+0x38>
    4a24:	48 8b 05 95 c5 02 00 	mov    0x2c595(%rip),%rax        # 30fc0 <_ITM_registerTMCloneTable@Base>
    4a2b:	48 85 c0             	test   %rax,%rax
    4a2e:	74 08                	je     4a38 <register_tm_clones+0x38>
    4a30:	ff e0                	jmp    *%rax
    4a32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4a38:	c3                   	ret
    4a39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004a40 <__do_global_dtors_aux>:
    4a40:	f3 0f 1e fa          	endbr64
    4a44:	80 3d a5 cb 02 00 00 	cmpb   $0x0,0x2cba5(%rip)        # 315f0 <completed.0>
    4a4b:	75 2b                	jne    4a78 <__do_global_dtors_aux+0x38>
    4a4d:	55                   	push   %rbp
    4a4e:	48 83 3d 3a c5 02 00 	cmpq   $0x0,0x2c53a(%rip)        # 30f90 <__cxa_finalize@GLIBC_2.2.5>
    4a55:	00 
    4a56:	48 89 e5             	mov    %rsp,%rbp
    4a59:	74 0c                	je     4a67 <__do_global_dtors_aux+0x27>
    4a5b:	48 8b 3d 56 ca 02 00 	mov    0x2ca56(%rip),%rdi        # 314b8 <__dso_handle>
    4a62:	e8 29 ff ff ff       	call   4990 <__cxa_finalize@plt>
    4a67:	e8 64 ff ff ff       	call   49d0 <deregister_tm_clones>
    4a6c:	c6 05 7d cb 02 00 01 	movb   $0x1,0x2cb7d(%rip)        # 315f0 <completed.0>
    4a73:	5d                   	pop    %rbp
    4a74:	c3                   	ret
    4a75:	0f 1f 00             	nopl   (%rax)
    4a78:	c3                   	ret
    4a79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004a80 <frame_dummy>:
    4a80:	f3 0f 1e fa          	endbr64
    4a84:	e9 77 ff ff ff       	jmp    4a00 <register_tm_clones>

0000000000004a89 <_Z14protected_mainv>:
#include <vulkan_app.hpp>

// #include <typeinfo>

int protected_main() {
    4a89:	55                   	push   %rbp
    4a8a:	48 89 e5             	mov    %rsp,%rbp
    4a8d:	53                   	push   %rbx
    4a8e:	48 81 ec f8 01 00 00 	sub    $0x1f8,%rsp
  VulkanApp app;
    4a95:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    4a9c:	48 89 c7             	mov    %rax,%rdi
    4a9f:	e8 2a d3 00 00       	call   11dce <_ZN9VulkanAppC1Ev>
  app.run();
    4aa4:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    4aab:	48 89 c7             	mov    %rax,%rdi
    4aae:	e8 0d d9 00 00       	call   123c0 <_ZN9VulkanApp3runEv>
  app.writeInfo("info.log");
    4ab3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4ab7:	48 89 c7             	mov    %rax,%rdi
    4aba:	e8 51 fe ff ff       	call   4910 <_ZNSaIcEC1Ev@plt>
    4abf:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4ac3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4ac7:	48 8d 0d 6a 8b 01 00 	lea    0x18b6a(%rip),%rcx        # 1d638 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    4ace:	48 89 ce             	mov    %rcx,%rsi
    4ad1:	48 89 c7             	mov    %rax,%rdi
    4ad4:	e8 75 06 00 00       	call   514e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    4ad9:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    4add:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    4ae4:	48 89 d6             	mov    %rdx,%rsi
    4ae7:	48 89 c7             	mov    %rax,%rdi
    4aea:	e8 1b d9 00 00       	call   1240a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    4aef:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4af3:	48 89 c7             	mov    %rax,%rdi
    4af6:	e8 75 f7 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    4afb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4aff:	48 89 c7             	mov    %rax,%rdi
    4b02:	e8 29 fa ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
  return EXIT_SUCCESS;
    4b07:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    4b0c:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    4b13:	48 89 c7             	mov    %rax,%rdi
    4b16:	e8 0b d6 00 00       	call   12126 <_ZN9VulkanAppD1Ev>
  return EXIT_SUCCESS;
    4b1b:	89 d8                	mov    %ebx,%eax
    4b1d:	eb 3f                	jmp    4b5e <_Z14protected_mainv+0xd5>
  app.writeInfo("info.log");
    4b1f:	48 89 c3             	mov    %rax,%rbx
    4b22:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4b26:	48 89 c7             	mov    %rax,%rdi
    4b29:	e8 42 f7 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    4b2e:	eb 03                	jmp    4b33 <_Z14protected_mainv+0xaa>
    4b30:	48 89 c3             	mov    %rax,%rbx
    4b33:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4b37:	48 89 c7             	mov    %rax,%rdi
    4b3a:	e8 f1 f9 ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
    4b3f:	eb 03                	jmp    4b44 <_Z14protected_mainv+0xbb>
}
    4b41:	48 89 c3             	mov    %rax,%rbx
    4b44:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    4b4b:	48 89 c7             	mov    %rax,%rdi
    4b4e:	e8 d3 d5 00 00       	call   12126 <_ZN9VulkanAppD1Ev>
    4b53:	48 89 d8             	mov    %rbx,%rax
    4b56:	48 89 c7             	mov    %rax,%rdi
    4b59:	e8 a2 fd ff ff       	call   4900 <_Unwind_Resume@plt>
    4b5e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4b62:	c9                   	leave
    4b63:	c3                   	ret

0000000000004b64 <main>:

int main() {
    4b64:	55                   	push   %rbp
    4b65:	48 89 e5             	mov    %rsp,%rbp
    4b68:	53                   	push   %rbx
    4b69:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    4b6d:	e8 17 ff ff ff       	call   4a89 <_Z14protected_mainv>
    4b72:	e9 aa 00 00 00       	jmp    4c21 <main+0xbd>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    4b77:	b8 01 00 00 00       	mov    $0x1,%eax
    4b7c:	e9 a0 00 00 00       	jmp    4c21 <main+0xbd>
  } catch (const std::exception &e) {
    4b81:	48 83 fa 01          	cmp    $0x1,%rdx
    4b85:	75 49                	jne    4bd0 <main+0x6c>
    4b87:	48 89 c7             	mov    %rax,%rdi
    4b8a:	e8 d1 f5 ff ff       	call   4160 <__cxa_begin_catch@plt>
    4b8f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    4b93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b97:	48 8b 00             	mov    (%rax),%rax
    4b9a:	48 83 c0 10          	add    $0x10,%rax
    4b9e:	48 8b 10             	mov    (%rax),%rdx
    4ba1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ba5:	48 89 c7             	mov    %rax,%rdi
    4ba8:	ff d2                	call   *%rdx
    4baa:	48 89 c6             	mov    %rax,%rsi
    4bad:	48 8d 05 2c c9 02 00 	lea    0x2c92c(%rip),%rax        # 314e0 <_ZSt4cerr@GLIBCXX_3.4>
    4bb4:	48 89 c7             	mov    %rax,%rdi
    4bb7:	e8 b4 f8 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    4bbc:	be 0a 00 00 00       	mov    $0xa,%esi
    4bc1:	48 89 c7             	mov    %rax,%rdi
    4bc4:	e8 d7 f9 ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    4bc9:	e8 92 fc ff ff       	call   4860 <__cxa_end_catch@plt>
    4bce:	eb a7                	jmp    4b77 <main+0x13>
    4bd0:	48 89 c7             	mov    %rax,%rdi
    4bd3:	e8 88 f5 ff ff       	call   4160 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    4bd8:	48 8d 05 62 8a 01 00 	lea    0x18a62(%rip),%rax        # 1d641 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x11>
    4bdf:	48 89 c6             	mov    %rax,%rsi
    4be2:	48 8d 05 f7 c8 02 00 	lea    0x2c8f7(%rip),%rax        # 314e0 <_ZSt4cerr@GLIBCXX_3.4>
    4be9:	48 89 c7             	mov    %rax,%rdi
    4bec:	e8 7f f8 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    4bf1:	e8 6a fc ff ff       	call   4860 <__cxa_end_catch@plt>
    4bf6:	e9 7c ff ff ff       	jmp    4b77 <main+0x13>
  } catch (...) {
    4bfb:	48 89 c3             	mov    %rax,%rbx
    4bfe:	e8 5d fc ff ff       	call   4860 <__cxa_end_catch@plt>
    4c03:	48 89 d8             	mov    %rbx,%rax
    4c06:	48 89 c7             	mov    %rax,%rdi
    4c09:	e8 f2 fc ff ff       	call   4900 <_Unwind_Resume@plt>
  }
    4c0e:	48 89 c3             	mov    %rax,%rbx
    4c11:	e8 4a fc ff ff       	call   4860 <__cxa_end_catch@plt>
    4c16:	48 89 d8             	mov    %rbx,%rax
    4c19:	48 89 c7             	mov    %rax,%rdi
    4c1c:	e8 df fc ff ff       	call   4900 <_Unwind_Resume@plt>
    4c21:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4c25:	c9                   	leave
    4c26:	c3                   	ret

0000000000004c27 <_Z41__static_initialization_and_destruction_0ii>:
    4c27:	55                   	push   %rbp
    4c28:	48 89 e5             	mov    %rsp,%rbp
    4c2b:	41 57                	push   %r15
    4c2d:	41 56                	push   %r14
    4c2f:	41 55                	push   %r13
    4c31:	41 54                	push   %r12
    4c33:	53                   	push   %rbx
    4c34:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    4c3b:	89 bd 5c ff ff ff    	mov    %edi,-0xa4(%rbp)
    4c41:	89 b5 58 ff ff ff    	mov    %esi,-0xa8(%rbp)
    4c47:	83 bd 5c ff ff ff 01 	cmpl   $0x1,-0xa4(%rbp)
    4c4e:	0f 85 92 02 00 00    	jne    4ee6 <_Z41__static_initialization_and_destruction_0ii+0x2bf>
    4c54:	81 bd 58 ff ff ff ff 	cmpl   $0xffff,-0xa8(%rbp)
    4c5b:	ff 00 00 
    4c5e:	0f 85 82 02 00 00    	jne    4ee6 <_Z41__static_initialization_and_destruction_0ii+0x2bf>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    4c64:	48 8d 05 95 c9 02 00 	lea    0x2c995(%rip),%rax        # 31600 <_ZStL8__ioinit>
    4c6b:	48 89 c7             	mov    %rax,%rdi
    4c6e:	e8 2d fb ff ff       	call   47a0 <_ZNSt8ios_base4InitC1Ev@plt>
    4c73:	48 8d 05 3e c8 02 00 	lea    0x2c83e(%rip),%rax        # 314b8 <__dso_handle>
    4c7a:	48 89 c2             	mov    %rax,%rdx
    4c7d:	48 8d 05 7c c9 02 00 	lea    0x2c97c(%rip),%rax        # 31600 <_ZStL8__ioinit>
    4c84:	48 89 c6             	mov    %rax,%rsi
    4c87:	48 8b 05 3a c3 02 00 	mov    0x2c33a(%rip),%rax        # 30fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    4c8e:	48 89 c7             	mov    %rax,%rdi
    4c91:	e8 3a f7 ff ff       	call   43d0 <__cxa_atexit@plt>
#include <vector>
#include <vkh.hpp>

namespace shader {

const std::vector<uint16_t> triangle_indices{0, 1, 2, 2, 3, 0};
    4c96:	66 c7 85 62 ff ff ff 	movw   $0x0,-0x9e(%rbp)
    4c9d:	00 00 
    4c9f:	66 c7 85 64 ff ff ff 	movw   $0x1,-0x9c(%rbp)
    4ca6:	01 00 
    4ca8:	66 c7 85 66 ff ff ff 	movw   $0x2,-0x9a(%rbp)
    4caf:	02 00 
    4cb1:	66 c7 85 68 ff ff ff 	movw   $0x2,-0x98(%rbp)
    4cb8:	02 00 
    4cba:	66 c7 85 6a ff ff ff 	movw   $0x3,-0x96(%rbp)
    4cc1:	03 00 
    4cc3:	66 c7 85 6c ff ff ff 	movw   $0x0,-0x94(%rbp)
    4cca:	00 00 
    4ccc:	48 8d 85 62 ff ff ff 	lea    -0x9e(%rbp),%rax
    4cd3:	49 89 c6             	mov    %rax,%r14
    4cd6:	41 bf 06 00 00 00    	mov    $0x6,%r15d
    4cdc:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    4ce3:	48 89 c7             	mov    %rax,%rdi
    4ce6:	e8 e3 02 00 00       	call   4fce <_ZNSaItEC1Ev>
    4ceb:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    4cf2:	4c 89 f6             	mov    %r14,%rsi
    4cf5:	4c 89 ff             	mov    %r15,%rdi
    4cf8:	4c 89 f1             	mov    %r14,%rcx
    4cfb:	4c 89 fb             	mov    %r15,%rbx
    4cfe:	48 89 da             	mov    %rbx,%rdx
    4d01:	48 89 c1             	mov    %rax,%rcx
    4d04:	48 8d 05 05 c9 02 00 	lea    0x2c905(%rip),%rax        # 31610 <_ZN6shaderL16triangle_indicesE>
    4d0b:	48 89 c7             	mov    %rax,%rdi
    4d0e:	e8 f3 02 00 00       	call   5006 <_ZNSt6vectorItSaItEEC1ESt16initializer_listItERKS0_>
    4d13:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    4d1a:	48 89 c7             	mov    %rax,%rdi
    4d1d:	e8 c8 02 00 00       	call   4fea <_ZNSaItED1Ev>
    4d22:	48 8d 05 8f c7 02 00 	lea    0x2c78f(%rip),%rax        # 314b8 <__dso_handle>
    4d29:	48 89 c2             	mov    %rax,%rdx
    4d2c:	48 8d 05 dd c8 02 00 	lea    0x2c8dd(%rip),%rax        # 31610 <_ZN6shaderL16triangle_indicesE>
    4d33:	48 89 c6             	mov    %rax,%rsi
    4d36:	48 8d 05 f9 14 00 00 	lea    0x14f9(%rip),%rax        # 6236 <_ZNSt6vectorItSaItEED1Ev>
    4d3d:	48 89 c7             	mov    %rax,%rdi
    4d40:	e8 8b f6 ff ff       	call   43d0 <__cxa_atexit@plt>
const std::vector<vkh::Vertex2D_RGB> triangle_index_data{
    {{-0.5f, -0.5f}, {1.0f, 0.0f, 0.0f}},
    {{0.5f, -0.5f}, {0.0f, 1.0f, 0.0f}},
    {{0.5f, 0.5f}, {0.0f, 0.0f, 1.0f}},
    {{-0.5f, 0.5f}, {1.0f, 1.0f, 1.0f}}};
    4d45:	f3 0f 10 05 77 89 01 	movss  0x18977(%rip),%xmm0        # 1d6c4 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x94>
    4d4c:	00 
    4d4d:	f3 0f 11 85 70 ff ff 	movss  %xmm0,-0x90(%rbp)
    4d54:	ff 
    4d55:	f3 0f 10 05 67 89 01 	movss  0x18967(%rip),%xmm0        # 1d6c4 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x94>
    4d5c:	00 
    4d5d:	f3 0f 11 85 74 ff ff 	movss  %xmm0,-0x8c(%rbp)
    4d64:	ff 
    4d65:	f3 0f 10 05 5b 89 01 	movss  0x1895b(%rip),%xmm0        # 1d6c8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x98>
    4d6c:	00 
    4d6d:	f3 0f 11 85 78 ff ff 	movss  %xmm0,-0x88(%rbp)
    4d74:	ff 
    4d75:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4d79:	f3 0f 11 85 7c ff ff 	movss  %xmm0,-0x84(%rbp)
    4d80:	ff 
    4d81:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4d85:	f3 0f 11 45 80       	movss  %xmm0,-0x80(%rbp)
    4d8a:	f3 0f 10 05 3a 89 01 	movss  0x1893a(%rip),%xmm0        # 1d6cc <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x9c>
    4d91:	00 
    4d92:	f3 0f 11 45 84       	movss  %xmm0,-0x7c(%rbp)
    4d97:	f3 0f 10 05 25 89 01 	movss  0x18925(%rip),%xmm0        # 1d6c4 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x94>
    4d9e:	00 
    4d9f:	f3 0f 11 45 88       	movss  %xmm0,-0x78(%rbp)
    4da4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4da8:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)
    4dad:	f3 0f 10 05 13 89 01 	movss  0x18913(%rip),%xmm0        # 1d6c8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x98>
    4db4:	00 
    4db5:	f3 0f 11 45 90       	movss  %xmm0,-0x70(%rbp)
    4dba:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4dbe:	f3 0f 11 45 94       	movss  %xmm0,-0x6c(%rbp)
    4dc3:	f3 0f 10 05 01 89 01 	movss  0x18901(%rip),%xmm0        # 1d6cc <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x9c>
    4dca:	00 
    4dcb:	f3 0f 11 45 98       	movss  %xmm0,-0x68(%rbp)
    4dd0:	f3 0f 10 05 f4 88 01 	movss  0x188f4(%rip),%xmm0        # 1d6cc <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x9c>
    4dd7:	00 
    4dd8:	f3 0f 11 45 9c       	movss  %xmm0,-0x64(%rbp)
    4ddd:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4de1:	f3 0f 11 45 a0       	movss  %xmm0,-0x60(%rbp)
    4de6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4dea:	f3 0f 11 45 a4       	movss  %xmm0,-0x5c(%rbp)
    4def:	f3 0f 10 05 d1 88 01 	movss  0x188d1(%rip),%xmm0        # 1d6c8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x98>
    4df6:	00 
    4df7:	f3 0f 11 45 a8       	movss  %xmm0,-0x58(%rbp)
    4dfc:	f3 0f 10 05 c0 88 01 	movss  0x188c0(%rip),%xmm0        # 1d6c4 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x94>
    4e03:	00 
    4e04:	f3 0f 11 45 ac       	movss  %xmm0,-0x54(%rbp)
    4e09:	f3 0f 10 05 bb 88 01 	movss  0x188bb(%rip),%xmm0        # 1d6cc <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x9c>
    4e10:	00 
    4e11:	f3 0f 11 45 b0       	movss  %xmm0,-0x50(%rbp)
    4e16:	f3 0f 10 05 aa 88 01 	movss  0x188aa(%rip),%xmm0        # 1d6c8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x98>
    4e1d:	00 
    4e1e:	f3 0f 11 45 b4       	movss  %xmm0,-0x4c(%rbp)
    4e23:	f3 0f 10 05 9d 88 01 	movss  0x1889d(%rip),%xmm0        # 1d6c8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x98>
    4e2a:	00 
    4e2b:	f3 0f 11 45 b8       	movss  %xmm0,-0x48(%rbp)
    4e30:	f3 0f 10 05 90 88 01 	movss  0x18890(%rip),%xmm0        # 1d6c8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x98>
    4e37:	00 
    4e38:	f3 0f 11 45 bc       	movss  %xmm0,-0x44(%rbp)
    4e3d:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    4e44:	49 89 c4             	mov    %rax,%r12
    4e47:	41 bd 04 00 00 00    	mov    $0x4,%r13d
    4e4d:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    4e51:	48 89 c7             	mov    %rax,%rdi
    4e54:	e8 35 02 00 00       	call   508e <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1Ev>
    4e59:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    4e5d:	4c 89 e6             	mov    %r12,%rsi
    4e60:	4c 89 ef             	mov    %r13,%rdi
    4e63:	4c 89 e1             	mov    %r12,%rcx
    4e66:	4c 89 eb             	mov    %r13,%rbx
    4e69:	48 89 da             	mov    %rbx,%rdx
    4e6c:	48 89 c1             	mov    %rax,%rcx
    4e6f:	48 8d 05 ba c7 02 00 	lea    0x2c7ba(%rip),%rax        # 31630 <_ZN6shaderL19triangle_index_dataE>
    4e76:	48 89 c7             	mov    %rax,%rdi
    4e79:	e8 48 02 00 00       	call   50c6 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ESt16initializer_listIS4_ERKS5_>
    4e7e:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    4e82:	48 89 c7             	mov    %rax,%rdi
    4e85:	e8 20 02 00 00       	call   50aa <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
const std::vector<vkh::Vertex2D_RGB> triangle_index_data{
    4e8a:	48 8d 05 27 c6 02 00 	lea    0x2c627(%rip),%rax        # 314b8 <__dso_handle>
    4e91:	48 89 c2             	mov    %rax,%rdx
    4e94:	48 8d 05 95 c7 02 00 	lea    0x2c795(%rip),%rax        # 31630 <_ZN6shaderL19triangle_index_dataE>
    4e9b:	48 89 c6             	mov    %rax,%rsi
    4e9e:	48 8d 05 d5 13 00 00 	lea    0x13d5(%rip),%rax        # 627a <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>
    4ea5:	48 89 c7             	mov    %rax,%rdi
    4ea8:	e8 23 f5 ff ff       	call   43d0 <__cxa_atexit@plt>
    4ead:	eb 37                	jmp    4ee6 <_Z41__static_initialization_and_destruction_0ii+0x2bf>
const std::vector<uint16_t> triangle_indices{0, 1, 2, 2, 3, 0};
    4eaf:	48 89 c3             	mov    %rax,%rbx
    4eb2:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    4eb9:	48 89 c7             	mov    %rax,%rdi
    4ebc:	e8 29 01 00 00       	call   4fea <_ZNSaItED1Ev>
    4ec1:	48 89 d8             	mov    %rbx,%rax
    4ec4:	48 89 c7             	mov    %rax,%rdi
    4ec7:	e8 34 fa ff ff       	call   4900 <_Unwind_Resume@plt>
    {{-0.5f, 0.5f}, {1.0f, 1.0f, 1.0f}}};
    4ecc:	48 89 c3             	mov    %rax,%rbx
    4ecf:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    4ed3:	48 89 c7             	mov    %rax,%rdi
    4ed6:	e8 cf 01 00 00       	call   50aa <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
    4edb:	48 89 d8             	mov    %rbx,%rax
    4ede:	48 89 c7             	mov    %rax,%rdi
    4ee1:	e8 1a fa ff ff       	call   4900 <_Unwind_Resume@plt>
    4ee6:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    4eed:	5b                   	pop    %rbx
    4eee:	41 5c                	pop    %r12
    4ef0:	41 5d                	pop    %r13
    4ef2:	41 5e                	pop    %r14
    4ef4:	41 5f                	pop    %r15
    4ef6:	5d                   	pop    %rbp
    4ef7:	c3                   	ret

0000000000004ef8 <_GLOBAL__sub_I__Z14protected_mainv>:
    4ef8:	55                   	push   %rbp
    4ef9:	48 89 e5             	mov    %rsp,%rbp
    4efc:	be ff ff 00 00       	mov    $0xffff,%esi
    4f01:	bf 01 00 00 00       	mov    $0x1,%edi
    4f06:	e8 1c fd ff ff       	call   4c27 <_Z41__static_initialization_and_destruction_0ii>
    4f0b:	5d                   	pop    %rbp
    4f0c:	c3                   	ret

0000000000004f0d <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    4f0d:	55                   	push   %rbp
    4f0e:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    4f11:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    4f16:	5d                   	pop    %rbp
    4f17:	c3                   	ret

0000000000004f18 <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    4f18:	55                   	push   %rbp
    4f19:	48 89 e5             	mov    %rsp,%rbp
    4f1c:	48 83 ec 10          	sub    $0x10,%rsp
    4f20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    4f24:	e8 e4 ff ff ff       	call   4f0d <_ZSt23__is_constant_evaluatedv>
    4f29:	84 c0                	test   %al,%al
    4f2b:	74 0e                	je     4f3b <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    4f2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f31:	48 89 c7             	mov    %rax,%rdi
    4f34:	e8 11 00 00 00       	call   4f4a <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    4f39:	eb 0d                	jmp    4f48 <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    4f3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f3f:	48 89 c7             	mov    %rax,%rdi
    4f42:	e8 49 f2 ff ff       	call   4190 <strlen@plt>
    4f47:	90                   	nop
      }
    4f48:	c9                   	leave
    4f49:	c3                   	ret

0000000000004f4a <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    4f4a:	55                   	push   %rbp
    4f4b:	48 89 e5             	mov    %rsp,%rbp
    4f4e:	48 83 ec 20          	sub    $0x20,%rsp
    4f52:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    4f56:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    4f5d:	00 
      while (!eq(__p[__i], char_type()))
    4f5e:	eb 05                	jmp    4f65 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    4f60:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    4f65:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    4f69:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4f6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f71:	48 01 c2             	add    %rax,%rdx
    4f74:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    4f78:	48 89 c6             	mov    %rax,%rsi
    4f7b:	48 89 d7             	mov    %rdx,%rdi
    4f7e:	e8 0d 00 00 00       	call   4f90 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    4f83:	83 f0 01             	xor    $0x1,%eax
    4f86:	84 c0                	test   %al,%al
    4f88:	75 d6                	jne    4f60 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    4f8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    4f8e:	c9                   	leave
    4f8f:	c3                   	ret

0000000000004f90 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    4f90:	55                   	push   %rbp
    4f91:	48 89 e5             	mov    %rsp,%rbp
    4f94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f98:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    4f9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fa0:	0f b6 10             	movzbl (%rax),%edx
    4fa3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4fa7:	0f b6 00             	movzbl (%rax),%eax
    4faa:	38 c2                	cmp    %al,%dl
    4fac:	0f 94 c0             	sete   %al
    4faf:	5d                   	pop    %rbp
    4fb0:	c3                   	ret
    4fb1:	90                   	nop

0000000000004fb2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    4fb2:	55                   	push   %rbp
    4fb3:	48 89 e5             	mov    %rsp,%rbp
    4fb6:	48 83 ec 10          	sub    $0x10,%rsp
    4fba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4fbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fc2:	48 89 c7             	mov    %rax,%rdi
    4fc5:	e8 a6 f0 ff ff       	call   4070 <_ZNSaIcED2Ev@plt>
    4fca:	90                   	nop
    4fcb:	c9                   	leave
    4fcc:	c3                   	ret
    4fcd:	90                   	nop

0000000000004fce <_ZNSaItEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    4fce:	55                   	push   %rbp
    4fcf:	48 89 e5             	mov    %rsp,%rbp
    4fd2:	48 83 ec 10          	sub    $0x10,%rsp
    4fd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4fda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fde:	48 89 c7             	mov    %rax,%rdi
    4fe1:	e8 34 03 00 00       	call   531a <_ZNSt15__new_allocatorItEC1Ev>
    4fe6:	90                   	nop
    4fe7:	c9                   	leave
    4fe8:	c3                   	ret
    4fe9:	90                   	nop

0000000000004fea <_ZNSaItED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    4fea:	55                   	push   %rbp
    4feb:	48 89 e5             	mov    %rsp,%rbp
    4fee:	48 83 ec 10          	sub    $0x10,%rsp
    4ff2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ff6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ffa:	48 89 c7             	mov    %rax,%rdi
    4ffd:	e8 24 03 00 00       	call   5326 <_ZNSt15__new_allocatorItED1Ev>
    5002:	90                   	nop
    5003:	c9                   	leave
    5004:	c3                   	ret
    5005:	90                   	nop

0000000000005006 <_ZNSt6vectorItSaItEEC1ESt16initializer_listItERKS0_>:
       *
       *  This will call the element type's copy constructor N times
       *  (where N is @a __l.size()) and do no memory reallocation.
       */
      _GLIBCXX20_CONSTEXPR
      vector(initializer_list<value_type> __l,
    5006:	55                   	push   %rbp
    5007:	48 89 e5             	mov    %rsp,%rbp
    500a:	53                   	push   %rbx
    500b:	48 83 ec 38          	sub    $0x38,%rsp
    500f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5013:	48 89 f0             	mov    %rsi,%rax
    5016:	48 89 d6             	mov    %rdx,%rsi
    5019:	48 89 f2             	mov    %rsi,%rdx
    501c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    5020:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    5024:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
	     const allocator_type& __a = allocator_type())
      : _Base(__a)
    5028:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    502c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5030:	48 89 d6             	mov    %rdx,%rsi
    5033:	48 89 c7             	mov    %rax,%rdi
    5036:	e8 13 03 00 00       	call   534e <_ZNSt12_Vector_baseItSaItEEC1ERKS0_>
      {
	_M_range_initialize(__l.begin(), __l.end(),
    503b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    503f:	48 89 c7             	mov    %rax,%rdi
    5042:	e8 8b 03 00 00       	call   53d2 <_ZNKSt16initializer_listItE3endEv>
    5047:	48 89 c3             	mov    %rax,%rbx
    504a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    504e:	48 89 c7             	mov    %rax,%rdi
    5051:	e8 6a 03 00 00       	call   53c0 <_ZNKSt16initializer_listItE5beginEv>
    5056:	48 89 c1             	mov    %rax,%rcx
    5059:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    505d:	48 89 da             	mov    %rbx,%rdx
    5060:	48 89 ce             	mov    %rcx,%rsi
    5063:	48 89 c7             	mov    %rax,%rdi
    5066:	e8 cd 03 00 00       	call   5438 <_ZNSt6vectorItSaItEE19_M_range_initializeIPKtEEvT_S5_St20forward_iterator_tag>
			    random_access_iterator_tag());
      }
    506b:	eb 1a                	jmp    5087 <_ZNSt6vectorItSaItEEC1ESt16initializer_listItERKS0_+0x81>
    506d:	48 89 c3             	mov    %rax,%rbx
    5070:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5074:	48 89 c7             	mov    %rax,%rdi
    5077:	e8 f8 02 00 00       	call   5374 <_ZNSt12_Vector_baseItSaItEED1Ev>
    507c:	48 89 d8             	mov    %rbx,%rax
    507f:	48 89 c7             	mov    %rax,%rdi
    5082:	e8 79 f8 ff ff       	call   4900 <_Unwind_Resume@plt>
    5087:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    508b:	c9                   	leave
    508c:	c3                   	ret
    508d:	90                   	nop

000000000000508e <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    508e:	55                   	push   %rbp
    508f:	48 89 e5             	mov    %rsp,%rbp
    5092:	48 83 ec 10          	sub    $0x10,%rsp
    5096:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    509a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    509e:	48 89 c7             	mov    %rax,%rdi
    50a1:	e8 40 04 00 00       	call   54e6 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEC1Ev>
    50a6:	90                   	nop
    50a7:	c9                   	leave
    50a8:	c3                   	ret
    50a9:	90                   	nop

00000000000050aa <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    50aa:	55                   	push   %rbp
    50ab:	48 89 e5             	mov    %rsp,%rbp
    50ae:	48 83 ec 10          	sub    $0x10,%rsp
    50b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50ba:	48 89 c7             	mov    %rax,%rdi
    50bd:	e8 30 04 00 00       	call   54f2 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEED1Ev>
    50c2:	90                   	nop
    50c3:	c9                   	leave
    50c4:	c3                   	ret
    50c5:	90                   	nop

00000000000050c6 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ESt16initializer_listIS4_ERKS5_>:
      vector(initializer_list<value_type> __l,
    50c6:	55                   	push   %rbp
    50c7:	48 89 e5             	mov    %rsp,%rbp
    50ca:	53                   	push   %rbx
    50cb:	48 83 ec 38          	sub    $0x38,%rsp
    50cf:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    50d3:	48 89 f0             	mov    %rsi,%rax
    50d6:	48 89 d6             	mov    %rdx,%rsi
    50d9:	48 89 f2             	mov    %rsi,%rdx
    50dc:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    50e0:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    50e4:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    50e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    50ec:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    50f0:	48 89 d6             	mov    %rdx,%rsi
    50f3:	48 89 c7             	mov    %rax,%rdi
    50f6:	e8 1f 04 00 00       	call   551a <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ERKS5_>
	_M_range_initialize(__l.begin(), __l.end(),
    50fb:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    50ff:	48 89 c7             	mov    %rax,%rdi
    5102:	e8 a3 04 00 00       	call   55aa <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE3endEv>
    5107:	48 89 c3             	mov    %rax,%rbx
    510a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    510e:	48 89 c7             	mov    %rax,%rdi
    5111:	e8 82 04 00 00       	call   5598 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE5beginEv>
    5116:	48 89 c1             	mov    %rax,%rcx
    5119:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    511d:	48 89 da             	mov    %rbx,%rdx
    5120:	48 89 ce             	mov    %rcx,%rsi
    5123:	48 89 c7             	mov    %rax,%rdi
    5126:	e8 f3 04 00 00       	call   561e <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_range_initializeIPKS4_EEvT_SA_St20forward_iterator_tag>
      }
    512b:	eb 1a                	jmp    5147 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ESt16initializer_listIS4_ERKS5_+0x81>
    512d:	48 89 c3             	mov    %rax,%rbx
    5130:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5134:	48 89 c7             	mov    %rax,%rdi
    5137:	e8 04 04 00 00       	call   5540 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>
    513c:	48 89 d8             	mov    %rbx,%rax
    513f:	48 89 c7             	mov    %rax,%rdi
    5142:	e8 b9 f7 ff ff       	call   4900 <_Unwind_Resume@plt>
    5147:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    514b:	c9                   	leave
    514c:	c3                   	ret
    514d:	90                   	nop

000000000000514e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    514e:	55                   	push   %rbp
    514f:	48 89 e5             	mov    %rsp,%rbp
    5152:	53                   	push   %rbx
    5153:	48 83 ec 38          	sub    $0x38,%rsp
    5157:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    515b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    515f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    5163:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    5167:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    516b:	48 89 c7             	mov    %rax,%rdi
    516e:	e8 bd f1 ff ff       	call   4330 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    5173:	48 89 c1             	mov    %rax,%rcx
    5176:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    517a:	48 89 c2             	mov    %rax,%rdx
    517d:	48 89 ce             	mov    %rcx,%rsi
    5180:	48 89 df             	mov    %rbx,%rdi
    5183:	e8 78 f3 ff ff       	call   4500 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    5188:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    518d:	75 0f                	jne    519e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    518f:	48 8d 05 c2 84 01 00 	lea    0x184c2(%rip),%rax        # 1d658 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x28>
    5196:	48 89 c7             	mov    %rax,%rdi
    5199:	e8 22 f1 ff ff       	call   42c0 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    519e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    51a2:	48 89 c7             	mov    %rax,%rdi
    51a5:	e8 6e fd ff ff       	call   4f18 <_ZNSt11char_traitsIcE6lengthEPKc>
    51aa:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    51ae:	48 01 d0             	add    %rdx,%rax
    51b1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    51b5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    51b9:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    51bd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    51c1:	48 89 ce             	mov    %rcx,%rsi
    51c4:	48 89 c7             	mov    %rax,%rdi
    51c7:	e8 66 00 00 00       	call   5232 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    51cc:	eb 1a                	jmp    51e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    51ce:	48 89 c3             	mov    %rax,%rbx
    51d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    51d5:	48 89 c7             	mov    %rax,%rdi
    51d8:	e8 d5 fd ff ff       	call   4fb2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    51dd:	48 89 d8             	mov    %rbx,%rax
    51e0:	48 89 c7             	mov    %rax,%rdi
    51e3:	e8 18 f7 ff ff       	call   4900 <_Unwind_Resume@plt>
    51e8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    51ec:	c9                   	leave
    51ed:	c3                   	ret

00000000000051ee <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    51ee:	55                   	push   %rbp
    51ef:	48 89 e5             	mov    %rsp,%rbp
    51f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    51f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    51fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51fe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5202:	48 89 10             	mov    %rdx,(%rax)
    5205:	90                   	nop
    5206:	5d                   	pop    %rbp
    5207:	c3                   	ret

0000000000005208 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    5208:	55                   	push   %rbp
    5209:	48 89 e5             	mov    %rsp,%rbp
    520c:	48 83 ec 10          	sub    $0x10,%rsp
    5210:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5214:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5218:	48 8b 00             	mov    (%rax),%rax
    521b:	48 85 c0             	test   %rax,%rax
    521e:	74 0f                	je     522f <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    5220:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5224:	48 8b 00             	mov    (%rax),%rax
    5227:	48 89 c7             	mov    %rax,%rdi
    522a:	e8 d1 f3 ff ff       	call   4600 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    522f:	90                   	nop
    5230:	c9                   	leave
    5231:	c3                   	ret

0000000000005232 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    5232:	55                   	push   %rbp
    5233:	48 89 e5             	mov    %rsp,%rbp
    5236:	48 83 ec 40          	sub    $0x40,%rsp
    523a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    523e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5242:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    5246:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    524a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    524e:	48 89 d6             	mov    %rdx,%rsi
    5251:	48 89 c7             	mov    %rax,%rdi
    5254:	e8 7f 04 00 00       	call   56d8 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    5259:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    525d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5261:	48 83 f8 0f          	cmp    $0xf,%rax
    5265:	76 3f                	jbe    52a6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    5267:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    526b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    526f:	ba 00 00 00 00       	mov    $0x0,%edx
    5274:	48 89 ce             	mov    %rcx,%rsi
    5277:	48 89 c7             	mov    %rax,%rdi
    527a:	e8 b1 f6 ff ff       	call   4930 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    527f:	48 89 c2             	mov    %rax,%rdx
    5282:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5286:	48 89 d6             	mov    %rdx,%rsi
    5289:	48 89 c7             	mov    %rax,%rdi
    528c:	e8 ff f0 ff ff       	call   4390 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    5291:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5295:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5299:	48 89 d6             	mov    %rdx,%rsi
    529c:	48 89 c7             	mov    %rax,%rdi
    529f:	e8 dc f6 ff ff       	call   4980 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    52a4:	eb 15                	jmp    52bb <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    52a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    52aa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    52ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52b2:	48 89 c7             	mov    %rax,%rdi
    52b5:	e8 76 f0 ff ff       	call   4330 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    52ba:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    52bb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    52bf:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    52c3:	48 89 d6             	mov    %rdx,%rsi
    52c6:	48 89 c7             	mov    %rax,%rdi
    52c9:	e8 20 ff ff ff       	call   51ee <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    52ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    52d2:	48 89 c7             	mov    %rax,%rdi
    52d5:	e8 86 f2 ff ff       	call   4560 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    52da:	48 89 c1             	mov    %rax,%rcx
    52dd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    52e1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    52e5:	48 89 c6             	mov    %rax,%rsi
    52e8:	48 89 cf             	mov    %rcx,%rdi
    52eb:	e8 80 f2 ff ff       	call   4570 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    52f0:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    52f7:	00 

	_M_set_length(__dnew);
    52f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    52fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5300:	48 89 d6             	mov    %rdx,%rsi
    5303:	48 89 c7             	mov    %rax,%rdi
    5306:	e8 85 ef ff ff       	call   4290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    530b:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    530f:	48 89 c7             	mov    %rax,%rdi
    5312:	e8 f1 fe ff ff       	call   5208 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    5317:	c9                   	leave
    5318:	c3                   	ret
    5319:	90                   	nop

000000000000531a <_ZNSt15__new_allocatorItEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    531a:	55                   	push   %rbp
    531b:	48 89 e5             	mov    %rsp,%rbp
    531e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5322:	90                   	nop
    5323:	5d                   	pop    %rbp
    5324:	c3                   	ret
    5325:	90                   	nop

0000000000005326 <_ZNSt15__new_allocatorItED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5326:	55                   	push   %rbp
    5327:	48 89 e5             	mov    %rsp,%rbp
    532a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    532e:	90                   	nop
    532f:	5d                   	pop    %rbp
    5330:	c3                   	ret
    5331:	90                   	nop

0000000000005332 <_ZNSt12_Vector_baseItSaItEE12_Vector_implD1Ev>:
      struct _Vector_impl
    5332:	55                   	push   %rbp
    5333:	48 89 e5             	mov    %rsp,%rbp
    5336:	48 83 ec 10          	sub    $0x10,%rsp
    533a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    533e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5342:	48 89 c7             	mov    %rax,%rdi
    5345:	e8 a0 fc ff ff       	call   4fea <_ZNSaItED1Ev>
    534a:	90                   	nop
    534b:	c9                   	leave
    534c:	c3                   	ret
    534d:	90                   	nop

000000000000534e <_ZNSt12_Vector_baseItSaItEEC1ERKS0_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    534e:	55                   	push   %rbp
    534f:	48 89 e5             	mov    %rsp,%rbp
    5352:	48 83 ec 10          	sub    $0x10,%rsp
    5356:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    535a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    535e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5362:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5366:	48 89 d6             	mov    %rdx,%rsi
    5369:	48 89 c7             	mov    %rax,%rdi
    536c:	e8 99 03 00 00       	call   570a <_ZNSt12_Vector_baseItSaItEE12_Vector_implC1ERKS0_>
    5371:	90                   	nop
    5372:	c9                   	leave
    5373:	c3                   	ret

0000000000005374 <_ZNSt12_Vector_baseItSaItEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5374:	55                   	push   %rbp
    5375:	48 89 e5             	mov    %rsp,%rbp
    5378:	48 83 ec 10          	sub    $0x10,%rsp
    537c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5380:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5384:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5388:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    538c:	48 8b 00             	mov    (%rax),%rax
    538f:	48 29 c2             	sub    %rax,%rdx
    5392:	48 89 d0             	mov    %rdx,%rax
    5395:	48 d1 f8             	sar    %rax
	_M_deallocate(_M_impl._M_start,
    5398:	48 89 c2             	mov    %rax,%rdx
    539b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    539f:	48 8b 08             	mov    (%rax),%rcx
    53a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53a6:	48 89 ce             	mov    %rcx,%rsi
    53a9:	48 89 c7             	mov    %rax,%rdi
    53ac:	e8 8b 03 00 00       	call   573c <_ZNSt12_Vector_baseItSaItEE13_M_deallocateEPtm>
      }
    53b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53b5:	48 89 c7             	mov    %rax,%rdi
    53b8:	e8 75 ff ff ff       	call   5332 <_ZNSt12_Vector_baseItSaItEE12_Vector_implD1Ev>
    53bd:	90                   	nop
    53be:	c9                   	leave
    53bf:	c3                   	ret

00000000000053c0 <_ZNKSt16initializer_listItE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
    53c0:	55                   	push   %rbp
    53c1:	48 89 e5             	mov    %rsp,%rbp
    53c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53cc:	48 8b 00             	mov    (%rax),%rax
    53cf:	5d                   	pop    %rbp
    53d0:	c3                   	ret
    53d1:	90                   	nop

00000000000053d2 <_ZNKSt16initializer_listItE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
    53d2:	55                   	push   %rbp
    53d3:	48 89 e5             	mov    %rsp,%rbp
    53d6:	53                   	push   %rbx
    53d7:	48 83 ec 18          	sub    $0x18,%rsp
    53db:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    53df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    53e3:	48 89 c7             	mov    %rax,%rdi
    53e6:	e8 d5 ff ff ff       	call   53c0 <_ZNKSt16initializer_listItE5beginEv>
    53eb:	48 89 c3             	mov    %rax,%rbx
    53ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    53f2:	48 89 c7             	mov    %rax,%rdi
    53f5:	e8 78 03 00 00       	call   5772 <_ZNKSt16initializer_listItE4sizeEv>
    53fa:	48 01 c0             	add    %rax,%rax
    53fd:	48 01 d8             	add    %rbx,%rax
    5400:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5404:	c9                   	leave
    5405:	c3                   	ret

0000000000005406 <_ZSt8distanceIPKtENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    5406:	55                   	push   %rbp
    5407:	48 89 e5             	mov    %rsp,%rbp
    540a:	48 83 ec 10          	sub    $0x10,%rsp
    540e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5412:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    5416:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    541a:	48 89 c7             	mov    %rax,%rdi
    541d:	e8 62 03 00 00       	call   5784 <_ZSt19__iterator_categoryIPKtENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    5422:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5426:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    542a:	48 89 d6             	mov    %rdx,%rsi
    542d:	48 89 c7             	mov    %rax,%rdi
    5430:	e8 5a 03 00 00       	call   578f <_ZSt10__distanceIPKtENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    5435:	c9                   	leave
    5436:	c3                   	ret
    5437:	90                   	nop

0000000000005438 <_ZNSt6vectorItSaItEE19_M_range_initializeIPKtEEvT_S5_St20forward_iterator_tag>:

      // Called by the second initialize_dispatch above
      template<typename _ForwardIterator>
	_GLIBCXX20_CONSTEXPR
	void
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    5438:	55                   	push   %rbp
    5439:	48 89 e5             	mov    %rsp,%rbp
    543c:	53                   	push   %rbx
    543d:	48 83 ec 38          	sub    $0x38,%rsp
    5441:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5445:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5449:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
			    std::forward_iterator_tag)
	{
	  const size_type __n = std::distance(__first, __last);
    544d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5451:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5455:	48 89 d6             	mov    %rdx,%rsi
    5458:	48 89 c7             	mov    %rax,%rdi
    545b:	e8 a6 ff ff ff       	call   5406 <_ZSt8distanceIPKtENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    5460:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  this->_M_impl._M_start
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    5464:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    5468:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    546c:	48 89 c7             	mov    %rax,%rdi
    546f:	e8 94 03 00 00       	call   5808 <_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv>
    5474:	48 89 c2             	mov    %rax,%rdx
    5477:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    547b:	48 89 d6             	mov    %rdx,%rsi
    547e:	48 89 c7             	mov    %rax,%rdi
    5481:	e8 22 03 00 00       	call   57a8 <_ZNSt6vectorItSaItEE17_S_check_init_lenEmRKS0_>
    5486:	48 89 c6             	mov    %rax,%rsi
    5489:	48 89 df             	mov    %rbx,%rdi
    548c:	e8 85 03 00 00       	call   5816 <_ZNSt12_Vector_baseItSaItEE11_M_allocateEm>
    5491:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5495:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    5498:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    549c:	48 8b 00             	mov    (%rax),%rax
    549f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    54a3:	48 01 d2             	add    %rdx,%rdx
    54a6:	48 01 c2             	add    %rax,%rdx
    54a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    54ad:	48 89 50 10          	mov    %rdx,0x10(%rax)
	  this->_M_impl._M_finish =
	    std::__uninitialized_copy_a(__first, __last,
					this->_M_impl._M_start,
					_M_get_Tp_allocator());
    54b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    54b5:	48 89 c7             	mov    %rax,%rdi
    54b8:	e8 4b 03 00 00       	call   5808 <_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv>
    54bd:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    54c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    54c4:	48 8b 10             	mov    (%rax),%rdx
    54c7:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    54cb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    54cf:	48 89 c7             	mov    %rax,%rdi
    54d2:	e8 72 03 00 00       	call   5849 <_ZSt22__uninitialized_copy_aIPKtPttET0_T_S4_S3_RSaIT1_E>
	  this->_M_impl._M_finish =
    54d7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    54db:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    54df:	90                   	nop
    54e0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    54e4:	c9                   	leave
    54e5:	c3                   	ret

00000000000054e6 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    54e6:	55                   	push   %rbp
    54e7:	48 89 e5             	mov    %rsp,%rbp
    54ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54ee:	90                   	nop
    54ef:	5d                   	pop    %rbp
    54f0:	c3                   	ret
    54f1:	90                   	nop

00000000000054f2 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    54f2:	55                   	push   %rbp
    54f3:	48 89 e5             	mov    %rsp,%rbp
    54f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54fa:	90                   	nop
    54fb:	5d                   	pop    %rbp
    54fc:	c3                   	ret
    54fd:	90                   	nop

00000000000054fe <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    54fe:	55                   	push   %rbp
    54ff:	48 89 e5             	mov    %rsp,%rbp
    5502:	48 83 ec 10          	sub    $0x10,%rsp
    5506:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    550a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    550e:	48 89 c7             	mov    %rax,%rdi
    5511:	e8 94 fb ff ff       	call   50aa <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
    5516:	90                   	nop
    5517:	c9                   	leave
    5518:	c3                   	ret
    5519:	90                   	nop

000000000000551a <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ERKS5_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    551a:	55                   	push   %rbp
    551b:	48 89 e5             	mov    %rsp,%rbp
    551e:	48 83 ec 10          	sub    $0x10,%rsp
    5522:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5526:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    552a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    552e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5532:	48 89 d6             	mov    %rdx,%rsi
    5535:	48 89 c7             	mov    %rax,%rdi
    5538:	e8 3d 03 00 00       	call   587a <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE12_Vector_implC1ERKS5_>
    553d:	90                   	nop
    553e:	c9                   	leave
    553f:	c3                   	ret

0000000000005540 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5540:	55                   	push   %rbp
    5541:	48 89 e5             	mov    %rsp,%rbp
    5544:	48 83 ec 10          	sub    $0x10,%rsp
    5548:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    554c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5550:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5554:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5558:	48 8b 00             	mov    (%rax),%rax
    555b:	48 29 c2             	sub    %rax,%rdx
    555e:	48 c1 fa 02          	sar    $0x2,%rdx
    5562:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    5569:	cc cc cc 
    556c:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    5570:	48 89 c2             	mov    %rax,%rdx
    5573:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5577:	48 8b 08             	mov    (%rax),%rcx
    557a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    557e:	48 89 ce             	mov    %rcx,%rsi
    5581:	48 89 c7             	mov    %rax,%rdi
    5584:	e8 23 03 00 00       	call   58ac <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE13_M_deallocateEPS4_m>
      }
    5589:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    558d:	48 89 c7             	mov    %rax,%rdi
    5590:	e8 69 ff ff ff       	call   54fe <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE12_Vector_implD1Ev>
    5595:	90                   	nop
    5596:	c9                   	leave
    5597:	c3                   	ret

0000000000005598 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE5beginEv>:
      begin() const noexcept { return _M_array; }
    5598:	55                   	push   %rbp
    5599:	48 89 e5             	mov    %rsp,%rbp
    559c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55a4:	48 8b 00             	mov    (%rax),%rax
    55a7:	5d                   	pop    %rbp
    55a8:	c3                   	ret
    55a9:	90                   	nop

00000000000055aa <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE3endEv>:
      end() const noexcept { return begin() + size(); }
    55aa:	55                   	push   %rbp
    55ab:	48 89 e5             	mov    %rsp,%rbp
    55ae:	53                   	push   %rbx
    55af:	48 83 ec 18          	sub    $0x18,%rsp
    55b3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    55b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    55bb:	48 89 c7             	mov    %rax,%rdi
    55be:	e8 d5 ff ff ff       	call   5598 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE5beginEv>
    55c3:	48 89 c3             	mov    %rax,%rbx
    55c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    55ca:	48 89 c7             	mov    %rax,%rdi
    55cd:	e8 10 03 00 00       	call   58e2 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE4sizeEv>
    55d2:	48 89 c2             	mov    %rax,%rdx
    55d5:	48 89 d0             	mov    %rdx,%rax
    55d8:	48 c1 e0 02          	shl    $0x2,%rax
    55dc:	48 01 d0             	add    %rdx,%rax
    55df:	48 c1 e0 02          	shl    $0x2,%rax
    55e3:	48 01 d8             	add    %rbx,%rax
    55e6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    55ea:	c9                   	leave
    55eb:	c3                   	ret

00000000000055ec <_ZSt8distanceIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E15difference_typeES8_S8_>:
    distance(_InputIterator __first, _InputIterator __last)
    55ec:	55                   	push   %rbp
    55ed:	48 89 e5             	mov    %rsp,%rbp
    55f0:	48 83 ec 10          	sub    $0x10,%rsp
    55f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    55fc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5600:	48 89 c7             	mov    %rax,%rdi
    5603:	e8 ec 02 00 00       	call   58f4 <_ZSt19__iterator_categoryIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E17iterator_categoryERKS8_>
      return std::__distance(__first, __last,
    5608:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    560c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5610:	48 89 d6             	mov    %rdx,%rsi
    5613:	48 89 c7             	mov    %rax,%rdi
    5616:	e8 e4 02 00 00       	call   58ff <_ZSt10__distanceIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E15difference_typeES8_S8_St26random_access_iterator_tag>
    }
    561b:	c9                   	leave
    561c:	c3                   	ret
    561d:	90                   	nop

000000000000561e <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_range_initializeIPKS4_EEvT_SA_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    561e:	55                   	push   %rbp
    561f:	48 89 e5             	mov    %rsp,%rbp
    5622:	53                   	push   %rbx
    5623:	48 83 ec 38          	sub    $0x38,%rsp
    5627:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    562b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    562f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    5633:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5637:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    563b:	48 89 d6             	mov    %rdx,%rsi
    563e:	48 89 c7             	mov    %rax,%rdi
    5641:	e8 a6 ff ff ff       	call   55ec <_ZSt8distanceIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E15difference_typeES8_S8_>
    5646:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    564a:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    564e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5652:	48 89 c7             	mov    %rax,%rdi
    5655:	e8 30 03 00 00       	call   598a <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_get_Tp_allocatorEv>
    565a:	48 89 c2             	mov    %rax,%rdx
    565d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5661:	48 89 d6             	mov    %rdx,%rsi
    5664:	48 89 c7             	mov    %rax,%rdi
    5667:	e8 be 02 00 00       	call   592a <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE17_S_check_init_lenEmRKS5_>
    566c:	48 89 c6             	mov    %rax,%rsi
    566f:	48 89 df             	mov    %rbx,%rdi
    5672:	e8 21 03 00 00       	call   5998 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_allocateEm>
    5677:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    567b:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    567e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5682:	48 8b 08             	mov    (%rax),%rcx
    5685:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5689:	48 89 d0             	mov    %rdx,%rax
    568c:	48 c1 e0 02          	shl    $0x2,%rax
    5690:	48 01 d0             	add    %rdx,%rax
    5693:	48 c1 e0 02          	shl    $0x2,%rax
    5697:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    569b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    569f:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    56a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    56a7:	48 89 c7             	mov    %rax,%rdi
    56aa:	e8 db 02 00 00       	call   598a <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_get_Tp_allocatorEv>
    56af:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    56b2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    56b6:	48 8b 10             	mov    (%rax),%rdx
    56b9:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    56bd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    56c1:	48 89 c7             	mov    %rax,%rdi
    56c4:	e8 02 03 00 00       	call   59cb <_ZSt22__uninitialized_copy_aIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_S4_ET0_T_S9_S8_RSaIT1_E>
	  this->_M_impl._M_finish =
    56c9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    56cd:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    56d1:	90                   	nop
    56d2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    56d6:	c9                   	leave
    56d7:	c3                   	ret

00000000000056d8 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
    distance(_InputIterator __first, _InputIterator __last)
    56d8:	55                   	push   %rbp
    56d9:	48 89 e5             	mov    %rsp,%rbp
    56dc:	48 83 ec 10          	sub    $0x10,%rsp
    56e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    56e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    56e8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    56ec:	48 89 c7             	mov    %rax,%rdi
    56ef:	e8 08 03 00 00       	call   59fc <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    56f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    56fc:	48 89 d6             	mov    %rdx,%rsi
    56ff:	48 89 c7             	mov    %rax,%rdi
    5702:	e8 00 03 00 00       	call   5a07 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    5707:	c9                   	leave
    5708:	c3                   	ret
    5709:	90                   	nop

000000000000570a <_ZNSt12_Vector_baseItSaItEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    570a:	55                   	push   %rbp
    570b:	48 89 e5             	mov    %rsp,%rbp
    570e:	48 83 ec 10          	sub    $0x10,%rsp
    5712:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5716:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    571a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    571e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5722:	48 89 d6             	mov    %rdx,%rsi
    5725:	48 89 c7             	mov    %rax,%rdi
    5728:	e8 f1 02 00 00       	call   5a1e <_ZNSaItEC1ERKS_>
    572d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5731:	48 89 c7             	mov    %rax,%rdi
    5734:	e8 0b 03 00 00       	call   5a44 <_ZNSt12_Vector_baseItSaItEE17_Vector_impl_dataC1Ev>
	{ }
    5739:	90                   	nop
    573a:	c9                   	leave
    573b:	c3                   	ret

000000000000573c <_ZNSt12_Vector_baseItSaItEE13_M_deallocateEPtm>:
      _M_deallocate(pointer __p, size_t __n)
    573c:	55                   	push   %rbp
    573d:	48 89 e5             	mov    %rsp,%rbp
    5740:	48 83 ec 20          	sub    $0x20,%rsp
    5744:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5748:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    574c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5750:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5755:	74 17                	je     576e <_ZNSt12_Vector_baseItSaItEE13_M_deallocateEPtm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5757:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    575b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    575f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5763:	48 89 ce             	mov    %rcx,%rsi
    5766:	48 89 c7             	mov    %rax,%rdi
    5769:	e8 04 03 00 00       	call   5a72 <_ZNSt16allocator_traitsISaItEE10deallocateERS0_Ptm>
      }
    576e:	90                   	nop
    576f:	c9                   	leave
    5770:	c3                   	ret
    5771:	90                   	nop

0000000000005772 <_ZNKSt16initializer_listItE4sizeEv>:
      size() const noexcept { return _M_len; }
    5772:	55                   	push   %rbp
    5773:	48 89 e5             	mov    %rsp,%rbp
    5776:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    577a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    577e:	48 8b 40 08          	mov    0x8(%rax),%rax
    5782:	5d                   	pop    %rbp
    5783:	c3                   	ret

0000000000005784 <_ZSt19__iterator_categoryIPKtENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    5784:	55                   	push   %rbp
    5785:	48 89 e5             	mov    %rsp,%rbp
    5788:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    578c:	90                   	nop
    578d:	5d                   	pop    %rbp
    578e:	c3                   	ret

000000000000578f <_ZSt10__distanceIPKtENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    578f:	55                   	push   %rbp
    5790:	48 89 e5             	mov    %rsp,%rbp
    5793:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5797:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    579b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    579f:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    57a3:	48 d1 f8             	sar    %rax
    }
    57a6:	5d                   	pop    %rbp
    57a7:	c3                   	ret

00000000000057a8 <_ZNSt6vectorItSaItEE17_S_check_init_lenEmRKS0_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    57a8:	55                   	push   %rbp
    57a9:	48 89 e5             	mov    %rsp,%rbp
    57ac:	53                   	push   %rbx
    57ad:	48 83 ec 28          	sub    $0x28,%rsp
    57b1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    57b5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    57b9:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    57bd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    57c1:	48 89 d6             	mov    %rdx,%rsi
    57c4:	48 89 c7             	mov    %rax,%rdi
    57c7:	e8 52 02 00 00       	call   5a1e <_ZNSaItEC1ERKS_>
    57cc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    57d0:	48 89 c7             	mov    %rax,%rdi
    57d3:	e8 c8 02 00 00       	call   5aa0 <_ZNSt6vectorItSaItEE11_S_max_sizeERKS0_>
    57d8:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    57dc:	0f 92 c3             	setb   %bl
    57df:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    57e3:	48 89 c7             	mov    %rax,%rdi
    57e6:	e8 ff f7 ff ff       	call   4fea <_ZNSaItED1Ev>
    57eb:	84 db                	test   %bl,%bl
    57ed:	74 0f                	je     57fe <_ZNSt6vectorItSaItEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
    57ef:	48 8d 05 9a 7e 01 00 	lea    0x17e9a(%rip),%rax        # 1d690 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x60>
    57f6:	48 89 c7             	mov    %rax,%rdi
    57f9:	e8 f2 e9 ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    57fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5802:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5806:	c9                   	leave
    5807:	c3                   	ret

0000000000005808 <_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5808:	55                   	push   %rbp
    5809:	48 89 e5             	mov    %rsp,%rbp
    580c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5810:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5814:	5d                   	pop    %rbp
    5815:	c3                   	ret

0000000000005816 <_ZNSt12_Vector_baseItSaItEE11_M_allocateEm>:
      _M_allocate(size_t __n)
    5816:	55                   	push   %rbp
    5817:	48 89 e5             	mov    %rsp,%rbp
    581a:	48 83 ec 10          	sub    $0x10,%rsp
    581e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5822:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    5826:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    582b:	74 15                	je     5842 <_ZNSt12_Vector_baseItSaItEE11_M_allocateEm+0x2c>
    582d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5831:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5835:	48 89 d6             	mov    %rdx,%rsi
    5838:	48 89 c7             	mov    %rax,%rdi
    583b:	e8 a2 02 00 00       	call   5ae2 <_ZNSt16allocator_traitsISaItEE8allocateERS0_m>
    5840:	eb 05                	jmp    5847 <_ZNSt12_Vector_baseItSaItEE11_M_allocateEm+0x31>
    5842:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    5847:	c9                   	leave
    5848:	c3                   	ret

0000000000005849 <_ZSt22__uninitialized_copy_aIPKtPttET0_T_S4_S3_RSaIT1_E>:
    }

  template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    5849:	55                   	push   %rbp
    584a:	48 89 e5             	mov    %rsp,%rbp
    584d:	48 83 ec 20          	sub    $0x20,%rsp
    5851:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5855:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5859:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    585d:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    {
#ifdef __cpp_lib_is_constant_evaluated
      if (std::is_constant_evaluated())
	return std::__do_uninit_copy(__first, __last, __result);
#endif
      return std::uninitialized_copy(__first, __last, __result);
    5861:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5865:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5869:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    586d:	48 89 ce             	mov    %rcx,%rsi
    5870:	48 89 c7             	mov    %rax,%rdi
    5873:	e8 94 02 00 00       	call   5b0c <_ZSt18uninitialized_copyIPKtPtET0_T_S4_S3_>
    }
    5878:	c9                   	leave
    5879:	c3                   	ret

000000000000587a <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE12_Vector_implC1ERKS5_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    587a:	55                   	push   %rbp
    587b:	48 89 e5             	mov    %rsp,%rbp
    587e:	48 83 ec 10          	sub    $0x10,%rsp
    5882:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5886:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    588a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    588e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5892:	48 89 d6             	mov    %rdx,%rsi
    5895:	48 89 c7             	mov    %rax,%rdi
    5898:	e8 a5 02 00 00       	call   5b42 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1ERKS4_>
    589d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58a1:	48 89 c7             	mov    %rax,%rdi
    58a4:	e8 bf 02 00 00       	call   5b68 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE17_Vector_impl_dataC1Ev>
	{ }
    58a9:	90                   	nop
    58aa:	c9                   	leave
    58ab:	c3                   	ret

00000000000058ac <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE13_M_deallocateEPS4_m>:
      _M_deallocate(pointer __p, size_t __n)
    58ac:	55                   	push   %rbp
    58ad:	48 89 e5             	mov    %rsp,%rbp
    58b0:	48 83 ec 20          	sub    $0x20,%rsp
    58b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    58b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    58bc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    58c0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    58c5:	74 17                	je     58de <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE13_M_deallocateEPS4_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    58c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58cb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    58cf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    58d3:	48 89 ce             	mov    %rcx,%rsi
    58d6:	48 89 c7             	mov    %rax,%rdi
    58d9:	e8 b8 02 00 00       	call   5b96 <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE10deallocateERS5_PS4_m>
      }
    58de:	90                   	nop
    58df:	c9                   	leave
    58e0:	c3                   	ret
    58e1:	90                   	nop

00000000000058e2 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE4sizeEv>:
    58e2:	55                   	push   %rbp
    58e3:	48 89 e5             	mov    %rsp,%rbp
    58e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    58ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58ee:	48 8b 40 08          	mov    0x8(%rax),%rax
    58f2:	5d                   	pop    %rbp
    58f3:	c3                   	ret

00000000000058f4 <_ZSt19__iterator_categoryIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E17iterator_categoryERKS8_>:
    __iterator_category(const _Iter&)
    58f4:	55                   	push   %rbp
    58f5:	48 89 e5             	mov    %rsp,%rbp
    58f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    58fc:	90                   	nop
    58fd:	5d                   	pop    %rbp
    58fe:	c3                   	ret

00000000000058ff <_ZSt10__distanceIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E15difference_typeES8_S8_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    58ff:	55                   	push   %rbp
    5900:	48 89 e5             	mov    %rsp,%rbp
    5903:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5907:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    590b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    590f:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    5913:	48 c1 f8 02          	sar    $0x2,%rax
    5917:	48 89 c2             	mov    %rax,%rdx
    591a:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    5921:	cc cc cc 
    5924:	48 0f af c2          	imul   %rdx,%rax
    }
    5928:	5d                   	pop    %rbp
    5929:	c3                   	ret

000000000000592a <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE17_S_check_init_lenEmRKS5_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    592a:	55                   	push   %rbp
    592b:	48 89 e5             	mov    %rsp,%rbp
    592e:	53                   	push   %rbx
    592f:	48 83 ec 28          	sub    $0x28,%rsp
    5933:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5937:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    593b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    593f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5943:	48 89 d6             	mov    %rdx,%rsi
    5946:	48 89 c7             	mov    %rax,%rdi
    5949:	e8 f4 01 00 00       	call   5b42 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1ERKS4_>
    594e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5952:	48 89 c7             	mov    %rax,%rdi
    5955:	e8 6a 02 00 00       	call   5bc4 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_S_max_sizeERKS5_>
    595a:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    595e:	0f 92 c3             	setb   %bl
    5961:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5965:	48 89 c7             	mov    %rax,%rdi
    5968:	e8 3d f7 ff ff       	call   50aa <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
    596d:	84 db                	test   %bl,%bl
    596f:	74 0f                	je     5980 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE17_S_check_init_lenEmRKS5_+0x56>
	  __throw_length_error(
    5971:	48 8d 05 18 7d 01 00 	lea    0x17d18(%rip),%rax        # 1d690 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x60>
    5978:	48 89 c7             	mov    %rax,%rdi
    597b:	e8 70 e8 ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    5980:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5984:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5988:	c9                   	leave
    5989:	c3                   	ret

000000000000598a <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    598a:	55                   	push   %rbp
    598b:	48 89 e5             	mov    %rsp,%rbp
    598e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5992:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5996:	5d                   	pop    %rbp
    5997:	c3                   	ret

0000000000005998 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    5998:	55                   	push   %rbp
    5999:	48 89 e5             	mov    %rsp,%rbp
    599c:	48 83 ec 10          	sub    $0x10,%rsp
    59a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    59a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    59a8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    59ad:	74 15                	je     59c4 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_allocateEm+0x2c>
    59af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59b3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    59b7:	48 89 d6             	mov    %rdx,%rsi
    59ba:	48 89 c7             	mov    %rax,%rdi
    59bd:	e8 44 02 00 00       	call   5c06 <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE8allocateERS5_m>
    59c2:	eb 05                	jmp    59c9 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_allocateEm+0x31>
    59c4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    59c9:	c9                   	leave
    59ca:	c3                   	ret

00000000000059cb <_ZSt22__uninitialized_copy_aIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_S4_ET0_T_S9_S8_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    59cb:	55                   	push   %rbp
    59cc:	48 89 e5             	mov    %rsp,%rbp
    59cf:	48 83 ec 20          	sub    $0x20,%rsp
    59d3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    59d7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    59db:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    59df:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
    59e3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    59e7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    59eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59ef:	48 89 ce             	mov    %rcx,%rsi
    59f2:	48 89 c7             	mov    %rax,%rdi
    59f5:	e8 36 02 00 00       	call   5c30 <_ZSt18uninitialized_copyIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET0_T_S9_S8_>
    }
    59fa:	c9                   	leave
    59fb:	c3                   	ret

00000000000059fc <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    59fc:	55                   	push   %rbp
    59fd:	48 89 e5             	mov    %rsp,%rbp
    5a00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    5a04:	90                   	nop
    5a05:	5d                   	pop    %rbp
    5a06:	c3                   	ret

0000000000005a07 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    5a07:	55                   	push   %rbp
    5a08:	48 89 e5             	mov    %rsp,%rbp
    5a0b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a0f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    5a13:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5a17:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    5a1b:	5d                   	pop    %rbp
    5a1c:	c3                   	ret
    5a1d:	90                   	nop

0000000000005a1e <_ZNSaItEC1ERKS_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    5a1e:	55                   	push   %rbp
    5a1f:	48 89 e5             	mov    %rsp,%rbp
    5a22:	48 83 ec 10          	sub    $0x10,%rsp
    5a26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    5a2e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5a32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a36:	48 89 d6             	mov    %rdx,%rsi
    5a39:	48 89 c7             	mov    %rax,%rdi
    5a3c:	e8 25 02 00 00       	call   5c66 <_ZNSt15__new_allocatorItEC1ERKS0_>
    5a41:	90                   	nop
    5a42:	c9                   	leave
    5a43:	c3                   	ret

0000000000005a44 <_ZNSt12_Vector_baseItSaItEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5a44:	55                   	push   %rbp
    5a45:	48 89 e5             	mov    %rsp,%rbp
    5a48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    5a4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a50:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5a57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a5b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5a62:	00 
    5a63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a67:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5a6e:	00 
	{ }
    5a6f:	90                   	nop
    5a70:	5d                   	pop    %rbp
    5a71:	c3                   	ret

0000000000005a72 <_ZNSt16allocator_traitsISaItEE10deallocateERS0_Ptm>:
       *  @param  __n  The number of objects space was allocated for.
       *
       *  Calls <tt> a.deallocate(p, n) </tt>
      */
      static _GLIBCXX20_CONSTEXPR void
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    5a72:	55                   	push   %rbp
    5a73:	48 89 e5             	mov    %rsp,%rbp
    5a76:	48 83 ec 20          	sub    $0x20,%rsp
    5a7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5a82:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    5a86:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5a8a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5a8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a92:	48 89 ce             	mov    %rcx,%rsi
    5a95:	48 89 c7             	mov    %rax,%rdi
    5a98:	e8 d9 01 00 00       	call   5c76 <_ZNSt15__new_allocatorItE10deallocateEPtm>
    5a9d:	90                   	nop
    5a9e:	c9                   	leave
    5a9f:	c3                   	ret

0000000000005aa0 <_ZNSt6vectorItSaItEE11_S_max_sizeERKS0_>:

      static _GLIBCXX20_CONSTEXPR size_type
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    5aa0:	55                   	push   %rbp
    5aa1:	48 89 e5             	mov    %rsp,%rbp
    5aa4:	48 83 ec 20          	sub    $0x20,%rsp
    5aa8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      {
	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
	// (even if std::allocator_traits::max_size says we can).
	const size_t __diffmax
    5aac:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    5ab3:	ff ff 3f 
    5ab6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    5aba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5abe:	48 89 c7             	mov    %rax,%rdi
    5ac1:	e8 dd 01 00 00       	call   5ca3 <_ZNSt16allocator_traitsISaItEE8max_sizeERKS0_>
    5ac6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    5aca:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    5ace:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5ad2:	48 89 d6             	mov    %rdx,%rsi
    5ad5:	48 89 c7             	mov    %rax,%rdi
    5ad8:	e8 e0 01 00 00       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    5add:	48 8b 00             	mov    (%rax),%rax
      }
    5ae0:	c9                   	leave
    5ae1:	c3                   	ret

0000000000005ae2 <_ZNSt16allocator_traitsISaItEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
    5ae2:	55                   	push   %rbp
    5ae3:	48 89 e5             	mov    %rsp,%rbp
    5ae6:	48 83 ec 10          	sub    $0x10,%rsp
    5aea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5aee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    5af2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5af6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5afa:	ba 00 00 00 00       	mov    $0x0,%edx
    5aff:	48 89 ce             	mov    %rcx,%rsi
    5b02:	48 89 c7             	mov    %rax,%rdi
    5b05:	e8 de 01 00 00       	call   5ce8 <_ZNSt15__new_allocatorItE8allocateEmPKv>
    5b0a:	c9                   	leave
    5b0b:	c3                   	ret

0000000000005b0c <_ZSt18uninitialized_copyIPKtPtET0_T_S4_S3_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    5b0c:	55                   	push   %rbp
    5b0d:	48 89 e5             	mov    %rsp,%rbp
    5b10:	48 83 ec 30          	sub    $0x30,%rsp
    5b14:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5b18:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5b1c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    5b20:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    5b24:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    5b28:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5b2c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    5b30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b34:	48 89 ce             	mov    %rcx,%rsi
    5b37:	48 89 c7             	mov    %rax,%rdi
    5b3a:	e8 02 02 00 00       	call   5d41 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKtPtEET0_T_S6_S5_>
    }
    5b3f:	c9                   	leave
    5b40:	c3                   	ret
    5b41:	90                   	nop

0000000000005b42 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1ERKS4_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    5b42:	55                   	push   %rbp
    5b43:	48 89 e5             	mov    %rsp,%rbp
    5b46:	48 83 ec 10          	sub    $0x10,%rsp
    5b4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    5b52:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5b56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b5a:	48 89 d6             	mov    %rdx,%rsi
    5b5d:	48 89 c7             	mov    %rax,%rdi
    5b60:	e8 09 02 00 00       	call   5d6e <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEC1ERKS5_>
    5b65:	90                   	nop
    5b66:	c9                   	leave
    5b67:	c3                   	ret

0000000000005b68 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5b68:	55                   	push   %rbp
    5b69:	48 89 e5             	mov    %rsp,%rbp
    5b6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    5b70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b74:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5b7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b7f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5b86:	00 
    5b87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b8b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5b92:	00 
	{ }
    5b93:	90                   	nop
    5b94:	5d                   	pop    %rbp
    5b95:	c3                   	ret

0000000000005b96 <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE10deallocateERS5_PS4_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    5b96:	55                   	push   %rbp
    5b97:	48 89 e5             	mov    %rsp,%rbp
    5b9a:	48 83 ec 20          	sub    $0x20,%rsp
    5b9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ba2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5ba6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    5baa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5bae:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5bb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5bb6:	48 89 ce             	mov    %rcx,%rsi
    5bb9:	48 89 c7             	mov    %rax,%rdi
    5bbc:	e8 bd 01 00 00       	call   5d7e <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE10deallocateEPS4_m>
    5bc1:	90                   	nop
    5bc2:	c9                   	leave
    5bc3:	c3                   	ret

0000000000005bc4 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_S_max_sizeERKS5_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    5bc4:	55                   	push   %rbp
    5bc5:	48 89 e5             	mov    %rsp,%rbp
    5bc8:	48 83 ec 20          	sub    $0x20,%rsp
    5bcc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    5bd0:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
    5bd7:	66 66 06 
    5bda:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    5bde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5be2:	48 89 c7             	mov    %rax,%rdi
    5be5:	e8 ce 01 00 00       	call   5db8 <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE8max_sizeERKS5_>
    5bea:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    5bee:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    5bf2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5bf6:	48 89 d6             	mov    %rdx,%rsi
    5bf9:	48 89 c7             	mov    %rax,%rdi
    5bfc:	e8 bc 00 00 00       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    5c01:	48 8b 00             	mov    (%rax),%rax
      }
    5c04:	c9                   	leave
    5c05:	c3                   	ret

0000000000005c06 <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE8allocateERS5_m>:
      allocate(allocator_type& __a, size_type __n)
    5c06:	55                   	push   %rbp
    5c07:	48 89 e5             	mov    %rsp,%rbp
    5c0a:	48 83 ec 10          	sub    $0x10,%rsp
    5c0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    5c16:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5c1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c1e:	ba 00 00 00 00       	mov    $0x0,%edx
    5c23:	48 89 ce             	mov    %rcx,%rsi
    5c26:	48 89 c7             	mov    %rax,%rdi
    5c29:	e8 a4 01 00 00       	call   5dd2 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8allocateEmPKv>
    5c2e:	c9                   	leave
    5c2f:	c3                   	ret

0000000000005c30 <_ZSt18uninitialized_copyIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET0_T_S9_S8_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    5c30:	55                   	push   %rbp
    5c31:	48 89 e5             	mov    %rsp,%rbp
    5c34:	48 83 ec 30          	sub    $0x30,%rsp
    5c38:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5c3c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5c40:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    5c44:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    5c48:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    5c4c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5c50:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    5c54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5c58:	48 89 ce             	mov    %rcx,%rsi
    5c5b:	48 89 c7             	mov    %rax,%rdi
    5c5e:	e8 da 01 00 00       	call   5e3d <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKN3vkh6VertexILNS2_11PositionDimE0ELNS2_8ColorDimE0EEEPS6_EET0_T_SB_SA_>
    }
    5c63:	c9                   	leave
    5c64:	c3                   	ret
    5c65:	90                   	nop

0000000000005c66 <_ZNSt15__new_allocatorItEC1ERKS0_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    5c66:	55                   	push   %rbp
    5c67:	48 89 e5             	mov    %rsp,%rbp
    5c6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c6e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5c72:	90                   	nop
    5c73:	5d                   	pop    %rbp
    5c74:	c3                   	ret
    5c75:	90                   	nop

0000000000005c76 <_ZNSt15__new_allocatorItE10deallocateEPtm>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    5c76:	55                   	push   %rbp
    5c77:	48 89 e5             	mov    %rsp,%rbp
    5c7a:	48 83 ec 20          	sub    $0x20,%rsp
    5c7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c82:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5c86:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    5c8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5c8e:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    5c92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5c96:	48 89 d6             	mov    %rdx,%rsi
    5c99:	48 89 c7             	mov    %rax,%rdi
    5c9c:	e8 ff e7 ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    5ca1:	c9                   	leave
    5ca2:	c3                   	ret

0000000000005ca3 <_ZNSt16allocator_traitsISaItEE8max_sizeERKS0_>:
       *  @brief  The maximum supported allocation size
       *  @param  __a  An allocator.
       *  @return @c __a.max_size()
      */
      static _GLIBCXX20_CONSTEXPR size_type
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    5ca3:	55                   	push   %rbp
    5ca4:	48 89 e5             	mov    %rsp,%rbp
    5ca7:	48 83 ec 10          	sub    $0x10,%rsp
    5cab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus <= 201703L
	return __a.max_size();
    5caf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cb3:	48 89 c7             	mov    %rax,%rdi
    5cb6:	e8 af 01 00 00       	call   5e6a <_ZNKSt15__new_allocatorItE8max_sizeEv>
#else
	return size_t(-1) / sizeof(value_type);
#endif
      }
    5cbb:	c9                   	leave
    5cbc:	c3                   	ret

0000000000005cbd <_ZSt3minImERKT_S2_S2_>:
   *  preprocessor macro.
  */
  template<typename _Tp>
    _GLIBCXX14_CONSTEXPR
    inline const _Tp&
    min(const _Tp& __a, const _Tp& __b)
    5cbd:	55                   	push   %rbp
    5cbe:	48 89 e5             	mov    %rsp,%rbp
    5cc1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5cc5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return __b < __a ? __b : __a;
      if (__b < __a)
    5cc9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5ccd:	48 8b 10             	mov    (%rax),%rdx
    5cd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cd4:	48 8b 00             	mov    (%rax),%rax
    5cd7:	48 39 c2             	cmp    %rax,%rdx
    5cda:	73 06                	jae    5ce2 <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    5cdc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5ce0:	eb 04                	jmp    5ce6 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    5ce2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    5ce6:	5d                   	pop    %rbp
    5ce7:	c3                   	ret

0000000000005ce8 <_ZNSt15__new_allocatorItE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    5ce8:	55                   	push   %rbp
    5ce9:	48 89 e5             	mov    %rsp,%rbp
    5cec:	48 83 ec 20          	sub    $0x20,%rsp
    5cf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5cf4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5cf8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    5cfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d00:	48 89 c7             	mov    %rax,%rdi
    5d03:	e8 7c 01 00 00       	call   5e84 <_ZNKSt15__new_allocatorItE11_M_max_sizeEv>
    5d08:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5d0c:	0f 92 c0             	setb   %al
    5d0f:	0f b6 c0             	movzbl %al,%eax
    5d12:	48 85 c0             	test   %rax,%rax
    5d15:	0f 95 c0             	setne  %al
    5d18:	84 c0                	test   %al,%al
    5d1a:	74 13                	je     5d2f <_ZNSt15__new_allocatorItE8allocateEmPKv+0x47>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    5d1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5d20:	48 85 c0             	test   %rax,%rax
    5d23:	79 05                	jns    5d2a <_ZNSt15__new_allocatorItE8allocateEmPKv+0x42>
	      std::__throw_bad_array_new_length();
    5d25:	e8 e6 e5 ff ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    5d2a:	e8 e1 e3 ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    5d2f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5d33:	48 01 c0             	add    %rax,%rax
    5d36:	48 89 c7             	mov    %rax,%rdi
    5d39:	e8 42 e7 ff ff       	call   4480 <_Znwm@plt>
    5d3e:	90                   	nop
      }
    5d3f:	c9                   	leave
    5d40:	c3                   	ret

0000000000005d41 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKtPtEET0_T_S6_S5_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    5d41:	55                   	push   %rbp
    5d42:	48 89 e5             	mov    %rsp,%rbp
    5d45:	48 83 ec 20          	sub    $0x20,%rsp
    5d49:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d4d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5d51:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    5d55:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5d59:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5d5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d61:	48 89 ce             	mov    %rcx,%rsi
    5d64:	48 89 c7             	mov    %rax,%rdi
    5d67:	e8 2c 01 00 00       	call   5e98 <_ZSt4copyIPKtPtET0_T_S4_S3_>
    5d6c:	c9                   	leave
    5d6d:	c3                   	ret

0000000000005d6e <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEC1ERKS5_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    5d6e:	55                   	push   %rbp
    5d6f:	48 89 e5             	mov    %rsp,%rbp
    5d72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5d7a:	90                   	nop
    5d7b:	5d                   	pop    %rbp
    5d7c:	c3                   	ret
    5d7d:	90                   	nop

0000000000005d7e <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE10deallocateEPS4_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    5d7e:	55                   	push   %rbp
    5d7f:	48 89 e5             	mov    %rsp,%rbp
    5d82:	48 83 ec 20          	sub    $0x20,%rsp
    5d86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5d8e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    5d92:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5d96:	48 89 d0             	mov    %rdx,%rax
    5d99:	48 c1 e0 02          	shl    $0x2,%rax
    5d9d:	48 01 d0             	add    %rdx,%rax
    5da0:	48 c1 e0 02          	shl    $0x2,%rax
    5da4:	48 89 c2             	mov    %rax,%rdx
    5da7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5dab:	48 89 d6             	mov    %rdx,%rsi
    5dae:	48 89 c7             	mov    %rax,%rdi
    5db1:	e8 ea e6 ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    5db6:	c9                   	leave
    5db7:	c3                   	ret

0000000000005db8 <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE8max_sizeERKS5_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    5db8:	55                   	push   %rbp
    5db9:	48 89 e5             	mov    %rsp,%rbp
    5dbc:	48 83 ec 10          	sub    $0x10,%rsp
    5dc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    5dc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dc8:	48 89 c7             	mov    %rax,%rdi
    5dcb:	e8 14 01 00 00       	call   5ee4 <_ZNKSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8max_sizeEv>
      }
    5dd0:	c9                   	leave
    5dd1:	c3                   	ret

0000000000005dd2 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    5dd2:	55                   	push   %rbp
    5dd3:	48 89 e5             	mov    %rsp,%rbp
    5dd6:	48 83 ec 20          	sub    $0x20,%rsp
    5dda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5dde:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5de2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    5de6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dea:	48 89 c7             	mov    %rax,%rdi
    5ded:	e8 0c 01 00 00       	call   5efe <_ZNKSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE11_M_max_sizeEv>
    5df2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5df6:	0f 92 c0             	setb   %al
    5df9:	0f b6 c0             	movzbl %al,%eax
    5dfc:	48 85 c0             	test   %rax,%rax
    5dff:	0f 95 c0             	setne  %al
    5e02:	84 c0                	test   %al,%al
    5e04:	74 1a                	je     5e20 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    5e06:	48 b8 cc cc cc cc cc 	movabs $0xccccccccccccccc,%rax
    5e0d:	cc cc 0c 
    5e10:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5e14:	73 05                	jae    5e1b <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    5e16:	e8 f5 e4 ff ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    5e1b:	e8 f0 e2 ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    5e20:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5e24:	48 89 d0             	mov    %rdx,%rax
    5e27:	48 c1 e0 02          	shl    $0x2,%rax
    5e2b:	48 01 d0             	add    %rdx,%rax
    5e2e:	48 c1 e0 02          	shl    $0x2,%rax
    5e32:	48 89 c7             	mov    %rax,%rdi
    5e35:	e8 46 e6 ff ff       	call   4480 <_Znwm@plt>
    5e3a:	90                   	nop
      }
    5e3b:	c9                   	leave
    5e3c:	c3                   	ret

0000000000005e3d <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKN3vkh6VertexILNS2_11PositionDimE0ELNS2_8ColorDimE0EEEPS6_EET0_T_SB_SA_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    5e3d:	55                   	push   %rbp
    5e3e:	48 89 e5             	mov    %rsp,%rbp
    5e41:	48 83 ec 20          	sub    $0x20,%rsp
    5e45:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e49:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5e4d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    5e51:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5e55:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5e59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e5d:	48 89 ce             	mov    %rcx,%rsi
    5e60:	48 89 c7             	mov    %rax,%rdi
    5e63:	e8 aa 00 00 00       	call   5f12 <_ZSt4copyIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET0_T_S9_S8_>
    5e68:	c9                   	leave
    5e69:	c3                   	ret

0000000000005e6a <_ZNKSt15__new_allocatorItE8max_sizeEv>:
#undef _GLIBCXX_OPERATOR_DELETE
#undef _GLIBCXX_OPERATOR_NEW

#if __cplusplus <= 201703L
      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
    5e6a:	55                   	push   %rbp
    5e6b:	48 89 e5             	mov    %rsp,%rbp
    5e6e:	48 83 ec 10          	sub    $0x10,%rsp
    5e72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    5e76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e7a:	48 89 c7             	mov    %rax,%rdi
    5e7d:	e8 02 00 00 00       	call   5e84 <_ZNKSt15__new_allocatorItE11_M_max_sizeEv>
    5e82:	c9                   	leave
    5e83:	c3                   	ret

0000000000005e84 <_ZNKSt15__new_allocatorItE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    5e84:	55                   	push   %rbp
    5e85:	48 89 e5             	mov    %rsp,%rbp
    5e88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    5e8c:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    5e93:	ff ff 3f 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    5e96:	5d                   	pop    %rbp
    5e97:	c3                   	ret

0000000000005e98 <_ZSt4copyIPKtPtET0_T_S4_S3_>:
   *  within [first,last).
  */
  template<typename _II, typename _OI>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    copy(_II __first, _II __last, _OI __result)
    5e98:	55                   	push   %rbp
    5e99:	48 89 e5             	mov    %rsp,%rbp
    5e9c:	53                   	push   %rbx
    5e9d:	48 83 ec 28          	sub    $0x28,%rsp
    5ea1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5ea5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5ea9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
	    typename iterator_traits<_II>::reference>)
      __glibcxx_requires_can_increment_range(__first, __last, __result);

      return std::__copy_move_a<__is_move_iterator<_II>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    5ead:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5eb1:	48 89 c7             	mov    %rax,%rdi
    5eb4:	e8 a4 00 00 00       	call   5f5d <_ZSt12__miter_baseIPKtET_S2_>
    5eb9:	48 89 c3             	mov    %rax,%rbx
    5ebc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ec0:	48 89 c7             	mov    %rax,%rdi
    5ec3:	e8 95 00 00 00       	call   5f5d <_ZSt12__miter_baseIPKtET_S2_>
    5ec8:	48 89 c1             	mov    %rax,%rcx
    5ecb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5ecf:	48 89 c2             	mov    %rax,%rdx
    5ed2:	48 89 de             	mov    %rbx,%rsi
    5ed5:	48 89 cf             	mov    %rcx,%rdi
    5ed8:	e8 8e 00 00 00       	call   5f6b <_ZSt13__copy_move_aILb0EPKtPtET1_T0_S4_S3_>
    }
    5edd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5ee1:	c9                   	leave
    5ee2:	c3                   	ret
    5ee3:	90                   	nop

0000000000005ee4 <_ZNKSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    5ee4:	55                   	push   %rbp
    5ee5:	48 89 e5             	mov    %rsp,%rbp
    5ee8:	48 83 ec 10          	sub    $0x10,%rsp
    5eec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    5ef0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ef4:	48 89 c7             	mov    %rax,%rdi
    5ef7:	e8 02 00 00 00       	call   5efe <_ZNKSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE11_M_max_sizeEv>
    5efc:	c9                   	leave
    5efd:	c3                   	ret

0000000000005efe <_ZNKSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    5efe:	55                   	push   %rbp
    5eff:	48 89 e5             	mov    %rsp,%rbp
    5f02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    5f06:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
    5f0d:	66 66 06 
      }
    5f10:	5d                   	pop    %rbp
    5f11:	c3                   	ret

0000000000005f12 <_ZSt4copyIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET0_T_S9_S8_>:
    copy(_II __first, _II __last, _OI __result)
    5f12:	55                   	push   %rbp
    5f13:	48 89 e5             	mov    %rsp,%rbp
    5f16:	53                   	push   %rbx
    5f17:	48 83 ec 28          	sub    $0x28,%rsp
    5f1b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5f1f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5f23:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    5f27:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5f2b:	48 89 c7             	mov    %rax,%rdi
    5f2e:	e8 a2 00 00 00       	call   5fd5 <_ZSt12__miter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>
    5f33:	48 89 c3             	mov    %rax,%rbx
    5f36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f3a:	48 89 c7             	mov    %rax,%rdi
    5f3d:	e8 93 00 00 00       	call   5fd5 <_ZSt12__miter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>
    5f42:	48 89 c1             	mov    %rax,%rcx
    5f45:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5f49:	48 89 c2             	mov    %rax,%rdx
    5f4c:	48 89 de             	mov    %rbx,%rsi
    5f4f:	48 89 cf             	mov    %rcx,%rdi
    5f52:	e8 8c 00 00 00       	call   5fe3 <_ZSt13__copy_move_aILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>
    }
    5f57:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5f5b:	c9                   	leave
    5f5c:	c3                   	ret

0000000000005f5d <_ZSt12__miter_baseIPKtET_S2_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    5f5d:	55                   	push   %rbp
    5f5e:	48 89 e5             	mov    %rsp,%rbp
    5f61:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    5f65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f69:	5d                   	pop    %rbp
    5f6a:	c3                   	ret

0000000000005f6b <_ZSt13__copy_move_aILb0EPKtPtET1_T0_S4_S3_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    5f6b:	55                   	push   %rbp
    5f6c:	48 89 e5             	mov    %rsp,%rbp
    5f6f:	41 54                	push   %r12
    5f71:	53                   	push   %rbx
    5f72:	48 83 ec 20          	sub    $0x20,%rsp
    5f76:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5f7a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5f7e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    5f82:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5f86:	48 89 c7             	mov    %rax,%rdi
    5f89:	e8 cd 00 00 00       	call   605b <_ZSt12__niter_baseIPtET_S1_>
    5f8e:	49 89 c4             	mov    %rax,%r12
    5f91:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5f95:	48 89 c7             	mov    %rax,%rdi
    5f98:	e8 b0 00 00 00       	call   604d <_ZSt12__niter_baseIPKtET_S2_>
    5f9d:	48 89 c3             	mov    %rax,%rbx
    5fa0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5fa4:	48 89 c7             	mov    %rax,%rdi
    5fa7:	e8 a1 00 00 00       	call   604d <_ZSt12__niter_baseIPKtET_S2_>
    5fac:	4c 89 e2             	mov    %r12,%rdx
    5faf:	48 89 de             	mov    %rbx,%rsi
    5fb2:	48 89 c7             	mov    %rax,%rdi
    5fb5:	e8 af 00 00 00       	call   6069 <_ZSt14__copy_move_a1ILb0EPKtPtET1_T0_S4_S3_>
    5fba:	48 89 c2             	mov    %rax,%rdx
    5fbd:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    5fc1:	48 89 d6             	mov    %rdx,%rsi
    5fc4:	48 89 c7             	mov    %rax,%rdi
    5fc7:	e8 ca 00 00 00       	call   6096 <_ZSt12__niter_wrapIPtET_RKS1_S1_>
    }
    5fcc:	48 83 c4 20          	add    $0x20,%rsp
    5fd0:	5b                   	pop    %rbx
    5fd1:	41 5c                	pop    %r12
    5fd3:	5d                   	pop    %rbp
    5fd4:	c3                   	ret

0000000000005fd5 <_ZSt12__miter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>:
    __miter_base(_Iterator __it)
    5fd5:	55                   	push   %rbp
    5fd6:	48 89 e5             	mov    %rsp,%rbp
    5fd9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    5fdd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fe1:	5d                   	pop    %rbp
    5fe2:	c3                   	ret

0000000000005fe3 <_ZSt13__copy_move_aILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    5fe3:	55                   	push   %rbp
    5fe4:	48 89 e5             	mov    %rsp,%rbp
    5fe7:	41 54                	push   %r12
    5fe9:	53                   	push   %rbx
    5fea:	48 83 ec 20          	sub    $0x20,%rsp
    5fee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5ff2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5ff6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    5ffa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5ffe:	48 89 c7             	mov    %rax,%rdi
    6001:	e8 b0 00 00 00       	call   60b6 <_ZSt12__niter_baseIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S6_>
    6006:	49 89 c4             	mov    %rax,%r12
    6009:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    600d:	48 89 c7             	mov    %rax,%rdi
    6010:	e8 93 00 00 00       	call   60a8 <_ZSt12__niter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>
    6015:	48 89 c3             	mov    %rax,%rbx
    6018:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    601c:	48 89 c7             	mov    %rax,%rdi
    601f:	e8 84 00 00 00       	call   60a8 <_ZSt12__niter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>
    6024:	4c 89 e2             	mov    %r12,%rdx
    6027:	48 89 de             	mov    %rbx,%rsi
    602a:	48 89 c7             	mov    %rax,%rdi
    602d:	e8 92 00 00 00       	call   60c4 <_ZSt14__copy_move_a1ILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>
    6032:	48 89 c2             	mov    %rax,%rdx
    6035:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    6039:	48 89 d6             	mov    %rdx,%rsi
    603c:	48 89 c7             	mov    %rax,%rdi
    603f:	e8 ad 00 00 00       	call   60f1 <_ZSt12__niter_wrapIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_RKS6_S6_>
    }
    6044:	48 83 c4 20          	add    $0x20,%rsp
    6048:	5b                   	pop    %rbx
    6049:	41 5c                	pop    %r12
    604b:	5d                   	pop    %rbp
    604c:	c3                   	ret

000000000000604d <_ZSt12__niter_baseIPKtET_S2_>:
    __niter_base(_Iterator __it)
    604d:	55                   	push   %rbp
    604e:	48 89 e5             	mov    %rsp,%rbp
    6051:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    6055:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6059:	5d                   	pop    %rbp
    605a:	c3                   	ret

000000000000605b <_ZSt12__niter_baseIPtET_S1_>:
    __niter_base(_Iterator __it)
    605b:	55                   	push   %rbp
    605c:	48 89 e5             	mov    %rsp,%rbp
    605f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    6063:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6067:	5d                   	pop    %rbp
    6068:	c3                   	ret

0000000000006069 <_ZSt14__copy_move_a1ILb0EPKtPtET1_T0_S4_S3_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    6069:	55                   	push   %rbp
    606a:	48 89 e5             	mov    %rsp,%rbp
    606d:	48 83 ec 20          	sub    $0x20,%rsp
    6071:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6075:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6079:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    607d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6081:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6085:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6089:	48 89 ce             	mov    %rcx,%rsi
    608c:	48 89 c7             	mov    %rax,%rdi
    608f:	e8 6f 00 00 00       	call   6103 <_ZSt14__copy_move_a2ILb0EPKtPtET1_T0_S4_S3_>
    6094:	c9                   	leave
    6095:	c3                   	ret

0000000000006096 <_ZSt12__niter_wrapIPtET_RKS1_S1_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    6096:	55                   	push   %rbp
    6097:	48 89 e5             	mov    %rsp,%rbp
    609a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    609e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    60a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    60a6:	5d                   	pop    %rbp
    60a7:	c3                   	ret

00000000000060a8 <_ZSt12__niter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>:
    __niter_base(_Iterator __it)
    60a8:	55                   	push   %rbp
    60a9:	48 89 e5             	mov    %rsp,%rbp
    60ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    60b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60b4:	5d                   	pop    %rbp
    60b5:	c3                   	ret

00000000000060b6 <_ZSt12__niter_baseIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S6_>:
    __niter_base(_Iterator __it)
    60b6:	55                   	push   %rbp
    60b7:	48 89 e5             	mov    %rsp,%rbp
    60ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    60be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60c2:	5d                   	pop    %rbp
    60c3:	c3                   	ret

00000000000060c4 <_ZSt14__copy_move_a1ILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    60c4:	55                   	push   %rbp
    60c5:	48 89 e5             	mov    %rsp,%rbp
    60c8:	48 83 ec 20          	sub    $0x20,%rsp
    60cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    60d4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    60d8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    60dc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    60e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60e4:	48 89 ce             	mov    %rcx,%rsi
    60e7:	48 89 c7             	mov    %rax,%rdi
    60ea:	e8 41 00 00 00       	call   6130 <_ZSt14__copy_move_a2ILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>
    60ef:	c9                   	leave
    60f0:	c3                   	ret

00000000000060f1 <_ZSt12__niter_wrapIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_RKS6_S6_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    60f1:	55                   	push   %rbp
    60f2:	48 89 e5             	mov    %rsp,%rbp
    60f5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60f9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    60fd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6101:	5d                   	pop    %rbp
    6102:	c3                   	ret

0000000000006103 <_ZSt14__copy_move_a2ILb0EPKtPtET1_T0_S4_S3_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    6103:	55                   	push   %rbp
    6104:	48 89 e5             	mov    %rsp,%rbp
    6107:	48 83 ec 20          	sub    $0x20,%rsp
    610b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    610f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6113:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    6117:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    611b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    611f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6123:	48 89 ce             	mov    %rcx,%rsi
    6126:	48 89 c7             	mov    %rax,%rdi
    6129:	e8 2f 00 00 00       	call   615d <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mItEEPT_PKS3_S6_S4_>
    }
    612e:	c9                   	leave
    612f:	c3                   	ret

0000000000006130 <_ZSt14__copy_move_a2ILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    6130:	55                   	push   %rbp
    6131:	48 89 e5             	mov    %rsp,%rbp
    6134:	48 83 ec 20          	sub    $0x20,%rsp
    6138:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    613c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6140:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    6144:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6148:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    614c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6150:	48 89 ce             	mov    %rcx,%rsi
    6153:	48 89 c7             	mov    %rax,%rdi
    6156:	e8 58 00 00 00       	call   61b3 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN3vkh6VertexILNS3_11PositionDimE0ELNS3_8ColorDimE0EEEEEPT_PKS8_SB_S9_>
    }
    615b:	c9                   	leave
    615c:	c3                   	ret

000000000000615d <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mItEEPT_PKS3_S6_S4_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    615d:	55                   	push   %rbp
    615e:	48 89 e5             	mov    %rsp,%rbp
    6161:	48 83 ec 30          	sub    $0x30,%rsp
    6165:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6169:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    616d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    6171:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6175:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    6179:	48 d1 f8             	sar    %rax
    617c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    6180:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    6185:	74 1b                	je     61a2 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mItEEPT_PKS3_S6_S4_+0x45>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    6187:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    618b:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    618f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    6193:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6197:	48 89 ce             	mov    %rcx,%rsi
    619a:	48 89 c7             	mov    %rax,%rdi
    619d:	e8 ae e6 ff ff       	call   4850 <memmove@plt>
	  return __result + _Num;
    61a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61a6:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    61aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    61ae:	48 01 d0             	add    %rdx,%rax
	}
    61b1:	c9                   	leave
    61b2:	c3                   	ret

00000000000061b3 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN3vkh6VertexILNS3_11PositionDimE0ELNS3_8ColorDimE0EEEEEPT_PKS8_SB_S9_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    61b3:	55                   	push   %rbp
    61b4:	48 89 e5             	mov    %rsp,%rbp
    61b7:	48 83 ec 30          	sub    $0x30,%rsp
    61bb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    61bf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    61c3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    61c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    61cb:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    61cf:	48 c1 f8 02          	sar    $0x2,%rax
    61d3:	48 89 c2             	mov    %rax,%rdx
    61d6:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    61dd:	cc cc cc 
    61e0:	48 0f af c2          	imul   %rdx,%rax
    61e4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    61e8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    61ed:	74 28                	je     6217 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN3vkh6VertexILNS3_11PositionDimE0ELNS3_8ColorDimE0EEEEEPT_PKS8_SB_S9_+0x64>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    61ef:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    61f3:	48 89 d0             	mov    %rdx,%rax
    61f6:	48 c1 e0 02          	shl    $0x2,%rax
    61fa:	48 01 d0             	add    %rdx,%rax
    61fd:	48 c1 e0 02          	shl    $0x2,%rax
    6201:	48 89 c2             	mov    %rax,%rdx
    6204:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    6208:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    620c:	48 89 ce             	mov    %rcx,%rsi
    620f:	48 89 c7             	mov    %rax,%rdi
    6212:	e8 39 e6 ff ff       	call   4850 <memmove@plt>
	  return __result + _Num;
    6217:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    621b:	48 89 d0             	mov    %rdx,%rax
    621e:	48 c1 e0 02          	shl    $0x2,%rax
    6222:	48 01 d0             	add    %rdx,%rax
    6225:	48 c1 e0 02          	shl    $0x2,%rax
    6229:	48 89 c2             	mov    %rax,%rdx
    622c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6230:	48 01 d0             	add    %rdx,%rax
	}
    6233:	c9                   	leave
    6234:	c3                   	ret
    6235:	90                   	nop

0000000000006236 <_ZNSt6vectorItSaItEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    6236:	55                   	push   %rbp
    6237:	48 89 e5             	mov    %rsp,%rbp
    623a:	48 83 ec 10          	sub    $0x10,%rsp
    623e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    6242:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6246:	48 89 c7             	mov    %rax,%rdi
    6249:	e8 ba f5 ff ff       	call   5808 <_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv>
    624e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6251:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6255:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6259:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    625d:	48 8b 00             	mov    (%rax),%rax
    6260:	48 89 ce             	mov    %rcx,%rsi
    6263:	48 89 c7             	mov    %rax,%rdi
    6266:	e8 53 00 00 00       	call   62be <_ZSt8_DestroyIPttEvT_S1_RSaIT0_E>
      }
    626b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    626f:	48 89 c7             	mov    %rax,%rdi
    6272:	e8 fd f0 ff ff       	call   5374 <_ZNSt12_Vector_baseItSaItEED1Ev>
    6277:	90                   	nop
    6278:	c9                   	leave
    6279:	c3                   	ret

000000000000627a <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    627a:	55                   	push   %rbp
    627b:	48 89 e5             	mov    %rsp,%rbp
    627e:	48 83 ec 10          	sub    $0x10,%rsp
    6282:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    6286:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    628a:	48 89 c7             	mov    %rax,%rdi
    628d:	e8 f8 f6 ff ff       	call   598a <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_get_Tp_allocatorEv>
    6292:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6295:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6299:	48 8b 48 08          	mov    0x8(%rax),%rcx
    629d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62a1:	48 8b 00             	mov    (%rax),%rax
    62a4:	48 89 ce             	mov    %rcx,%rsi
    62a7:	48 89 c7             	mov    %rax,%rdi
    62aa:	e8 39 00 00 00       	call   62e8 <_ZSt8_DestroyIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEES4_EvT_S6_RSaIT0_E>
      }
    62af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62b3:	48 89 c7             	mov    %rax,%rdi
    62b6:	e8 85 f2 ff ff       	call   5540 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>
    62bb:	90                   	nop
    62bc:	c9                   	leave
    62bd:	c3                   	ret

00000000000062be <_ZSt8_DestroyIPttEvT_S1_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    62be:	55                   	push   %rbp
    62bf:	48 89 e5             	mov    %rsp,%rbp
    62c2:	48 83 ec 20          	sub    $0x20,%rsp
    62c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    62ce:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    62d2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    62d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62da:	48 89 d6             	mov    %rdx,%rsi
    62dd:	48 89 c7             	mov    %rax,%rdi
    62e0:	e8 2d 00 00 00       	call   6312 <_ZSt8_DestroyIPtEvT_S1_>
    }
    62e5:	90                   	nop
    62e6:	c9                   	leave
    62e7:	c3                   	ret

00000000000062e8 <_ZSt8_DestroyIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEES4_EvT_S6_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    62e8:	55                   	push   %rbp
    62e9:	48 89 e5             	mov    %rsp,%rbp
    62ec:	48 83 ec 20          	sub    $0x20,%rsp
    62f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    62f8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    62fc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6300:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6304:	48 89 d6             	mov    %rdx,%rsi
    6307:	48 89 c7             	mov    %rax,%rdi
    630a:	e8 29 00 00 00       	call   6338 <_ZSt8_DestroyIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEvT_S6_>
    }
    630f:	90                   	nop
    6310:	c9                   	leave
    6311:	c3                   	ret

0000000000006312 <_ZSt8_DestroyIPtEvT_S1_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    6312:	55                   	push   %rbp
    6313:	48 89 e5             	mov    %rsp,%rbp
    6316:	48 83 ec 10          	sub    $0x10,%rsp
    631a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    631e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    6322:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6326:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    632a:	48 89 d6             	mov    %rdx,%rsi
    632d:	48 89 c7             	mov    %rax,%rdi
    6330:	e8 29 00 00 00       	call   635e <_ZNSt12_Destroy_auxILb1EE9__destroyIPtEEvT_S3_>
    }
    6335:	90                   	nop
    6336:	c9                   	leave
    6337:	c3                   	ret

0000000000006338 <_ZSt8_DestroyIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEvT_S6_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    6338:	55                   	push   %rbp
    6339:	48 89 e5             	mov    %rsp,%rbp
    633c:	48 83 ec 10          	sub    $0x10,%rsp
    6340:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6344:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    6348:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    634c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6350:	48 89 d6             	mov    %rdx,%rsi
    6353:	48 89 c7             	mov    %rax,%rdi
    6356:	e8 12 00 00 00       	call   636d <_ZNSt12_Destroy_auxILb1EE9__destroyIPN3vkh6VertexILNS2_11PositionDimE0ELNS2_8ColorDimE0EEEEEvT_S8_>
    }
    635b:	90                   	nop
    635c:	c9                   	leave
    635d:	c3                   	ret

000000000000635e <_ZNSt12_Destroy_auxILb1EE9__destroyIPtEEvT_S3_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    635e:	55                   	push   %rbp
    635f:	48 89 e5             	mov    %rsp,%rbp
    6362:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6366:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    636a:	90                   	nop
    636b:	5d                   	pop    %rbp
    636c:	c3                   	ret

000000000000636d <_ZNSt12_Destroy_auxILb1EE9__destroyIPN3vkh6VertexILNS2_11PositionDimE0ELNS2_8ColorDimE0EEEEEvT_S8_>:
    636d:	55                   	push   %rbp
    636e:	48 89 e5             	mov    %rsp,%rbp
    6371:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6375:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6379:	90                   	nop
    637a:	5d                   	pop    %rbp
    637b:	c3                   	ret

000000000000637c <_ZN3vkh21allocateCommandBufferEP10VkDevice_TPK27VkCommandBufferAllocateInfo>:

namespace vkh {

VkCommandBuffer
allocateCommandBuffer(VkDevice device,
                      const VkCommandBufferAllocateInfo *pAllocateInfo) {
    637c:	55                   	push   %rbp
    637d:	48 89 e5             	mov    %rsp,%rbp
    6380:	41 54                	push   %r12
    6382:	53                   	push   %rbx
    6383:	48 83 ec 20          	sub    $0x20,%rsp
    6387:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    638b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  if (pAllocateInfo->commandBufferCount != 1) {
    638f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6393:	8b 40 1c             	mov    0x1c(%rax),%eax
    6396:	83 f8 01             	cmp    $0x1,%eax
    6399:	74 3b                	je     63d6 <_ZN3vkh21allocateCommandBufferEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0x5a>
    throw std::runtime_error(
        "VkCommandBufferAllocateInfo::commandBufferCount != 1, use "
        "{allocateCommandBuffers} instead.");
    639b:	bf 10 00 00 00       	mov    $0x10,%edi
    63a0:	e8 1b de ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    63a5:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    63a8:	48 8d 05 51 79 01 00 	lea    0x17951(%rip),%rax        # 1dd00 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    63af:	48 89 c6             	mov    %rax,%rsi
    63b2:	48 89 df             	mov    %rbx,%rdi
    63b5:	e8 76 dd ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
        "{allocateCommandBuffers} instead.");
    63ba:	48 8b 05 e7 ab 02 00 	mov    0x2abe7(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    63c1:	48 89 c2             	mov    %rax,%rdx
    63c4:	48 8d 05 75 a9 02 00 	lea    0x2a975(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    63cb:	48 89 c6             	mov    %rax,%rsi
    63ce:	48 89 df             	mov    %rbx,%rdi
    63d1:	e8 ba e4 ff ff       	call   4890 <__cxa_throw@plt>
  }
  VkCommandBuffer commandBuffer;
  if (vkAllocateCommandBuffers(device, pAllocateInfo, &commandBuffer) !=
    63d6:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    63da:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    63de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    63e2:	48 89 ce             	mov    %rcx,%rsi
    63e5:	48 89 c7             	mov    %rax,%rdi
    63e8:	e8 23 e0 ff ff       	call   4410 <vkAllocateCommandBuffers@plt>
    63ed:	85 c0                	test   %eax,%eax
    63ef:	0f 95 c0             	setne  %al
    63f2:	84 c0                	test   %al,%al
    63f4:	74 3b                	je     6431 <_ZN3vkh21allocateCommandBufferEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xb5>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to allocate command buffers.");
    63f6:	bf 10 00 00 00       	mov    $0x10,%edi
    63fb:	e8 c0 dd ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    6400:	48 89 c3             	mov    %rax,%rbx
    6403:	48 8d 05 56 79 01 00 	lea    0x17956(%rip),%rax        # 1dd60 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x68>
    640a:	48 89 c6             	mov    %rax,%rsi
    640d:	48 89 df             	mov    %rbx,%rdi
    6410:	e8 1b dd ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    6415:	48 8b 05 8c ab 02 00 	mov    0x2ab8c(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    641c:	48 89 c2             	mov    %rax,%rdx
    641f:	48 8d 05 1a a9 02 00 	lea    0x2a91a(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6426:	48 89 c6             	mov    %rax,%rsi
    6429:	48 89 df             	mov    %rbx,%rdi
    642c:	e8 5f e4 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return commandBuffer;
    6431:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6435:	eb 2c                	jmp    6463 <_ZN3vkh21allocateCommandBufferEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xe7>
        "{allocateCommandBuffers} instead.");
    6437:	49 89 c4             	mov    %rax,%r12
    643a:	48 89 df             	mov    %rbx,%rdi
    643d:	e8 8e de ff ff       	call   42d0 <__cxa_free_exception@plt>
    6442:	4c 89 e0             	mov    %r12,%rax
    6445:	48 89 c7             	mov    %rax,%rdi
    6448:	e8 b3 e4 ff ff       	call   4900 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to allocate command buffers.");
    644d:	49 89 c4             	mov    %rax,%r12
    6450:	48 89 df             	mov    %rbx,%rdi
    6453:	e8 78 de ff ff       	call   42d0 <__cxa_free_exception@plt>
    6458:	4c 89 e0             	mov    %r12,%rax
    645b:	48 89 c7             	mov    %rax,%rdi
    645e:	e8 9d e4 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    6463:	48 83 c4 20          	add    $0x20,%rsp
    6467:	5b                   	pop    %rbx
    6468:	41 5c                	pop    %r12
    646a:	5d                   	pop    %rbp
    646b:	c3                   	ret

000000000000646c <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo>:

std::vector<VkCommandBuffer>
allocateCommandBuffers(VkDevice device,
                       const VkCommandBufferAllocateInfo *pAllocateInfo) {
    646c:	55                   	push   %rbp
    646d:	48 89 e5             	mov    %rsp,%rbp
    6470:	41 54                	push   %r12
    6472:	53                   	push   %rbx
    6473:	48 83 ec 30          	sub    $0x30,%rsp
    6477:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    647b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    647f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  std::vector<VkCommandBuffer> commandBuffers{
      pAllocateInfo->commandBufferCount};
    6483:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6487:	8b 40 1c             	mov    0x1c(%rax),%eax
    648a:	89 c3                	mov    %eax,%ebx
    648c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6490:	48 89 c7             	mov    %rax,%rdi
    6493:	e8 1c 02 00 00       	call   66b4 <_ZNSaIP17VkCommandBuffer_TEC1Ev>
    6498:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    649c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    64a0:	48 89 de             	mov    %rbx,%rsi
    64a3:	48 89 c7             	mov    %rax,%rdi
    64a6:	e8 41 02 00 00       	call   66ec <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
    64ab:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    64af:	48 89 c7             	mov    %rax,%rdi
    64b2:	e8 19 02 00 00       	call   66d0 <_ZNSaIP17VkCommandBuffer_TED1Ev>
  /* If the allocation of any of those command buffers fails, the implementation
  must free all successfully allocated command buffer objects from this
  command, set all entries of the pCommandBuffers array to NULL and return
  the error. */
  if (vkAllocateCommandBuffers(device, pAllocateInfo, commandBuffers.data()) !=
    64b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    64bb:	48 89 c7             	mov    %rax,%rdi
    64be:	e8 e3 02 00 00       	call   67a6 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>
    64c3:	48 89 c2             	mov    %rax,%rdx
    64c6:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    64ca:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    64ce:	48 89 ce             	mov    %rcx,%rsi
    64d1:	48 89 c7             	mov    %rax,%rdi
    64d4:	e8 37 df ff ff       	call   4410 <vkAllocateCommandBuffers@plt>
    64d9:	85 c0                	test   %eax,%eax
    64db:	0f 95 c0             	setne  %al
    64de:	84 c0                	test   %al,%al
    64e0:	74 7f                	je     6561 <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xf5>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to allocate command buffers.");
    64e2:	bf 10 00 00 00       	mov    $0x10,%edi
    64e7:	e8 d4 dc ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    64ec:	48 89 c3             	mov    %rax,%rbx
    64ef:	48 8d 05 6a 78 01 00 	lea    0x1786a(%rip),%rax        # 1dd60 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x68>
    64f6:	48 89 c6             	mov    %rax,%rsi
    64f9:	48 89 df             	mov    %rbx,%rdi
    64fc:	e8 2f dc ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    6501:	48 8b 05 a0 aa 02 00 	mov    0x2aaa0(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6508:	48 89 c2             	mov    %rax,%rdx
    650b:	48 8d 05 2e a8 02 00 	lea    0x2a82e(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6512:	48 89 c6             	mov    %rax,%rsi
    6515:	48 89 df             	mov    %rbx,%rdi
    6518:	e8 73 e3 ff ff       	call   4890 <__cxa_throw@plt>
      pAllocateInfo->commandBufferCount};
    651d:	48 89 c3             	mov    %rax,%rbx
    6520:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6524:	48 89 c7             	mov    %rax,%rdi
    6527:	e8 a4 01 00 00       	call   66d0 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    652c:	48 89 d8             	mov    %rbx,%rax
    652f:	48 89 c7             	mov    %rax,%rdi
    6532:	e8 c9 e3 ff ff       	call   4900 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to allocate command buffers.");
    6537:	49 89 c4             	mov    %rax,%r12
    653a:	48 89 df             	mov    %rbx,%rdi
    653d:	e8 8e dd ff ff       	call   42d0 <__cxa_free_exception@plt>
    6542:	4c 89 e3             	mov    %r12,%rbx
    6545:	eb 03                	jmp    654a <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xde>
  }
  return commandBuffers;
}
    6547:	48 89 c3             	mov    %rax,%rbx
    654a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    654e:	48 89 c7             	mov    %rax,%rdi
    6551:	e8 0c 02 00 00       	call   6762 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
    6556:	48 89 d8             	mov    %rbx,%rax
    6559:	48 89 c7             	mov    %rax,%rdi
    655c:	e8 9f e3 ff ff       	call   4900 <_Unwind_Resume@plt>
  return commandBuffers;
    6561:	90                   	nop
}
    6562:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6566:	48 83 c4 30          	add    $0x30,%rsp
    656a:	5b                   	pop    %rbx
    656b:	41 5c                	pop    %r12
    656d:	5d                   	pop    %rbp
    656e:	c3                   	ret

000000000000656f <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo>:

void beginCommandBuffer(VkCommandBuffer commandBuffer,
                        const VkCommandBufferBeginInfo *pBeginInfo) {
    656f:	55                   	push   %rbp
    6570:	48 89 e5             	mov    %rsp,%rbp
    6573:	41 54                	push   %r12
    6575:	53                   	push   %rbx
    6576:	48 83 ec 10          	sub    $0x10,%rsp
    657a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    657e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  if (vkBeginCommandBuffer(commandBuffer, pBeginInfo) != VK_SUCCESS) {
    6582:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6586:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    658a:	48 89 d6             	mov    %rdx,%rsi
    658d:	48 89 c7             	mov    %rax,%rdi
    6590:	e8 fb de ff ff       	call   4490 <vkBeginCommandBuffer@plt>
    6595:	85 c0                	test   %eax,%eax
    6597:	0f 95 c0             	setne  %al
    659a:	84 c0                	test   %al,%al
    659c:	74 51                	je     65ef <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo+0x80>
    throw std::runtime_error("Failed to begin command buffer.");
    659e:	bf 10 00 00 00       	mov    $0x10,%edi
    65a3:	e8 18 dc ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    65a8:	48 89 c3             	mov    %rax,%rbx
    65ab:	48 8d 05 d6 77 01 00 	lea    0x177d6(%rip),%rax        # 1dd88 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x90>
    65b2:	48 89 c6             	mov    %rax,%rsi
    65b5:	48 89 df             	mov    %rbx,%rdi
    65b8:	e8 73 db ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    65bd:	48 8b 05 e4 a9 02 00 	mov    0x2a9e4(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    65c4:	48 89 c2             	mov    %rax,%rdx
    65c7:	48 8d 05 72 a7 02 00 	lea    0x2a772(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    65ce:	48 89 c6             	mov    %rax,%rsi
    65d1:	48 89 df             	mov    %rbx,%rdi
    65d4:	e8 b7 e2 ff ff       	call   4890 <__cxa_throw@plt>
    65d9:	49 89 c4             	mov    %rax,%r12
    65dc:	48 89 df             	mov    %rbx,%rdi
    65df:	e8 ec dc ff ff       	call   42d0 <__cxa_free_exception@plt>
    65e4:	4c 89 e0             	mov    %r12,%rax
    65e7:	48 89 c7             	mov    %rax,%rdi
    65ea:	e8 11 e3 ff ff       	call   4900 <_Unwind_Resume@plt>
  }
}
    65ef:	90                   	nop
    65f0:	48 83 c4 10          	add    $0x10,%rsp
    65f4:	5b                   	pop    %rbx
    65f5:	41 5c                	pop    %r12
    65f7:	5d                   	pop    %rbp
    65f8:	c3                   	ret

00000000000065f9 <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T>:

void endCommandBuffer(VkCommandBuffer commandBuffer) {
    65f9:	55                   	push   %rbp
    65fa:	48 89 e5             	mov    %rsp,%rbp
    65fd:	41 54                	push   %r12
    65ff:	53                   	push   %rbx
    6600:	48 83 ec 10          	sub    $0x10,%rsp
    6604:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (vkEndCommandBuffer(commandBuffer) != VK_SUCCESS) {
    6608:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    660c:	48 89 c7             	mov    %rax,%rdi
    660f:	e8 4c e3 ff ff       	call   4960 <vkEndCommandBuffer@plt>
    6614:	85 c0                	test   %eax,%eax
    6616:	0f 95 c0             	setne  %al
    6619:	84 c0                	test   %al,%al
    661b:	74 51                	je     666e <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T+0x75>
    throw std::runtime_error("Failed to end command buffer.");
    661d:	bf 10 00 00 00       	mov    $0x10,%edi
    6622:	e8 99 db ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    6627:	48 89 c3             	mov    %rax,%rbx
    662a:	48 8d 05 77 77 01 00 	lea    0x17777(%rip),%rax        # 1dda8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xb0>
    6631:	48 89 c6             	mov    %rax,%rsi
    6634:	48 89 df             	mov    %rbx,%rdi
    6637:	e8 f4 da ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    663c:	48 8b 05 65 a9 02 00 	mov    0x2a965(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6643:	48 89 c2             	mov    %rax,%rdx
    6646:	48 8d 05 f3 a6 02 00 	lea    0x2a6f3(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    664d:	48 89 c6             	mov    %rax,%rsi
    6650:	48 89 df             	mov    %rbx,%rdi
    6653:	e8 38 e2 ff ff       	call   4890 <__cxa_throw@plt>
    6658:	49 89 c4             	mov    %rax,%r12
    665b:	48 89 df             	mov    %rbx,%rdi
    665e:	e8 6d dc ff ff       	call   42d0 <__cxa_free_exception@plt>
    6663:	4c 89 e0             	mov    %r12,%rax
    6666:	48 89 c7             	mov    %rax,%rdi
    6669:	e8 92 e2 ff ff       	call   4900 <_Unwind_Resume@plt>
  }
}
    666e:	90                   	nop
    666f:	48 83 c4 10          	add    $0x10,%rsp
    6673:	5b                   	pop    %rbx
    6674:	41 5c                	pop    %r12
    6676:	5d                   	pop    %rbp
    6677:	c3                   	ret

0000000000006678 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    6678:	55                   	push   %rbp
    6679:	48 89 e5             	mov    %rsp,%rbp
    667c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6680:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6684:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6688:	5d                   	pop    %rbp
    6689:	c3                   	ret

000000000000668a <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    668a:	55                   	push   %rbp
    668b:	48 89 e5             	mov    %rsp,%rbp
    668e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6692:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6696:	5d                   	pop    %rbp
    6697:	c3                   	ret

0000000000006698 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    6698:	55                   	push   %rbp
    6699:	48 89 e5             	mov    %rsp,%rbp
    669c:	48 83 ec 10          	sub    $0x10,%rsp
    66a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66a8:	48 89 c7             	mov    %rax,%rdi
    66ab:	e8 20 00 00 00       	call   66d0 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    66b0:	90                   	nop
    66b1:	c9                   	leave
    66b2:	c3                   	ret
    66b3:	90                   	nop

00000000000066b4 <_ZNSaIP17VkCommandBuffer_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    66b4:	55                   	push   %rbp
    66b5:	48 89 e5             	mov    %rsp,%rbp
    66b8:	48 83 ec 10          	sub    $0x10,%rsp
    66bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66c4:	48 89 c7             	mov    %rax,%rdi
    66c7:	e8 4c 01 00 00       	call   6818 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>
    66cc:	90                   	nop
    66cd:	c9                   	leave
    66ce:	c3                   	ret
    66cf:	90                   	nop

00000000000066d0 <_ZNSaIP17VkCommandBuffer_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    66d0:	55                   	push   %rbp
    66d1:	48 89 e5             	mov    %rsp,%rbp
    66d4:	48 83 ec 10          	sub    $0x10,%rsp
    66d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66e0:	48 89 c7             	mov    %rax,%rdi
    66e3:	e8 3c 01 00 00       	call   6824 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>
    66e8:	90                   	nop
    66e9:	c9                   	leave
    66ea:	c3                   	ret
    66eb:	90                   	nop

00000000000066ec <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    66ec:	55                   	push   %rbp
    66ed:	48 89 e5             	mov    %rsp,%rbp
    66f0:	53                   	push   %rbx
    66f1:	48 83 ec 28          	sub    $0x28,%rsp
    66f5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    66f9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    66fd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    6701:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    6705:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6709:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    670d:	48 89 d6             	mov    %rdx,%rsi
    6710:	48 89 c7             	mov    %rax,%rdi
    6713:	e8 17 01 00 00       	call   682f <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    6718:	48 89 c1             	mov    %rax,%rcx
    671b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    671f:	48 89 c2             	mov    %rax,%rdx
    6722:	48 89 ce             	mov    %rcx,%rsi
    6725:	48 89 df             	mov    %rbx,%rdi
    6728:	e8 63 01 00 00       	call   6890 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    672d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6731:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6735:	48 89 d6             	mov    %rdx,%rsi
    6738:	48 89 c7             	mov    %rax,%rdi
    673b:	e8 ae 01 00 00       	call   68ee <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>
    6740:	eb 1a                	jmp    675c <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x70>
    6742:	48 89 c3             	mov    %rax,%rbx
    6745:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6749:	48 89 c7             	mov    %rax,%rdi
    674c:	e8 79 00 00 00       	call   67ca <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    6751:	48 89 d8             	mov    %rbx,%rax
    6754:	48 89 c7             	mov    %rax,%rdi
    6757:	e8 a4 e1 ff ff       	call   4900 <_Unwind_Resume@plt>
    675c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6760:	c9                   	leave
    6761:	c3                   	ret

0000000000006762 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    6762:	55                   	push   %rbp
    6763:	48 89 e5             	mov    %rsp,%rbp
    6766:	48 83 ec 10          	sub    $0x10,%rsp
    676a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    676e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6772:	48 89 c7             	mov    %rax,%rdi
    6775:	e8 b4 01 00 00       	call   692e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    677a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    677d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6781:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6785:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6789:	48 8b 00             	mov    (%rax),%rax
    678c:	48 89 ce             	mov    %rcx,%rsi
    678f:	48 89 c7             	mov    %rax,%rdi
    6792:	e8 a5 01 00 00       	call   693c <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>
      }
    6797:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    679b:	48 89 c7             	mov    %rax,%rdi
    679e:	e8 27 00 00 00       	call   67ca <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    67a3:	90                   	nop
    67a4:	c9                   	leave
    67a5:	c3                   	ret

00000000000067a6 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    67a6:	55                   	push   %rbp
    67a7:	48 89 e5             	mov    %rsp,%rbp
    67aa:	48 83 ec 10          	sub    $0x10,%rsp
    67ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    67b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67b6:	48 8b 10             	mov    (%rax),%rdx
    67b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67bd:	48 89 d6             	mov    %rdx,%rsi
    67c0:	48 89 c7             	mov    %rax,%rdi
    67c3:	e8 9e 01 00 00       	call   6966 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    67c8:	c9                   	leave
    67c9:	c3                   	ret

00000000000067ca <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    67ca:	55                   	push   %rbp
    67cb:	48 89 e5             	mov    %rsp,%rbp
    67ce:	48 83 ec 10          	sub    $0x10,%rsp
    67d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    67d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67da:	48 8b 50 10          	mov    0x10(%rax),%rdx
    67de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67e2:	48 8b 00             	mov    (%rax),%rax
    67e5:	48 29 c2             	sub    %rax,%rdx
    67e8:	48 89 d0             	mov    %rdx,%rax
    67eb:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    67ef:	48 89 c2             	mov    %rax,%rdx
    67f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67f6:	48 8b 08             	mov    (%rax),%rcx
    67f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67fd:	48 89 ce             	mov    %rcx,%rsi
    6800:	48 89 c7             	mov    %rax,%rdi
    6803:	e8 96 01 00 00       	call   699e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    6808:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    680c:	48 89 c7             	mov    %rax,%rdi
    680f:	e8 84 fe ff ff       	call   6698 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    6814:	90                   	nop
    6815:	c9                   	leave
    6816:	c3                   	ret
    6817:	90                   	nop

0000000000006818 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    6818:	55                   	push   %rbp
    6819:	48 89 e5             	mov    %rsp,%rbp
    681c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6820:	90                   	nop
    6821:	5d                   	pop    %rbp
    6822:	c3                   	ret
    6823:	90                   	nop

0000000000006824 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    6824:	55                   	push   %rbp
    6825:	48 89 e5             	mov    %rsp,%rbp
    6828:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    682c:	90                   	nop
    682d:	5d                   	pop    %rbp
    682e:	c3                   	ret

000000000000682f <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    682f:	55                   	push   %rbp
    6830:	48 89 e5             	mov    %rsp,%rbp
    6833:	53                   	push   %rbx
    6834:	48 83 ec 28          	sub    $0x28,%rsp
    6838:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    683c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    6840:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    6844:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6848:	48 89 d6             	mov    %rdx,%rsi
    684b:	48 89 c7             	mov    %rax,%rdi
    684e:	e8 25 01 00 00       	call   6978 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    6853:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6857:	48 89 c7             	mov    %rax,%rdi
    685a:	e8 74 01 00 00       	call   69d3 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>
    685f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    6863:	0f 92 c3             	setb   %bl
    6866:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    686a:	48 89 c7             	mov    %rax,%rdi
    686d:	e8 5e fe ff ff       	call   66d0 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    6872:	84 db                	test   %bl,%bl
    6874:	74 0f                	je     6885 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    6876:	48 8d 05 4b 75 01 00 	lea    0x1754b(%rip),%rax        # 1ddc8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xd0>
    687d:	48 89 c7             	mov    %rax,%rdi
    6880:	e8 6b d9 ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    6885:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    6889:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    688d:	c9                   	leave
    688e:	c3                   	ret
    688f:	90                   	nop

0000000000006890 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    6890:	55                   	push   %rbp
    6891:	48 89 e5             	mov    %rsp,%rbp
    6894:	53                   	push   %rbx
    6895:	48 83 ec 28          	sub    $0x28,%rsp
    6899:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    689d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    68a1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    68a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    68a9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    68ad:	48 89 d6             	mov    %rdx,%rsi
    68b0:	48 89 c7             	mov    %rax,%rdi
    68b3:	e8 5e 01 00 00       	call   6a16 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    68b8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    68bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    68c0:	48 89 d6             	mov    %rdx,%rsi
    68c3:	48 89 c7             	mov    %rax,%rdi
    68c6:	e8 7d 01 00 00       	call   6a48 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>
    68cb:	eb 1a                	jmp    68e7 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x57>
    68cd:	48 89 c3             	mov    %rax,%rbx
    68d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    68d4:	48 89 c7             	mov    %rax,%rdi
    68d7:	e8 bc fd ff ff       	call   6698 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    68dc:	48 89 d8             	mov    %rbx,%rax
    68df:	48 89 c7             	mov    %rax,%rdi
    68e2:	e8 19 e0 ff ff       	call   4900 <_Unwind_Resume@plt>
    68e7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    68eb:	c9                   	leave
    68ec:	c3                   	ret
    68ed:	90                   	nop

00000000000068ee <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    68ee:	55                   	push   %rbp
    68ef:	48 89 e5             	mov    %rsp,%rbp
    68f2:	48 83 ec 10          	sub    $0x10,%rsp
    68f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    68fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6902:	48 89 c7             	mov    %rax,%rdi
    6905:	e8 24 00 00 00       	call   692e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    690a:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    690d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6911:	48 8b 00             	mov    (%rax),%rax
    6914:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6918:	48 89 ce             	mov    %rcx,%rsi
    691b:	48 89 c7             	mov    %rax,%rdi
    691e:	e8 7b 01 00 00       	call   6a9e <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    6923:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6927:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    692b:	90                   	nop
    692c:	c9                   	leave
    692d:	c3                   	ret

000000000000692e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    692e:	55                   	push   %rbp
    692f:	48 89 e5             	mov    %rsp,%rbp
    6932:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    6936:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    693a:	5d                   	pop    %rbp
    693b:	c3                   	ret

000000000000693c <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    693c:	55                   	push   %rbp
    693d:	48 89 e5             	mov    %rsp,%rbp
    6940:	48 83 ec 20          	sub    $0x20,%rsp
    6944:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6948:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    694c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    6950:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6954:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6958:	48 89 d6             	mov    %rdx,%rsi
    695b:	48 89 c7             	mov    %rax,%rdi
    695e:	e8 64 01 00 00       	call   6ac7 <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>
    }
    6963:	90                   	nop
    6964:	c9                   	leave
    6965:	c3                   	ret

0000000000006966 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    6966:	55                   	push   %rbp
    6967:	48 89 e5             	mov    %rsp,%rbp
    696a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    696e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    6972:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6976:	5d                   	pop    %rbp
    6977:	c3                   	ret

0000000000006978 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    6978:	55                   	push   %rbp
    6979:	48 89 e5             	mov    %rsp,%rbp
    697c:	48 83 ec 10          	sub    $0x10,%rsp
    6980:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6984:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    6988:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    698c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6990:	48 89 d6             	mov    %rdx,%rsi
    6993:	48 89 c7             	mov    %rax,%rdi
    6996:	e8 53 01 00 00       	call   6aee <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>
    699b:	90                   	nop
    699c:	c9                   	leave
    699d:	c3                   	ret

000000000000699e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    699e:	55                   	push   %rbp
    699f:	48 89 e5             	mov    %rsp,%rbp
    69a2:	48 83 ec 20          	sub    $0x20,%rsp
    69a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    69ae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    69b2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    69b7:	74 17                	je     69d0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    69b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69bd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    69c1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    69c5:	48 89 ce             	mov    %rcx,%rsi
    69c8:	48 89 c7             	mov    %rax,%rdi
    69cb:	e8 2d 01 00 00       	call   6afd <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>
      }
    69d0:	90                   	nop
    69d1:	c9                   	leave
    69d2:	c3                   	ret

00000000000069d3 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    69d3:	55                   	push   %rbp
    69d4:	48 89 e5             	mov    %rsp,%rbp
    69d7:	48 83 ec 20          	sub    $0x20,%rsp
    69db:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    69df:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    69e6:	ff ff 0f 
    69e9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    69ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    69f1:	48 89 c7             	mov    %rax,%rdi
    69f4:	e8 32 01 00 00       	call   6b2b <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>
    69f9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    69fd:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6a01:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6a05:	48 89 d6             	mov    %rdx,%rsi
    6a08:	48 89 c7             	mov    %rax,%rdi
    6a0b:	e8 ad f2 ff ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    6a10:	48 8b 00             	mov    (%rax),%rax
      }
    6a13:	c9                   	leave
    6a14:	c3                   	ret
    6a15:	90                   	nop

0000000000006a16 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6a16:	55                   	push   %rbp
    6a17:	48 89 e5             	mov    %rsp,%rbp
    6a1a:	48 83 ec 10          	sub    $0x10,%rsp
    6a1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6a26:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6a2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a2e:	48 89 d6             	mov    %rdx,%rsi
    6a31:	48 89 c7             	mov    %rax,%rdi
    6a34:	e8 3f ff ff ff       	call   6978 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    6a39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a3d:	48 89 c7             	mov    %rax,%rdi
    6a40:	e8 01 01 00 00       	call   6b46 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    6a45:	90                   	nop
    6a46:	c9                   	leave
    6a47:	c3                   	ret

0000000000006a48 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    6a48:	55                   	push   %rbp
    6a49:	48 89 e5             	mov    %rsp,%rbp
    6a4c:	48 83 ec 10          	sub    $0x10,%rsp
    6a50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6a58:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6a5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a60:	48 89 d6             	mov    %rdx,%rsi
    6a63:	48 89 c7             	mov    %rax,%rdi
    6a66:	e8 09 01 00 00       	call   6b74 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>
    6a6b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6a6f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    6a72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a76:	48 8b 10             	mov    (%rax),%rdx
    6a79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a7d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    6a81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a85:	48 8b 00             	mov    (%rax),%rax
    6a88:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6a8c:	48 c1 e2 03          	shl    $0x3,%rdx
    6a90:	48 01 c2             	add    %rax,%rdx
    6a93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a97:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    6a9b:	90                   	nop
    6a9c:	c9                   	leave
    6a9d:	c3                   	ret

0000000000006a9e <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    6a9e:	55                   	push   %rbp
    6a9f:	48 89 e5             	mov    %rsp,%rbp
    6aa2:	48 83 ec 20          	sub    $0x20,%rsp
    6aa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6aaa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6aae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    6ab2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6ab6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6aba:	48 89 d6             	mov    %rdx,%rsi
    6abd:	48 89 c7             	mov    %rax,%rdi
    6ac0:	e8 e2 00 00 00       	call   6ba7 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>
    6ac5:	c9                   	leave
    6ac6:	c3                   	ret

0000000000006ac7 <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    6ac7:	55                   	push   %rbp
    6ac8:	48 89 e5             	mov    %rsp,%rbp
    6acb:	48 83 ec 10          	sub    $0x10,%rsp
    6acf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ad3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    6ad7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6adb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6adf:	48 89 d6             	mov    %rdx,%rsi
    6ae2:	48 89 c7             	mov    %rax,%rdi
    6ae5:	e8 e6 00 00 00       	call   6bd0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>
    }
    6aea:	90                   	nop
    6aeb:	c9                   	leave
    6aec:	c3                   	ret
    6aed:	90                   	nop

0000000000006aee <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    6aee:	55                   	push   %rbp
    6aef:	48 89 e5             	mov    %rsp,%rbp
    6af2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6af6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6afa:	90                   	nop
    6afb:	5d                   	pop    %rbp
    6afc:	c3                   	ret

0000000000006afd <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6afd:	55                   	push   %rbp
    6afe:	48 89 e5             	mov    %rsp,%rbp
    6b01:	48 83 ec 20          	sub    $0x20,%rsp
    6b05:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b09:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6b0d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6b11:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6b15:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6b19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b1d:	48 89 ce             	mov    %rcx,%rsi
    6b20:	48 89 c7             	mov    %rax,%rdi
    6b23:	e8 b8 00 00 00       	call   6be0 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>
    6b28:	90                   	nop
    6b29:	c9                   	leave
    6b2a:	c3                   	ret

0000000000006b2b <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    6b2b:	55                   	push   %rbp
    6b2c:	48 89 e5             	mov    %rsp,%rbp
    6b2f:	48 83 ec 10          	sub    $0x10,%rsp
    6b33:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    6b37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b3b:	48 89 c7             	mov    %rax,%rdi
    6b3e:	e8 cf 00 00 00       	call   6c12 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>
      }
    6b43:	c9                   	leave
    6b44:	c3                   	ret
    6b45:	90                   	nop

0000000000006b46 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    6b46:	55                   	push   %rbp
    6b47:	48 89 e5             	mov    %rsp,%rbp
    6b4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    6b4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b52:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    6b59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b5d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    6b64:	00 
    6b65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b69:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    6b70:	00 
	{ }
    6b71:	90                   	nop
    6b72:	5d                   	pop    %rbp
    6b73:	c3                   	ret

0000000000006b74 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    6b74:	55                   	push   %rbp
    6b75:	48 89 e5             	mov    %rsp,%rbp
    6b78:	48 83 ec 10          	sub    $0x10,%rsp
    6b7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b80:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    6b84:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6b89:	74 15                	je     6ba0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x2c>
    6b8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b8f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6b93:	48 89 d6             	mov    %rdx,%rsi
    6b96:	48 89 c7             	mov    %rax,%rdi
    6b99:	e8 8e 00 00 00       	call   6c2c <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>
    6b9e:	eb 05                	jmp    6ba5 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x31>
    6ba0:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    6ba5:	c9                   	leave
    6ba6:	c3                   	ret

0000000000006ba7 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    6ba7:	55                   	push   %rbp
    6ba8:	48 89 e5             	mov    %rsp,%rbp
    6bab:	48 83 ec 20          	sub    $0x20,%rsp
    6baf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6bb3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    6bb7:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    6bbb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6bbf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6bc3:	48 89 d6             	mov    %rdx,%rsi
    6bc6:	48 89 c7             	mov    %rax,%rdi
    6bc9:	e8 88 00 00 00       	call   6c56 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>
    }
    6bce:	c9                   	leave
    6bcf:	c3                   	ret

0000000000006bd0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    6bd0:	55                   	push   %rbp
    6bd1:	48 89 e5             	mov    %rsp,%rbp
    6bd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6bd8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6bdc:	90                   	nop
    6bdd:	5d                   	pop    %rbp
    6bde:	c3                   	ret
    6bdf:	90                   	nop

0000000000006be0 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    6be0:	55                   	push   %rbp
    6be1:	48 89 e5             	mov    %rsp,%rbp
    6be4:	48 83 ec 20          	sub    $0x20,%rsp
    6be8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6bec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6bf0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    6bf4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6bf8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6bff:	00 
    6c00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6c04:	48 89 d6             	mov    %rdx,%rsi
    6c07:	48 89 c7             	mov    %rax,%rdi
    6c0a:	e8 91 d8 ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    6c0f:	c9                   	leave
    6c10:	c3                   	ret
    6c11:	90                   	nop

0000000000006c12 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    6c12:	55                   	push   %rbp
    6c13:	48 89 e5             	mov    %rsp,%rbp
    6c16:	48 83 ec 10          	sub    $0x10,%rsp
    6c1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    6c1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c22:	48 89 c7             	mov    %rax,%rdi
    6c25:	e8 8a 00 00 00       	call   6cb4 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    6c2a:	c9                   	leave
    6c2b:	c3                   	ret

0000000000006c2c <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    6c2c:	55                   	push   %rbp
    6c2d:	48 89 e5             	mov    %rsp,%rbp
    6c30:	48 83 ec 10          	sub    $0x10,%rsp
    6c34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    6c3c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6c40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c44:	ba 00 00 00 00       	mov    $0x0,%edx
    6c49:	48 89 ce             	mov    %rcx,%rsi
    6c4c:	48 89 c7             	mov    %rax,%rdi
    6c4f:	e8 74 00 00 00       	call   6cc8 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>
    6c54:	c9                   	leave
    6c55:	c3                   	ret

0000000000006c56 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    6c56:	55                   	push   %rbp
    6c57:	48 89 e5             	mov    %rsp,%rbp
    6c5a:	48 83 ec 20          	sub    $0x20,%rsp
    6c5e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6c62:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    6c66:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    6c6b:	74 40                	je     6cad <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    6c6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c71:	48 89 c7             	mov    %rax,%rdi
    6c74:	e8 b0 00 00 00       	call   6d29 <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>
    6c79:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    6c7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c81:	48 89 c7             	mov    %rax,%rdi
    6c84:	e8 ae 00 00 00       	call   6d37 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>
	      ++__first;
    6c89:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    6c8e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6c92:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    6c96:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6c9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c9e:	48 89 ce             	mov    %rcx,%rsi
    6ca1:	48 89 c7             	mov    %rax,%rdi
    6ca4:	e8 b5 00 00 00       	call   6d5e <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>
    6ca9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    6cad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    6cb1:	c9                   	leave
    6cb2:	c3                   	ret
    6cb3:	90                   	nop

0000000000006cb4 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    6cb4:	55                   	push   %rbp
    6cb5:	48 89 e5             	mov    %rsp,%rbp
    6cb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    6cbc:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    6cc3:	ff ff 0f 
      }
    6cc6:	5d                   	pop    %rbp
    6cc7:	c3                   	ret

0000000000006cc8 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    6cc8:	55                   	push   %rbp
    6cc9:	48 89 e5             	mov    %rsp,%rbp
    6ccc:	48 83 ec 20          	sub    $0x20,%rsp
    6cd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6cd4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6cd8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    6cdc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ce0:	48 89 c7             	mov    %rax,%rdi
    6ce3:	e8 cc ff ff ff       	call   6cb4 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    6ce8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6cec:	0f 92 c0             	setb   %al
    6cef:	0f b6 c0             	movzbl %al,%eax
    6cf2:	48 85 c0             	test   %rax,%rax
    6cf5:	0f 95 c0             	setne  %al
    6cf8:	84 c0                	test   %al,%al
    6cfa:	74 1a                	je     6d16 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    6cfc:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    6d03:	ff ff 1f 
    6d06:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6d0a:	73 05                	jae    6d11 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    6d0c:	e8 ff d5 ff ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    6d11:	e8 fa d3 ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    6d16:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6d1a:	48 c1 e0 03          	shl    $0x3,%rax
    6d1e:	48 89 c7             	mov    %rax,%rdi
    6d21:	e8 5a d7 ff ff       	call   4480 <_Znwm@plt>
    6d26:	90                   	nop
      }
    6d27:	c9                   	leave
    6d28:	c3                   	ret

0000000000006d29 <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>:
   *  @brief Same as C++11 std::addressof
   *  @ingroup utilities
   */
  template<typename _Tp>
    inline _GLIBCXX_CONSTEXPR _Tp*
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    6d29:	55                   	push   %rbp
    6d2a:	48 89 e5             	mov    %rsp,%rbp
    6d2d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    6d31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d35:	5d                   	pop    %rbp
    6d36:	c3                   	ret

0000000000006d37 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    6d37:	55                   	push   %rbp
    6d38:	48 89 e5             	mov    %rsp,%rbp
    6d3b:	48 83 ec 10          	sub    $0x10,%rsp
    6d3f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    6d43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d47:	48 89 c6             	mov    %rax,%rsi
    6d4a:	bf 08 00 00 00       	mov    $0x8,%edi
    6d4f:	e8 24 f9 ff ff       	call   6678 <_ZnwmPv>
    6d54:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    6d5b:	90                   	nop
    6d5c:	c9                   	leave
    6d5d:	c3                   	ret

0000000000006d5e <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    6d5e:	55                   	push   %rbp
    6d5f:	48 89 e5             	mov    %rsp,%rbp
    6d62:	48 83 ec 20          	sub    $0x20,%rsp
    6d66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6d6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6d6e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    6d72:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6d76:	48 89 c7             	mov    %rax,%rdi
    6d79:	e8 24 00 00 00       	call   6da2 <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    6d7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6d82:	48 89 c7             	mov    %rax,%rdi
    6d85:	e8 00 f9 ff ff       	call   668a <_ZSt17__size_to_integerm>
    6d8a:	48 89 c1             	mov    %rax,%rcx
    6d8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d91:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6d95:	48 89 ce             	mov    %rcx,%rsi
    6d98:	48 89 c7             	mov    %rax,%rdi
    6d9b:	e8 0d 00 00 00       	call   6dad <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    6da0:	c9                   	leave
    6da1:	c3                   	ret

0000000000006da2 <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    6da2:	55                   	push   %rbp
    6da3:	48 89 e5             	mov    %rsp,%rbp
    6da6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    6daa:	90                   	nop
    6dab:	5d                   	pop    %rbp
    6dac:	c3                   	ret

0000000000006dad <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    6dad:	55                   	push   %rbp
    6dae:	48 89 e5             	mov    %rsp,%rbp
    6db1:	48 83 ec 20          	sub    $0x20,%rsp
    6db5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6db9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6dbd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    6dc1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6dc6:	75 06                	jne    6dce <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    6dc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dcc:	eb 3a                	jmp    6e08 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    6dce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6dd2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6dd9:	00 
    6dda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dde:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    6de2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6de6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dea:	48 89 ce             	mov    %rcx,%rsi
    6ded:	48 89 c7             	mov    %rax,%rdi
    6df0:	e8 15 00 00 00       	call   6e0a <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
    6df5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6df9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6e00:	00 
    6e01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e05:	48 01 d0             	add    %rdx,%rax
    }
    6e08:	c9                   	leave
    6e09:	c3                   	ret

0000000000006e0a <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    6e0a:	55                   	push   %rbp
    6e0b:	48 89 e5             	mov    %rsp,%rbp
    6e0e:	48 83 ec 20          	sub    $0x20,%rsp
    6e12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6e1a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    6e1e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6e22:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6e26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e2a:	48 89 ce             	mov    %rcx,%rsi
    6e2d:	48 89 c7             	mov    %rax,%rdi
    6e30:	e8 03 00 00 00       	call   6e38 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    6e35:	90                   	nop
    6e36:	c9                   	leave
    6e37:	c3                   	ret

0000000000006e38 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    6e38:	55                   	push   %rbp
    6e39:	48 89 e5             	mov    %rsp,%rbp
    6e3c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6e40:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6e44:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    6e48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e4c:	48 8b 00             	mov    (%rax),%rax
    6e4f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    6e53:	eb 10                	jmp    6e65 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    6e55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6e59:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6e5d:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    6e60:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    6e65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6e69:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    6e6d:	75 e6                	jne    6e55 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    6e6f:	90                   	nop
    6e70:	90                   	nop
    6e71:	5d                   	pop    %rbp
    6e72:	c3                   	ret

0000000000006e73 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>:
#include "create_object.hpp"

namespace vkh {
GLFWwindow *createWindow(int width, int height, const char *title,
                         GLFWmonitor *monitor, GLFWwindow *share) {
    6e73:	55                   	push   %rbp
    6e74:	48 89 e5             	mov    %rsp,%rbp
    6e77:	48 83 ec 20          	sub    $0x20,%rsp
    6e7b:	89 7d fc             	mov    %edi,-0x4(%rbp)
    6e7e:	89 75 f8             	mov    %esi,-0x8(%rbp)
    6e81:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    6e85:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    6e89:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    6e8d:	be 00 00 00 00       	mov    $0x0,%esi
    6e92:	bf 01 20 02 00       	mov    $0x22001,%edi
    6e97:	e8 04 d5 ff ff       	call   43a0 <glfwWindowHint@plt>
  // glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
  return glfwCreateWindow(width, height, title, monitor, share);
    6e9c:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    6ea0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    6ea4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6ea8:	8b 75 f8             	mov    -0x8(%rbp),%esi
    6eab:	8b 45 fc             	mov    -0x4(%rbp),%eax
    6eae:	49 89 f8             	mov    %rdi,%r8
    6eb1:	89 c7                	mov    %eax,%edi
    6eb3:	e8 18 d9 ff ff       	call   47d0 <glfwCreateWindow@plt>
}
    6eb8:	c9                   	leave
    6eb9:	c3                   	ret

0000000000006eba <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>:

VkInstance createInstance(const VkInstanceCreateInfo *pCreateInfo,
                          const VkAllocationCallbacks *pAllocator) {
    6eba:	55                   	push   %rbp
    6ebb:	48 89 e5             	mov    %rsp,%rbp
    6ebe:	41 54                	push   %r12
    6ec0:	53                   	push   %rbx
    6ec1:	48 83 ec 20          	sub    $0x20,%rsp
    6ec5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6ec9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  VkInstance instance;
  if (vkCreateInstance(pCreateInfo, pAllocator, &instance) != VK_SUCCESS) {
    6ecd:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    6ed1:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    6ed5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6ed9:	48 89 ce             	mov    %rcx,%rsi
    6edc:	48 89 c7             	mov    %rax,%rdi
    6edf:	e8 0c d7 ff ff       	call   45f0 <vkCreateInstance@plt>
    6ee4:	85 c0                	test   %eax,%eax
    6ee6:	0f 95 c0             	setne  %al
    6ee9:	84 c0                	test   %al,%al
    6eeb:	74 3b                	je     6f28 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x6e>
    throw std::runtime_error("Failed to create an instance.");
    6eed:	bf 10 00 00 00       	mov    $0x10,%edi
    6ef2:	e8 c9 d2 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    6ef7:	48 89 c3             	mov    %rax,%rbx
    6efa:	48 8d 05 2f 75 01 00 	lea    0x1752f(%rip),%rax        # 1e430 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    6f01:	48 89 c6             	mov    %rax,%rsi
    6f04:	48 89 df             	mov    %rbx,%rdi
    6f07:	e8 24 d2 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    6f0c:	48 8b 05 95 a0 02 00 	mov    0x2a095(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6f13:	48 89 c2             	mov    %rax,%rdx
    6f16:	48 8d 05 23 9e 02 00 	lea    0x29e23(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6f1d:	48 89 c6             	mov    %rax,%rsi
    6f20:	48 89 df             	mov    %rbx,%rdi
    6f23:	e8 68 d9 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return instance;
    6f28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6f2c:	eb 16                	jmp    6f44 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x8a>
    throw std::runtime_error("Failed to create an instance.");
    6f2e:	49 89 c4             	mov    %rax,%r12
    6f31:	48 89 df             	mov    %rbx,%rdi
    6f34:	e8 97 d3 ff ff       	call   42d0 <__cxa_free_exception@plt>
    6f39:	4c 89 e0             	mov    %r12,%rax
    6f3c:	48 89 c7             	mov    %rax,%rdi
    6f3f:	e8 bc d9 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    6f44:	48 83 c4 20          	add    $0x20,%rsp
    6f48:	5b                   	pop    %rbx
    6f49:	41 5c                	pop    %r12
    6f4b:	5d                   	pop    %rbp
    6f4c:	c3                   	ret

0000000000006f4d <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>:

VkDevice createDevice(VkPhysicalDevice physicalDevice,
                      const VkDeviceCreateInfo *pCreateInfo,
                      const VkAllocationCallbacks *pAllocator) {
    6f4d:	55                   	push   %rbp
    6f4e:	48 89 e5             	mov    %rsp,%rbp
    6f51:	41 54                	push   %r12
    6f53:	53                   	push   %rbx
    6f54:	48 83 ec 30          	sub    $0x30,%rsp
    6f58:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6f5c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6f60:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkDevice device;
  if (vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, &device) !=
    6f64:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6f68:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6f6c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6f70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6f74:	48 89 c7             	mov    %rax,%rdi
    6f77:	e8 04 d8 ff ff       	call   4780 <vkCreateDevice@plt>
    6f7c:	85 c0                	test   %eax,%eax
    6f7e:	0f 95 c0             	setne  %al
    6f81:	84 c0                	test   %al,%al
    6f83:	74 3b                	je     6fc0 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create logical device.");
    6f85:	bf 10 00 00 00       	mov    $0x10,%edi
    6f8a:	e8 31 d2 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    6f8f:	48 89 c3             	mov    %rax,%rbx
    6f92:	48 8d 05 b7 74 01 00 	lea    0x174b7(%rip),%rax        # 1e450 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x28>
    6f99:	48 89 c6             	mov    %rax,%rsi
    6f9c:	48 89 df             	mov    %rbx,%rdi
    6f9f:	e8 8c d1 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    6fa4:	48 8b 05 fd 9f 02 00 	mov    0x29ffd(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6fab:	48 89 c2             	mov    %rax,%rdx
    6fae:	48 8d 05 8b 9d 02 00 	lea    0x29d8b(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6fb5:	48 89 c6             	mov    %rax,%rsi
    6fb8:	48 89 df             	mov    %rbx,%rdi
    6fbb:	e8 d0 d8 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return device;
    6fc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6fc4:	eb 16                	jmp    6fdc <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create logical device.");
    6fc6:	49 89 c4             	mov    %rax,%r12
    6fc9:	48 89 df             	mov    %rbx,%rdi
    6fcc:	e8 ff d2 ff ff       	call   42d0 <__cxa_free_exception@plt>
    6fd1:	4c 89 e0             	mov    %r12,%rax
    6fd4:	48 89 c7             	mov    %rax,%rdi
    6fd7:	e8 24 d9 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    6fdc:	48 83 c4 30          	add    $0x30,%rsp
    6fe0:	5b                   	pop    %rbx
    6fe1:	41 5c                	pop    %r12
    6fe3:	5d                   	pop    %rbp
    6fe4:	c3                   	ret

0000000000006fe5 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>:

VkSurfaceKHR createSurface(VkInstance instance, GLFWwindow *window,
                           const VkAllocationCallbacks *allocator) {
    6fe5:	55                   	push   %rbp
    6fe6:	48 89 e5             	mov    %rsp,%rbp
    6fe9:	41 54                	push   %r12
    6feb:	53                   	push   %rbx
    6fec:	48 83 ec 30          	sub    $0x30,%rsp
    6ff0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6ff4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6ff8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSurfaceKHR surface;
  if (glfwCreateWindowSurface(instance, window, allocator, &surface) !=
    6ffc:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7000:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    7004:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    7008:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    700c:	48 89 c7             	mov    %rax,%rdi
    700f:	e8 9c d7 ff ff       	call   47b0 <glfwCreateWindowSurface@plt>
    7014:	85 c0                	test   %eax,%eax
    7016:	0f 95 c0             	setne  %al
    7019:	84 c0                	test   %al,%al
    701b:	74 3b                	je     7058 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
    701d:	bf 10 00 00 00       	mov    $0x10,%edi
    7022:	e8 99 d1 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    7027:	48 89 c3             	mov    %rax,%rbx
    702a:	48 8d 05 47 74 01 00 	lea    0x17447(%rip),%rax        # 1e478 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x50>
    7031:	48 89 c6             	mov    %rax,%rsi
    7034:	48 89 df             	mov    %rbx,%rdi
    7037:	e8 f4 d0 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    703c:	48 8b 05 65 9f 02 00 	mov    0x29f65(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7043:	48 89 c2             	mov    %rax,%rdx
    7046:	48 8d 05 f3 9c 02 00 	lea    0x29cf3(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    704d:	48 89 c6             	mov    %rax,%rsi
    7050:	48 89 df             	mov    %rbx,%rdi
    7053:	e8 38 d8 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return surface;
    7058:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    705c:	eb 16                	jmp    7074 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create window surface.");
    705e:	49 89 c4             	mov    %rax,%r12
    7061:	48 89 df             	mov    %rbx,%rdi
    7064:	e8 67 d2 ff ff       	call   42d0 <__cxa_free_exception@plt>
    7069:	4c 89 e0             	mov    %r12,%rax
    706c:	48 89 c7             	mov    %rax,%rdi
    706f:	e8 8c d8 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    7074:	48 83 c4 30          	add    $0x30,%rsp
    7078:	5b                   	pop    %rbx
    7079:	41 5c                	pop    %r12
    707b:	5d                   	pop    %rbp
    707c:	c3                   	ret

000000000000707d <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>:

VkSwapchainKHR createSwapchain(VkDevice device,
                               const VkSwapchainCreateInfoKHR *pCreateInfo,
                               const VkAllocationCallbacks *pAllocator) {
    707d:	55                   	push   %rbp
    707e:	48 89 e5             	mov    %rsp,%rbp
    7081:	41 54                	push   %r12
    7083:	53                   	push   %rbx
    7084:	48 83 ec 30          	sub    $0x30,%rsp
    7088:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    708c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7090:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSwapchainKHR swapchain{};
    7094:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    709b:	00 
  if (vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, &swapchain) !=
    709c:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    70a0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    70a4:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    70a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    70ac:	48 89 c7             	mov    %rax,%rdi
    70af:	e8 0c d5 ff ff       	call   45c0 <vkCreateSwapchainKHR@plt>
    70b4:	85 c0                	test   %eax,%eax
    70b6:	0f 95 c0             	setne  %al
    70b9:	84 c0                	test   %al,%al
    70bb:	74 3b                	je     70f8 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create a swapchain.");
    70bd:	bf 10 00 00 00       	mov    $0x10,%edi
    70c2:	e8 f9 d0 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    70c7:	48 89 c3             	mov    %rax,%rbx
    70ca:	48 8d 05 c8 73 01 00 	lea    0x173c8(%rip),%rax        # 1e499 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x71>
    70d1:	48 89 c6             	mov    %rax,%rsi
    70d4:	48 89 df             	mov    %rbx,%rdi
    70d7:	e8 54 d0 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    70dc:	48 8b 05 c5 9e 02 00 	mov    0x29ec5(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    70e3:	48 89 c2             	mov    %rax,%rdx
    70e6:	48 8d 05 53 9c 02 00 	lea    0x29c53(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    70ed:	48 89 c6             	mov    %rax,%rsi
    70f0:	48 89 df             	mov    %rbx,%rdi
    70f3:	e8 98 d7 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return swapchain;
    70f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    70fc:	eb 16                	jmp    7114 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create a swapchain.");
    70fe:	49 89 c4             	mov    %rax,%r12
    7101:	48 89 df             	mov    %rbx,%rdi
    7104:	e8 c7 d1 ff ff       	call   42d0 <__cxa_free_exception@plt>
    7109:	4c 89 e0             	mov    %r12,%rax
    710c:	48 89 c7             	mov    %rax,%rdi
    710f:	e8 ec d7 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    7114:	48 83 c4 30          	add    $0x30,%rsp
    7118:	5b                   	pop    %rbx
    7119:	41 5c                	pop    %r12
    711b:	5d                   	pop    %rbp
    711c:	c3                   	ret

000000000000711d <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>:

VkImageView createImageView(VkDevice device,
                            const VkImageViewCreateInfo *pCreateInfo,
                            const VkAllocationCallbacks *pAllocator) {
    711d:	55                   	push   %rbp
    711e:	48 89 e5             	mov    %rsp,%rbp
    7121:	41 54                	push   %r12
    7123:	53                   	push   %rbx
    7124:	48 83 ec 30          	sub    $0x30,%rsp
    7128:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    712c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7130:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkImageView imageView;
  if (vkCreateImageView(device, pCreateInfo, pAllocator, &imageView) !=
    7134:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7138:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    713c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    7140:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7144:	48 89 c7             	mov    %rax,%rdi
    7147:	e8 84 d3 ff ff       	call   44d0 <vkCreateImageView@plt>
    714c:	85 c0                	test   %eax,%eax
    714e:	0f 95 c0             	setne  %al
    7151:	84 c0                	test   %al,%al
    7153:	74 3b                	je     7190 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create an image view.");
    7155:	bf 10 00 00 00       	mov    $0x10,%edi
    715a:	e8 61 d0 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    715f:	48 89 c3             	mov    %rax,%rbx
    7162:	48 8d 05 4f 73 01 00 	lea    0x1734f(%rip),%rax        # 1e4b8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x90>
    7169:	48 89 c6             	mov    %rax,%rsi
    716c:	48 89 df             	mov    %rbx,%rdi
    716f:	e8 bc cf ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    7174:	48 8b 05 2d 9e 02 00 	mov    0x29e2d(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    717b:	48 89 c2             	mov    %rax,%rdx
    717e:	48 8d 05 bb 9b 02 00 	lea    0x29bbb(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7185:	48 89 c6             	mov    %rax,%rsi
    7188:	48 89 df             	mov    %rbx,%rdi
    718b:	e8 00 d7 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return imageView;
    7190:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7194:	eb 16                	jmp    71ac <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create an image view.");
    7196:	49 89 c4             	mov    %rax,%r12
    7199:	48 89 df             	mov    %rbx,%rdi
    719c:	e8 2f d1 ff ff       	call   42d0 <__cxa_free_exception@plt>
    71a1:	4c 89 e0             	mov    %r12,%rax
    71a4:	48 89 c7             	mov    %rax,%rdi
    71a7:	e8 54 d7 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    71ac:	48 83 c4 30          	add    $0x30,%rsp
    71b0:	5b                   	pop    %rbx
    71b1:	41 5c                	pop    %r12
    71b3:	5d                   	pop    %rbp
    71b4:	c3                   	ret

00000000000071b5 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device,
                                  const std::vector<char> &shaderCode,
                                  const VkAllocationCallbacks *pAllocator) {
    71b5:	55                   	push   %rbp
    71b6:	48 89 e5             	mov    %rsp,%rbp
    71b9:	41 54                	push   %r12
    71bb:	53                   	push   %rbx
    71bc:	48 83 ec 60          	sub    $0x60,%rsp
    71c0:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    71c4:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    71c8:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  VkShaderModuleCreateInfo shaderModuleInfo{};
    71cc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    71d0:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    71d4:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    71d8:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  shaderModuleInfo.sType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO;
    71dd:	c7 45 c0 10 00 00 00 	movl   $0x10,-0x40(%rbp)
  shaderModuleInfo.codeSize = shaderCode.size();
    71e4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    71e8:	48 89 c7             	mov    %rax,%rdi
    71eb:	e8 80 06 00 00       	call   7870 <_ZNKSt6vectorIcSaIcEE4sizeEv>
    71f0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  shaderModuleInfo.pCode =
      reinterpret_cast<const uint32_t *>(shaderCode.data());
    71f4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    71f8:	48 89 c7             	mov    %rax,%rdi
    71fb:	e8 90 06 00 00       	call   7890 <_ZNKSt6vectorIcSaIcEE4dataEv>
  shaderModuleInfo.pCode =
    7200:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  shaderModuleInfo.pNext = nullptr;
    7204:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    720b:	00 

  VkShaderModule shaderModule;
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    720c:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    7210:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    7214:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    7218:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    721c:	48 89 c7             	mov    %rax,%rdi
    721f:	e8 fc d0 ff ff       	call   4320 <vkCreateShaderModule@plt>
                           &shaderModule) != VK_SUCCESS) {
    7224:	85 c0                	test   %eax,%eax
    7226:	0f 95 c0             	setne  %al
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    7229:	84 c0                	test   %al,%al
    722b:	74 3b                	je     7268 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xb3>
    throw std::runtime_error("Failed to create shader module.");
    722d:	bf 10 00 00 00       	mov    $0x10,%edi
    7232:	e8 89 cf ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    7237:	48 89 c3             	mov    %rax,%rbx
    723a:	48 8d 05 97 72 01 00 	lea    0x17297(%rip),%rax        # 1e4d8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xb0>
    7241:	48 89 c6             	mov    %rax,%rsi
    7244:	48 89 df             	mov    %rbx,%rdi
    7247:	e8 e4 ce ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    724c:	48 8b 05 55 9d 02 00 	mov    0x29d55(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7253:	48 89 c2             	mov    %rax,%rdx
    7256:	48 8d 05 e3 9a 02 00 	lea    0x29ae3(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    725d:	48 89 c6             	mov    %rax,%rsi
    7260:	48 89 df             	mov    %rbx,%rdi
    7263:	e8 28 d6 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return shaderModule;
    7268:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    726c:	eb 16                	jmp    7284 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xcf>
    throw std::runtime_error("Failed to create shader module.");
    726e:	49 89 c4             	mov    %rax,%r12
    7271:	48 89 df             	mov    %rbx,%rdi
    7274:	e8 57 d0 ff ff       	call   42d0 <__cxa_free_exception@plt>
    7279:	4c 89 e0             	mov    %r12,%rax
    727c:	48 89 c7             	mov    %rax,%rdi
    727f:	e8 7c d6 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    7284:	48 83 c4 60          	add    $0x60,%rsp
    7288:	5b                   	pop    %rbx
    7289:	41 5c                	pop    %r12
    728b:	5d                   	pop    %rbp
    728c:	c3                   	ret

000000000000728d <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device, std::string shaderCodePath,
                                  const VkAllocationCallbacks *pAllocator) {
    728d:	55                   	push   %rbp
    728e:	48 89 e5             	mov    %rsp,%rbp
    7291:	41 54                	push   %r12
    7293:	53                   	push   %rbx
    7294:	48 81 ec b0 02 00 00 	sub    $0x2b0,%rsp
    729b:	48 89 bd 58 fd ff ff 	mov    %rdi,-0x2a8(%rbp)
    72a2:	48 89 b5 50 fd ff ff 	mov    %rsi,-0x2b0(%rbp)
    72a9:	48 89 95 48 fd ff ff 	mov    %rdx,-0x2b8(%rbp)
  std::ifstream file(shaderCodePath, std::ios::ate | std::ios::binary);
    72b0:	be 04 00 00 00       	mov    $0x4,%esi
    72b5:	bf 02 00 00 00       	mov    $0x2,%edi
    72ba:	e8 9e 05 00 00       	call   785d <_ZStorSt13_Ios_OpenmodeS_>
    72bf:	89 c2                	mov    %eax,%edx
    72c1:	48 8b 8d 50 fd ff ff 	mov    -0x2b0(%rbp),%rcx
    72c8:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    72cf:	48 89 ce             	mov    %rcx,%rsi
    72d2:	48 89 c7             	mov    %rax,%rdi
    72d5:	e8 56 d5 ff ff       	call   4830 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!file.is_open()) {
    72da:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    72e1:	48 89 c7             	mov    %rax,%rdi
    72e4:	e8 37 d5 ff ff       	call   4820 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>
    72e9:	83 f0 01             	xor    $0x1,%eax
    72ec:	84 c0                	test   %al,%al
    72ee:	74 61                	je     7351 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0xc4>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    72f0:	bf 10 00 00 00       	mov    $0x10,%edi
    72f5:	e8 c6 ce ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    72fa:	48 89 c3             	mov    %rax,%rbx
    72fd:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    7301:	48 8b 95 50 fd ff ff 	mov    -0x2b0(%rbp),%rdx
    7308:	48 8d 0d e9 71 01 00 	lea    0x171e9(%rip),%rcx        # 1e4f8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xd0>
    730f:	48 89 ce             	mov    %rcx,%rsi
    7312:	48 89 c7             	mov    %rax,%rdi
    7315:	e8 9a 05 00 00       	call   78b4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    731a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    731e:	48 89 c6             	mov    %rax,%rsi
    7321:	48 89 df             	mov    %rbx,%rdi
    7324:	e8 17 d5 ff ff       	call   4840 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    7329:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    732d:	48 89 c7             	mov    %rax,%rdi
    7330:	e8 3b cf ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    7335:	48 8b 05 6c 9c 02 00 	mov    0x29c6c(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    733c:	48 89 c2             	mov    %rax,%rdx
    733f:	48 8d 05 fa 99 02 00 	lea    0x299fa(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7346:	48 89 c6             	mov    %rax,%rsi
    7349:	48 89 df             	mov    %rbx,%rdi
    734c:	e8 3f d5 ff ff       	call   4890 <__cxa_throw@plt>
  }
  size_t bufferSize = static_cast<size_t>(file.tellg());
    7351:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    7358:	48 89 c7             	mov    %rax,%rdi
    735b:	e8 70 d5 ff ff       	call   48d0 <_ZNSi5tellgEv@plt>
    7360:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    7364:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    7368:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    736c:	48 89 c7             	mov    %rax,%rdi
    736f:	e8 42 06 00 00       	call   79b6 <_ZNKSt4fposI11__mbstate_tEcvlEv>
    7374:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  std::vector<char> buffer(bufferSize);
    7378:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    737c:	48 89 c7             	mov    %rax,%rdi
    737f:	e8 8c d5 ff ff       	call   4910 <_ZNSaIcEC1Ev@plt>
    7384:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    7388:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    738c:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    7393:	48 89 ce             	mov    %rcx,%rsi
    7396:	48 89 c7             	mov    %rax,%rdi
    7399:	e8 2a 06 00 00       	call   79c8 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>
    739e:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    73a2:	48 89 c7             	mov    %rax,%rdi
    73a5:	e8 86 d1 ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
  file.seekg(0);
    73aa:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    73ae:	be 00 00 00 00       	mov    $0x0,%esi
    73b3:	48 89 c7             	mov    %rax,%rdi
    73b6:	e8 c7 06 00 00       	call   7a82 <_ZNSt4fposI11__mbstate_tEC1El>
    73bb:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    73bf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    73c3:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    73ca:	48 89 ce             	mov    %rcx,%rsi
    73cd:	48 89 c7             	mov    %rax,%rdi
    73d0:	e8 7b d2 ff ff       	call   4650 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>
  file.read(buffer.data(), bufferSize);
    73d5:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    73d9:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    73e0:	48 89 c7             	mov    %rax,%rdi
    73e3:	e8 ca 06 00 00       	call   7ab2 <_ZNSt6vectorIcSaIcEE4dataEv>
    73e8:	48 89 c1             	mov    %rax,%rcx
    73eb:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    73f2:	48 89 da             	mov    %rbx,%rdx
    73f5:	48 89 ce             	mov    %rcx,%rsi
    73f8:	48 89 c7             	mov    %rax,%rdi
    73fb:	e8 40 d2 ff ff       	call   4640 <_ZNSi4readEPcl@plt>
  file.close();
    7400:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    7407:	48 89 c7             	mov    %rax,%rdi
    740a:	e8 71 cc ff ff       	call   4080 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>

  return createShaderModule(device, buffer, pAllocator);
    740f:	48 8b 95 48 fd ff ff 	mov    -0x2b8(%rbp),%rdx
    7416:	48 8d 8d 60 fd ff ff 	lea    -0x2a0(%rbp),%rcx
    741d:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
    7424:	48 89 ce             	mov    %rcx,%rsi
    7427:	48 89 c7             	mov    %rax,%rdi
    742a:	e8 86 fd ff ff       	call   71b5 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>
    742f:	48 89 c3             	mov    %rax,%rbx
    7432:	90                   	nop
}
    7433:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    743a:	48 89 c7             	mov    %rax,%rdi
    743d:	e8 fc 05 00 00       	call   7a3e <_ZNSt6vectorIcSaIcEED1Ev>
    7442:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    7449:	48 89 c7             	mov    %rax,%rdi
    744c:	e8 7f cc ff ff       	call   40d0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
  return createShaderModule(device, buffer, pAllocator);
    7451:	48 89 d8             	mov    %rbx,%rax
    7454:	eb 63                	jmp    74b9 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x22c>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    7456:	49 89 c4             	mov    %rax,%r12
    7459:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    745d:	48 89 c7             	mov    %rax,%rdi
    7460:	e8 0b ce ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    7465:	eb 03                	jmp    746a <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x1dd>
    7467:	49 89 c4             	mov    %rax,%r12
    746a:	48 89 df             	mov    %rbx,%rdi
    746d:	e8 5e ce ff ff       	call   42d0 <__cxa_free_exception@plt>
    7472:	4c 89 e3             	mov    %r12,%rbx
    7475:	eb 28                	jmp    749f <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
  std::vector<char> buffer(bufferSize);
    7477:	48 89 c3             	mov    %rax,%rbx
    747a:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    747e:	48 89 c7             	mov    %rax,%rdi
    7481:	e8 aa d0 ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
    7486:	eb 17                	jmp    749f <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
}
    7488:	48 89 c3             	mov    %rax,%rbx
    748b:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    7492:	48 89 c7             	mov    %rax,%rdi
    7495:	e8 a4 05 00 00       	call   7a3e <_ZNSt6vectorIcSaIcEED1Ev>
    749a:	eb 03                	jmp    749f <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
    749c:	48 89 c3             	mov    %rax,%rbx
    749f:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    74a6:	48 89 c7             	mov    %rax,%rdi
    74a9:	e8 22 cc ff ff       	call   40d0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
    74ae:	48 89 d8             	mov    %rbx,%rax
    74b1:	48 89 c7             	mov    %rax,%rdi
    74b4:	e8 47 d4 ff ff       	call   4900 <_Unwind_Resume@plt>
    74b9:	48 81 c4 b0 02 00 00 	add    $0x2b0,%rsp
    74c0:	5b                   	pop    %rbx
    74c1:	41 5c                	pop    %r12
    74c3:	5d                   	pop    %rbp
    74c4:	c3                   	ret

00000000000074c5 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks>:

VkPipelineLayout
createPipelineLayout(VkDevice device,
                     const VkPipelineLayoutCreateInfo *pCreateInfo,
                     const VkAllocationCallbacks *pAllocator) {
    74c5:	55                   	push   %rbp
    74c6:	48 89 e5             	mov    %rsp,%rbp
    74c9:	41 54                	push   %r12
    74cb:	53                   	push   %rbx
    74cc:	48 83 ec 30          	sub    $0x30,%rsp
    74d0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    74d4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    74d8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkPipelineLayout pipelineLayout;
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    74dc:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    74e0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    74e4:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    74e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    74ec:	48 89 c7             	mov    %rax,%rdi
    74ef:	e8 7c ce ff ff       	call   4370 <vkCreatePipelineLayout@plt>
                             &pipelineLayout) != VK_SUCCESS) {
    74f4:	85 c0                	test   %eax,%eax
    74f6:	0f 95 c0             	setne  %al
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    74f9:	84 c0                	test   %al,%al
    74fb:	74 3b                	je     7538 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x73>
    throw std::runtime_error("Failed to create pipeline layout.");
    74fd:	bf 10 00 00 00       	mov    $0x10,%edi
    7502:	e8 b9 cc ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    7507:	48 89 c3             	mov    %rax,%rbx
    750a:	48 8d 05 f7 6f 01 00 	lea    0x16ff7(%rip),%rax        # 1e508 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe0>
    7511:	48 89 c6             	mov    %rax,%rsi
    7514:	48 89 df             	mov    %rbx,%rdi
    7517:	e8 14 cc ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    751c:	48 8b 05 85 9a 02 00 	mov    0x29a85(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7523:	48 89 c2             	mov    %rax,%rdx
    7526:	48 8d 05 13 98 02 00 	lea    0x29813(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    752d:	48 89 c6             	mov    %rax,%rsi
    7530:	48 89 df             	mov    %rbx,%rdi
    7533:	e8 58 d3 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return pipelineLayout;
    7538:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    753c:	eb 16                	jmp    7554 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    753e:	49 89 c4             	mov    %rax,%r12
    7541:	48 89 df             	mov    %rbx,%rdi
    7544:	e8 87 cd ff ff       	call   42d0 <__cxa_free_exception@plt>
    7549:	4c 89 e0             	mov    %r12,%rax
    754c:	48 89 c7             	mov    %rax,%rdi
    754f:	e8 ac d3 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    7554:	48 83 c4 30          	add    $0x30,%rsp
    7558:	5b                   	pop    %rbx
    7559:	41 5c                	pop    %r12
    755b:	5d                   	pop    %rbp
    755c:	c3                   	ret

000000000000755d <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks>:

VkRenderPass createRenderPass(VkDevice device,
                              const VkRenderPassCreateInfo *pCreateInfo,
                              const VkAllocationCallbacks *pAllocator) {
    755d:	55                   	push   %rbp
    755e:	48 89 e5             	mov    %rsp,%rbp
    7561:	41 54                	push   %r12
    7563:	53                   	push   %rbx
    7564:	48 83 ec 30          	sub    $0x30,%rsp
    7568:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    756c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7570:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkRenderPass renderPass;
  if (vkCreateRenderPass(device, pCreateInfo, pAllocator, &renderPass) !=
    7574:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7578:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    757c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    7580:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7584:	48 89 c7             	mov    %rax,%rdi
    7587:	e8 f4 cc ff ff       	call   4280 <vkCreateRenderPass@plt>
    758c:	85 c0                	test   %eax,%eax
    758e:	0f 95 c0             	setne  %al
    7591:	84 c0                	test   %al,%al
    7593:	74 3b                	je     75d0 <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create pipeline layout.");
    7595:	bf 10 00 00 00       	mov    $0x10,%edi
    759a:	e8 21 cc ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    759f:	48 89 c3             	mov    %rax,%rbx
    75a2:	48 8d 05 5f 6f 01 00 	lea    0x16f5f(%rip),%rax        # 1e508 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe0>
    75a9:	48 89 c6             	mov    %rax,%rsi
    75ac:	48 89 df             	mov    %rbx,%rdi
    75af:	e8 7c cb ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    75b4:	48 8b 05 ed 99 02 00 	mov    0x299ed(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    75bb:	48 89 c2             	mov    %rax,%rdx
    75be:	48 8d 05 7b 97 02 00 	lea    0x2977b(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    75c5:	48 89 c6             	mov    %rax,%rsi
    75c8:	48 89 df             	mov    %rbx,%rdi
    75cb:	e8 c0 d2 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return renderPass;
    75d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    75d4:	eb 16                	jmp    75ec <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    75d6:	49 89 c4             	mov    %rax,%r12
    75d9:	48 89 df             	mov    %rbx,%rdi
    75dc:	e8 ef cc ff ff       	call   42d0 <__cxa_free_exception@plt>
    75e1:	4c 89 e0             	mov    %r12,%rax
    75e4:	48 89 c7             	mov    %rax,%rdi
    75e7:	e8 14 d3 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    75ec:	48 83 c4 30          	add    $0x30,%rsp
    75f0:	5b                   	pop    %rbx
    75f1:	41 5c                	pop    %r12
    75f3:	5d                   	pop    %rbp
    75f4:	c3                   	ret

00000000000075f5 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks>:

VkFramebuffer createFramebuffer(VkDevice device,
                                const VkFramebufferCreateInfo *pCreateInfo,
                                const VkAllocationCallbacks *pAllocator) {
    75f5:	55                   	push   %rbp
    75f6:	48 89 e5             	mov    %rsp,%rbp
    75f9:	41 54                	push   %r12
    75fb:	53                   	push   %rbx
    75fc:	48 83 ec 30          	sub    $0x30,%rsp
    7600:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7604:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7608:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkFramebuffer framebuffer;
  if (vkCreateFramebuffer(device, pCreateInfo, pAllocator, &framebuffer) !=
    760c:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7610:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    7614:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    7618:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    761c:	48 89 c7             	mov    %rax,%rdi
    761f:	e8 8c d0 ff ff       	call   46b0 <vkCreateFramebuffer@plt>
    7624:	85 c0                	test   %eax,%eax
    7626:	0f 95 c0             	setne  %al
    7629:	84 c0                	test   %al,%al
    762b:	74 3b                	je     7668 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create framebuffer.");
    762d:	bf 10 00 00 00       	mov    $0x10,%edi
    7632:	e8 89 cb ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    7637:	48 89 c3             	mov    %rax,%rbx
    763a:	48 8d 05 e9 6e 01 00 	lea    0x16ee9(%rip),%rax        # 1e52a <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x102>
    7641:	48 89 c6             	mov    %rax,%rsi
    7644:	48 89 df             	mov    %rbx,%rdi
    7647:	e8 e4 ca ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    764c:	48 8b 05 55 99 02 00 	mov    0x29955(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7653:	48 89 c2             	mov    %rax,%rdx
    7656:	48 8d 05 e3 96 02 00 	lea    0x296e3(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    765d:	48 89 c6             	mov    %rax,%rsi
    7660:	48 89 df             	mov    %rbx,%rdi
    7663:	e8 28 d2 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return framebuffer;
    7668:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    766c:	eb 16                	jmp    7684 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create framebuffer.");
    766e:	49 89 c4             	mov    %rax,%r12
    7671:	48 89 df             	mov    %rbx,%rdi
    7674:	e8 57 cc ff ff       	call   42d0 <__cxa_free_exception@plt>
    7679:	4c 89 e0             	mov    %r12,%rax
    767c:	48 89 c7             	mov    %rax,%rdi
    767f:	e8 7c d2 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    7684:	48 83 c4 30          	add    $0x30,%rsp
    7688:	5b                   	pop    %rbx
    7689:	41 5c                	pop    %r12
    768b:	5d                   	pop    %rbp
    768c:	c3                   	ret

000000000000768d <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>:

VkCommandPool createCommandPool(VkDevice device,
                                const VkCommandPoolCreateInfo *pCreateInfo,
                                const VkAllocationCallbacks *pAllocator) {
    768d:	55                   	push   %rbp
    768e:	48 89 e5             	mov    %rsp,%rbp
    7691:	41 54                	push   %r12
    7693:	53                   	push   %rbx
    7694:	48 83 ec 30          	sub    $0x30,%rsp
    7698:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    769c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    76a0:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkCommandPool commandPool{};
    76a4:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    76ab:	00 
  if (vkCreateCommandPool(device, pCreateInfo, pAllocator, &commandPool) !=
    76ac:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    76b0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    76b4:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    76b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    76bc:	48 89 c7             	mov    %rax,%rdi
    76bf:	e8 bc ca ff ff       	call   4180 <vkCreateCommandPool@plt>
    76c4:	85 c0                	test   %eax,%eax
    76c6:	0f 95 c0             	setne  %al
    76c9:	84 c0                	test   %al,%al
    76cb:	74 3b                	je     7708 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create command pool.");
    76cd:	bf 10 00 00 00       	mov    $0x10,%edi
    76d2:	e8 e9 ca ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    76d7:	48 89 c3             	mov    %rax,%rbx
    76da:	48 8d 05 67 6e 01 00 	lea    0x16e67(%rip),%rax        # 1e548 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x120>
    76e1:	48 89 c6             	mov    %rax,%rsi
    76e4:	48 89 df             	mov    %rbx,%rdi
    76e7:	e8 44 ca ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    76ec:	48 8b 05 b5 98 02 00 	mov    0x298b5(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    76f3:	48 89 c2             	mov    %rax,%rdx
    76f6:	48 8d 05 43 96 02 00 	lea    0x29643(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    76fd:	48 89 c6             	mov    %rax,%rsi
    7700:	48 89 df             	mov    %rbx,%rdi
    7703:	e8 88 d1 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return commandPool;
    7708:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    770c:	eb 16                	jmp    7724 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create command pool.");
    770e:	49 89 c4             	mov    %rax,%r12
    7711:	48 89 df             	mov    %rbx,%rdi
    7714:	e8 b7 cb ff ff       	call   42d0 <__cxa_free_exception@plt>
    7719:	4c 89 e0             	mov    %r12,%rax
    771c:	48 89 c7             	mov    %rax,%rdi
    771f:	e8 dc d1 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    7724:	48 83 c4 30          	add    $0x30,%rsp
    7728:	5b                   	pop    %rbx
    7729:	41 5c                	pop    %r12
    772b:	5d                   	pop    %rbp
    772c:	c3                   	ret

000000000000772d <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks>:

VkSemaphore createSemaphore(VkDevice device,
                            const VkSemaphoreCreateInfo *pCreateInfo,
                            const VkAllocationCallbacks *pAllocator) {
    772d:	55                   	push   %rbp
    772e:	48 89 e5             	mov    %rsp,%rbp
    7731:	41 54                	push   %r12
    7733:	53                   	push   %rbx
    7734:	48 83 ec 30          	sub    $0x30,%rsp
    7738:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    773c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7740:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSemaphore semaphore;
  if (vkCreateSemaphore(device, pCreateInfo, pAllocator, &semaphore) !=
    7744:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7748:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    774c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    7750:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7754:	48 89 c7             	mov    %rax,%rdi
    7757:	e8 a4 cf ff ff       	call   4700 <vkCreateSemaphore@plt>
    775c:	85 c0                	test   %eax,%eax
    775e:	0f 95 c0             	setne  %al
    7761:	84 c0                	test   %al,%al
    7763:	74 3b                	je     77a0 <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create semaphore.");
    7765:	bf 10 00 00 00       	mov    $0x10,%edi
    776a:	e8 51 ca ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    776f:	48 89 c3             	mov    %rax,%rbx
    7772:	48 8d 05 ee 6d 01 00 	lea    0x16dee(%rip),%rax        # 1e567 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x13f>
    7779:	48 89 c6             	mov    %rax,%rsi
    777c:	48 89 df             	mov    %rbx,%rdi
    777f:	e8 ac c9 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    7784:	48 8b 05 1d 98 02 00 	mov    0x2981d(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    778b:	48 89 c2             	mov    %rax,%rdx
    778e:	48 8d 05 ab 95 02 00 	lea    0x295ab(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7795:	48 89 c6             	mov    %rax,%rsi
    7798:	48 89 df             	mov    %rbx,%rdi
    779b:	e8 f0 d0 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return semaphore;
    77a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77a4:	eb 16                	jmp    77bc <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create semaphore.");
    77a6:	49 89 c4             	mov    %rax,%r12
    77a9:	48 89 df             	mov    %rbx,%rdi
    77ac:	e8 1f cb ff ff       	call   42d0 <__cxa_free_exception@plt>
    77b1:	4c 89 e0             	mov    %r12,%rax
    77b4:	48 89 c7             	mov    %rax,%rdi
    77b7:	e8 44 d1 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    77bc:	48 83 c4 30          	add    $0x30,%rsp
    77c0:	5b                   	pop    %rbx
    77c1:	41 5c                	pop    %r12
    77c3:	5d                   	pop    %rbp
    77c4:	c3                   	ret

00000000000077c5 <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks>:

VkFence createFence(VkDevice device, const VkFenceCreateInfo *pCreateInfo,
                    const VkAllocationCallbacks *pAllocator) {
    77c5:	55                   	push   %rbp
    77c6:	48 89 e5             	mov    %rsp,%rbp
    77c9:	41 54                	push   %r12
    77cb:	53                   	push   %rbx
    77cc:	48 83 ec 30          	sub    $0x30,%rsp
    77d0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    77d4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    77d8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkFence fence;
  if (vkCreateFence(device, pCreateInfo, pAllocator, &fence) != VK_SUCCESS) {
    77dc:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    77e0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    77e4:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    77e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    77ec:	48 89 c7             	mov    %rax,%rdi
    77ef:	e8 1c ce ff ff       	call   4610 <vkCreateFence@plt>
    77f4:	85 c0                	test   %eax,%eax
    77f6:	0f 95 c0             	setne  %al
    77f9:	84 c0                	test   %al,%al
    77fb:	74 3b                	je     7838 <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks+0x73>
    throw std::runtime_error("Failed to create fence.");
    77fd:	bf 10 00 00 00       	mov    $0x10,%edi
    7802:	e8 b9 c9 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    7807:	48 89 c3             	mov    %rax,%rbx
    780a:	48 8d 05 72 6d 01 00 	lea    0x16d72(%rip),%rax        # 1e583 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x15b>
    7811:	48 89 c6             	mov    %rax,%rsi
    7814:	48 89 df             	mov    %rbx,%rdi
    7817:	e8 14 c9 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    781c:	48 8b 05 85 97 02 00 	mov    0x29785(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7823:	48 89 c2             	mov    %rax,%rdx
    7826:	48 8d 05 13 95 02 00 	lea    0x29513(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    782d:	48 89 c6             	mov    %rax,%rsi
    7830:	48 89 df             	mov    %rbx,%rdi
    7833:	e8 58 d0 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return fence;
    7838:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    783c:	eb 16                	jmp    7854 <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create fence.");
    783e:	49 89 c4             	mov    %rax,%r12
    7841:	48 89 df             	mov    %rbx,%rdi
    7844:	e8 87 ca ff ff       	call   42d0 <__cxa_free_exception@plt>
    7849:	4c 89 e0             	mov    %r12,%rax
    784c:	48 89 c7             	mov    %rax,%rdi
    784f:	e8 ac d0 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    7854:	48 83 c4 30          	add    $0x30,%rsp
    7858:	5b                   	pop    %rbx
    7859:	41 5c                	pop    %r12
    785b:	5d                   	pop    %rbp
    785c:	c3                   	ret

000000000000785d <_ZStorSt13_Ios_OpenmodeS_>:
  operator&(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _GLIBCXX_CONSTEXPR _Ios_Openmode
  operator|(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }
    785d:	55                   	push   %rbp
    785e:	48 89 e5             	mov    %rsp,%rbp
    7861:	89 7d fc             	mov    %edi,-0x4(%rbp)
    7864:	89 75 f8             	mov    %esi,-0x8(%rbp)
    7867:	8b 45 fc             	mov    -0x4(%rbp),%eax
    786a:	0b 45 f8             	or     -0x8(%rbp),%eax
    786d:	5d                   	pop    %rbp
    786e:	c3                   	ret
    786f:	90                   	nop

0000000000007870 <_ZNKSt6vectorIcSaIcEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    7870:	55                   	push   %rbp
    7871:	48 89 e5             	mov    %rsp,%rbp
    7874:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    7878:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    787c:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7880:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7884:	48 8b 00             	mov    (%rax),%rax
    7887:	48 29 c2             	sub    %rax,%rdx
    788a:	48 89 d0             	mov    %rdx,%rax
    788d:	5d                   	pop    %rbp
    788e:	c3                   	ret
    788f:	90                   	nop

0000000000007890 <_ZNKSt6vectorIcSaIcEE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    7890:	55                   	push   %rbp
    7891:	48 89 e5             	mov    %rsp,%rbp
    7894:	48 83 ec 10          	sub    $0x10,%rsp
    7898:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    789c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78a0:	48 8b 10             	mov    (%rax),%rdx
    78a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78a7:	48 89 d6             	mov    %rdx,%rsi
    78aa:	48 89 c7             	mov    %rax,%rdi
    78ad:	e8 24 02 00 00       	call   7ad6 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    78b2:	c9                   	leave
    78b3:	c3                   	ret

00000000000078b4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
#endif

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
    78b4:	55                   	push   %rbp
    78b5:	48 89 e5             	mov    %rsp,%rbp
    78b8:	53                   	push   %rbx
    78b9:	48 83 ec 38          	sub    $0x38,%rsp
    78bd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    78c1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    78c5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type	  __size_type;
      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
	rebind<_CharT>::other _Char_alloc_type;
      typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
      const __size_type __len = _Traits::length(__lhs);
    78c9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    78cd:	48 89 c7             	mov    %rax,%rdi
    78d0:	e8 43 d6 ff ff       	call   4f18 <_ZNSt11char_traitsIcE6lengthEPKc>
    78d5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    78d9:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    78dd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    78e1:	48 89 d6             	mov    %rdx,%rsi
    78e4:	48 89 c7             	mov    %rax,%rdi
    78e7:	e8 34 c8 ff ff       	call   4120 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>
    78ec:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    78f0:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
    78f4:	48 89 d6             	mov    %rdx,%rsi
    78f7:	48 89 c7             	mov    %rax,%rdi
    78fa:	e8 e9 01 00 00       	call   7ae8 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>
    78ff:	48 8d 55 e6          	lea    -0x1a(%rbp),%rdx
    7903:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7907:	48 89 d6             	mov    %rdx,%rsi
    790a:	48 89 c7             	mov    %rax,%rdi
    790d:	e8 8e cf ff ff       	call   48a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>
    7912:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    7916:	48 89 c7             	mov    %rax,%rdi
    7919:	e8 12 cc ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
    791e:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    7922:	48 89 c7             	mov    %rax,%rdi
    7925:	e8 06 cc ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
          __rhs.get_allocator()));
      __str.reserve(__len + __rhs.size());
    792a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    792e:	48 89 c7             	mov    %rax,%rdi
    7931:	e8 7a c9 ff ff       	call   42b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>
    7936:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    793a:	48 01 c2             	add    %rax,%rdx
    793d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7941:	48 89 d6             	mov    %rdx,%rsi
    7944:	48 89 c7             	mov    %rax,%rdi
    7947:	e8 94 ce ff ff       	call   47e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>
      __str.append(__lhs, __len);
    794c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7950:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    7954:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7958:	48 89 ce             	mov    %rcx,%rsi
    795b:	48 89 c7             	mov    %rax,%rdi
    795e:	e8 dd c6 ff ff       	call   4040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>
      __str.append(__rhs);
    7963:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    7967:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    796b:	48 89 d6             	mov    %rdx,%rsi
    796e:	48 89 c7             	mov    %rax,%rdi
    7971:	e8 fa cf ff ff       	call   4970 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>
      return __str;
    7976:	eb 34                	jmp    79ac <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0xf8>
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    7978:	48 89 c3             	mov    %rax,%rbx
    797b:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    797f:	48 89 c7             	mov    %rax,%rdi
    7982:	e8 a9 cb ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
    7987:	48 89 d8             	mov    %rbx,%rax
    798a:	48 89 c7             	mov    %rax,%rdi
    798d:	e8 6e cf ff ff       	call   4900 <_Unwind_Resume@plt>
    }
    7992:	48 89 c3             	mov    %rax,%rbx
    7995:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7999:	48 89 c7             	mov    %rax,%rdi
    799c:	e8 cf c8 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    79a1:	48 89 d8             	mov    %rbx,%rax
    79a4:	48 89 c7             	mov    %rax,%rdi
    79a7:	e8 54 cf ff ff       	call   4900 <_Unwind_Resume@plt>
    79ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    79b0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    79b4:	c9                   	leave
    79b5:	c3                   	ret

00000000000079b6 <_ZNKSt4fposI11__mbstate_tEcvlEv>:
      fpos& operator=(const fpos&) = default;
      ~fpos() = default;
#endif

      /// Convert to streamoff.
      operator streamoff() const { return _M_off; }
    79b6:	55                   	push   %rbp
    79b7:	48 89 e5             	mov    %rsp,%rbp
    79ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    79be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79c2:	48 8b 00             	mov    (%rax),%rax
    79c5:	5d                   	pop    %rbp
    79c6:	c3                   	ret
    79c7:	90                   	nop

00000000000079c8 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    79c8:	55                   	push   %rbp
    79c9:	48 89 e5             	mov    %rsp,%rbp
    79cc:	53                   	push   %rbx
    79cd:	48 83 ec 28          	sub    $0x28,%rsp
    79d1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    79d5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    79d9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    79dd:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    79e1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    79e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    79e9:	48 89 d6             	mov    %rdx,%rsi
    79ec:	48 89 c7             	mov    %rax,%rdi
    79ef:	e8 1d 01 00 00       	call   7b11 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>
    79f4:	48 89 c1             	mov    %rax,%rcx
    79f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    79fb:	48 89 c2             	mov    %rax,%rdx
    79fe:	48 89 ce             	mov    %rcx,%rsi
    7a01:	48 89 df             	mov    %rbx,%rdi
    7a04:	e8 85 01 00 00       	call   7b8e <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>
      { _M_default_initialize(__n); }
    7a09:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7a0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7a11:	48 89 d6             	mov    %rdx,%rsi
    7a14:	48 89 c7             	mov    %rax,%rdi
    7a17:	e8 14 02 00 00       	call   7c30 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>
    7a1c:	eb 1a                	jmp    7a38 <_ZNSt6vectorIcSaIcEEC1EmRKS0_+0x70>
    7a1e:	48 89 c3             	mov    %rax,%rbx
    7a21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7a25:	48 89 c7             	mov    %rax,%rdi
    7a28:	e8 bf 01 00 00       	call   7bec <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    7a2d:	48 89 d8             	mov    %rbx,%rax
    7a30:	48 89 c7             	mov    %rax,%rdi
    7a33:	e8 c8 ce ff ff       	call   4900 <_Unwind_Resume@plt>
    7a38:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7a3c:	c9                   	leave
    7a3d:	c3                   	ret

0000000000007a3e <_ZNSt6vectorIcSaIcEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    7a3e:	55                   	push   %rbp
    7a3f:	48 89 e5             	mov    %rsp,%rbp
    7a42:	48 83 ec 10          	sub    $0x10,%rsp
    7a46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    7a4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a4e:	48 89 c7             	mov    %rax,%rdi
    7a51:	e8 1a 02 00 00       	call   7c70 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    7a56:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    7a59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a5d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    7a61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a65:	48 8b 00             	mov    (%rax),%rax
    7a68:	48 89 ce             	mov    %rcx,%rsi
    7a6b:	48 89 c7             	mov    %rax,%rdi
    7a6e:	e8 0b 02 00 00       	call   7c7e <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>
      }
    7a73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a77:	48 89 c7             	mov    %rax,%rdi
    7a7a:	e8 6d 01 00 00       	call   7bec <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    7a7f:	90                   	nop
    7a80:	c9                   	leave
    7a81:	c3                   	ret

0000000000007a82 <_ZNSt4fposI11__mbstate_tEC1El>:
      fpos(streamoff __off)
    7a82:	55                   	push   %rbp
    7a83:	48 89 e5             	mov    %rsp,%rbp
    7a86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_off(__off), _M_state() { }
    7a8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a92:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7a96:	48 89 10             	mov    %rdx,(%rax)
    7a99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a9d:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    7aa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7aa8:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    7aaf:	90                   	nop
    7ab0:	5d                   	pop    %rbp
    7ab1:	c3                   	ret

0000000000007ab2 <_ZNSt6vectorIcSaIcEE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    7ab2:	55                   	push   %rbp
    7ab3:	48 89 e5             	mov    %rsp,%rbp
    7ab6:	48 83 ec 10          	sub    $0x10,%rsp
    7aba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    7abe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ac2:	48 8b 10             	mov    (%rax),%rdx
    7ac5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ac9:	48 89 d6             	mov    %rdx,%rsi
    7acc:	48 89 c7             	mov    %rax,%rdi
    7acf:	e8 02 00 00 00       	call   7ad6 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    7ad4:	c9                   	leave
    7ad5:	c3                   	ret

0000000000007ad6 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    7ad6:	55                   	push   %rbp
    7ad7:	48 89 e5             	mov    %rsp,%rbp
    7ada:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ade:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    7ae2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7ae6:	5d                   	pop    %rbp
    7ae7:	c3                   	ret

0000000000007ae8 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>:
      std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
      destroy(_Alloc& __a, _Ptr __p)
      noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
      { _Base_type::destroy(__a, std::__to_address(__p)); }

    static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
    7ae8:	55                   	push   %rbp
    7ae9:	48 89 e5             	mov    %rsp,%rbp
    7aec:	48 83 ec 10          	sub    $0x10,%rsp
    7af0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7af4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return _Base_type::select_on_container_copy_construction(__a); }
    7af8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7afc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7b00:	48 89 d6             	mov    %rdx,%rsi
    7b03:	48 89 c7             	mov    %rax,%rdi
    7b06:	e8 a8 01 00 00       	call   7cb3 <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>
    7b0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b0f:	c9                   	leave
    7b10:	c3                   	ret

0000000000007b11 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    7b11:	55                   	push   %rbp
    7b12:	48 89 e5             	mov    %rsp,%rbp
    7b15:	53                   	push   %rbx
    7b16:	48 83 ec 28          	sub    $0x28,%rsp
    7b1a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7b1e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    7b22:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    7b26:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7b2a:	48 89 d6             	mov    %rdx,%rsi
    7b2d:	48 89 c7             	mov    %rax,%rdi
    7b30:	e8 eb c6 ff ff       	call   4220 <_ZNSaIcEC1ERKS_@plt>
    7b35:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7b39:	48 89 c7             	mov    %rax,%rdi
    7b3c:	e8 9b 01 00 00       	call   7cdc <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>
    7b41:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    7b45:	0f 92 c3             	setb   %bl
    7b48:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7b4c:	48 89 c7             	mov    %rax,%rdi
    7b4f:	e8 dc c9 ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
    7b54:	84 db                	test   %bl,%bl
    7b56:	74 0f                	je     7b67 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
    7b58:	48 8d 05 41 6a 01 00 	lea    0x16a41(%rip),%rax        # 1e5a0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x178>
    7b5f:	48 89 c7             	mov    %rax,%rdi
    7b62:	e8 89 c6 ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    7b67:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    7b6b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7b6f:	c9                   	leave
    7b70:	c3                   	ret
    7b71:	90                   	nop

0000000000007b72 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>:
      struct _Vector_impl
    7b72:	55                   	push   %rbp
    7b73:	48 89 e5             	mov    %rsp,%rbp
    7b76:	48 83 ec 10          	sub    $0x10,%rsp
    7b7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b82:	48 89 c7             	mov    %rax,%rdi
    7b85:	e8 e6 c4 ff ff       	call   4070 <_ZNSaIcED2Ev@plt>
    7b8a:	90                   	nop
    7b8b:	c9                   	leave
    7b8c:	c3                   	ret
    7b8d:	90                   	nop

0000000000007b8e <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    7b8e:	55                   	push   %rbp
    7b8f:	48 89 e5             	mov    %rsp,%rbp
    7b92:	53                   	push   %rbx
    7b93:	48 83 ec 28          	sub    $0x28,%rsp
    7b97:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7b9b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7b9f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    7ba3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7ba7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7bab:	48 89 d6             	mov    %rdx,%rsi
    7bae:	48 89 c7             	mov    %rax,%rdi
    7bb1:	e8 68 01 00 00       	call   7d1e <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>
      { _M_create_storage(__n); }
    7bb6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7bba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7bbe:	48 89 d6             	mov    %rdx,%rsi
    7bc1:	48 89 c7             	mov    %rax,%rdi
    7bc4:	e8 87 01 00 00       	call   7d50 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>
    7bc9:	eb 1a                	jmp    7be5 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_+0x57>
    7bcb:	48 89 c3             	mov    %rax,%rbx
    7bce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7bd2:	48 89 c7             	mov    %rax,%rdi
    7bd5:	e8 98 ff ff ff       	call   7b72 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    7bda:	48 89 d8             	mov    %rbx,%rax
    7bdd:	48 89 c7             	mov    %rax,%rdi
    7be0:	e8 1b cd ff ff       	call   4900 <_Unwind_Resume@plt>
    7be5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7be9:	c9                   	leave
    7bea:	c3                   	ret
    7beb:	90                   	nop

0000000000007bec <_ZNSt12_Vector_baseIcSaIcEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    7bec:	55                   	push   %rbp
    7bed:	48 89 e5             	mov    %rsp,%rbp
    7bf0:	48 83 ec 10          	sub    $0x10,%rsp
    7bf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    7bf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bfc:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7c00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c04:	48 8b 00             	mov    (%rax),%rax
    7c07:	48 29 c2             	sub    %rax,%rdx
	_M_deallocate(_M_impl._M_start,
    7c0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c0e:	48 8b 08             	mov    (%rax),%rcx
    7c11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c15:	48 89 ce             	mov    %rcx,%rsi
    7c18:	48 89 c7             	mov    %rax,%rdi
    7c1b:	e8 82 01 00 00       	call   7da2 <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>
      }
    7c20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c24:	48 89 c7             	mov    %rax,%rdi
    7c27:	e8 46 ff ff ff       	call   7b72 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    7c2c:	90                   	nop
    7c2d:	c9                   	leave
    7c2e:	c3                   	ret
    7c2f:	90                   	nop

0000000000007c30 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    7c30:	55                   	push   %rbp
    7c31:	48 89 e5             	mov    %rsp,%rbp
    7c34:	48 83 ec 10          	sub    $0x10,%rsp
    7c38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    7c40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c44:	48 89 c7             	mov    %rax,%rdi
    7c47:	e8 24 00 00 00       	call   7c70 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    7c4c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    7c4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c53:	48 8b 00             	mov    (%rax),%rax
    7c56:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7c5a:	48 89 ce             	mov    %rcx,%rsi
    7c5d:	48 89 c7             	mov    %rax,%rdi
    7c60:	e8 72 01 00 00       	call   7dd7 <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    7c65:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7c69:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    7c6d:	90                   	nop
    7c6e:	c9                   	leave
    7c6f:	c3                   	ret

0000000000007c70 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    7c70:	55                   	push   %rbp
    7c71:	48 89 e5             	mov    %rsp,%rbp
    7c74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    7c78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c7c:	5d                   	pop    %rbp
    7c7d:	c3                   	ret

0000000000007c7e <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    7c7e:	55                   	push   %rbp
    7c7f:	48 89 e5             	mov    %rsp,%rbp
    7c82:	48 83 ec 20          	sub    $0x20,%rsp
    7c86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7c8e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    7c92:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7c96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c9a:	48 89 d6             	mov    %rdx,%rsi
    7c9d:	48 89 c7             	mov    %rax,%rdi
    7ca0:	e8 5b 01 00 00       	call   7e00 <_ZSt8_DestroyIPcEvT_S1_>
    }
    7ca5:	90                   	nop
    7ca6:	c9                   	leave
    7ca7:	c3                   	ret

0000000000007ca8 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
    __iterator_category(const _Iter&)
    7ca8:	55                   	push   %rbp
    7ca9:	48 89 e5             	mov    %rsp,%rbp
    7cac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    7cb0:	90                   	nop
    7cb1:	5d                   	pop    %rbp
    7cb2:	c3                   	ret

0000000000007cb3 <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
    7cb3:	55                   	push   %rbp
    7cb4:	48 89 e5             	mov    %rsp,%rbp
    7cb7:	48 83 ec 10          	sub    $0x10,%rsp
    7cbb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7cbf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __rhs; }
    7cc3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7cc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ccb:	48 89 d6             	mov    %rdx,%rsi
    7cce:	48 89 c7             	mov    %rax,%rdi
    7cd1:	e8 4a c5 ff ff       	call   4220 <_ZNSaIcEC1ERKS_@plt>
    7cd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cda:	c9                   	leave
    7cdb:	c3                   	ret

0000000000007cdc <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    7cdc:	55                   	push   %rbp
    7cdd:	48 89 e5             	mov    %rsp,%rbp
    7ce0:	48 83 ec 20          	sub    $0x20,%rsp
    7ce4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    7ce8:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    7cef:	ff ff 7f 
    7cf2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    7cf6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7cfa:	48 89 c7             	mov    %rax,%rdi
    7cfd:	e8 52 01 00 00       	call   7e54 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>
    7d02:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    7d06:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    7d0a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7d0e:	48 89 d6             	mov    %rdx,%rsi
    7d11:	48 89 c7             	mov    %rax,%rdi
    7d14:	e8 a4 df ff ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    7d19:	48 8b 00             	mov    (%rax),%rax
      }
    7d1c:	c9                   	leave
    7d1d:	c3                   	ret

0000000000007d1e <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    7d1e:	55                   	push   %rbp
    7d1f:	48 89 e5             	mov    %rsp,%rbp
    7d22:	48 83 ec 10          	sub    $0x10,%rsp
    7d26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    7d2e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7d32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d36:	48 89 d6             	mov    %rdx,%rsi
    7d39:	48 89 c7             	mov    %rax,%rdi
    7d3c:	e8 0f ca ff ff       	call   4750 <_ZNSaIcEC2ERKS_@plt>
    7d41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d45:	48 89 c7             	mov    %rax,%rdi
    7d48:	e8 21 01 00 00       	call   7e6e <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>
	{ }
    7d4d:	90                   	nop
    7d4e:	c9                   	leave
    7d4f:	c3                   	ret

0000000000007d50 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    7d50:	55                   	push   %rbp
    7d51:	48 89 e5             	mov    %rsp,%rbp
    7d54:	48 83 ec 10          	sub    $0x10,%rsp
    7d58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    7d60:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7d64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d68:	48 89 d6             	mov    %rdx,%rsi
    7d6b:	48 89 c7             	mov    %rax,%rdi
    7d6e:	e8 29 01 00 00       	call   7e9c <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>
    7d73:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7d77:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    7d7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d7e:	48 8b 10             	mov    (%rax),%rdx
    7d81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d85:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    7d89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d8d:	48 8b 10             	mov    (%rax),%rdx
    7d90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7d94:	48 01 c2             	add    %rax,%rdx
    7d97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d9b:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    7d9f:	90                   	nop
    7da0:	c9                   	leave
    7da1:	c3                   	ret

0000000000007da2 <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>:
      _M_deallocate(pointer __p, size_t __n)
    7da2:	55                   	push   %rbp
    7da3:	48 89 e5             	mov    %rsp,%rbp
    7da6:	48 83 ec 20          	sub    $0x20,%rsp
    7daa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7dae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7db2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    7db6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7dbb:	74 17                	je     7dd4 <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    7dbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7dc1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7dc5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7dc9:	48 89 ce             	mov    %rcx,%rsi
    7dcc:	48 89 c7             	mov    %rax,%rdi
    7dcf:	e8 52 00 00 00       	call   7e26 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>
      }
    7dd4:	90                   	nop
    7dd5:	c9                   	leave
    7dd6:	c3                   	ret

0000000000007dd7 <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    7dd7:	55                   	push   %rbp
    7dd8:	48 89 e5             	mov    %rsp,%rbp
    7ddb:	48 83 ec 20          	sub    $0x20,%rsp
    7ddf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7de3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7de7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    7deb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7def:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7df3:	48 89 d6             	mov    %rdx,%rsi
    7df6:	48 89 c7             	mov    %rax,%rdi
    7df9:	e8 d1 00 00 00       	call   7ecf <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>
    7dfe:	c9                   	leave
    7dff:	c3                   	ret

0000000000007e00 <_ZSt8_DestroyIPcEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    7e00:	55                   	push   %rbp
    7e01:	48 89 e5             	mov    %rsp,%rbp
    7e04:	48 83 ec 10          	sub    $0x10,%rsp
    7e08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e0c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    7e10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7e14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e18:	48 89 d6             	mov    %rdx,%rsi
    7e1b:	48 89 c7             	mov    %rax,%rdi
    7e1e:	e8 d5 00 00 00       	call   7ef8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>
    }
    7e23:	90                   	nop
    7e24:	c9                   	leave
    7e25:	c3                   	ret

0000000000007e26 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    7e26:	55                   	push   %rbp
    7e27:	48 89 e5             	mov    %rsp,%rbp
    7e2a:	48 83 ec 20          	sub    $0x20,%rsp
    7e2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e32:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7e36:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    7e3a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7e3e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7e42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e46:	48 89 ce             	mov    %rcx,%rsi
    7e49:	48 89 c7             	mov    %rax,%rdi
    7e4c:	e8 c5 00 00 00       	call   7f16 <_ZNSt15__new_allocatorIcE10deallocateEPcm>
    7e51:	90                   	nop
    7e52:	c9                   	leave
    7e53:	c3                   	ret

0000000000007e54 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    7e54:	55                   	push   %rbp
    7e55:	48 89 e5             	mov    %rsp,%rbp
    7e58:	48 83 ec 10          	sub    $0x10,%rsp
    7e5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    7e60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e64:	48 89 c7             	mov    %rax,%rdi
    7e67:	e8 d4 00 00 00       	call   7f40 <_ZNKSt15__new_allocatorIcE8max_sizeEv>
      }
    7e6c:	c9                   	leave
    7e6d:	c3                   	ret

0000000000007e6e <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    7e6e:	55                   	push   %rbp
    7e6f:	48 89 e5             	mov    %rsp,%rbp
    7e72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    7e76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e7a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    7e81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e85:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    7e8c:	00 
    7e8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e91:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    7e98:	00 
	{ }
    7e99:	90                   	nop
    7e9a:	5d                   	pop    %rbp
    7e9b:	c3                   	ret

0000000000007e9c <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>:
      _M_allocate(size_t __n)
    7e9c:	55                   	push   %rbp
    7e9d:	48 89 e5             	mov    %rsp,%rbp
    7ea0:	48 83 ec 10          	sub    $0x10,%rsp
    7ea4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ea8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    7eac:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7eb1:	74 15                	je     7ec8 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x2c>
    7eb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7eb7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7ebb:	48 89 d6             	mov    %rdx,%rsi
    7ebe:	48 89 c7             	mov    %rax,%rdi
    7ec1:	e8 94 00 00 00       	call   7f5a <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
    7ec6:	eb 05                	jmp    7ecd <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x31>
    7ec8:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    7ecd:	c9                   	leave
    7ece:	c3                   	ret

0000000000007ecf <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    7ecf:	55                   	push   %rbp
    7ed0:	48 89 e5             	mov    %rsp,%rbp
    7ed3:	48 83 ec 20          	sub    $0x20,%rsp
    7ed7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7edb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    7edf:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    7ee3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7ee7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7eeb:	48 89 d6             	mov    %rdx,%rsi
    7eee:	48 89 c7             	mov    %rax,%rdi
    7ef1:	e8 8e 00 00 00       	call   7f84 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>
    }
    7ef6:	c9                   	leave
    7ef7:	c3                   	ret

0000000000007ef8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    7ef8:	55                   	push   %rbp
    7ef9:	48 89 e5             	mov    %rsp,%rbp
    7efc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7f00:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7f04:	90                   	nop
    7f05:	5d                   	pop    %rbp
    7f06:	c3                   	ret

0000000000007f07 <_ZSt11__addressofIcEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    7f07:	55                   	push   %rbp
    7f08:	48 89 e5             	mov    %rsp,%rbp
    7f0b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    7f0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f13:	5d                   	pop    %rbp
    7f14:	c3                   	ret
    7f15:	90                   	nop

0000000000007f16 <_ZNSt15__new_allocatorIcE10deallocateEPcm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    7f16:	55                   	push   %rbp
    7f17:	48 89 e5             	mov    %rsp,%rbp
    7f1a:	48 83 ec 20          	sub    $0x20,%rsp
    7f1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7f22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7f26:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    7f2a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7f2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7f32:	48 89 d6             	mov    %rdx,%rsi
    7f35:	48 89 c7             	mov    %rax,%rdi
    7f38:	e8 63 c5 ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    7f3d:	c9                   	leave
    7f3e:	c3                   	ret
    7f3f:	90                   	nop

0000000000007f40 <_ZNKSt15__new_allocatorIcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    7f40:	55                   	push   %rbp
    7f41:	48 89 e5             	mov    %rsp,%rbp
    7f44:	48 83 ec 10          	sub    $0x10,%rsp
    7f48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    7f4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f50:	48 89 c7             	mov    %rax,%rdi
    7f53:	e8 8a 00 00 00       	call   7fe2 <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    7f58:	c9                   	leave
    7f59:	c3                   	ret

0000000000007f5a <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
    7f5a:	55                   	push   %rbp
    7f5b:	48 89 e5             	mov    %rsp,%rbp
    7f5e:	48 83 ec 10          	sub    $0x10,%rsp
    7f62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7f66:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    7f6a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7f6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f72:	ba 00 00 00 00       	mov    $0x0,%edx
    7f77:	48 89 ce             	mov    %rcx,%rsi
    7f7a:	48 89 c7             	mov    %rax,%rdi
    7f7d:	e8 74 00 00 00       	call   7ff6 <_ZNSt15__new_allocatorIcE8allocateEmPKv>
    7f82:	c9                   	leave
    7f83:	c3                   	ret

0000000000007f84 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    7f84:	55                   	push   %rbp
    7f85:	48 89 e5             	mov    %rsp,%rbp
    7f88:	48 83 ec 20          	sub    $0x20,%rsp
    7f8c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7f90:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    7f94:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    7f99:	74 40                	je     7fdb <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_+0x57>
		= std::__addressof(*__first);
    7f9b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f9f:	48 89 c7             	mov    %rax,%rdi
    7fa2:	e8 60 ff ff ff       	call   7f07 <_ZSt11__addressofIcEPT_RS0_>
    7fa7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    7fab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7faf:	48 89 c7             	mov    %rax,%rdi
    7fb2:	e8 87 00 00 00       	call   803e <_ZSt10_ConstructIcJEEvPT_DpOT0_>
	      ++__first;
    7fb7:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    7fbc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7fc0:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    7fc4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7fc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7fcc:	48 89 ce             	mov    %rcx,%rsi
    7fcf:	48 89 c7             	mov    %rax,%rdi
    7fd2:	e8 8a 00 00 00       	call   8061 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>
    7fd7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    7fdb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    7fdf:	c9                   	leave
    7fe0:	c3                   	ret
    7fe1:	90                   	nop

0000000000007fe2 <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    7fe2:	55                   	push   %rbp
    7fe3:	48 89 e5             	mov    %rsp,%rbp
    7fe6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    7fea:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    7ff1:	ff ff 7f 
      }
    7ff4:	5d                   	pop    %rbp
    7ff5:	c3                   	ret

0000000000007ff6 <_ZNSt15__new_allocatorIcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    7ff6:	55                   	push   %rbp
    7ff7:	48 89 e5             	mov    %rsp,%rbp
    7ffa:	48 83 ec 20          	sub    $0x20,%rsp
    7ffe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8002:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8006:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    800a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    800e:	48 89 c7             	mov    %rax,%rdi
    8011:	e8 cc ff ff ff       	call   7fe2 <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    8016:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    801a:	0f 92 c0             	setb   %al
    801d:	0f b6 c0             	movzbl %al,%eax
    8020:	48 85 c0             	test   %rax,%rax
    8023:	0f 95 c0             	setne  %al
    8026:	84 c0                	test   %al,%al
    8028:	74 05                	je     802f <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x39>
	    std::__throw_bad_alloc();
    802a:	e8 e1 c0 ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    802f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8033:	48 89 c7             	mov    %rax,%rdi
    8036:	e8 45 c4 ff ff       	call   4480 <_Znwm@plt>
    803b:	90                   	nop
      }
    803c:	c9                   	leave
    803d:	c3                   	ret

000000000000803e <_ZSt10_ConstructIcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    803e:	55                   	push   %rbp
    803f:	48 89 e5             	mov    %rsp,%rbp
    8042:	48 83 ec 10          	sub    $0x10,%rsp
    8046:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    804a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    804e:	48 89 c6             	mov    %rax,%rsi
    8051:	bf 01 00 00 00       	mov    $0x1,%edi
    8056:	e8 1d e6 ff ff       	call   6678 <_ZnwmPv>
    805b:	c6 00 00             	movb   $0x0,(%rax)
    }
    805e:	90                   	nop
    805f:	c9                   	leave
    8060:	c3                   	ret

0000000000008061 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    8061:	55                   	push   %rbp
    8062:	48 89 e5             	mov    %rsp,%rbp
    8065:	48 83 ec 20          	sub    $0x20,%rsp
    8069:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    806d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8071:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    8075:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8079:	48 89 c7             	mov    %rax,%rdi
    807c:	e8 27 fc ff ff       	call   7ca8 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    8081:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8085:	48 89 c7             	mov    %rax,%rdi
    8088:	e8 fd e5 ff ff       	call   668a <_ZSt17__size_to_integerm>
    808d:	48 89 c1             	mov    %rax,%rcx
    8090:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8094:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8098:	48 89 ce             	mov    %rcx,%rsi
    809b:	48 89 c7             	mov    %rax,%rdi
    809e:	e8 02 00 00 00       	call   80a5 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>
    }
    80a3:	c9                   	leave
    80a4:	c3                   	ret

00000000000080a5 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    80a5:	55                   	push   %rbp
    80a6:	48 89 e5             	mov    %rsp,%rbp
    80a9:	48 83 ec 20          	sub    $0x20,%rsp
    80ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    80b1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    80b5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    80b9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    80be:	75 06                	jne    80c6 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    80c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80c4:	eb 2a                	jmp    80f0 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x4b>
      std::__fill_a(__first, __first + __n, __value);
    80c6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    80ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    80ce:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    80d2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    80d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80da:	48 89 ce             	mov    %rcx,%rsi
    80dd:	48 89 c7             	mov    %rax,%rdi
    80e0:	e8 0d 00 00 00       	call   80f2 <_ZSt8__fill_aIPccEvT_S1_RKT0_>
      return __first + __n;
    80e5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    80e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    80ed:	48 01 d0             	add    %rdx,%rax
    }
    80f0:	c9                   	leave
    80f1:	c3                   	ret

00000000000080f2 <_ZSt8__fill_aIPccEvT_S1_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    80f2:	55                   	push   %rbp
    80f3:	48 89 e5             	mov    %rsp,%rbp
    80f6:	48 83 ec 20          	sub    $0x20,%rsp
    80fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    80fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8102:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    8106:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    810a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    810e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8112:	48 89 ce             	mov    %rcx,%rsi
    8115:	48 89 c7             	mov    %rax,%rdi
    8118:	e8 03 00 00 00       	call   8120 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>
    811d:	90                   	nop
    811e:	c9                   	leave
    811f:	c3                   	ret

0000000000008120 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>:
    __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
    8120:	55                   	push   %rbp
    8121:	48 89 e5             	mov    %rsp,%rbp
    8124:	48 83 ec 30          	sub    $0x30,%rsp
    8128:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    812c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8130:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __c;
    8134:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8138:	0f b6 00             	movzbl (%rax),%eax
    813b:	88 45 ff             	mov    %al,-0x1(%rbp)
      if (const size_t __len = __last - __first)
    813e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8142:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    8146:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    814a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    814f:	74 19                	je     816a <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_+0x4a>
	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
    8151:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    8155:	0f b6 c8             	movzbl %al,%ecx
    8158:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    815c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8160:	89 ce                	mov    %ecx,%esi
    8162:	48 89 c7             	mov    %rax,%rdi
    8165:	e8 a6 c0 ff ff       	call   4210 <memset@plt>
    }
    816a:	90                   	nop
    816b:	c9                   	leave
    816c:	c3                   	ret

000000000000816d <_ZN3vkh13destroyWindowEP10GLFWwindow>:
#include "destroy_object.hpp"

namespace vkh {

void destroyWindow(GLFWwindow *window) { glfwDestroyWindow(window); }
    816d:	55                   	push   %rbp
    816e:	48 89 e5             	mov    %rsp,%rbp
    8171:	48 83 ec 10          	sub    $0x10,%rsp
    8175:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8179:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    817d:	48 89 c7             	mov    %rax,%rdi
    8180:	e8 7b bf ff ff       	call   4100 <glfwDestroyWindow@plt>
    8185:	90                   	nop
    8186:	c9                   	leave
    8187:	c3                   	ret

0000000000008188 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>:

void destroyInstance(VkInstance instance,
                     const VkAllocationCallbacks *pAllocator) {
    8188:	55                   	push   %rbp
    8189:	48 89 e5             	mov    %rsp,%rbp
    818c:	48 83 ec 10          	sub    $0x10,%rsp
    8190:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8194:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyInstance(instance, pAllocator);
    8198:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    819c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81a0:	48 89 d6             	mov    %rdx,%rsi
    81a3:	48 89 c7             	mov    %rax,%rdi
    81a6:	e8 05 c3 ff ff       	call   44b0 <vkDestroyInstance@plt>
}
    81ab:	90                   	nop
    81ac:	c9                   	leave
    81ad:	c3                   	ret

00000000000081ae <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>:

void destroyDevice(VkDevice device, const VkAllocationCallbacks *pAllocator) {
    81ae:	55                   	push   %rbp
    81af:	48 89 e5             	mov    %rsp,%rbp
    81b2:	48 83 ec 10          	sub    $0x10,%rsp
    81b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyDevice(device, pAllocator);
    81be:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    81c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81c6:	48 89 d6             	mov    %rdx,%rsi
    81c9:	48 89 c7             	mov    %rax,%rdi
    81cc:	e8 8f c1 ff ff       	call   4360 <vkDestroyDevice@plt>
}
    81d1:	90                   	nop
    81d2:	c9                   	leave
    81d3:	c3                   	ret

00000000000081d4 <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>:

void destroySurface(VkInstance instance, VkSurfaceKHR surface,
                    const VkAllocationCallbacks *pAllocator) {
    81d4:	55                   	push   %rbp
    81d5:	48 89 e5             	mov    %rsp,%rbp
    81d8:	48 83 ec 20          	sub    $0x20,%rsp
    81dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    81e4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySurfaceKHR(instance, surface, pAllocator);
    81e8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    81ec:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    81f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81f4:	48 89 ce             	mov    %rcx,%rsi
    81f7:	48 89 c7             	mov    %rax,%rdi
    81fa:	e8 f1 c6 ff ff       	call   48f0 <vkDestroySurfaceKHR@plt>
}
    81ff:	90                   	nop
    8200:	c9                   	leave
    8201:	c3                   	ret

0000000000008202 <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>:

void destroySwapchain(VkDevice device, VkSwapchainKHR swapchain,
                      const VkAllocationCallbacks *pAllocator) {
    8202:	55                   	push   %rbp
    8203:	48 89 e5             	mov    %rsp,%rbp
    8206:	48 83 ec 20          	sub    $0x20,%rsp
    820a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    820e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8212:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySwapchainKHR(device, swapchain, pAllocator);
    8216:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    821a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    821e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8222:	48 89 ce             	mov    %rcx,%rsi
    8225:	48 89 c7             	mov    %rax,%rdi
    8228:	e8 b3 be ff ff       	call   40e0 <vkDestroySwapchainKHR@plt>
}
    822d:	90                   	nop
    822e:	c9                   	leave
    822f:	c3                   	ret

0000000000008230 <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>:

void destroyImageView(VkDevice device, VkImageView imageView,
                      const VkAllocationCallbacks *pAllocator) {
    8230:	55                   	push   %rbp
    8231:	48 89 e5             	mov    %rsp,%rbp
    8234:	48 83 ec 20          	sub    $0x20,%rsp
    8238:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    823c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8240:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyImageView(device, imageView, pAllocator);
    8244:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8248:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    824c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8250:	48 89 ce             	mov    %rcx,%rsi
    8253:	48 89 c7             	mov    %rax,%rdi
    8256:	e8 c5 c6 ff ff       	call   4920 <vkDestroyImageView@plt>
}
    825b:	90                   	nop
    825c:	c9                   	leave
    825d:	c3                   	ret

000000000000825e <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>:

void destroyShaderModule(VkDevice device, VkShaderModule shaderModule,
                         const VkAllocationCallbacks *pAllocator) {
    825e:	55                   	push   %rbp
    825f:	48 89 e5             	mov    %rsp,%rbp
    8262:	48 83 ec 20          	sub    $0x20,%rsp
    8266:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    826a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    826e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyShaderModule(device, shaderModule, pAllocator);
    8272:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8276:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    827a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    827e:	48 89 ce             	mov    %rcx,%rsi
    8281:	48 89 c7             	mov    %rax,%rdi
    8284:	e8 57 c3 ff ff       	call   45e0 <vkDestroyShaderModule@plt>
}
    8289:	90                   	nop
    828a:	c9                   	leave
    828b:	c3                   	ret

000000000000828c <_ZN3vkh21destroyPipelineLayoutEP10VkDevice_TP18VkPipelineLayout_TPK21VkAllocationCallbacks>:

void destroyPipelineLayout(VkDevice device, VkPipelineLayout pipelineLayout,
                           const VkAllocationCallbacks *pAllocator) {
    828c:	55                   	push   %rbp
    828d:	48 89 e5             	mov    %rsp,%rbp
    8290:	48 83 ec 20          	sub    $0x20,%rsp
    8294:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8298:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    829c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipelineLayout(device, pipelineLayout, pAllocator);
    82a0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    82a4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    82a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82ac:	48 89 ce             	mov    %rcx,%rsi
    82af:	48 89 c7             	mov    %rax,%rdi
    82b2:	e8 79 c3 ff ff       	call   4630 <vkDestroyPipelineLayout@plt>
}
    82b7:	90                   	nop
    82b8:	c9                   	leave
    82b9:	c3                   	ret

00000000000082ba <_ZN3vkh17destroyRenderPassEP10VkDevice_TP14VkRenderPass_TPK21VkAllocationCallbacks>:

void destroyRenderPass(VkDevice device, VkRenderPass renderPass,
                       const VkAllocationCallbacks *pAllocator) {
    82ba:	55                   	push   %rbp
    82bb:	48 89 e5             	mov    %rsp,%rbp
    82be:	48 83 ec 20          	sub    $0x20,%rsp
    82c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    82ca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyRenderPass(device, renderPass, pAllocator);
    82ce:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    82d2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    82d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82da:	48 89 ce             	mov    %rcx,%rsi
    82dd:	48 89 c7             	mov    %rax,%rdi
    82e0:	e8 6b c1 ff ff       	call   4450 <vkDestroyRenderPass@plt>
}
    82e5:	90                   	nop
    82e6:	c9                   	leave
    82e7:	c3                   	ret

00000000000082e8 <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>:

void destroyPipeline(VkDevice device, VkPipeline pipeline,
                     const VkAllocationCallbacks *pAllocator) {
    82e8:	55                   	push   %rbp
    82e9:	48 89 e5             	mov    %rsp,%rbp
    82ec:	48 83 ec 20          	sub    $0x20,%rsp
    82f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    82f8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipeline(device, pipeline, pAllocator);
    82fc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8300:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8304:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8308:	48 89 ce             	mov    %rcx,%rsi
    830b:	48 89 c7             	mov    %rax,%rdi
    830e:	e8 3d c2 ff ff       	call   4550 <vkDestroyPipeline@plt>
}
    8313:	90                   	nop
    8314:	c9                   	leave
    8315:	c3                   	ret

0000000000008316 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks>:

void destroyPipelines(VkDevice device, std::vector<VkPipeline> pipelines,
                      const VkAllocationCallbacks *pAllocator) {
    8316:	55                   	push   %rbp
    8317:	48 89 e5             	mov    %rsp,%rbp
    831a:	48 83 ec 40          	sub    $0x40,%rsp
    831e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8322:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8326:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  for (auto &pipeline : pipelines) {
    832a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    832e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8332:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8336:	48 89 c7             	mov    %rax,%rdi
    8339:	e8 20 01 00 00       	call   845e <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>
    833e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    8342:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8346:	48 89 c7             	mov    %rax,%rdi
    8349:	e8 36 01 00 00       	call   8484 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>
    834e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    8352:	eb 36                	jmp    838a <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x74>
    8354:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    8358:	48 89 c7             	mov    %rax,%rdi
    835b:	e8 a8 01 00 00       	call   8508 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>
    8360:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    vkDestroyPipeline(device, pipeline, pAllocator);
    8364:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8368:	48 8b 08             	mov    (%rax),%rcx
    836b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    836f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8373:	48 89 ce             	mov    %rcx,%rsi
    8376:	48 89 c7             	mov    %rax,%rdi
    8379:	e8 d2 c1 ff ff       	call   4550 <vkDestroyPipeline@plt>
  for (auto &pipeline : pipelines) {
    837e:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    8382:	48 89 c7             	mov    %rax,%rdi
    8385:	e8 5e 01 00 00       	call   84e8 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>
    838a:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    838e:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    8392:	48 89 d6             	mov    %rdx,%rsi
    8395:	48 89 c7             	mov    %rax,%rdi
    8398:	e8 10 01 00 00       	call   84ad <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    839d:	84 c0                	test   %al,%al
    839f:	75 b3                	jne    8354 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x3e>
  }
}
    83a1:	90                   	nop
    83a2:	90                   	nop
    83a3:	c9                   	leave
    83a4:	c3                   	ret

00000000000083a5 <_ZN3vkh18destroyFramebufferEP10VkDevice_TP15VkFramebuffer_TPK21VkAllocationCallbacks>:

void destroyFramebuffer(VkDevice device, VkFramebuffer framebuffer,
                        const VkAllocationCallbacks *pAllocator) {
    83a5:	55                   	push   %rbp
    83a6:	48 89 e5             	mov    %rsp,%rbp
    83a9:	48 83 ec 20          	sub    $0x20,%rsp
    83ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    83b1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    83b5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyFramebuffer(device, framebuffer, pAllocator);
    83b9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    83bd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    83c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83c5:	48 89 ce             	mov    %rcx,%rsi
    83c8:	48 89 c7             	mov    %rax,%rdi
    83cb:	e8 b0 c4 ff ff       	call   4880 <vkDestroyFramebuffer@plt>
}
    83d0:	90                   	nop
    83d1:	c9                   	leave
    83d2:	c3                   	ret

00000000000083d3 <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>:

void destroyCommandPool(VkDevice device, VkCommandPool commandPool,
                        const VkAllocationCallbacks *pAllocator) {
    83d3:	55                   	push   %rbp
    83d4:	48 89 e5             	mov    %rsp,%rbp
    83d7:	48 83 ec 20          	sub    $0x20,%rsp
    83db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    83df:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    83e3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyCommandPool(device, commandPool, pAllocator);
    83e7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    83eb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    83ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83f3:	48 89 ce             	mov    %rcx,%rsi
    83f6:	48 89 c7             	mov    %rax,%rdi
    83f9:	e8 22 c3 ff ff       	call   4720 <vkDestroyCommandPool@plt>
}
    83fe:	90                   	nop
    83ff:	c9                   	leave
    8400:	c3                   	ret

0000000000008401 <_ZN3vkh16destroySemaphoreEP10VkDevice_TP13VkSemaphore_TPK21VkAllocationCallbacks>:

void destroySemaphore(VkDevice device, VkSemaphore semaphore,
                      const VkAllocationCallbacks *pAllocator) {
    8401:	55                   	push   %rbp
    8402:	48 89 e5             	mov    %rsp,%rbp
    8405:	48 83 ec 20          	sub    $0x20,%rsp
    8409:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    840d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8411:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySemaphore(device, semaphore, pAllocator);
    8415:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8419:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    841d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8421:	48 89 ce             	mov    %rcx,%rsi
    8424:	48 89 c7             	mov    %rax,%rdi
    8427:	e8 c4 bc ff ff       	call   40f0 <vkDestroySemaphore@plt>
}
    842c:	90                   	nop
    842d:	c9                   	leave
    842e:	c3                   	ret

000000000000842f <_ZN3vkh12destroyFenceEP10VkDevice_TP9VkFence_TPK21VkAllocationCallbacks>:

void destroyFence(VkDevice device, VkFence fence,
                  const VkAllocationCallbacks *pAllocator) {
    842f:	55                   	push   %rbp
    8430:	48 89 e5             	mov    %rsp,%rbp
    8433:	48 83 ec 20          	sub    $0x20,%rsp
    8437:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    843b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    843f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyFence(device, fence, pAllocator);
    8443:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8447:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    844b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    844f:	48 89 ce             	mov    %rcx,%rsi
    8452:	48 89 c7             	mov    %rax,%rdi
    8455:	e8 e6 c0 ff ff       	call   4540 <vkDestroyFence@plt>
}
    845a:	90                   	nop
    845b:	c9                   	leave
    845c:	c3                   	ret
    845d:	90                   	nop

000000000000845e <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    845e:	55                   	push   %rbp
    845f:	48 89 e5             	mov    %rsp,%rbp
    8462:	48 83 ec 20          	sub    $0x20,%rsp
    8466:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    846a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    846e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8472:	48 89 d6             	mov    %rdx,%rsi
    8475:	48 89 c7             	mov    %rax,%rdi
    8478:	e8 9d 00 00 00       	call   851a <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    847d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8481:	c9                   	leave
    8482:	c3                   	ret
    8483:	90                   	nop

0000000000008484 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    8484:	55                   	push   %rbp
    8485:	48 89 e5             	mov    %rsp,%rbp
    8488:	48 83 ec 20          	sub    $0x20,%rsp
    848c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    8490:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8494:	48 8d 50 08          	lea    0x8(%rax),%rdx
    8498:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    849c:	48 89 d6             	mov    %rdx,%rsi
    849f:	48 89 c7             	mov    %rax,%rdi
    84a2:	e8 73 00 00 00       	call   851a <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    84a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84ab:	c9                   	leave
    84ac:	c3                   	ret

00000000000084ad <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    84ad:	55                   	push   %rbp
    84ae:	48 89 e5             	mov    %rsp,%rbp
    84b1:	53                   	push   %rbx
    84b2:	48 83 ec 18          	sub    $0x18,%rsp
    84b6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    84ba:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    84be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    84c2:	48 89 c7             	mov    %rax,%rdi
    84c5:	e8 6e 00 00 00       	call   8538 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    84ca:	48 8b 18             	mov    (%rax),%rbx
    84cd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    84d1:	48 89 c7             	mov    %rax,%rdi
    84d4:	e8 5f 00 00 00       	call   8538 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    84d9:	48 8b 00             	mov    (%rax),%rax
    84dc:	48 39 c3             	cmp    %rax,%rbx
    84df:	0f 95 c0             	setne  %al
    84e2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    84e6:	c9                   	leave
    84e7:	c3                   	ret

00000000000084e8 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    84e8:	55                   	push   %rbp
    84e9:	48 89 e5             	mov    %rsp,%rbp
    84ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    84f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84f4:	48 8b 00             	mov    (%rax),%rax
    84f7:	48 8d 50 08          	lea    0x8(%rax),%rdx
    84fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84ff:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    8502:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    8506:	5d                   	pop    %rbp
    8507:	c3                   	ret

0000000000008508 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    8508:	55                   	push   %rbp
    8509:	48 89 e5             	mov    %rsp,%rbp
    850c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    8510:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8514:	48 8b 00             	mov    (%rax),%rax
    8517:	5d                   	pop    %rbp
    8518:	c3                   	ret
    8519:	90                   	nop

000000000000851a <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    851a:	55                   	push   %rbp
    851b:	48 89 e5             	mov    %rsp,%rbp
    851e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8522:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    8526:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    852a:	48 8b 10             	mov    (%rax),%rdx
    852d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8531:	48 89 10             	mov    %rdx,(%rax)
    8534:	90                   	nop
    8535:	5d                   	pop    %rbp
    8536:	c3                   	ret
    8537:	90                   	nop

0000000000008538 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    8538:	55                   	push   %rbp
    8539:	48 89 e5             	mov    %rsp,%rbp
    853c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    8540:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8544:	5d                   	pop    %rbp
    8545:	c3                   	ret

0000000000008546 <_ZN3vkh37getAvailableInstanceLayerPropertyListEv>:
#include "get_list.hpp"

namespace vkh {

std::vector<VkLayerProperties> getAvailableInstanceLayerPropertyList() {
    8546:	55                   	push   %rbp
    8547:	48 89 e5             	mov    %rsp,%rbp
    854a:	53                   	push   %rbx
    854b:	48 83 ec 28          	sub    $0x28,%rsp
    854f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    8553:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    8557:	be 00 00 00 00       	mov    $0x0,%esi
    855c:	48 89 c7             	mov    %rax,%rdi
    855f:	e8 1c c0 ff ff       	call   4580 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    8564:	8b 45 e8             	mov    -0x18(%rbp),%eax
    8567:	89 c3                	mov    %eax,%ebx
    8569:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    856d:	48 89 c7             	mov    %rax,%rdi
    8570:	e8 47 11 00 00       	call   96bc <_ZNSaI17VkLayerPropertiesEC1Ev>
    8575:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    8579:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    857d:	48 89 de             	mov    %rbx,%rsi
    8580:	48 89 c7             	mov    %rax,%rdi
    8583:	e8 6c 11 00 00       	call   96f4 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    8588:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    858c:	48 89 c7             	mov    %rax,%rdi
    858f:	e8 44 11 00 00       	call   96d8 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    8594:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8598:	48 89 c7             	mov    %rax,%rdi
    859b:	e8 0e 12 00 00       	call   97ae <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    85a0:	48 89 c2             	mov    %rax,%rdx
    85a3:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    85a7:	48 89 d6             	mov    %rdx,%rsi
    85aa:	48 89 c7             	mov    %rax,%rdi
    85ad:	e8 ce bf ff ff       	call   4580 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    85b2:	eb 34                	jmp    85e8 <_ZN3vkh37getAvailableInstanceLayerPropertyListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    85b4:	48 89 c3             	mov    %rax,%rbx
    85b7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    85bb:	48 89 c7             	mov    %rax,%rdi
    85be:	e8 15 11 00 00       	call   96d8 <_ZNSaI17VkLayerPropertiesED1Ev>
    85c3:	48 89 d8             	mov    %rbx,%rax
    85c6:	48 89 c7             	mov    %rax,%rdi
    85c9:	e8 32 c3 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    85ce:	48 89 c3             	mov    %rax,%rbx
    85d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    85d5:	48 89 c7             	mov    %rax,%rdi
    85d8:	e8 8d 11 00 00       	call   976a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    85dd:	48 89 d8             	mov    %rbx,%rax
    85e0:	48 89 c7             	mov    %rax,%rdi
    85e3:	e8 18 c3 ff ff       	call   4900 <_Unwind_Resume@plt>
    85e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    85ec:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    85f0:	c9                   	leave
    85f1:	c3                   	ret

00000000000085f2 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>:

std::vector<VkExtensionProperties>
getAvailableInstanceExtensionList(const char *pLayerName) {
    85f2:	55                   	push   %rbp
    85f3:	48 89 e5             	mov    %rsp,%rbp
    85f6:	41 54                	push   %r12
    85f8:	53                   	push   %rbx
    85f9:	48 83 ec 20          	sub    $0x20,%rsp
    85fd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8601:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    8605:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    8609:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    860d:	ba 00 00 00 00       	mov    $0x0,%edx
    8612:	48 89 ce             	mov    %rcx,%rsi
    8615:	48 89 c7             	mov    %rax,%rdi
    8618:	e8 63 bd ff ff       	call   4380 <vkEnumerateInstanceExtensionProperties@plt>
                                             nullptr) != VK_SUCCESS) {
    861d:	85 c0                	test   %eax,%eax
    861f:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    8622:	84 c0                	test   %al,%al
    8624:	74 3b                	je     8661 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x6f>
    throw std::runtime_error("Failed to get instance extension list.");
    8626:	bf 10 00 00 00       	mov    $0x10,%edi
    862b:	e8 90 bb ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    8630:	48 89 c3             	mov    %rax,%rbx
    8633:	48 8d 05 fe 6b 01 00 	lea    0x16bfe(%rip),%rax        # 1f238 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    863a:	48 89 c6             	mov    %rax,%rsi
    863d:	48 89 df             	mov    %rbx,%rdi
    8640:	e8 eb ba ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    8645:	48 8b 05 5c 89 02 00 	mov    0x2895c(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    864c:	48 89 c2             	mov    %rax,%rdx
    864f:	48 8d 05 ea 86 02 00 	lea    0x286ea(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8656:	48 89 c6             	mov    %rax,%rsi
    8659:	48 89 df             	mov    %rbx,%rdi
    865c:	e8 2f c2 ff ff       	call   4890 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    8661:	8b 45 e8             	mov    -0x18(%rbp),%eax
    8664:	89 c3                	mov    %eax,%ebx
    8666:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    866a:	48 89 c7             	mov    %rax,%rdi
    866d:	e8 b8 11 00 00       	call   982a <_ZNSaI21VkExtensionPropertiesEC1Ev>
    8672:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    8676:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    867a:	48 89 de             	mov    %rbx,%rsi
    867d:	48 89 c7             	mov    %rax,%rdi
    8680:	e8 dd 11 00 00       	call   9862 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    8685:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8689:	48 89 c7             	mov    %rax,%rdi
    868c:	e8 b5 11 00 00       	call   9846 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    8691:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8695:	48 89 c7             	mov    %rax,%rdi
    8698:	e8 7f 12 00 00       	call   991c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    869d:	48 89 c2             	mov    %rax,%rdx
    86a0:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    86a4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    86a8:	48 89 ce             	mov    %rcx,%rsi
    86ab:	48 89 c7             	mov    %rax,%rdi
    86ae:	e8 cd bc ff ff       	call   4380 <vkEnumerateInstanceExtensionProperties@plt>
                                             instanceExtensions.data()) !=
    86b3:	85 c0                	test   %eax,%eax
    86b5:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    86b8:	84 c0                	test   %al,%al
    86ba:	0f 84 95 00 00 00    	je     8755 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x163>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to get instance extension list.");
    86c0:	bf 10 00 00 00       	mov    $0x10,%edi
    86c5:	e8 f6 ba ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    86ca:	48 89 c3             	mov    %rax,%rbx
    86cd:	48 8d 05 64 6b 01 00 	lea    0x16b64(%rip),%rax        # 1f238 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    86d4:	48 89 c6             	mov    %rax,%rsi
    86d7:	48 89 df             	mov    %rbx,%rdi
    86da:	e8 51 ba ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    86df:	48 8b 05 c2 88 02 00 	mov    0x288c2(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    86e6:	48 89 c2             	mov    %rax,%rdx
    86e9:	48 8d 05 50 86 02 00 	lea    0x28650(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    86f0:	48 89 c6             	mov    %rax,%rsi
    86f3:	48 89 df             	mov    %rbx,%rdi
    86f6:	e8 95 c1 ff ff       	call   4890 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    86fb:	49 89 c4             	mov    %rax,%r12
    86fe:	48 89 df             	mov    %rbx,%rdi
    8701:	e8 ca bb ff ff       	call   42d0 <__cxa_free_exception@plt>
    8706:	4c 89 e0             	mov    %r12,%rax
    8709:	48 89 c7             	mov    %rax,%rdi
    870c:	e8 ef c1 ff ff       	call   4900 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    8711:	48 89 c3             	mov    %rax,%rbx
    8714:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8718:	48 89 c7             	mov    %rax,%rdi
    871b:	e8 26 11 00 00       	call   9846 <_ZNSaI21VkExtensionPropertiesED1Ev>
    8720:	48 89 d8             	mov    %rbx,%rax
    8723:	48 89 c7             	mov    %rax,%rdi
    8726:	e8 d5 c1 ff ff       	call   4900 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    872b:	49 89 c4             	mov    %rax,%r12
    872e:	48 89 df             	mov    %rbx,%rdi
    8731:	e8 9a bb ff ff       	call   42d0 <__cxa_free_exception@plt>
    8736:	4c 89 e3             	mov    %r12,%rbx
    8739:	eb 03                	jmp    873e <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x14c>
  }
  return instanceExtensions;
}
    873b:	48 89 c3             	mov    %rax,%rbx
    873e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8742:	48 89 c7             	mov    %rax,%rdi
    8745:	e8 8e 11 00 00       	call   98d8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    874a:	48 89 d8             	mov    %rbx,%rax
    874d:	48 89 c7             	mov    %rax,%rdi
    8750:	e8 ab c1 ff ff       	call   4900 <_Unwind_Resume@plt>
  return instanceExtensions;
    8755:	90                   	nop
}
    8756:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    875a:	48 83 c4 20          	add    $0x20,%rsp
    875e:	5b                   	pop    %rbx
    875f:	41 5c                	pop    %r12
    8761:	5d                   	pop    %rbp
    8762:	c3                   	ret

0000000000008763 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>:

std::vector<VkExtensionProperties>
getAvailableDeviceExtensionList(VkPhysicalDevice physicalDevice,
                                const char *pLayerName) {
    8763:	55                   	push   %rbp
    8764:	48 89 e5             	mov    %rsp,%rbp
    8767:	41 54                	push   %r12
    8769:	53                   	push   %rbx
    876a:	48 83 ec 30          	sub    $0x30,%rsp
    876e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8772:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8776:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    877a:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    877e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    8782:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8786:	b9 00 00 00 00       	mov    $0x0,%ecx
    878b:	48 89 c7             	mov    %rax,%rdi
    878e:	e8 5d bf ff ff       	call   46f0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount, nullptr) != VK_SUCCESS) {
    8793:	85 c0                	test   %eax,%eax
    8795:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    8798:	84 c0                	test   %al,%al
    879a:	74 3b                	je     87d7 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x74>
    throw std::runtime_error("Failed to get device extension list.");
    879c:	bf 10 00 00 00       	mov    $0x10,%edi
    87a1:	e8 1a ba ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    87a6:	48 89 c3             	mov    %rax,%rbx
    87a9:	48 8d 05 b0 6a 01 00 	lea    0x16ab0(%rip),%rax        # 1f260 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x30>
    87b0:	48 89 c6             	mov    %rax,%rsi
    87b3:	48 89 df             	mov    %rbx,%rdi
    87b6:	e8 75 b9 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    87bb:	48 8b 05 e6 87 02 00 	mov    0x287e6(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    87c2:	48 89 c2             	mov    %rax,%rdx
    87c5:	48 8d 05 74 85 02 00 	lea    0x28574(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    87cc:	48 89 c6             	mov    %rax,%rsi
    87cf:	48 89 df             	mov    %rbx,%rdi
    87d2:	e8 b9 c0 ff ff       	call   4890 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    87d7:	8b 45 e8             	mov    -0x18(%rbp),%eax
    87da:	89 c3                	mov    %eax,%ebx
    87dc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    87e0:	48 89 c7             	mov    %rax,%rdi
    87e3:	e8 42 10 00 00       	call   982a <_ZNSaI21VkExtensionPropertiesEC1Ev>
    87e8:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    87ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    87f0:	48 89 de             	mov    %rbx,%rsi
    87f3:	48 89 c7             	mov    %rax,%rdi
    87f6:	e8 67 10 00 00       	call   9862 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    87fb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    87ff:	48 89 c7             	mov    %rax,%rdi
    8802:	e8 3f 10 00 00       	call   9846 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    8807:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    880b:	48 89 c7             	mov    %rax,%rdi
    880e:	e8 09 11 00 00       	call   991c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    8813:	48 89 c1             	mov    %rax,%rcx
    8816:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    881a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    881e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8822:	48 89 c7             	mov    %rax,%rdi
    8825:	e8 c6 be ff ff       	call   46f0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount,
          deviceExtensions.data()) != VK_SUCCESS) {
    882a:	85 c0                	test   %eax,%eax
    882c:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    882f:	84 c0                	test   %al,%al
    8831:	0f 84 95 00 00 00    	je     88cc <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x169>
    throw std::runtime_error("Failed to get device extension list.");
    8837:	bf 10 00 00 00       	mov    $0x10,%edi
    883c:	e8 7f b9 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    8841:	48 89 c3             	mov    %rax,%rbx
    8844:	48 8d 05 15 6a 01 00 	lea    0x16a15(%rip),%rax        # 1f260 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x30>
    884b:	48 89 c6             	mov    %rax,%rsi
    884e:	48 89 df             	mov    %rbx,%rdi
    8851:	e8 da b8 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    8856:	48 8b 05 4b 87 02 00 	mov    0x2874b(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    885d:	48 89 c2             	mov    %rax,%rdx
    8860:	48 8d 05 d9 84 02 00 	lea    0x284d9(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8867:	48 89 c6             	mov    %rax,%rsi
    886a:	48 89 df             	mov    %rbx,%rdi
    886d:	e8 1e c0 ff ff       	call   4890 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get device extension list.");
    8872:	49 89 c4             	mov    %rax,%r12
    8875:	48 89 df             	mov    %rbx,%rdi
    8878:	e8 53 ba ff ff       	call   42d0 <__cxa_free_exception@plt>
    887d:	4c 89 e0             	mov    %r12,%rax
    8880:	48 89 c7             	mov    %rax,%rdi
    8883:	e8 78 c0 ff ff       	call   4900 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    8888:	48 89 c3             	mov    %rax,%rbx
    888b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    888f:	48 89 c7             	mov    %rax,%rdi
    8892:	e8 af 0f 00 00       	call   9846 <_ZNSaI21VkExtensionPropertiesED1Ev>
    8897:	48 89 d8             	mov    %rbx,%rax
    889a:	48 89 c7             	mov    %rax,%rdi
    889d:	e8 5e c0 ff ff       	call   4900 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    88a2:	49 89 c4             	mov    %rax,%r12
    88a5:	48 89 df             	mov    %rbx,%rdi
    88a8:	e8 23 ba ff ff       	call   42d0 <__cxa_free_exception@plt>
    88ad:	4c 89 e3             	mov    %r12,%rbx
    88b0:	eb 03                	jmp    88b5 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x152>
  }
  return deviceExtensions;
}
    88b2:	48 89 c3             	mov    %rax,%rbx
    88b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    88b9:	48 89 c7             	mov    %rax,%rdi
    88bc:	e8 17 10 00 00       	call   98d8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    88c1:	48 89 d8             	mov    %rbx,%rax
    88c4:	48 89 c7             	mov    %rax,%rdi
    88c7:	e8 34 c0 ff ff       	call   4900 <_Unwind_Resume@plt>
  return deviceExtensions;
    88cc:	90                   	nop
}
    88cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    88d1:	48 83 c4 30          	add    $0x30,%rsp
    88d5:	5b                   	pop    %rbx
    88d6:	41 5c                	pop    %r12
    88d8:	5d                   	pop    %rbp
    88d9:	c3                   	ret

00000000000088da <_ZN3vkh36getRequiredInstanceExtensionNameListEv>:

std::vector<const char *> getRequiredInstanceExtensionNameList() {
    88da:	55                   	push   %rbp
    88db:	48 89 e5             	mov    %rsp,%rbp
    88de:	53                   	push   %rbx
    88df:	48 83 ec 38          	sub    $0x38,%rsp
    88e3:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  uint32_t requiredExtensionCount;
  const char **ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    88e7:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    88eb:	48 89 c7             	mov    %rax,%rdi
    88ee:	e8 0d ba ff ff       	call   4300 <glfwGetRequiredInstanceExtensions@plt>
    88f3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    88f7:	8b 45 d8             	mov    -0x28(%rbp),%eax
    88fa:	89 c3                	mov    %eax,%ebx
    88fc:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    8900:	48 89 c7             	mov    %rax,%rdi
    8903:	e8 90 10 00 00       	call   9998 <_ZNSaIPKcEC1Ev>
    8908:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    890c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8910:	48 89 de             	mov    %rbx,%rsi
    8913:	48 89 c7             	mov    %rax,%rdi
    8916:	e8 b5 10 00 00       	call   99d0 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    891b:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    891f:	48 89 c7             	mov    %rax,%rdi
    8922:	e8 8d 10 00 00       	call   99b4 <_ZNSaIPKcED1Ev>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    8927:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    892e:	eb 2e                	jmp    895e <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x84>
    requiredInstanceExtensions[i] = ppRequiredExtensions[i];
    8930:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8933:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    893a:	00 
    893b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    893f:	48 01 d0             	add    %rdx,%rax
    8942:	48 8b 18             	mov    (%rax),%rbx
    8945:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8948:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    894c:	48 89 d6             	mov    %rdx,%rsi
    894f:	48 89 c7             	mov    %rax,%rdi
    8952:	e8 ef 10 00 00       	call   9a46 <_ZNSt6vectorIPKcSaIS1_EEixEm>
    8957:	48 89 18             	mov    %rbx,(%rax)
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    895a:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    895e:	8b 45 d8             	mov    -0x28(%rbp),%eax
    8961:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    8964:	72 ca                	jb     8930 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x56>
  }
  return requiredInstanceExtensions;
    8966:	eb 1a                	jmp    8982 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0xa8>
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    8968:	48 89 c3             	mov    %rax,%rbx
    896b:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    896f:	48 89 c7             	mov    %rax,%rdi
    8972:	e8 3d 10 00 00       	call   99b4 <_ZNSaIPKcED1Ev>
    8977:	48 89 d8             	mov    %rbx,%rax
    897a:	48 89 c7             	mov    %rax,%rdi
    897d:	e8 7e bf ff ff       	call   4900 <_Unwind_Resume@plt>
}
    8982:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8986:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    898a:	c9                   	leave
    898b:	c3                   	ret

000000000000898c <_ZN3vkh29getAvailableInstanceLayerListEv>:

std::vector<VkLayerProperties> getAvailableInstanceLayerList() {
    898c:	55                   	push   %rbp
    898d:	48 89 e5             	mov    %rsp,%rbp
    8990:	53                   	push   %rbx
    8991:	48 83 ec 28          	sub    $0x28,%rsp
    8995:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    8999:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    899d:	be 00 00 00 00       	mov    $0x0,%esi
    89a2:	48 89 c7             	mov    %rax,%rdi
    89a5:	e8 d6 bb ff ff       	call   4580 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    89aa:	8b 45 e8             	mov    -0x18(%rbp),%eax
    89ad:	89 c3                	mov    %eax,%ebx
    89af:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    89b3:	48 89 c7             	mov    %rax,%rdi
    89b6:	e8 01 0d 00 00       	call   96bc <_ZNSaI17VkLayerPropertiesEC1Ev>
    89bb:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    89bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    89c3:	48 89 de             	mov    %rbx,%rsi
    89c6:	48 89 c7             	mov    %rax,%rdi
    89c9:	e8 26 0d 00 00       	call   96f4 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    89ce:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    89d2:	48 89 c7             	mov    %rax,%rdi
    89d5:	e8 fe 0c 00 00       	call   96d8 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    89da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    89de:	48 89 c7             	mov    %rax,%rdi
    89e1:	e8 c8 0d 00 00       	call   97ae <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    89e6:	48 89 c2             	mov    %rax,%rdx
    89e9:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    89ed:	48 89 d6             	mov    %rdx,%rsi
    89f0:	48 89 c7             	mov    %rax,%rdi
    89f3:	e8 88 bb ff ff       	call   4580 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    89f8:	eb 34                	jmp    8a2e <_ZN3vkh29getAvailableInstanceLayerListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    89fa:	48 89 c3             	mov    %rax,%rbx
    89fd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8a01:	48 89 c7             	mov    %rax,%rdi
    8a04:	e8 cf 0c 00 00       	call   96d8 <_ZNSaI17VkLayerPropertiesED1Ev>
    8a09:	48 89 d8             	mov    %rbx,%rax
    8a0c:	48 89 c7             	mov    %rax,%rdi
    8a0f:	e8 ec be ff ff       	call   4900 <_Unwind_Resume@plt>
}
    8a14:	48 89 c3             	mov    %rax,%rbx
    8a17:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8a1b:	48 89 c7             	mov    %rax,%rdi
    8a1e:	e8 47 0d 00 00       	call   976a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    8a23:	48 89 d8             	mov    %rbx,%rax
    8a26:	48 89 c7             	mov    %rax,%rdi
    8a29:	e8 d2 be ff ff       	call   4900 <_Unwind_Resume@plt>
    8a2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8a32:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8a36:	c9                   	leave
    8a37:	c3                   	ret

0000000000008a38 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>:

std::vector<VkPhysicalDevice> getPhysicalDeviceList(VkInstance instance) {
    8a38:	55                   	push   %rbp
    8a39:	48 89 e5             	mov    %rsp,%rbp
    8a3c:	41 54                	push   %r12
    8a3e:	53                   	push   %rbx
    8a3f:	48 83 ec 20          	sub    $0x20,%rsp
    8a43:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8a47:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t physicalDeviceCount;
  vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    8a4b:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    8a4f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8a53:	ba 00 00 00 00       	mov    $0x0,%edx
    8a58:	48 89 ce             	mov    %rcx,%rsi
    8a5b:	48 89 c7             	mov    %rax,%rdi
    8a5e:	e8 9d b7 ff ff       	call   4200 <vkEnumeratePhysicalDevices@plt>
  if (physicalDeviceCount == 0) {
    8a63:	8b 45 e8             	mov    -0x18(%rbp),%eax
    8a66:	85 c0                	test   %eax,%eax
    8a68:	75 3b                	jne    8aa5 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x6d>
    throw std::runtime_error(
        "Failed to find any physical device with Vulkan support.");
    8a6a:	bf 10 00 00 00       	mov    $0x10,%edi
    8a6f:	e8 4c b7 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    8a74:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    8a77:	48 8d 05 0a 68 01 00 	lea    0x1680a(%rip),%rax        # 1f288 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x58>
    8a7e:	48 89 c6             	mov    %rax,%rsi
    8a81:	48 89 df             	mov    %rbx,%rdi
    8a84:	e8 a7 b6 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
        "Failed to find any physical device with Vulkan support.");
    8a89:	48 8b 05 18 85 02 00 	mov    0x28518(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8a90:	48 89 c2             	mov    %rax,%rdx
    8a93:	48 8d 05 a6 82 02 00 	lea    0x282a6(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8a9a:	48 89 c6             	mov    %rax,%rsi
    8a9d:	48 89 df             	mov    %rbx,%rdi
    8aa0:	e8 eb bd ff ff       	call   4890 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    8aa5:	8b 45 e8             	mov    -0x18(%rbp),%eax
    8aa8:	89 c3                	mov    %eax,%ebx
    8aaa:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8aae:	48 89 c7             	mov    %rax,%rdi
    8ab1:	e8 fe 0f 00 00       	call   9ab4 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    8ab6:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    8aba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8abe:	48 89 de             	mov    %rbx,%rsi
    8ac1:	48 89 c7             	mov    %rax,%rdi
    8ac4:	e8 23 10 00 00       	call   9aec <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    8ac9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8acd:	48 89 c7             	mov    %rax,%rdi
    8ad0:	e8 fb 0f 00 00       	call   9ad0 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    8ad5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8ad9:	48 89 c7             	mov    %rax,%rdi
    8adc:	e8 c5 10 00 00       	call   9ba6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    8ae1:	48 89 c2             	mov    %rax,%rdx
    8ae4:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    8ae8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8aec:	48 89 ce             	mov    %rcx,%rsi
    8aef:	48 89 c7             	mov    %rax,%rdi
    8af2:	e8 09 b7 ff ff       	call   4200 <vkEnumeratePhysicalDevices@plt>
                                 physicalDevices.data()) != VK_SUCCESS) {
    8af7:	85 c0                	test   %eax,%eax
    8af9:	0f 95 c0             	setne  %al
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    8afc:	84 c0                	test   %al,%al
    8afe:	0f 84 95 00 00 00    	je     8b99 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x161>
    throw std::runtime_error("Failed to get physical devices list.");
    8b04:	bf 10 00 00 00       	mov    $0x10,%edi
    8b09:	e8 b2 b6 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    8b0e:	48 89 c3             	mov    %rax,%rbx
    8b11:	48 8d 05 a8 67 01 00 	lea    0x167a8(%rip),%rax        # 1f2c0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x90>
    8b18:	48 89 c6             	mov    %rax,%rsi
    8b1b:	48 89 df             	mov    %rbx,%rdi
    8b1e:	e8 0d b6 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    8b23:	48 8b 05 7e 84 02 00 	mov    0x2847e(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8b2a:	48 89 c2             	mov    %rax,%rdx
    8b2d:	48 8d 05 0c 82 02 00 	lea    0x2820c(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8b34:	48 89 c6             	mov    %rax,%rsi
    8b37:	48 89 df             	mov    %rbx,%rdi
    8b3a:	e8 51 bd ff ff       	call   4890 <__cxa_throw@plt>
        "Failed to find any physical device with Vulkan support.");
    8b3f:	49 89 c4             	mov    %rax,%r12
    8b42:	48 89 df             	mov    %rbx,%rdi
    8b45:	e8 86 b7 ff ff       	call   42d0 <__cxa_free_exception@plt>
    8b4a:	4c 89 e0             	mov    %r12,%rax
    8b4d:	48 89 c7             	mov    %rax,%rdi
    8b50:	e8 ab bd ff ff       	call   4900 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    8b55:	48 89 c3             	mov    %rax,%rbx
    8b58:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8b5c:	48 89 c7             	mov    %rax,%rdi
    8b5f:	e8 6c 0f 00 00       	call   9ad0 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    8b64:	48 89 d8             	mov    %rbx,%rax
    8b67:	48 89 c7             	mov    %rax,%rdi
    8b6a:	e8 91 bd ff ff       	call   4900 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get physical devices list.");
    8b6f:	49 89 c4             	mov    %rax,%r12
    8b72:	48 89 df             	mov    %rbx,%rdi
    8b75:	e8 56 b7 ff ff       	call   42d0 <__cxa_free_exception@plt>
    8b7a:	4c 89 e3             	mov    %r12,%rbx
    8b7d:	eb 03                	jmp    8b82 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x14a>
  };
  return physicalDevices;
}
    8b7f:	48 89 c3             	mov    %rax,%rbx
    8b82:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8b86:	48 89 c7             	mov    %rax,%rdi
    8b89:	e8 d4 0f 00 00       	call   9b62 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    8b8e:	48 89 d8             	mov    %rbx,%rax
    8b91:	48 89 c7             	mov    %rax,%rdi
    8b94:	e8 67 bd ff ff       	call   4900 <_Unwind_Resume@plt>
  return physicalDevices;
    8b99:	90                   	nop
}
    8b9a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8b9e:	48 83 c4 20          	add    $0x20,%rsp
    8ba2:	5b                   	pop    %rbx
    8ba3:	41 5c                	pop    %r12
    8ba5:	5d                   	pop    %rbp
    8ba6:	c3                   	ret

0000000000008ba7 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>:

VkPhysicalDeviceProperties
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice) {
    8ba7:	55                   	push   %rbp
    8ba8:	48 89 e5             	mov    %rsp,%rbp
    8bab:	48 83 ec 10          	sub    $0x10,%rsp
    8baf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8bb3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    8bb7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8bbb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8bbf:	48 89 d6             	mov    %rdx,%rsi
    8bc2:	48 89 c7             	mov    %rax,%rdi
    8bc5:	e8 76 b5 ff ff       	call   4140 <vkGetPhysicalDeviceProperties@plt>
  return properties;
    8bca:	90                   	nop
}
    8bcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bcf:	c9                   	leave
    8bd0:	c3                   	ret

0000000000008bd1 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>:

VkPhysicalDeviceProperties2
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice,
                              void *pNextProperty) {
    8bd1:	55                   	push   %rbp
    8bd2:	48 89 e5             	mov    %rsp,%rbp
    8bd5:	48 83 ec 20          	sub    $0x20,%rsp
    8bd9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8bdd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8be1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  VkPhysicalDeviceProperties2 properties;
  properties.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
    8be5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8be9:	c7 00 79 b0 9b 3b    	movl   $0x3b9bb079,(%rax)
  properties.pNext = pNextProperty;
    8bef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bf3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8bf7:	48 89 50 08          	mov    %rdx,0x8(%rax)
  vkGetPhysicalDeviceProperties2(physicalDevice, &properties);
    8bfb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8bff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8c03:	48 89 d6             	mov    %rdx,%rsi
    8c06:	48 89 c7             	mov    %rax,%rdi
    8c09:	e8 12 b8 ff ff       	call   4420 <vkGetPhysicalDeviceProperties2@plt>
  return properties;
    8c0e:	90                   	nop
}
    8c0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c13:	c9                   	leave
    8c14:	c3                   	ret

0000000000008c15 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<VkQueueFamilyProperties>
getPhysicalDeviceQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    8c15:	55                   	push   %rbp
    8c16:	48 89 e5             	mov    %rsp,%rbp
    8c19:	53                   	push   %rbx
    8c1a:	48 83 ec 28          	sub    $0x28,%rsp
    8c1e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8c22:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t queueFamilyPropertyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice,
    8c26:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    8c2a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8c2e:	ba 00 00 00 00       	mov    $0x0,%edx
    8c33:	48 89 ce             	mov    %rcx,%rsi
    8c36:	48 89 c7             	mov    %rax,%rdi
    8c39:	e8 b2 b6 ff ff       	call   42f0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           &queueFamilyPropertyCount, nullptr);
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{
      queueFamilyPropertyCount};
    8c3e:	8b 45 e8             	mov    -0x18(%rbp),%eax
    8c41:	89 c3                	mov    %eax,%ebx
    8c43:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8c47:	48 89 c7             	mov    %rax,%rdi
    8c4a:	e8 c9 0f 00 00       	call   9c18 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    8c4f:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    8c53:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8c57:	48 89 de             	mov    %rbx,%rsi
    8c5a:	48 89 c7             	mov    %rax,%rdi
    8c5d:	e8 ee 0f 00 00       	call   9c50 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    8c62:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8c66:	48 89 c7             	mov    %rax,%rdi
    8c69:	e8 c6 0f 00 00       	call   9c34 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(
    8c6e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8c72:	48 89 c7             	mov    %rax,%rdi
    8c75:	e8 90 10 00 00       	call   9d0a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    8c7a:	48 89 c2             	mov    %rax,%rdx
    8c7d:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    8c81:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8c85:	48 89 ce             	mov    %rcx,%rsi
    8c88:	48 89 c7             	mov    %rax,%rdi
    8c8b:	e8 60 b6 ff ff       	call   42f0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
      physicalDevice, &queueFamilyPropertyCount, queueFamilyProperties.data());
  return queueFamilyProperties;
    8c90:	eb 34                	jmp    8cc6 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xb1>
      queueFamilyPropertyCount};
    8c92:	48 89 c3             	mov    %rax,%rbx
    8c95:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8c99:	48 89 c7             	mov    %rax,%rdi
    8c9c:	e8 93 0f 00 00       	call   9c34 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    8ca1:	48 89 d8             	mov    %rbx,%rax
    8ca4:	48 89 c7             	mov    %rax,%rdi
    8ca7:	e8 54 bc ff ff       	call   4900 <_Unwind_Resume@plt>
}
    8cac:	48 89 c3             	mov    %rax,%rbx
    8caf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8cb3:	48 89 c7             	mov    %rax,%rdi
    8cb6:	e8 0b 10 00 00       	call   9cc6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    8cbb:	48 89 d8             	mov    %rbx,%rax
    8cbe:	48 89 c7             	mov    %rax,%rdi
    8cc1:	e8 3a bc ff ff       	call   4900 <_Unwind_Resume@plt>
    8cc6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8cca:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8cce:	c9                   	leave
    8ccf:	c3                   	ret

0000000000008cd0 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getGraphicsQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    8cd0:	55                   	push   %rbp
    8cd1:	48 89 e5             	mov    %rsp,%rbp
    8cd4:	53                   	push   %rbx
    8cd5:	48 83 ec 68          	sub    $0x68,%rsp
    8cd9:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    8cdd:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    8ce1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8ce5:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    8ce9:	48 89 d6             	mov    %rdx,%rsi
    8cec:	48 89 c7             	mov    %rax,%rdi
    8cef:	e8 21 ff ff ff       	call   8c15 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> graphicsQueueFamilies{
      queueFamilyProps.size()};
    8cf4:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8cf8:	48 89 c7             	mov    %rax,%rdi
    8cfb:	e8 86 10 00 00       	call   9d86 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    8d00:	48 89 c3             	mov    %rax,%rbx
    8d03:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8d07:	48 89 c7             	mov    %rax,%rdi
    8d0a:	e8 a5 10 00 00       	call   9db4 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    8d0f:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    8d13:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    8d17:	48 89 de             	mov    %rbx,%rsi
    8d1a:	48 89 c7             	mov    %rax,%rdi
    8d1d:	e8 ca 10 00 00       	call   9dec <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    8d22:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8d26:	48 89 c7             	mov    %rax,%rdi
    8d29:	e8 a2 10 00 00       	call   9dd0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    8d2e:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    8d35:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    8d36:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8d3a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    8d3e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8d42:	48 89 c7             	mov    %rax,%rdi
    8d45:	e8 5c 11 00 00       	call   9ea6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    8d4a:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    8d4e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8d52:	48 89 c7             	mov    %rax,%rdi
    8d55:	e8 72 11 00 00       	call   9ecc <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    8d5a:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    8d5e:	eb 4e                	jmp    8dae <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xde>
    8d60:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    8d64:	48 89 c7             	mov    %rax,%rdi
    8d67:	e8 e4 11 00 00       	call   9f50 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    8d6c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_GRAPHICS_BIT) {
    8d70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8d74:	8b 00                	mov    (%rax),%eax
    8d76:	83 e0 01             	and    $0x1,%eax
    8d79:	85 c0                	test   %eax,%eax
    8d7b:	74 25                	je     8da2 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      graphicsQueueFamilies[index] = queueFamilyProp;
    8d7d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8d81:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    8d85:	48 89 d6             	mov    %rdx,%rsi
    8d88:	48 89 c7             	mov    %rax,%rdi
    8d8b:	e8 d2 11 00 00       	call   9f62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    8d90:	48 89 c2             	mov    %rax,%rdx
    8d93:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8d97:	48 89 c6             	mov    %rax,%rsi
    8d9a:	48 89 d7             	mov    %rdx,%rdi
    8d9d:	e8 ea 11 00 00       	call   9f8c <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
  for (const auto &queueFamilyProp : queueFamilyProps) {
    8da2:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    8da6:	48 89 c7             	mov    %rax,%rdi
    8da9:	e8 82 11 00 00       	call   9f30 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    8dae:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    8db2:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    8db6:	48 89 d6             	mov    %rdx,%rsi
    8db9:	48 89 c7             	mov    %rax,%rdi
    8dbc:	e8 34 11 00 00       	call   9ef5 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    8dc1:	84 c0                	test   %al,%al
    8dc3:	75 9b                	jne    8d60 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
    }
  }
  return graphicsQueueFamilies;
    8dc5:	90                   	nop
}
    8dc6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8dca:	48 89 c7             	mov    %rax,%rdi
    8dcd:	e8 f4 0e 00 00       	call   9cc6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return graphicsQueueFamilies;
    8dd2:	eb 26                	jmp    8dfa <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12a>
      queueFamilyProps.size()};
    8dd4:	48 89 c3             	mov    %rax,%rbx
    8dd7:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8ddb:	48 89 c7             	mov    %rax,%rdi
    8dde:	e8 ed 0f 00 00       	call   9dd0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    8de3:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8de7:	48 89 c7             	mov    %rax,%rdi
    8dea:	e8 d7 0e 00 00       	call   9cc6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    8def:	48 89 d8             	mov    %rbx,%rax
    8df2:	48 89 c7             	mov    %rax,%rdi
    8df5:	e8 06 bb ff ff       	call   4900 <_Unwind_Resume@plt>
    8dfa:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    8dfe:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8e02:	c9                   	leave
    8e03:	c3                   	ret

0000000000008e04 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getComputeQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    8e04:	55                   	push   %rbp
    8e05:	48 89 e5             	mov    %rsp,%rbp
    8e08:	53                   	push   %rbx
    8e09:	48 83 ec 68          	sub    $0x68,%rsp
    8e0d:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    8e11:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    8e15:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8e19:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    8e1d:	48 89 d6             	mov    %rdx,%rsi
    8e20:	48 89 c7             	mov    %rax,%rdi
    8e23:	e8 ed fd ff ff       	call   8c15 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> computeQueueFamilies{
      queueFamilyProps.size()};
    8e28:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8e2c:	48 89 c7             	mov    %rax,%rdi
    8e2f:	e8 52 0f 00 00       	call   9d86 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    8e34:	48 89 c3             	mov    %rax,%rbx
    8e37:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8e3b:	48 89 c7             	mov    %rax,%rdi
    8e3e:	e8 71 0f 00 00       	call   9db4 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    8e43:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    8e47:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    8e4b:	48 89 de             	mov    %rbx,%rsi
    8e4e:	48 89 c7             	mov    %rax,%rdi
    8e51:	e8 96 0f 00 00       	call   9dec <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    8e56:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8e5a:	48 89 c7             	mov    %rax,%rdi
    8e5d:	e8 6e 0f 00 00       	call   9dd0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    8e62:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    8e69:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    8e6a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8e6e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    8e72:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8e76:	48 89 c7             	mov    %rax,%rdi
    8e79:	e8 28 10 00 00       	call   9ea6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    8e7e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    8e82:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8e86:	48 89 c7             	mov    %rax,%rdi
    8e89:	e8 3e 10 00 00       	call   9ecc <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    8e8e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    8e92:	eb 53                	jmp    8ee7 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xe3>
    8e94:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    8e98:	48 89 c7             	mov    %rax,%rdi
    8e9b:	e8 b0 10 00 00       	call   9f50 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    8ea0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_COMPUTE_BIT) {
    8ea4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8ea8:	8b 00                	mov    (%rax),%eax
    8eaa:	83 e0 02             	and    $0x2,%eax
    8ead:	85 c0                	test   %eax,%eax
    8eaf:	74 25                	je     8ed6 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      computeQueueFamilies[index] = queueFamilyProp;
    8eb1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8eb5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    8eb9:	48 89 d6             	mov    %rdx,%rsi
    8ebc:	48 89 c7             	mov    %rax,%rdi
    8ebf:	e8 9e 10 00 00       	call   9f62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    8ec4:	48 89 c2             	mov    %rax,%rdx
    8ec7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8ecb:	48 89 c6             	mov    %rax,%rsi
    8ece:	48 89 d7             	mov    %rdx,%rdi
    8ed1:	e8 b6 10 00 00       	call   9f8c <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    8ed6:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    8edb:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    8edf:	48 89 c7             	mov    %rax,%rdi
    8ee2:	e8 49 10 00 00       	call   9f30 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    8ee7:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    8eeb:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    8eef:	48 89 d6             	mov    %rdx,%rsi
    8ef2:	48 89 c7             	mov    %rax,%rdi
    8ef5:	e8 fb 0f 00 00       	call   9ef5 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    8efa:	84 c0                	test   %al,%al
    8efc:	75 96                	jne    8e94 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
  }
  return computeQueueFamilies;
    8efe:	90                   	nop
}
    8eff:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8f03:	48 89 c7             	mov    %rax,%rdi
    8f06:	e8 bb 0d 00 00       	call   9cc6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return computeQueueFamilies;
    8f0b:	eb 26                	jmp    8f33 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12f>
      queueFamilyProps.size()};
    8f0d:	48 89 c3             	mov    %rax,%rbx
    8f10:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8f14:	48 89 c7             	mov    %rax,%rdi
    8f17:	e8 b4 0e 00 00       	call   9dd0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    8f1c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8f20:	48 89 c7             	mov    %rax,%rdi
    8f23:	e8 9e 0d 00 00       	call   9cc6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    8f28:	48 89 d8             	mov    %rbx,%rax
    8f2b:	48 89 c7             	mov    %rax,%rdi
    8f2e:	e8 cd b9 ff ff       	call   4900 <_Unwind_Resume@plt>
    8f33:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    8f37:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8f3b:	c9                   	leave
    8f3c:	c3                   	ret

0000000000008f3d <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getPresentQueueFamilyPropertyList(VkPhysicalDevice physicalDevice,
                                  VkSurfaceKHR surface) {
    8f3d:	55                   	push   %rbp
    8f3e:	48 89 e5             	mov    %rsp,%rbp
    8f41:	53                   	push   %rbx
    8f42:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    8f49:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    8f4d:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    8f51:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    8f58:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8f5c:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    8f60:	48 89 d6             	mov    %rdx,%rsi
    8f63:	48 89 c7             	mov    %rax,%rdi
    8f66:	e8 aa fc ff ff       	call   8c15 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> presentQueueFamilies{
      queueFamilyProps.size()};
    8f6b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8f6f:	48 89 c7             	mov    %rax,%rdi
    8f72:	e8 0f 0e 00 00       	call   9d86 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    8f77:	48 89 c3             	mov    %rax,%rbx
    8f7a:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8f7e:	48 89 c7             	mov    %rax,%rdi
    8f81:	e8 2e 0e 00 00       	call   9db4 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    8f86:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    8f8a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8f8e:	48 89 de             	mov    %rbx,%rsi
    8f91:	48 89 c7             	mov    %rax,%rdi
    8f94:	e8 53 0e 00 00       	call   9dec <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    8f99:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8f9d:	48 89 c7             	mov    %rax,%rdi
    8fa0:	e8 2b 0e 00 00       	call   9dd0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  uint32_t index = 0;
    8fa5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    8fac:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8fb0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    8fb4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8fb8:	48 89 c7             	mov    %rax,%rdi
    8fbb:	e8 e6 0e 00 00       	call   9ea6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    8fc0:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    8fc4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8fc8:	48 89 c7             	mov    %rax,%rdi
    8fcb:	e8 fc 0e 00 00       	call   9ecc <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    8fd0:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    8fd4:	eb 6c                	jmp    9042 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x105>
    8fd6:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    8fda:	48 89 c7             	mov    %rax,%rdi
    8fdd:	e8 6e 0f 00 00       	call   9f50 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    8fe2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    VkBool32 presentSupported = false;
    8fe6:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, index, surface,
    8fed:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    8ff1:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    8ff8:	8b 75 ec             	mov    -0x14(%rbp),%esi
    8ffb:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    8fff:	48 89 c7             	mov    %rax,%rdi
    9002:	e8 09 b5 ff ff       	call   4510 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                         &presentSupported);
    if (presentSupported) {
    9007:	8b 45 9c             	mov    -0x64(%rbp),%eax
    900a:	85 c0                	test   %eax,%eax
    900c:	74 24                	je     9032 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xf5>
      presentQueueFamilies[index] = queueFamilyProp;
    900e:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9011:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    9015:	48 89 d6             	mov    %rdx,%rsi
    9018:	48 89 c7             	mov    %rax,%rdi
    901b:	e8 42 0f 00 00       	call   9f62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    9020:	48 89 c2             	mov    %rax,%rdx
    9023:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9027:	48 89 c6             	mov    %rax,%rsi
    902a:	48 89 d7             	mov    %rdx,%rdi
    902d:	e8 5a 0f 00 00       	call   9f8c <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    9032:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    9036:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    903a:	48 89 c7             	mov    %rax,%rdi
    903d:	e8 ee 0e 00 00       	call   9f30 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    9042:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    9046:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    904a:	48 89 d6             	mov    %rdx,%rsi
    904d:	48 89 c7             	mov    %rax,%rdi
    9050:	e8 a0 0e 00 00       	call   9ef5 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    9055:	84 c0                	test   %al,%al
    9057:	0f 85 79 ff ff ff    	jne    8fd6 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x99>
  }
  return presentQueueFamilies;
    905d:	90                   	nop
}
    905e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    9062:	48 89 c7             	mov    %rax,%rdi
    9065:	e8 5c 0c 00 00       	call   9cc6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return presentQueueFamilies;
    906a:	eb 37                	jmp    90a3 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x166>
      queueFamilyProps.size()};
    906c:	48 89 c3             	mov    %rax,%rbx
    906f:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    9073:	48 89 c7             	mov    %rax,%rdi
    9076:	e8 55 0d 00 00       	call   9dd0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    907b:	eb 0f                	jmp    908c <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x14f>
}
    907d:	48 89 c3             	mov    %rax,%rbx
    9080:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    9084:	48 89 c7             	mov    %rax,%rdi
    9087:	e8 d6 0d 00 00       	call   9e62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    908c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    9090:	48 89 c7             	mov    %rax,%rdi
    9093:	e8 2e 0c 00 00       	call   9cc6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    9098:	48 89 d8             	mov    %rbx,%rax
    909b:	48 89 c7             	mov    %rax,%rdi
    909e:	e8 5d b8 ff ff       	call   4900 <_Unwind_Resume@plt>
    90a3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    90a7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    90ab:	c9                   	leave
    90ac:	c3                   	ret

00000000000090ad <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

VkSurfaceCapabilitiesKHR
getPhysicalDeviceSurfaceCapabilities(VkPhysicalDevice physicalDevice,
                                     VkSurfaceKHR surface) {
    90ad:	55                   	push   %rbp
    90ae:	48 89 e5             	mov    %rsp,%rbp
    90b1:	41 54                	push   %r12
    90b3:	53                   	push   %rbx
    90b4:	48 83 ec 20          	sub    $0x20,%rsp
    90b8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    90bc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    90c0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  VkSurfaceCapabilitiesKHR surfaceCapabilities{};
    90c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    90c8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    90cc:	0f 11 00             	movups %xmm0,(%rax)
    90cf:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    90d3:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    90d7:	66 0f 7e 40 30       	movd   %xmm0,0x30(%rax)
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    90dc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    90e0:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    90e4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    90e8:	48 89 ce             	mov    %rcx,%rsi
    90eb:	48 89 c7             	mov    %rax,%rdi
    90ee:	e8 bd b2 ff ff       	call   43b0 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>
          physicalDevice, surface, &surfaceCapabilities) != VK_SUCCESS) {
    90f3:	85 c0                	test   %eax,%eax
    90f5:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    90f8:	84 c0                	test   %al,%al
    90fa:	74 51                	je     914d <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xa0>
    throw std::runtime_error("Failed to get surface capabilities.");
    90fc:	bf 10 00 00 00       	mov    $0x10,%edi
    9101:	e8 ba b0 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    9106:	48 89 c3             	mov    %rax,%rbx
    9109:	48 8d 05 d8 61 01 00 	lea    0x161d8(%rip),%rax        # 1f2e8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xb8>
    9110:	48 89 c6             	mov    %rax,%rsi
    9113:	48 89 df             	mov    %rbx,%rdi
    9116:	e8 15 b0 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    911b:	48 8b 05 86 7e 02 00 	mov    0x27e86(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    9122:	48 89 c2             	mov    %rax,%rdx
    9125:	48 8d 05 14 7c 02 00 	lea    0x27c14(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    912c:	48 89 c6             	mov    %rax,%rsi
    912f:	48 89 df             	mov    %rbx,%rdi
    9132:	e8 59 b7 ff ff       	call   4890 <__cxa_throw@plt>
    9137:	49 89 c4             	mov    %rax,%r12
    913a:	48 89 df             	mov    %rbx,%rdi
    913d:	e8 8e b1 ff ff       	call   42d0 <__cxa_free_exception@plt>
    9142:	4c 89 e0             	mov    %r12,%rax
    9145:	48 89 c7             	mov    %rax,%rdi
    9148:	e8 b3 b7 ff ff       	call   4900 <_Unwind_Resume@plt>
  }
  return surfaceCapabilities;
    914d:	90                   	nop
}
    914e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9152:	48 83 c4 20          	add    $0x20,%rsp
    9156:	5b                   	pop    %rbx
    9157:	41 5c                	pop    %r12
    9159:	5d                   	pop    %rbp
    915a:	c3                   	ret

000000000000915b <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<VkSurfaceFormatKHR>
getPhysicalDeviceSurfaceFormatList(VkPhysicalDevice physicalDevice,
                                   VkSurfaceKHR surface) {
    915b:	55                   	push   %rbp
    915c:	48 89 e5             	mov    %rsp,%rbp
    915f:	41 54                	push   %r12
    9161:	53                   	push   %rbx
    9162:	48 83 ec 30          	sub    $0x30,%rsp
    9166:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    916a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    916e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t surfaceFormatCount;
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    9172:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    9176:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    917a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    917e:	b9 00 00 00 00       	mov    $0x0,%ecx
    9183:	48 89 c7             	mov    %rax,%rdi
    9186:	e8 d5 b4 ff ff       	call   4660 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
                                           &surfaceFormatCount,
                                           nullptr) != VK_SUCCESS) {
    918b:	85 c0                	test   %eax,%eax
    918d:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    9190:	84 c0                	test   %al,%al
    9192:	74 3b                	je     91cf <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
    throw std::runtime_error("Failed to get surface format list.");
    9194:	bf 10 00 00 00       	mov    $0x10,%edi
    9199:	e8 22 b0 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    919e:	48 89 c3             	mov    %rax,%rbx
    91a1:	48 8d 05 68 61 01 00 	lea    0x16168(%rip),%rax        # 1f310 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe0>
    91a8:	48 89 c6             	mov    %rax,%rsi
    91ab:	48 89 df             	mov    %rbx,%rdi
    91ae:	e8 7d af ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    91b3:	48 8b 05 ee 7d 02 00 	mov    0x27dee(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    91ba:	48 89 c2             	mov    %rax,%rdx
    91bd:	48 8d 05 7c 7b 02 00 	lea    0x27b7c(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    91c4:	48 89 c6             	mov    %rax,%rsi
    91c7:	48 89 df             	mov    %rbx,%rdi
    91ca:	e8 c1 b6 ff ff       	call   4890 <__cxa_throw@plt>
  }
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    91cf:	8b 45 e8             	mov    -0x18(%rbp),%eax
    91d2:	89 c3                	mov    %eax,%ebx
    91d4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    91d8:	48 89 c7             	mov    %rax,%rdi
    91db:	e8 84 0e 00 00       	call   a064 <_ZNSaI18VkSurfaceFormatKHREC1Ev>
    91e0:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    91e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    91e8:	48 89 de             	mov    %rbx,%rsi
    91eb:	48 89 c7             	mov    %rax,%rdi
    91ee:	e8 a9 0e 00 00       	call   a09c <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
    91f3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    91f7:	48 89 c7             	mov    %rax,%rdi
    91fa:	e8 81 0e 00 00       	call   a080 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    91ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9203:	48 89 c7             	mov    %rax,%rdi
    9206:	e8 4b 0f 00 00       	call   a156 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>
    920b:	48 89 c1             	mov    %rax,%rcx
    920e:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    9212:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    9216:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    921a:	48 89 c7             	mov    %rax,%rdi
    921d:	e8 3e b4 ff ff       	call   4660 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
          physicalDevice, surface, &surfaceFormatCount,
          surfaceFormats.data()) != VK_SUCCESS) {
    9222:	85 c0                	test   %eax,%eax
    9224:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    9227:	84 c0                	test   %al,%al
    9229:	0f 84 95 00 00 00    	je     92c4 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
    throw std::runtime_error("Failed to get surface format list.");
    922f:	bf 10 00 00 00       	mov    $0x10,%edi
    9234:	e8 87 af ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    9239:	48 89 c3             	mov    %rax,%rbx
    923c:	48 8d 05 cd 60 01 00 	lea    0x160cd(%rip),%rax        # 1f310 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe0>
    9243:	48 89 c6             	mov    %rax,%rsi
    9246:	48 89 df             	mov    %rbx,%rdi
    9249:	e8 e2 ae ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    924e:	48 8b 05 53 7d 02 00 	mov    0x27d53(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    9255:	48 89 c2             	mov    %rax,%rdx
    9258:	48 8d 05 e1 7a 02 00 	lea    0x27ae1(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    925f:	48 89 c6             	mov    %rax,%rsi
    9262:	48 89 df             	mov    %rbx,%rdi
    9265:	e8 26 b6 ff ff       	call   4890 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface format list.");
    926a:	49 89 c4             	mov    %rax,%r12
    926d:	48 89 df             	mov    %rbx,%rdi
    9270:	e8 5b b0 ff ff       	call   42d0 <__cxa_free_exception@plt>
    9275:	4c 89 e0             	mov    %r12,%rax
    9278:	48 89 c7             	mov    %rax,%rdi
    927b:	e8 80 b6 ff ff       	call   4900 <_Unwind_Resume@plt>
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    9280:	48 89 c3             	mov    %rax,%rbx
    9283:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9287:	48 89 c7             	mov    %rax,%rdi
    928a:	e8 f1 0d 00 00       	call   a080 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    928f:	48 89 d8             	mov    %rbx,%rax
    9292:	48 89 c7             	mov    %rax,%rdi
    9295:	e8 66 b6 ff ff       	call   4900 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface format list.");
    929a:	49 89 c4             	mov    %rax,%r12
    929d:	48 89 df             	mov    %rbx,%rdi
    92a0:	e8 2b b0 ff ff       	call   42d0 <__cxa_free_exception@plt>
    92a5:	4c 89 e3             	mov    %r12,%rbx
    92a8:	eb 03                	jmp    92ad <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return surfaceFormats;
}
    92aa:	48 89 c3             	mov    %rax,%rbx
    92ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    92b1:	48 89 c7             	mov    %rax,%rdi
    92b4:	e8 59 0e 00 00       	call   a112 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    92b9:	48 89 d8             	mov    %rbx,%rax
    92bc:	48 89 c7             	mov    %rax,%rdi
    92bf:	e8 3c b6 ff ff       	call   4900 <_Unwind_Resume@plt>
  return surfaceFormats;
    92c4:	90                   	nop
}
    92c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    92c9:	48 83 c4 30          	add    $0x30,%rsp
    92cd:	5b                   	pop    %rbx
    92ce:	41 5c                	pop    %r12
    92d0:	5d                   	pop    %rbp
    92d1:	c3                   	ret

00000000000092d2 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:
std::vector<VkPresentModeKHR>
getPhysicalDeviceSurfacePresentModeList(VkPhysicalDevice physicalDevice,
                                        VkSurfaceKHR surface) {
    92d2:	55                   	push   %rbp
    92d3:	48 89 e5             	mov    %rsp,%rbp
    92d6:	41 54                	push   %r12
    92d8:	53                   	push   %rbx
    92d9:	48 83 ec 30          	sub    $0x30,%rsp
    92dd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    92e1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    92e5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t presentModeCount;
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface,
    92e9:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    92ed:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    92f1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    92f5:	b9 00 00 00 00       	mov    $0x0,%ecx
    92fa:	48 89 c7             	mov    %rax,%rdi
    92fd:	e8 6e b3 ff ff       	call   4670 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    9302:	85 c0                	test   %eax,%eax
    9304:	0f 95 c0             	setne  %al
    9307:	84 c0                	test   %al,%al
    9309:	74 3b                	je     9346 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
                                                &presentModeCount, nullptr)) {
    throw std::runtime_error("Failed to get surface present mode list.");
    930b:	bf 10 00 00 00       	mov    $0x10,%edi
    9310:	e8 ab ae ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    9315:	48 89 c3             	mov    %rax,%rbx
    9318:	48 8d 05 19 60 01 00 	lea    0x16019(%rip),%rax        # 1f338 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x108>
    931f:	48 89 c6             	mov    %rax,%rsi
    9322:	48 89 df             	mov    %rbx,%rdi
    9325:	e8 06 ae ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    932a:	48 8b 05 77 7c 02 00 	mov    0x27c77(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    9331:	48 89 c2             	mov    %rax,%rdx
    9334:	48 8d 05 05 7a 02 00 	lea    0x27a05(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    933b:	48 89 c6             	mov    %rax,%rsi
    933e:	48 89 df             	mov    %rbx,%rdi
    9341:	e8 4a b5 ff ff       	call   4890 <__cxa_throw@plt>
  }
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    9346:	8b 45 e8             	mov    -0x18(%rbp),%eax
    9349:	89 c3                	mov    %eax,%ebx
    934b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    934f:	48 89 c7             	mov    %rax,%rdi
    9352:	e8 71 0e 00 00       	call   a1c8 <_ZNSaI16VkPresentModeKHREC1Ev>
    9357:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    935b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    935f:	48 89 de             	mov    %rbx,%rsi
    9362:	48 89 c7             	mov    %rax,%rdi
    9365:	e8 96 0e 00 00       	call   a200 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
    936a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    936e:	48 89 c7             	mov    %rax,%rdi
    9371:	e8 6e 0e 00 00       	call   a1e4 <_ZNSaI16VkPresentModeKHRED1Ev>
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(
    9376:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    937a:	48 89 c7             	mov    %rax,%rdi
    937d:	e8 38 0f 00 00       	call   a2ba <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>
    9382:	48 89 c1             	mov    %rax,%rcx
    9385:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    9389:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    938d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9391:	48 89 c7             	mov    %rax,%rdi
    9394:	e8 d7 b2 ff ff       	call   4670 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    9399:	85 c0                	test   %eax,%eax
    939b:	0f 95 c0             	setne  %al
    939e:	84 c0                	test   %al,%al
    93a0:	0f 84 95 00 00 00    	je     943b <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
          physicalDevice, surface, &presentModeCount, presentModes.data())) {
    throw std::runtime_error("Failed to get surface present mode list.");
    93a6:	bf 10 00 00 00       	mov    $0x10,%edi
    93ab:	e8 10 ae ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    93b0:	48 89 c3             	mov    %rax,%rbx
    93b3:	48 8d 05 7e 5f 01 00 	lea    0x15f7e(%rip),%rax        # 1f338 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x108>
    93ba:	48 89 c6             	mov    %rax,%rsi
    93bd:	48 89 df             	mov    %rbx,%rdi
    93c0:	e8 6b ad ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    93c5:	48 8b 05 dc 7b 02 00 	mov    0x27bdc(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    93cc:	48 89 c2             	mov    %rax,%rdx
    93cf:	48 8d 05 6a 79 02 00 	lea    0x2796a(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    93d6:	48 89 c6             	mov    %rax,%rsi
    93d9:	48 89 df             	mov    %rbx,%rdi
    93dc:	e8 af b4 ff ff       	call   4890 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    93e1:	49 89 c4             	mov    %rax,%r12
    93e4:	48 89 df             	mov    %rbx,%rdi
    93e7:	e8 e4 ae ff ff       	call   42d0 <__cxa_free_exception@plt>
    93ec:	4c 89 e0             	mov    %r12,%rax
    93ef:	48 89 c7             	mov    %rax,%rdi
    93f2:	e8 09 b5 ff ff       	call   4900 <_Unwind_Resume@plt>
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    93f7:	48 89 c3             	mov    %rax,%rbx
    93fa:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    93fe:	48 89 c7             	mov    %rax,%rdi
    9401:	e8 de 0d 00 00       	call   a1e4 <_ZNSaI16VkPresentModeKHRED1Ev>
    9406:	48 89 d8             	mov    %rbx,%rax
    9409:	48 89 c7             	mov    %rax,%rdi
    940c:	e8 ef b4 ff ff       	call   4900 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    9411:	49 89 c4             	mov    %rax,%r12
    9414:	48 89 df             	mov    %rbx,%rdi
    9417:	e8 b4 ae ff ff       	call   42d0 <__cxa_free_exception@plt>
    941c:	4c 89 e3             	mov    %r12,%rbx
    941f:	eb 03                	jmp    9424 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return presentModes;
}
    9421:	48 89 c3             	mov    %rax,%rbx
    9424:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9428:	48 89 c7             	mov    %rax,%rdi
    942b:	e8 46 0e 00 00       	call   a276 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    9430:	48 89 d8             	mov    %rbx,%rax
    9433:	48 89 c7             	mov    %rax,%rdi
    9436:	e8 c5 b4 ff ff       	call   4900 <_Unwind_Resume@plt>
  return presentModes;
    943b:	90                   	nop
}
    943c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9440:	48 83 c4 30          	add    $0x30,%rsp
    9444:	5b                   	pop    %rbx
    9445:	41 5c                	pop    %r12
    9447:	5d                   	pop    %rbp
    9448:	c3                   	ret

0000000000009449 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>:

std::vector<VkImage> getSwapchainImages(VkDevice device,
                                        VkSwapchainKHR swapchain) {
    9449:	55                   	push   %rbp
    944a:	48 89 e5             	mov    %rsp,%rbp
    944d:	41 54                	push   %r12
    944f:	53                   	push   %rbx
    9450:	48 83 ec 30          	sub    $0x30,%rsp
    9454:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9458:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    945c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t swapchainImageCount;
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    9460:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    9464:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    9468:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    946c:	b9 00 00 00 00       	mov    $0x0,%ecx
    9471:	48 89 c7             	mov    %rax,%rdi
    9474:	e8 d7 ad ff ff       	call   4250 <vkGetSwapchainImagesKHR@plt>
                              nullptr) != VK_SUCCESS) {
    9479:	85 c0                	test   %eax,%eax
    947b:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    947e:	84 c0                	test   %al,%al
    9480:	74 3b                	je     94bd <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x74>
    throw std::runtime_error("Failed to get swapchain images");
    9482:	bf 10 00 00 00       	mov    $0x10,%edi
    9487:	e8 34 ad ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    948c:	48 89 c3             	mov    %rax,%rbx
    948f:	48 8d 05 d2 5e 01 00 	lea    0x15ed2(%rip),%rax        # 1f368 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x138>
    9496:	48 89 c6             	mov    %rax,%rsi
    9499:	48 89 df             	mov    %rbx,%rdi
    949c:	e8 8f ac ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    94a1:	48 8b 05 00 7b 02 00 	mov    0x27b00(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    94a8:	48 89 c2             	mov    %rax,%rdx
    94ab:	48 8d 05 8e 78 02 00 	lea    0x2788e(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    94b2:	48 89 c6             	mov    %rax,%rsi
    94b5:	48 89 df             	mov    %rbx,%rdi
    94b8:	e8 d3 b3 ff ff       	call   4890 <__cxa_throw@plt>
  }
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    94bd:	8b 45 e8             	mov    -0x18(%rbp),%eax
    94c0:	89 c3                	mov    %eax,%ebx
    94c2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    94c6:	48 89 c7             	mov    %rax,%rdi
    94c9:	e8 5e 0e 00 00       	call   a32c <_ZNSaIP9VkImage_TEC1Ev>
    94ce:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    94d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    94d6:	48 89 de             	mov    %rbx,%rsi
    94d9:	48 89 c7             	mov    %rax,%rdi
    94dc:	e8 83 0e 00 00       	call   a364 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>
    94e1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    94e5:	48 89 c7             	mov    %rax,%rdi
    94e8:	e8 5b 0e 00 00       	call   a348 <_ZNSaIP9VkImage_TED1Ev>
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    94ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    94f1:	48 89 c7             	mov    %rax,%rdi
    94f4:	e8 25 0f 00 00       	call   a41e <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>
    94f9:	48 89 c1             	mov    %rax,%rcx
    94fc:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    9500:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    9504:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9508:	48 89 c7             	mov    %rax,%rdi
    950b:	e8 40 ad ff ff       	call   4250 <vkGetSwapchainImagesKHR@plt>
                              swapchainImages.data()) != VK_SUCCESS) {
    9510:	85 c0                	test   %eax,%eax
    9512:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    9515:	84 c0                	test   %al,%al
    9517:	0f 84 95 00 00 00    	je     95b2 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x169>
    throw std::runtime_error("Failed to get swapchain images");
    951d:	bf 10 00 00 00       	mov    $0x10,%edi
    9522:	e8 99 ac ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    9527:	48 89 c3             	mov    %rax,%rbx
    952a:	48 8d 05 37 5e 01 00 	lea    0x15e37(%rip),%rax        # 1f368 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x138>
    9531:	48 89 c6             	mov    %rax,%rsi
    9534:	48 89 df             	mov    %rbx,%rdi
    9537:	e8 f4 ab ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    953c:	48 8b 05 65 7a 02 00 	mov    0x27a65(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    9543:	48 89 c2             	mov    %rax,%rdx
    9546:	48 8d 05 f3 77 02 00 	lea    0x277f3(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    954d:	48 89 c6             	mov    %rax,%rsi
    9550:	48 89 df             	mov    %rbx,%rdi
    9553:	e8 38 b3 ff ff       	call   4890 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get swapchain images");
    9558:	49 89 c4             	mov    %rax,%r12
    955b:	48 89 df             	mov    %rbx,%rdi
    955e:	e8 6d ad ff ff       	call   42d0 <__cxa_free_exception@plt>
    9563:	4c 89 e0             	mov    %r12,%rax
    9566:	48 89 c7             	mov    %rax,%rdi
    9569:	e8 92 b3 ff ff       	call   4900 <_Unwind_Resume@plt>
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    956e:	48 89 c3             	mov    %rax,%rbx
    9571:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9575:	48 89 c7             	mov    %rax,%rdi
    9578:	e8 cb 0d 00 00       	call   a348 <_ZNSaIP9VkImage_TED1Ev>
    957d:	48 89 d8             	mov    %rbx,%rax
    9580:	48 89 c7             	mov    %rax,%rdi
    9583:	e8 78 b3 ff ff       	call   4900 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get swapchain images");
    9588:	49 89 c4             	mov    %rax,%r12
    958b:	48 89 df             	mov    %rbx,%rdi
    958e:	e8 3d ad ff ff       	call   42d0 <__cxa_free_exception@plt>
    9593:	4c 89 e3             	mov    %r12,%rbx
    9596:	eb 03                	jmp    959b <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x152>
  }
  return swapchainImages;
}
    9598:	48 89 c3             	mov    %rax,%rbx
    959b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    959f:	48 89 c7             	mov    %rax,%rdi
    95a2:	e8 33 0e 00 00       	call   a3da <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    95a7:	48 89 d8             	mov    %rbx,%rax
    95aa:	48 89 c7             	mov    %rax,%rdi
    95ad:	e8 4e b3 ff ff       	call   4900 <_Unwind_Resume@plt>
  return swapchainImages;
    95b2:	90                   	nop
}
    95b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    95b7:	48 83 c4 30          	add    $0x30,%rsp
    95bb:	5b                   	pop    %rbx
    95bc:	41 5c                	pop    %r12
    95be:	5d                   	pop    %rbp
    95bf:	c3                   	ret

00000000000095c0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    95c0:	55                   	push   %rbp
    95c1:	48 89 e5             	mov    %rsp,%rbp
    95c4:	48 83 ec 10          	sub    $0x10,%rsp
    95c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    95cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95d0:	48 89 c7             	mov    %rax,%rdi
    95d3:	e8 00 01 00 00       	call   96d8 <_ZNSaI17VkLayerPropertiesED1Ev>
    95d8:	90                   	nop
    95d9:	c9                   	leave
    95da:	c3                   	ret
    95db:	90                   	nop

00000000000095dc <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
    95dc:	55                   	push   %rbp
    95dd:	48 89 e5             	mov    %rsp,%rbp
    95e0:	48 83 ec 10          	sub    $0x10,%rsp
    95e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    95e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95ec:	48 89 c7             	mov    %rax,%rdi
    95ef:	e8 52 02 00 00       	call   9846 <_ZNSaI21VkExtensionPropertiesED1Ev>
    95f4:	90                   	nop
    95f5:	c9                   	leave
    95f6:	c3                   	ret
    95f7:	90                   	nop

00000000000095f8 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
    95f8:	55                   	push   %rbp
    95f9:	48 89 e5             	mov    %rsp,%rbp
    95fc:	48 83 ec 10          	sub    $0x10,%rsp
    9600:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9604:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9608:	48 89 c7             	mov    %rax,%rdi
    960b:	e8 a4 03 00 00       	call   99b4 <_ZNSaIPKcED1Ev>
    9610:	90                   	nop
    9611:	c9                   	leave
    9612:	c3                   	ret
    9613:	90                   	nop

0000000000009614 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
    9614:	55                   	push   %rbp
    9615:	48 89 e5             	mov    %rsp,%rbp
    9618:	48 83 ec 10          	sub    $0x10,%rsp
    961c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9620:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9624:	48 89 c7             	mov    %rax,%rdi
    9627:	e8 a4 04 00 00       	call   9ad0 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    962c:	90                   	nop
    962d:	c9                   	leave
    962e:	c3                   	ret
    962f:	90                   	nop

0000000000009630 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
    9630:	55                   	push   %rbp
    9631:	48 89 e5             	mov    %rsp,%rbp
    9634:	48 83 ec 10          	sub    $0x10,%rsp
    9638:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    963c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9640:	48 89 c7             	mov    %rax,%rdi
    9643:	e8 ec 05 00 00       	call   9c34 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    9648:	90                   	nop
    9649:	c9                   	leave
    964a:	c3                   	ret
    964b:	90                   	nop

000000000000964c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>:
    964c:	55                   	push   %rbp
    964d:	48 89 e5             	mov    %rsp,%rbp
    9650:	48 83 ec 10          	sub    $0x10,%rsp
    9654:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9658:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    965c:	48 89 c7             	mov    %rax,%rdi
    965f:	e8 6c 07 00 00       	call   9dd0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    9664:	90                   	nop
    9665:	c9                   	leave
    9666:	c3                   	ret
    9667:	90                   	nop

0000000000009668 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>:
    9668:	55                   	push   %rbp
    9669:	48 89 e5             	mov    %rsp,%rbp
    966c:	48 83 ec 10          	sub    $0x10,%rsp
    9670:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9674:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9678:	48 89 c7             	mov    %rax,%rdi
    967b:	e8 00 0a 00 00       	call   a080 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    9680:	90                   	nop
    9681:	c9                   	leave
    9682:	c3                   	ret
    9683:	90                   	nop

0000000000009684 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>:
    9684:	55                   	push   %rbp
    9685:	48 89 e5             	mov    %rsp,%rbp
    9688:	48 83 ec 10          	sub    $0x10,%rsp
    968c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9690:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9694:	48 89 c7             	mov    %rax,%rdi
    9697:	e8 48 0b 00 00       	call   a1e4 <_ZNSaI16VkPresentModeKHRED1Ev>
    969c:	90                   	nop
    969d:	c9                   	leave
    969e:	c3                   	ret
    969f:	90                   	nop

00000000000096a0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>:
    96a0:	55                   	push   %rbp
    96a1:	48 89 e5             	mov    %rsp,%rbp
    96a4:	48 83 ec 10          	sub    $0x10,%rsp
    96a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96b0:	48 89 c7             	mov    %rax,%rdi
    96b3:	e8 90 0c 00 00       	call   a348 <_ZNSaIP9VkImage_TED1Ev>
    96b8:	90                   	nop
    96b9:	c9                   	leave
    96ba:	c3                   	ret
    96bb:	90                   	nop

00000000000096bc <_ZNSaI17VkLayerPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    96bc:	55                   	push   %rbp
    96bd:	48 89 e5             	mov    %rsp,%rbp
    96c0:	48 83 ec 10          	sub    $0x10,%rsp
    96c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96cc:	48 89 c7             	mov    %rax,%rdi
    96cf:	e8 bc 0d 00 00       	call   a490 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    96d4:	90                   	nop
    96d5:	c9                   	leave
    96d6:	c3                   	ret
    96d7:	90                   	nop

00000000000096d8 <_ZNSaI17VkLayerPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    96d8:	55                   	push   %rbp
    96d9:	48 89 e5             	mov    %rsp,%rbp
    96dc:	48 83 ec 10          	sub    $0x10,%rsp
    96e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96e8:	48 89 c7             	mov    %rax,%rdi
    96eb:	e8 ac 0d 00 00       	call   a49c <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    96f0:	90                   	nop
    96f1:	c9                   	leave
    96f2:	c3                   	ret
    96f3:	90                   	nop

00000000000096f4 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    96f4:	55                   	push   %rbp
    96f5:	48 89 e5             	mov    %rsp,%rbp
    96f8:	53                   	push   %rbx
    96f9:	48 83 ec 28          	sub    $0x28,%rsp
    96fd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9701:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9705:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    9709:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    970d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9711:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9715:	48 89 d6             	mov    %rdx,%rsi
    9718:	48 89 c7             	mov    %rax,%rdi
    971b:	e8 87 0d 00 00       	call   a4a7 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    9720:	48 89 c1             	mov    %rax,%rcx
    9723:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9727:	48 89 c2             	mov    %rax,%rdx
    972a:	48 89 ce             	mov    %rcx,%rsi
    972d:	48 89 df             	mov    %rbx,%rdi
    9730:	e8 d3 0d 00 00       	call   a508 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    9735:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9739:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    973d:	48 89 d6             	mov    %rdx,%rsi
    9740:	48 89 c7             	mov    %rax,%rdi
    9743:	e8 1e 0e 00 00       	call   a566 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    9748:	eb 1a                	jmp    9764 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    974a:	48 89 c3             	mov    %rax,%rbx
    974d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9751:	48 89 c7             	mov    %rax,%rdi
    9754:	e8 79 00 00 00       	call   97d2 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    9759:	48 89 d8             	mov    %rbx,%rax
    975c:	48 89 c7             	mov    %rax,%rdi
    975f:	e8 9c b1 ff ff       	call   4900 <_Unwind_Resume@plt>
    9764:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9768:	c9                   	leave
    9769:	c3                   	ret

000000000000976a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    976a:	55                   	push   %rbp
    976b:	48 89 e5             	mov    %rsp,%rbp
    976e:	48 83 ec 10          	sub    $0x10,%rsp
    9772:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    9776:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    977a:	48 89 c7             	mov    %rax,%rdi
    977d:	e8 24 0e 00 00       	call   a5a6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    9782:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    9785:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9789:	48 8b 48 08          	mov    0x8(%rax),%rcx
    978d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9791:	48 8b 00             	mov    (%rax),%rax
    9794:	48 89 ce             	mov    %rcx,%rsi
    9797:	48 89 c7             	mov    %rax,%rdi
    979a:	e8 15 0e 00 00       	call   a5b4 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
      }
    979f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97a3:	48 89 c7             	mov    %rax,%rdi
    97a6:	e8 27 00 00 00       	call   97d2 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    97ab:	90                   	nop
    97ac:	c9                   	leave
    97ad:	c3                   	ret

00000000000097ae <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    97ae:	55                   	push   %rbp
    97af:	48 89 e5             	mov    %rsp,%rbp
    97b2:	48 83 ec 10          	sub    $0x10,%rsp
    97b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    97ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97be:	48 8b 10             	mov    (%rax),%rdx
    97c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97c5:	48 89 d6             	mov    %rdx,%rsi
    97c8:	48 89 c7             	mov    %rax,%rdi
    97cb:	e8 0e 0e 00 00       	call   a5de <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    97d0:	c9                   	leave
    97d1:	c3                   	ret

00000000000097d2 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    97d2:	55                   	push   %rbp
    97d3:	48 89 e5             	mov    %rsp,%rbp
    97d6:	48 83 ec 10          	sub    $0x10,%rsp
    97da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    97de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97e2:	48 8b 50 10          	mov    0x10(%rax),%rdx
    97e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97ea:	48 8b 00             	mov    (%rax),%rax
    97ed:	48 29 c2             	sub    %rax,%rdx
    97f0:	48 c1 fa 03          	sar    $0x3,%rdx
    97f4:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    97fb:	fc c0 0f 
    97fe:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    9802:	48 89 c2             	mov    %rax,%rdx
    9805:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9809:	48 8b 08             	mov    (%rax),%rcx
    980c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9810:	48 89 ce             	mov    %rcx,%rsi
    9813:	48 89 c7             	mov    %rax,%rdi
    9816:	e8 fb 0d 00 00       	call   a616 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    981b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    981f:	48 89 c7             	mov    %rax,%rdi
    9822:	e8 99 fd ff ff       	call   95c0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    9827:	90                   	nop
    9828:	c9                   	leave
    9829:	c3                   	ret

000000000000982a <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    982a:	55                   	push   %rbp
    982b:	48 89 e5             	mov    %rsp,%rbp
    982e:	48 83 ec 10          	sub    $0x10,%rsp
    9832:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9836:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    983a:	48 89 c7             	mov    %rax,%rdi
    983d:	e8 0a 0e 00 00       	call   a64c <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    9842:	90                   	nop
    9843:	c9                   	leave
    9844:	c3                   	ret
    9845:	90                   	nop

0000000000009846 <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    9846:	55                   	push   %rbp
    9847:	48 89 e5             	mov    %rsp,%rbp
    984a:	48 83 ec 10          	sub    $0x10,%rsp
    984e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9852:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9856:	48 89 c7             	mov    %rax,%rdi
    9859:	e8 fa 0d 00 00       	call   a658 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    985e:	90                   	nop
    985f:	c9                   	leave
    9860:	c3                   	ret
    9861:	90                   	nop

0000000000009862 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    9862:	55                   	push   %rbp
    9863:	48 89 e5             	mov    %rsp,%rbp
    9866:	53                   	push   %rbx
    9867:	48 83 ec 28          	sub    $0x28,%rsp
    986b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    986f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9873:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    9877:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    987b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    987f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9883:	48 89 d6             	mov    %rdx,%rsi
    9886:	48 89 c7             	mov    %rax,%rdi
    9889:	e8 d5 0d 00 00       	call   a663 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    988e:	48 89 c1             	mov    %rax,%rcx
    9891:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9895:	48 89 c2             	mov    %rax,%rdx
    9898:	48 89 ce             	mov    %rcx,%rsi
    989b:	48 89 df             	mov    %rbx,%rdi
    989e:	e8 21 0e 00 00       	call   a6c4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    98a3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    98a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    98ab:	48 89 d6             	mov    %rdx,%rsi
    98ae:	48 89 c7             	mov    %rax,%rdi
    98b1:	e8 6c 0e 00 00       	call   a722 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    98b6:	eb 1a                	jmp    98d2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    98b8:	48 89 c3             	mov    %rax,%rbx
    98bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    98bf:	48 89 c7             	mov    %rax,%rdi
    98c2:	e8 79 00 00 00       	call   9940 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    98c7:	48 89 d8             	mov    %rbx,%rax
    98ca:	48 89 c7             	mov    %rax,%rdi
    98cd:	e8 2e b0 ff ff       	call   4900 <_Unwind_Resume@plt>
    98d2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    98d6:	c9                   	leave
    98d7:	c3                   	ret

00000000000098d8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    98d8:	55                   	push   %rbp
    98d9:	48 89 e5             	mov    %rsp,%rbp
    98dc:	48 83 ec 10          	sub    $0x10,%rsp
    98e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    98e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98e8:	48 89 c7             	mov    %rax,%rdi
    98eb:	e8 72 0e 00 00       	call   a762 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    98f0:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    98f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98f7:	48 8b 48 08          	mov    0x8(%rax),%rcx
    98fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98ff:	48 8b 00             	mov    (%rax),%rax
    9902:	48 89 ce             	mov    %rcx,%rsi
    9905:	48 89 c7             	mov    %rax,%rdi
    9908:	e8 63 0e 00 00       	call   a770 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    990d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9911:	48 89 c7             	mov    %rax,%rdi
    9914:	e8 27 00 00 00       	call   9940 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    9919:	90                   	nop
    991a:	c9                   	leave
    991b:	c3                   	ret

000000000000991c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    991c:	55                   	push   %rbp
    991d:	48 89 e5             	mov    %rsp,%rbp
    9920:	48 83 ec 10          	sub    $0x10,%rsp
    9924:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    9928:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    992c:	48 8b 10             	mov    (%rax),%rdx
    992f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9933:	48 89 d6             	mov    %rdx,%rsi
    9936:	48 89 c7             	mov    %rax,%rdi
    9939:	e8 5c 0e 00 00       	call   a79a <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    993e:	c9                   	leave
    993f:	c3                   	ret

0000000000009940 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    9940:	55                   	push   %rbp
    9941:	48 89 e5             	mov    %rsp,%rbp
    9944:	48 83 ec 10          	sub    $0x10,%rsp
    9948:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    994c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9950:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9954:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9958:	48 8b 00             	mov    (%rax),%rax
    995b:	48 29 c2             	sub    %rax,%rdx
    995e:	48 c1 fa 02          	sar    $0x2,%rdx
    9962:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    9969:	fc c0 0f 
    996c:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    9970:	48 89 c2             	mov    %rax,%rdx
    9973:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9977:	48 8b 08             	mov    (%rax),%rcx
    997a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    997e:	48 89 ce             	mov    %rcx,%rsi
    9981:	48 89 c7             	mov    %rax,%rdi
    9984:	e8 49 0e 00 00       	call   a7d2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    9989:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    998d:	48 89 c7             	mov    %rax,%rdi
    9990:	e8 47 fc ff ff       	call   95dc <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    9995:	90                   	nop
    9996:	c9                   	leave
    9997:	c3                   	ret

0000000000009998 <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    9998:	55                   	push   %rbp
    9999:	48 89 e5             	mov    %rsp,%rbp
    999c:	48 83 ec 10          	sub    $0x10,%rsp
    99a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    99a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99a8:	48 89 c7             	mov    %rax,%rdi
    99ab:	e8 58 0e 00 00       	call   a808 <_ZNSt15__new_allocatorIPKcEC1Ev>
    99b0:	90                   	nop
    99b1:	c9                   	leave
    99b2:	c3                   	ret
    99b3:	90                   	nop

00000000000099b4 <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    99b4:	55                   	push   %rbp
    99b5:	48 89 e5             	mov    %rsp,%rbp
    99b8:	48 83 ec 10          	sub    $0x10,%rsp
    99bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    99c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99c4:	48 89 c7             	mov    %rax,%rdi
    99c7:	e8 48 0e 00 00       	call   a814 <_ZNSt15__new_allocatorIPKcED1Ev>
    99cc:	90                   	nop
    99cd:	c9                   	leave
    99ce:	c3                   	ret
    99cf:	90                   	nop

00000000000099d0 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    99d0:	55                   	push   %rbp
    99d1:	48 89 e5             	mov    %rsp,%rbp
    99d4:	53                   	push   %rbx
    99d5:	48 83 ec 28          	sub    $0x28,%rsp
    99d9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    99dd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    99e1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    99e5:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    99e9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    99ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    99f1:	48 89 d6             	mov    %rdx,%rsi
    99f4:	48 89 c7             	mov    %rax,%rdi
    99f7:	e8 23 0e 00 00       	call   a81f <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    99fc:	48 89 c1             	mov    %rax,%rcx
    99ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a03:	48 89 c2             	mov    %rax,%rdx
    9a06:	48 89 ce             	mov    %rcx,%rsi
    9a09:	48 89 df             	mov    %rbx,%rdi
    9a0c:	e8 6f 0e 00 00       	call   a880 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    9a11:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9a15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a19:	48 89 d6             	mov    %rdx,%rsi
    9a1c:	48 89 c7             	mov    %rax,%rdi
    9a1f:	e8 ba 0e 00 00       	call   a8de <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    9a24:	eb 1a                	jmp    9a40 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    9a26:	48 89 c3             	mov    %rax,%rbx
    9a29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a2d:	48 89 c7             	mov    %rax,%rdi
    9a30:	e8 31 00 00 00       	call   9a66 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    9a35:	48 89 d8             	mov    %rbx,%rax
    9a38:	48 89 c7             	mov    %rax,%rdi
    9a3b:	e8 c0 ae ff ff       	call   4900 <_Unwind_Resume@plt>
    9a40:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9a44:	c9                   	leave
    9a45:	c3                   	ret

0000000000009a46 <_ZNSt6vectorIPKcSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    9a46:	55                   	push   %rbp
    9a47:	48 89 e5             	mov    %rsp,%rbp
    9a4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    9a52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a56:	48 8b 00             	mov    (%rax),%rax
    9a59:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9a5d:	48 c1 e2 03          	shl    $0x3,%rdx
    9a61:	48 01 d0             	add    %rdx,%rax
      }
    9a64:	5d                   	pop    %rbp
    9a65:	c3                   	ret

0000000000009a66 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    9a66:	55                   	push   %rbp
    9a67:	48 89 e5             	mov    %rsp,%rbp
    9a6a:	48 83 ec 10          	sub    $0x10,%rsp
    9a6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    9a72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a76:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9a7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a7e:	48 8b 00             	mov    (%rax),%rax
    9a81:	48 29 c2             	sub    %rax,%rdx
    9a84:	48 89 d0             	mov    %rdx,%rax
    9a87:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    9a8b:	48 89 c2             	mov    %rax,%rdx
    9a8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a92:	48 8b 08             	mov    (%rax),%rcx
    9a95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a99:	48 89 ce             	mov    %rcx,%rsi
    9a9c:	48 89 c7             	mov    %rax,%rdi
    9a9f:	e8 ae 0e 00 00       	call   a952 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    9aa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9aa8:	48 89 c7             	mov    %rax,%rdi
    9aab:	e8 48 fb ff ff       	call   95f8 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    9ab0:	90                   	nop
    9ab1:	c9                   	leave
    9ab2:	c3                   	ret
    9ab3:	90                   	nop

0000000000009ab4 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    9ab4:	55                   	push   %rbp
    9ab5:	48 89 e5             	mov    %rsp,%rbp
    9ab8:	48 83 ec 10          	sub    $0x10,%rsp
    9abc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ac0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ac4:	48 89 c7             	mov    %rax,%rdi
    9ac7:	e8 bc 0e 00 00       	call   a988 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    9acc:	90                   	nop
    9acd:	c9                   	leave
    9ace:	c3                   	ret
    9acf:	90                   	nop

0000000000009ad0 <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    9ad0:	55                   	push   %rbp
    9ad1:	48 89 e5             	mov    %rsp,%rbp
    9ad4:	48 83 ec 10          	sub    $0x10,%rsp
    9ad8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9adc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ae0:	48 89 c7             	mov    %rax,%rdi
    9ae3:	e8 ac 0e 00 00       	call   a994 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    9ae8:	90                   	nop
    9ae9:	c9                   	leave
    9aea:	c3                   	ret
    9aeb:	90                   	nop

0000000000009aec <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    9aec:	55                   	push   %rbp
    9aed:	48 89 e5             	mov    %rsp,%rbp
    9af0:	53                   	push   %rbx
    9af1:	48 83 ec 28          	sub    $0x28,%rsp
    9af5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9af9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9afd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    9b01:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    9b05:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9b09:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9b0d:	48 89 d6             	mov    %rdx,%rsi
    9b10:	48 89 c7             	mov    %rax,%rdi
    9b13:	e8 87 0e 00 00       	call   a99f <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    9b18:	48 89 c1             	mov    %rax,%rcx
    9b1b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9b1f:	48 89 c2             	mov    %rax,%rdx
    9b22:	48 89 ce             	mov    %rcx,%rsi
    9b25:	48 89 df             	mov    %rbx,%rdi
    9b28:	e8 d3 0e 00 00       	call   aa00 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    9b2d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9b31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b35:	48 89 d6             	mov    %rdx,%rsi
    9b38:	48 89 c7             	mov    %rax,%rdi
    9b3b:	e8 1e 0f 00 00       	call   aa5e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    9b40:	eb 1a                	jmp    9b5c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    9b42:	48 89 c3             	mov    %rax,%rbx
    9b45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b49:	48 89 c7             	mov    %rax,%rdi
    9b4c:	e8 79 00 00 00       	call   9bca <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    9b51:	48 89 d8             	mov    %rbx,%rax
    9b54:	48 89 c7             	mov    %rax,%rdi
    9b57:	e8 a4 ad ff ff       	call   4900 <_Unwind_Resume@plt>
    9b5c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9b60:	c9                   	leave
    9b61:	c3                   	ret

0000000000009b62 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    9b62:	55                   	push   %rbp
    9b63:	48 89 e5             	mov    %rsp,%rbp
    9b66:	48 83 ec 10          	sub    $0x10,%rsp
    9b6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    9b6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b72:	48 89 c7             	mov    %rax,%rdi
    9b75:	e8 24 0f 00 00       	call   aa9e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    9b7a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    9b7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b81:	48 8b 48 08          	mov    0x8(%rax),%rcx
    9b85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b89:	48 8b 00             	mov    (%rax),%rax
    9b8c:	48 89 ce             	mov    %rcx,%rsi
    9b8f:	48 89 c7             	mov    %rax,%rdi
    9b92:	e8 15 0f 00 00       	call   aaac <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    9b97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b9b:	48 89 c7             	mov    %rax,%rdi
    9b9e:	e8 27 00 00 00       	call   9bca <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    9ba3:	90                   	nop
    9ba4:	c9                   	leave
    9ba5:	c3                   	ret

0000000000009ba6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    9ba6:	55                   	push   %rbp
    9ba7:	48 89 e5             	mov    %rsp,%rbp
    9baa:	48 83 ec 10          	sub    $0x10,%rsp
    9bae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    9bb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bb6:	48 8b 10             	mov    (%rax),%rdx
    9bb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bbd:	48 89 d6             	mov    %rdx,%rsi
    9bc0:	48 89 c7             	mov    %rax,%rdi
    9bc3:	e8 0e 0f 00 00       	call   aad6 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    9bc8:	c9                   	leave
    9bc9:	c3                   	ret

0000000000009bca <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    9bca:	55                   	push   %rbp
    9bcb:	48 89 e5             	mov    %rsp,%rbp
    9bce:	48 83 ec 10          	sub    $0x10,%rsp
    9bd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    9bd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bda:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9bde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9be2:	48 8b 00             	mov    (%rax),%rax
    9be5:	48 29 c2             	sub    %rax,%rdx
    9be8:	48 89 d0             	mov    %rdx,%rax
    9beb:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    9bef:	48 89 c2             	mov    %rax,%rdx
    9bf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bf6:	48 8b 08             	mov    (%rax),%rcx
    9bf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bfd:	48 89 ce             	mov    %rcx,%rsi
    9c00:	48 89 c7             	mov    %rax,%rdi
    9c03:	e8 06 0f 00 00       	call   ab0e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    9c08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c0c:	48 89 c7             	mov    %rax,%rdi
    9c0f:	e8 00 fa ff ff       	call   9614 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    9c14:	90                   	nop
    9c15:	c9                   	leave
    9c16:	c3                   	ret
    9c17:	90                   	nop

0000000000009c18 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    9c18:	55                   	push   %rbp
    9c19:	48 89 e5             	mov    %rsp,%rbp
    9c1c:	48 83 ec 10          	sub    $0x10,%rsp
    9c20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c28:	48 89 c7             	mov    %rax,%rdi
    9c2b:	e8 14 0f 00 00       	call   ab44 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    9c30:	90                   	nop
    9c31:	c9                   	leave
    9c32:	c3                   	ret
    9c33:	90                   	nop

0000000000009c34 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    9c34:	55                   	push   %rbp
    9c35:	48 89 e5             	mov    %rsp,%rbp
    9c38:	48 83 ec 10          	sub    $0x10,%rsp
    9c3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c44:	48 89 c7             	mov    %rax,%rdi
    9c47:	e8 04 0f 00 00       	call   ab50 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    9c4c:	90                   	nop
    9c4d:	c9                   	leave
    9c4e:	c3                   	ret
    9c4f:	90                   	nop

0000000000009c50 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    9c50:	55                   	push   %rbp
    9c51:	48 89 e5             	mov    %rsp,%rbp
    9c54:	53                   	push   %rbx
    9c55:	48 83 ec 28          	sub    $0x28,%rsp
    9c59:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9c5d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9c61:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    9c65:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    9c69:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9c6d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9c71:	48 89 d6             	mov    %rdx,%rsi
    9c74:	48 89 c7             	mov    %rax,%rdi
    9c77:	e8 df 0e 00 00       	call   ab5b <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    9c7c:	48 89 c1             	mov    %rax,%rcx
    9c7f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9c83:	48 89 c2             	mov    %rax,%rdx
    9c86:	48 89 ce             	mov    %rcx,%rsi
    9c89:	48 89 df             	mov    %rbx,%rdi
    9c8c:	e8 2b 0f 00 00       	call   abbc <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    9c91:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9c95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c99:	48 89 d6             	mov    %rdx,%rsi
    9c9c:	48 89 c7             	mov    %rax,%rdi
    9c9f:	e8 76 0f 00 00       	call   ac1a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    9ca4:	eb 1a                	jmp    9cc0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    9ca6:	48 89 c3             	mov    %rax,%rbx
    9ca9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9cad:	48 89 c7             	mov    %rax,%rdi
    9cb0:	e8 79 00 00 00       	call   9d2e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    9cb5:	48 89 d8             	mov    %rbx,%rax
    9cb8:	48 89 c7             	mov    %rax,%rdi
    9cbb:	e8 40 ac ff ff       	call   4900 <_Unwind_Resume@plt>
    9cc0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9cc4:	c9                   	leave
    9cc5:	c3                   	ret

0000000000009cc6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    9cc6:	55                   	push   %rbp
    9cc7:	48 89 e5             	mov    %rsp,%rbp
    9cca:	48 83 ec 10          	sub    $0x10,%rsp
    9cce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    9cd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cd6:	48 89 c7             	mov    %rax,%rdi
    9cd9:	e8 7c 0f 00 00       	call   ac5a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    9cde:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    9ce1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ce5:	48 8b 48 08          	mov    0x8(%rax),%rcx
    9ce9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ced:	48 8b 00             	mov    (%rax),%rax
    9cf0:	48 89 ce             	mov    %rcx,%rsi
    9cf3:	48 89 c7             	mov    %rax,%rdi
    9cf6:	e8 6d 0f 00 00       	call   ac68 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    9cfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cff:	48 89 c7             	mov    %rax,%rdi
    9d02:	e8 27 00 00 00       	call   9d2e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    9d07:	90                   	nop
    9d08:	c9                   	leave
    9d09:	c3                   	ret

0000000000009d0a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    9d0a:	55                   	push   %rbp
    9d0b:	48 89 e5             	mov    %rsp,%rbp
    9d0e:	48 83 ec 10          	sub    $0x10,%rsp
    9d12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    9d16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d1a:	48 8b 10             	mov    (%rax),%rdx
    9d1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d21:	48 89 d6             	mov    %rdx,%rsi
    9d24:	48 89 c7             	mov    %rax,%rdi
    9d27:	e8 66 0f 00 00       	call   ac92 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    9d2c:	c9                   	leave
    9d2d:	c3                   	ret

0000000000009d2e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    9d2e:	55                   	push   %rbp
    9d2f:	48 89 e5             	mov    %rsp,%rbp
    9d32:	48 83 ec 10          	sub    $0x10,%rsp
    9d36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    9d3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d3e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9d42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d46:	48 8b 00             	mov    (%rax),%rax
    9d49:	48 29 c2             	sub    %rax,%rdx
    9d4c:	48 c1 fa 03          	sar    $0x3,%rdx
    9d50:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    9d57:	aa aa aa 
    9d5a:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    9d5e:	48 89 c2             	mov    %rax,%rdx
    9d61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d65:	48 8b 08             	mov    (%rax),%rcx
    9d68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d6c:	48 89 ce             	mov    %rcx,%rsi
    9d6f:	48 89 c7             	mov    %rax,%rdi
    9d72:	e8 53 0f 00 00       	call   acca <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    9d77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d7b:	48 89 c7             	mov    %rax,%rdi
    9d7e:	e8 ad f8 ff ff       	call   9630 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    9d83:	90                   	nop
    9d84:	c9                   	leave
    9d85:	c3                   	ret

0000000000009d86 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    9d86:	55                   	push   %rbp
    9d87:	48 89 e5             	mov    %rsp,%rbp
    9d8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    9d8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d92:	48 8b 50 08          	mov    0x8(%rax),%rdx
    9d96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d9a:	48 8b 00             	mov    (%rax),%rax
    9d9d:	48 29 c2             	sub    %rax,%rdx
    9da0:	48 c1 fa 03          	sar    $0x3,%rdx
    9da4:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    9dab:	aa aa aa 
    9dae:	48 0f af c2          	imul   %rdx,%rax
    9db2:	5d                   	pop    %rbp
    9db3:	c3                   	ret

0000000000009db4 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    9db4:	55                   	push   %rbp
    9db5:	48 89 e5             	mov    %rsp,%rbp
    9db8:	48 83 ec 10          	sub    $0x10,%rsp
    9dbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9dc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dc4:	48 89 c7             	mov    %rax,%rdi
    9dc7:	e8 34 0f 00 00       	call   ad00 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    9dcc:	90                   	nop
    9dcd:	c9                   	leave
    9dce:	c3                   	ret
    9dcf:	90                   	nop

0000000000009dd0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    9dd0:	55                   	push   %rbp
    9dd1:	48 89 e5             	mov    %rsp,%rbp
    9dd4:	48 83 ec 10          	sub    $0x10,%rsp
    9dd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ddc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9de0:	48 89 c7             	mov    %rax,%rdi
    9de3:	e8 24 0f 00 00       	call   ad0c <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    9de8:	90                   	nop
    9de9:	c9                   	leave
    9dea:	c3                   	ret
    9deb:	90                   	nop

0000000000009dec <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    9dec:	55                   	push   %rbp
    9ded:	48 89 e5             	mov    %rsp,%rbp
    9df0:	53                   	push   %rbx
    9df1:	48 83 ec 28          	sub    $0x28,%rsp
    9df5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9df9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9dfd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    9e01:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    9e05:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9e09:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9e0d:	48 89 d6             	mov    %rdx,%rsi
    9e10:	48 89 c7             	mov    %rax,%rdi
    9e13:	e8 ff 0e 00 00       	call   ad17 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>
    9e18:	48 89 c1             	mov    %rax,%rcx
    9e1b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9e1f:	48 89 c2             	mov    %rax,%rdx
    9e22:	48 89 ce             	mov    %rcx,%rsi
    9e25:	48 89 df             	mov    %rbx,%rdi
    9e28:	e8 4b 0f 00 00       	call   ad78 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
      { _M_default_initialize(__n); }
    9e2d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9e31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e35:	48 89 d6             	mov    %rdx,%rsi
    9e38:	48 89 c7             	mov    %rax,%rdi
    9e3b:	e8 96 0f 00 00       	call   add6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>
    9e40:	eb 1a                	jmp    9e5c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x70>
    9e42:	48 89 c3             	mov    %rax,%rbx
    9e45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e49:	48 89 c7             	mov    %rax,%rdi
    9e4c:	e8 bb 01 00 00       	call   a00c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    9e51:	48 89 d8             	mov    %rbx,%rax
    9e54:	48 89 c7             	mov    %rax,%rdi
    9e57:	e8 a4 aa ff ff       	call   4900 <_Unwind_Resume@plt>
    9e5c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9e60:	c9                   	leave
    9e61:	c3                   	ret

0000000000009e62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    9e62:	55                   	push   %rbp
    9e63:	48 89 e5             	mov    %rsp,%rbp
    9e66:	48 83 ec 10          	sub    $0x10,%rsp
    9e6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    9e6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e72:	48 89 c7             	mov    %rax,%rdi
    9e75:	e8 9c 0f 00 00       	call   ae16 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    9e7a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    9e7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e81:	48 8b 48 08          	mov    0x8(%rax),%rcx
    9e85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e89:	48 8b 00             	mov    (%rax),%rax
    9e8c:	48 89 ce             	mov    %rcx,%rsi
    9e8f:	48 89 c7             	mov    %rax,%rdi
    9e92:	e8 8d 0f 00 00       	call   ae24 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>
      }
    9e97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e9b:	48 89 c7             	mov    %rax,%rdi
    9e9e:	e8 69 01 00 00       	call   a00c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    9ea3:	90                   	nop
    9ea4:	c9                   	leave
    9ea5:	c3                   	ret

0000000000009ea6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    9ea6:	55                   	push   %rbp
    9ea7:	48 89 e5             	mov    %rsp,%rbp
    9eaa:	48 83 ec 20          	sub    $0x20,%rsp
    9eae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    9eb2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9eb6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9eba:	48 89 d6             	mov    %rdx,%rsi
    9ebd:	48 89 c7             	mov    %rax,%rdi
    9ec0:	e8 89 0f 00 00       	call   ae4e <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    9ec5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ec9:	c9                   	leave
    9eca:	c3                   	ret
    9ecb:	90                   	nop

0000000000009ecc <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    9ecc:	55                   	push   %rbp
    9ecd:	48 89 e5             	mov    %rsp,%rbp
    9ed0:	48 83 ec 20          	sub    $0x20,%rsp
    9ed4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    9ed8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9edc:	48 8d 50 08          	lea    0x8(%rax),%rdx
    9ee0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9ee4:	48 89 d6             	mov    %rdx,%rsi
    9ee7:	48 89 c7             	mov    %rax,%rdi
    9eea:	e8 5f 0f 00 00       	call   ae4e <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    9eef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ef3:	c9                   	leave
    9ef4:	c3                   	ret

0000000000009ef5 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    9ef5:	55                   	push   %rbp
    9ef6:	48 89 e5             	mov    %rsp,%rbp
    9ef9:	53                   	push   %rbx
    9efa:	48 83 ec 18          	sub    $0x18,%rsp
    9efe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9f02:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    9f06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f0a:	48 89 c7             	mov    %rax,%rdi
    9f0d:	e8 5a 0f 00 00       	call   ae6c <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    9f12:	48 8b 18             	mov    (%rax),%rbx
    9f15:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9f19:	48 89 c7             	mov    %rax,%rdi
    9f1c:	e8 4b 0f 00 00       	call   ae6c <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    9f21:	48 8b 00             	mov    (%rax),%rax
    9f24:	48 39 c3             	cmp    %rax,%rbx
    9f27:	0f 95 c0             	setne  %al
    9f2a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9f2e:	c9                   	leave
    9f2f:	c3                   	ret

0000000000009f30 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    9f30:	55                   	push   %rbp
    9f31:	48 89 e5             	mov    %rsp,%rbp
    9f34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    9f38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f3c:	48 8b 00             	mov    (%rax),%rax
    9f3f:	48 8d 50 18          	lea    0x18(%rax),%rdx
    9f43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f47:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    9f4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    9f4e:	5d                   	pop    %rbp
    9f4f:	c3                   	ret

0000000000009f50 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    9f50:	55                   	push   %rbp
    9f51:	48 89 e5             	mov    %rsp,%rbp
    9f54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    9f58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f5c:	48 8b 00             	mov    (%rax),%rax
    9f5f:	5d                   	pop    %rbp
    9f60:	c3                   	ret
    9f61:	90                   	nop

0000000000009f62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    9f62:	55                   	push   %rbp
    9f63:	48 89 e5             	mov    %rsp,%rbp
    9f66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    9f6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f72:	48 8b 08             	mov    (%rax),%rcx
    9f75:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9f79:	48 89 d0             	mov    %rdx,%rax
    9f7c:	48 c1 e0 03          	shl    $0x3,%rax
    9f80:	48 29 d0             	sub    %rdx,%rax
    9f83:	48 c1 e0 02          	shl    $0x2,%rax
    9f87:	48 01 c8             	add    %rcx,%rax
      }
    9f8a:	5d                   	pop    %rbp
    9f8b:	c3                   	ret

0000000000009f8c <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>:
			    __not_<__and_<is_scalar<_Tp>,
					  is_same<_Tp, decay_t<_Up>>>>,
			    is_constructible<_Tp, _Up>,
			    is_assignable<_Tp&, _Up>>,
		    optional&>
	operator=(_Up&& __u)
    9f8c:	55                   	push   %rbp
    9f8d:	48 89 e5             	mov    %rsp,%rbp
    9f90:	53                   	push   %rbx
    9f91:	48 83 ec 18          	sub    $0x18,%rsp
    9f95:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9f99:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	noexcept(__and_v<is_nothrow_constructible<_Tp, _Up>,
			 is_nothrow_assignable<_Tp&, _Up>>)
	{
	  if (this->_M_is_engaged())
    9f9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9fa1:	48 89 c7             	mov    %rax,%rdi
    9fa4:	e8 d1 0e 00 00       	call   ae7a <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    9fa9:	84 c0                	test   %al,%al
    9fab:	74 36                	je     9fe3 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x57>
	    this->_M_get() = std::forward<_Up>(__u);
    9fad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9fb1:	48 89 c7             	mov    %rax,%rdi
    9fb4:	e8 17 0f 00 00       	call   aed0 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    9fb9:	48 89 c3             	mov    %rax,%rbx
    9fbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9fc0:	48 89 c7             	mov    %rax,%rdi
    9fc3:	e8 c4 0e 00 00       	call   ae8c <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
    9fc8:	48 89 c1             	mov    %rax,%rcx
    9fcb:	48 8b 03             	mov    (%rbx),%rax
    9fce:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    9fd2:	48 89 01             	mov    %rax,(%rcx)
    9fd5:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    9fd9:	48 8b 43 10          	mov    0x10(%rbx),%rax
    9fdd:	48 89 41 10          	mov    %rax,0x10(%rcx)
    9fe1:	eb 1e                	jmp    a001 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x75>
	  else
	    this->_M_construct(std::forward<_Up>(__u));
    9fe3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9fe7:	48 89 c7             	mov    %rax,%rdi
    9fea:	e8 e1 0e 00 00       	call   aed0 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    9fef:	48 89 c2             	mov    %rax,%rdx
    9ff2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ff6:	48 89 d6             	mov    %rdx,%rsi
    9ff9:	48 89 c7             	mov    %rax,%rdi
    9ffc:	e8 dd 0e 00 00       	call   aede <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>

	  return *this;
    a001:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    a005:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a009:	c9                   	leave
    a00a:	c3                   	ret
    a00b:	90                   	nop

000000000000a00c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    a00c:	55                   	push   %rbp
    a00d:	48 89 e5             	mov    %rsp,%rbp
    a010:	48 83 ec 10          	sub    $0x10,%rsp
    a014:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    a018:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a01c:	48 8b 50 10          	mov    0x10(%rax),%rdx
    a020:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a024:	48 8b 00             	mov    (%rax),%rax
    a027:	48 29 c2             	sub    %rax,%rdx
    a02a:	48 c1 fa 02          	sar    $0x2,%rdx
    a02e:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
    a035:	db b6 6d 
    a038:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    a03c:	48 89 c2             	mov    %rax,%rdx
    a03f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a043:	48 8b 08             	mov    (%rax),%rcx
    a046:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a04a:	48 89 ce             	mov    %rcx,%rsi
    a04d:	48 89 c7             	mov    %rax,%rdi
    a050:	e8 e3 0e 00 00       	call   af38 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>
      }
    a055:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a059:	48 89 c7             	mov    %rax,%rdi
    a05c:	e8 eb f5 ff ff       	call   964c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    a061:	90                   	nop
    a062:	c9                   	leave
    a063:	c3                   	ret

000000000000a064 <_ZNSaI18VkSurfaceFormatKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    a064:	55                   	push   %rbp
    a065:	48 89 e5             	mov    %rsp,%rbp
    a068:	48 83 ec 10          	sub    $0x10,%rsp
    a06c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a070:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a074:	48 89 c7             	mov    %rax,%rdi
    a077:	e8 f2 0e 00 00       	call   af6e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>
    a07c:	90                   	nop
    a07d:	c9                   	leave
    a07e:	c3                   	ret
    a07f:	90                   	nop

000000000000a080 <_ZNSaI18VkSurfaceFormatKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    a080:	55                   	push   %rbp
    a081:	48 89 e5             	mov    %rsp,%rbp
    a084:	48 83 ec 10          	sub    $0x10,%rsp
    a088:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a08c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a090:	48 89 c7             	mov    %rax,%rdi
    a093:	e8 e2 0e 00 00       	call   af7a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>
    a098:	90                   	nop
    a099:	c9                   	leave
    a09a:	c3                   	ret
    a09b:	90                   	nop

000000000000a09c <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    a09c:	55                   	push   %rbp
    a09d:	48 89 e5             	mov    %rsp,%rbp
    a0a0:	53                   	push   %rbx
    a0a1:	48 83 ec 28          	sub    $0x28,%rsp
    a0a5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a0a9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a0ad:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    a0b1:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    a0b5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a0b9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a0bd:	48 89 d6             	mov    %rdx,%rsi
    a0c0:	48 89 c7             	mov    %rax,%rdi
    a0c3:	e8 bd 0e 00 00       	call   af85 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    a0c8:	48 89 c1             	mov    %rax,%rcx
    a0cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a0cf:	48 89 c2             	mov    %rax,%rdx
    a0d2:	48 89 ce             	mov    %rcx,%rsi
    a0d5:	48 89 df             	mov    %rbx,%rdi
    a0d8:	e8 09 0f 00 00       	call   afe6 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    a0dd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a0e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a0e5:	48 89 d6             	mov    %rdx,%rsi
    a0e8:	48 89 c7             	mov    %rax,%rdi
    a0eb:	e8 54 0f 00 00       	call   b044 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>
    a0f0:	eb 1a                	jmp    a10c <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x70>
    a0f2:	48 89 c3             	mov    %rax,%rbx
    a0f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a0f9:	48 89 c7             	mov    %rax,%rdi
    a0fc:	e8 79 00 00 00       	call   a17a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    a101:	48 89 d8             	mov    %rbx,%rax
    a104:	48 89 c7             	mov    %rax,%rdi
    a107:	e8 f4 a7 ff ff       	call   4900 <_Unwind_Resume@plt>
    a10c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a110:	c9                   	leave
    a111:	c3                   	ret

000000000000a112 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    a112:	55                   	push   %rbp
    a113:	48 89 e5             	mov    %rsp,%rbp
    a116:	48 83 ec 10          	sub    $0x10,%rsp
    a11a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    a11e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a122:	48 89 c7             	mov    %rax,%rdi
    a125:	e8 5a 0f 00 00       	call   b084 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    a12a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    a12d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a131:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a135:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a139:	48 8b 00             	mov    (%rax),%rax
    a13c:	48 89 ce             	mov    %rcx,%rsi
    a13f:	48 89 c7             	mov    %rax,%rdi
    a142:	e8 4b 0f 00 00       	call   b092 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
      }
    a147:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a14b:	48 89 c7             	mov    %rax,%rdi
    a14e:	e8 27 00 00 00       	call   a17a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    a153:	90                   	nop
    a154:	c9                   	leave
    a155:	c3                   	ret

000000000000a156 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    a156:	55                   	push   %rbp
    a157:	48 89 e5             	mov    %rsp,%rbp
    a15a:	48 83 ec 10          	sub    $0x10,%rsp
    a15e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    a162:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a166:	48 8b 10             	mov    (%rax),%rdx
    a169:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a16d:	48 89 d6             	mov    %rdx,%rsi
    a170:	48 89 c7             	mov    %rax,%rdi
    a173:	e8 44 0f 00 00       	call   b0bc <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    a178:	c9                   	leave
    a179:	c3                   	ret

000000000000a17a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    a17a:	55                   	push   %rbp
    a17b:	48 89 e5             	mov    %rsp,%rbp
    a17e:	48 83 ec 10          	sub    $0x10,%rsp
    a182:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    a186:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a18a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    a18e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a192:	48 8b 00             	mov    (%rax),%rax
    a195:	48 29 c2             	sub    %rax,%rdx
    a198:	48 89 d0             	mov    %rdx,%rax
    a19b:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    a19f:	48 89 c2             	mov    %rax,%rdx
    a1a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1a6:	48 8b 08             	mov    (%rax),%rcx
    a1a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1ad:	48 89 ce             	mov    %rcx,%rsi
    a1b0:	48 89 c7             	mov    %rax,%rdi
    a1b3:	e8 3c 0f 00 00       	call   b0f4 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    a1b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1bc:	48 89 c7             	mov    %rax,%rdi
    a1bf:	e8 a4 f4 ff ff       	call   9668 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    a1c4:	90                   	nop
    a1c5:	c9                   	leave
    a1c6:	c3                   	ret
    a1c7:	90                   	nop

000000000000a1c8 <_ZNSaI16VkPresentModeKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    a1c8:	55                   	push   %rbp
    a1c9:	48 89 e5             	mov    %rsp,%rbp
    a1cc:	48 83 ec 10          	sub    $0x10,%rsp
    a1d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1d8:	48 89 c7             	mov    %rax,%rdi
    a1db:	e8 4a 0f 00 00       	call   b12a <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>
    a1e0:	90                   	nop
    a1e1:	c9                   	leave
    a1e2:	c3                   	ret
    a1e3:	90                   	nop

000000000000a1e4 <_ZNSaI16VkPresentModeKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    a1e4:	55                   	push   %rbp
    a1e5:	48 89 e5             	mov    %rsp,%rbp
    a1e8:	48 83 ec 10          	sub    $0x10,%rsp
    a1ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1f4:	48 89 c7             	mov    %rax,%rdi
    a1f7:	e8 3a 0f 00 00       	call   b136 <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>
    a1fc:	90                   	nop
    a1fd:	c9                   	leave
    a1fe:	c3                   	ret
    a1ff:	90                   	nop

000000000000a200 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    a200:	55                   	push   %rbp
    a201:	48 89 e5             	mov    %rsp,%rbp
    a204:	53                   	push   %rbx
    a205:	48 83 ec 28          	sub    $0x28,%rsp
    a209:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a20d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a211:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    a215:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    a219:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a21d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a221:	48 89 d6             	mov    %rdx,%rsi
    a224:	48 89 c7             	mov    %rax,%rdi
    a227:	e8 15 0f 00 00       	call   b141 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    a22c:	48 89 c1             	mov    %rax,%rcx
    a22f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a233:	48 89 c2             	mov    %rax,%rdx
    a236:	48 89 ce             	mov    %rcx,%rsi
    a239:	48 89 df             	mov    %rbx,%rdi
    a23c:	e8 61 0f 00 00       	call   b1a2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    a241:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a245:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a249:	48 89 d6             	mov    %rdx,%rsi
    a24c:	48 89 c7             	mov    %rax,%rdi
    a24f:	e8 ac 0f 00 00       	call   b200 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>
    a254:	eb 1a                	jmp    a270 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x70>
    a256:	48 89 c3             	mov    %rax,%rbx
    a259:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a25d:	48 89 c7             	mov    %rax,%rdi
    a260:	e8 79 00 00 00       	call   a2de <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    a265:	48 89 d8             	mov    %rbx,%rax
    a268:	48 89 c7             	mov    %rax,%rdi
    a26b:	e8 90 a6 ff ff       	call   4900 <_Unwind_Resume@plt>
    a270:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a274:	c9                   	leave
    a275:	c3                   	ret

000000000000a276 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    a276:	55                   	push   %rbp
    a277:	48 89 e5             	mov    %rsp,%rbp
    a27a:	48 83 ec 10          	sub    $0x10,%rsp
    a27e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    a282:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a286:	48 89 c7             	mov    %rax,%rdi
    a289:	e8 b2 0f 00 00       	call   b240 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    a28e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    a291:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a295:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a299:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a29d:	48 8b 00             	mov    (%rax),%rax
    a2a0:	48 89 ce             	mov    %rcx,%rsi
    a2a3:	48 89 c7             	mov    %rax,%rdi
    a2a6:	e8 a3 0f 00 00       	call   b24e <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>
      }
    a2ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2af:	48 89 c7             	mov    %rax,%rdi
    a2b2:	e8 27 00 00 00       	call   a2de <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    a2b7:	90                   	nop
    a2b8:	c9                   	leave
    a2b9:	c3                   	ret

000000000000a2ba <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    a2ba:	55                   	push   %rbp
    a2bb:	48 89 e5             	mov    %rsp,%rbp
    a2be:	48 83 ec 10          	sub    $0x10,%rsp
    a2c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    a2c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2ca:	48 8b 10             	mov    (%rax),%rdx
    a2cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2d1:	48 89 d6             	mov    %rdx,%rsi
    a2d4:	48 89 c7             	mov    %rax,%rdi
    a2d7:	e8 9c 0f 00 00       	call   b278 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    a2dc:	c9                   	leave
    a2dd:	c3                   	ret

000000000000a2de <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    a2de:	55                   	push   %rbp
    a2df:	48 89 e5             	mov    %rsp,%rbp
    a2e2:	48 83 ec 10          	sub    $0x10,%rsp
    a2e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    a2ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2ee:	48 8b 50 10          	mov    0x10(%rax),%rdx
    a2f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2f6:	48 8b 00             	mov    (%rax),%rax
    a2f9:	48 29 c2             	sub    %rax,%rdx
    a2fc:	48 89 d0             	mov    %rdx,%rax
    a2ff:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
    a303:	48 89 c2             	mov    %rax,%rdx
    a306:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a30a:	48 8b 08             	mov    (%rax),%rcx
    a30d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a311:	48 89 ce             	mov    %rcx,%rsi
    a314:	48 89 c7             	mov    %rax,%rdi
    a317:	e8 94 0f 00 00       	call   b2b0 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    a31c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a320:	48 89 c7             	mov    %rax,%rdi
    a323:	e8 5c f3 ff ff       	call   9684 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    a328:	90                   	nop
    a329:	c9                   	leave
    a32a:	c3                   	ret
    a32b:	90                   	nop

000000000000a32c <_ZNSaIP9VkImage_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    a32c:	55                   	push   %rbp
    a32d:	48 89 e5             	mov    %rsp,%rbp
    a330:	48 83 ec 10          	sub    $0x10,%rsp
    a334:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a338:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a33c:	48 89 c7             	mov    %rax,%rdi
    a33f:	e8 a2 0f 00 00       	call   b2e6 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>
    a344:	90                   	nop
    a345:	c9                   	leave
    a346:	c3                   	ret
    a347:	90                   	nop

000000000000a348 <_ZNSaIP9VkImage_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    a348:	55                   	push   %rbp
    a349:	48 89 e5             	mov    %rsp,%rbp
    a34c:	48 83 ec 10          	sub    $0x10,%rsp
    a350:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a354:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a358:	48 89 c7             	mov    %rax,%rdi
    a35b:	e8 92 0f 00 00       	call   b2f2 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>
    a360:	90                   	nop
    a361:	c9                   	leave
    a362:	c3                   	ret
    a363:	90                   	nop

000000000000a364 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    a364:	55                   	push   %rbp
    a365:	48 89 e5             	mov    %rsp,%rbp
    a368:	53                   	push   %rbx
    a369:	48 83 ec 28          	sub    $0x28,%rsp
    a36d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a371:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a375:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    a379:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    a37d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a381:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a385:	48 89 d6             	mov    %rdx,%rsi
    a388:	48 89 c7             	mov    %rax,%rdi
    a38b:	e8 6d 0f 00 00       	call   b2fd <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    a390:	48 89 c1             	mov    %rax,%rcx
    a393:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a397:	48 89 c2             	mov    %rax,%rdx
    a39a:	48 89 ce             	mov    %rcx,%rsi
    a39d:	48 89 df             	mov    %rbx,%rdi
    a3a0:	e8 b9 0f 00 00       	call   b35e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    a3a5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a3a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a3ad:	48 89 d6             	mov    %rdx,%rsi
    a3b0:	48 89 c7             	mov    %rax,%rdi
    a3b3:	e8 04 10 00 00       	call   b3bc <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>
    a3b8:	eb 1a                	jmp    a3d4 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_+0x70>
    a3ba:	48 89 c3             	mov    %rax,%rbx
    a3bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a3c1:	48 89 c7             	mov    %rax,%rdi
    a3c4:	e8 79 00 00 00       	call   a442 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    a3c9:	48 89 d8             	mov    %rbx,%rax
    a3cc:	48 89 c7             	mov    %rax,%rdi
    a3cf:	e8 2c a5 ff ff       	call   4900 <_Unwind_Resume@plt>
    a3d4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a3d8:	c9                   	leave
    a3d9:	c3                   	ret

000000000000a3da <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    a3da:	55                   	push   %rbp
    a3db:	48 89 e5             	mov    %rsp,%rbp
    a3de:	48 83 ec 10          	sub    $0x10,%rsp
    a3e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    a3e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3ea:	48 89 c7             	mov    %rax,%rdi
    a3ed:	e8 0a 10 00 00       	call   b3fc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    a3f2:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    a3f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3f9:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a3fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a401:	48 8b 00             	mov    (%rax),%rax
    a404:	48 89 ce             	mov    %rcx,%rsi
    a407:	48 89 c7             	mov    %rax,%rdi
    a40a:	e8 fb 0f 00 00       	call   b40a <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
      }
    a40f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a413:	48 89 c7             	mov    %rax,%rdi
    a416:	e8 27 00 00 00       	call   a442 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    a41b:	90                   	nop
    a41c:	c9                   	leave
    a41d:	c3                   	ret

000000000000a41e <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    a41e:	55                   	push   %rbp
    a41f:	48 89 e5             	mov    %rsp,%rbp
    a422:	48 83 ec 10          	sub    $0x10,%rsp
    a426:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    a42a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a42e:	48 8b 10             	mov    (%rax),%rdx
    a431:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a435:	48 89 d6             	mov    %rdx,%rsi
    a438:	48 89 c7             	mov    %rax,%rdi
    a43b:	e8 f4 0f 00 00       	call   b434 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    a440:	c9                   	leave
    a441:	c3                   	ret

000000000000a442 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    a442:	55                   	push   %rbp
    a443:	48 89 e5             	mov    %rsp,%rbp
    a446:	48 83 ec 10          	sub    $0x10,%rsp
    a44a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    a44e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a452:	48 8b 50 10          	mov    0x10(%rax),%rdx
    a456:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a45a:	48 8b 00             	mov    (%rax),%rax
    a45d:	48 29 c2             	sub    %rax,%rdx
    a460:	48 89 d0             	mov    %rdx,%rax
    a463:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    a467:	48 89 c2             	mov    %rax,%rdx
    a46a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a46e:	48 8b 08             	mov    (%rax),%rcx
    a471:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a475:	48 89 ce             	mov    %rcx,%rsi
    a478:	48 89 c7             	mov    %rax,%rdi
    a47b:	e8 ec 0f 00 00       	call   b46c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    a480:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a484:	48 89 c7             	mov    %rax,%rdi
    a487:	e8 14 f2 ff ff       	call   96a0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    a48c:	90                   	nop
    a48d:	c9                   	leave
    a48e:	c3                   	ret
    a48f:	90                   	nop

000000000000a490 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a490:	55                   	push   %rbp
    a491:	48 89 e5             	mov    %rsp,%rbp
    a494:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a498:	90                   	nop
    a499:	5d                   	pop    %rbp
    a49a:	c3                   	ret
    a49b:	90                   	nop

000000000000a49c <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a49c:	55                   	push   %rbp
    a49d:	48 89 e5             	mov    %rsp,%rbp
    a4a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4a4:	90                   	nop
    a4a5:	5d                   	pop    %rbp
    a4a6:	c3                   	ret

000000000000a4a7 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    a4a7:	55                   	push   %rbp
    a4a8:	48 89 e5             	mov    %rsp,%rbp
    a4ab:	53                   	push   %rbx
    a4ac:	48 83 ec 28          	sub    $0x28,%rsp
    a4b0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a4b4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    a4b8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a4bc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a4c0:	48 89 d6             	mov    %rdx,%rsi
    a4c3:	48 89 c7             	mov    %rax,%rdi
    a4c6:	e8 25 01 00 00       	call   a5f0 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    a4cb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a4cf:	48 89 c7             	mov    %rax,%rdi
    a4d2:	e8 ca 0f 00 00       	call   b4a1 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    a4d7:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    a4db:	0f 92 c3             	setb   %bl
    a4de:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a4e2:	48 89 c7             	mov    %rax,%rdi
    a4e5:	e8 ee f1 ff ff       	call   96d8 <_ZNSaI17VkLayerPropertiesED1Ev>
    a4ea:	84 db                	test   %bl,%bl
    a4ec:	74 0f                	je     a4fd <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    a4ee:	48 8d 05 93 4e 01 00 	lea    0x14e93(%rip),%rax        # 1f388 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    a4f5:	48 89 c7             	mov    %rax,%rdi
    a4f8:	e8 f3 9c ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    a4fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    a501:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a505:	c9                   	leave
    a506:	c3                   	ret
    a507:	90                   	nop

000000000000a508 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    a508:	55                   	push   %rbp
    a509:	48 89 e5             	mov    %rsp,%rbp
    a50c:	53                   	push   %rbx
    a50d:	48 83 ec 28          	sub    $0x28,%rsp
    a511:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a515:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a519:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    a51d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a521:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a525:	48 89 d6             	mov    %rdx,%rsi
    a528:	48 89 c7             	mov    %rax,%rdi
    a52b:	e8 b4 0f 00 00       	call   b4e4 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    a530:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a534:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a538:	48 89 d6             	mov    %rdx,%rsi
    a53b:	48 89 c7             	mov    %rax,%rdi
    a53e:	e8 d3 0f 00 00       	call   b516 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    a543:	eb 1a                	jmp    a55f <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    a545:	48 89 c3             	mov    %rax,%rbx
    a548:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a54c:	48 89 c7             	mov    %rax,%rdi
    a54f:	e8 6c f0 ff ff       	call   95c0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    a554:	48 89 d8             	mov    %rbx,%rax
    a557:	48 89 c7             	mov    %rax,%rdi
    a55a:	e8 a1 a3 ff ff       	call   4900 <_Unwind_Resume@plt>
    a55f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a563:	c9                   	leave
    a564:	c3                   	ret
    a565:	90                   	nop

000000000000a566 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    a566:	55                   	push   %rbp
    a567:	48 89 e5             	mov    %rsp,%rbp
    a56a:	48 83 ec 10          	sub    $0x10,%rsp
    a56e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a572:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    a576:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a57a:	48 89 c7             	mov    %rax,%rdi
    a57d:	e8 24 00 00 00       	call   a5a6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    a582:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    a585:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a589:	48 8b 00             	mov    (%rax),%rax
    a58c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a590:	48 89 ce             	mov    %rcx,%rsi
    a593:	48 89 c7             	mov    %rax,%rdi
    a596:	e8 dc 0f 00 00       	call   b577 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    a59b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a59f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    a5a3:	90                   	nop
    a5a4:	c9                   	leave
    a5a5:	c3                   	ret

000000000000a5a6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    a5a6:	55                   	push   %rbp
    a5a7:	48 89 e5             	mov    %rsp,%rbp
    a5aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    a5ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5b2:	5d                   	pop    %rbp
    a5b3:	c3                   	ret

000000000000a5b4 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    a5b4:	55                   	push   %rbp
    a5b5:	48 89 e5             	mov    %rsp,%rbp
    a5b8:	48 83 ec 20          	sub    $0x20,%rsp
    a5bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a5c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    a5c8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a5cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5d0:	48 89 d6             	mov    %rdx,%rsi
    a5d3:	48 89 c7             	mov    %rax,%rdi
    a5d6:	e8 c5 0f 00 00       	call   b5a0 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    a5db:	90                   	nop
    a5dc:	c9                   	leave
    a5dd:	c3                   	ret

000000000000a5de <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    a5de:	55                   	push   %rbp
    a5df:	48 89 e5             	mov    %rsp,%rbp
    a5e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    a5ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a5ee:	5d                   	pop    %rbp
    a5ef:	c3                   	ret

000000000000a5f0 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    a5f0:	55                   	push   %rbp
    a5f1:	48 89 e5             	mov    %rsp,%rbp
    a5f4:	48 83 ec 10          	sub    $0x10,%rsp
    a5f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    a600:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a604:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a608:	48 89 d6             	mov    %rdx,%rsi
    a60b:	48 89 c7             	mov    %rax,%rdi
    a60e:	e8 b3 0f 00 00       	call   b5c6 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
    a613:	90                   	nop
    a614:	c9                   	leave
    a615:	c3                   	ret

000000000000a616 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    a616:	55                   	push   %rbp
    a617:	48 89 e5             	mov    %rsp,%rbp
    a61a:	48 83 ec 20          	sub    $0x20,%rsp
    a61e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a622:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a626:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    a62a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a62f:	74 17                	je     a648 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    a631:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a635:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a639:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a63d:	48 89 ce             	mov    %rcx,%rsi
    a640:	48 89 c7             	mov    %rax,%rdi
    a643:	e8 8d 0f 00 00       	call   b5d5 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
    a648:	90                   	nop
    a649:	c9                   	leave
    a64a:	c3                   	ret
    a64b:	90                   	nop

000000000000a64c <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a64c:	55                   	push   %rbp
    a64d:	48 89 e5             	mov    %rsp,%rbp
    a650:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a654:	90                   	nop
    a655:	5d                   	pop    %rbp
    a656:	c3                   	ret
    a657:	90                   	nop

000000000000a658 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a658:	55                   	push   %rbp
    a659:	48 89 e5             	mov    %rsp,%rbp
    a65c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a660:	90                   	nop
    a661:	5d                   	pop    %rbp
    a662:	c3                   	ret

000000000000a663 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    a663:	55                   	push   %rbp
    a664:	48 89 e5             	mov    %rsp,%rbp
    a667:	53                   	push   %rbx
    a668:	48 83 ec 28          	sub    $0x28,%rsp
    a66c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a670:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    a674:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a678:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a67c:	48 89 d6             	mov    %rdx,%rsi
    a67f:	48 89 c7             	mov    %rax,%rdi
    a682:	e8 25 01 00 00       	call   a7ac <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    a687:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a68b:	48 89 c7             	mov    %rax,%rdi
    a68e:	e8 70 0f 00 00       	call   b603 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    a693:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    a697:	0f 92 c3             	setb   %bl
    a69a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a69e:	48 89 c7             	mov    %rax,%rdi
    a6a1:	e8 a0 f1 ff ff       	call   9846 <_ZNSaI21VkExtensionPropertiesED1Ev>
    a6a6:	84 db                	test   %bl,%bl
    a6a8:	74 0f                	je     a6b9 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    a6aa:	48 8d 05 d7 4c 01 00 	lea    0x14cd7(%rip),%rax        # 1f388 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    a6b1:	48 89 c7             	mov    %rax,%rdi
    a6b4:	e8 37 9b ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    a6b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    a6bd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a6c1:	c9                   	leave
    a6c2:	c3                   	ret
    a6c3:	90                   	nop

000000000000a6c4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    a6c4:	55                   	push   %rbp
    a6c5:	48 89 e5             	mov    %rsp,%rbp
    a6c8:	53                   	push   %rbx
    a6c9:	48 83 ec 28          	sub    $0x28,%rsp
    a6cd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a6d1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a6d5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    a6d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a6dd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a6e1:	48 89 d6             	mov    %rdx,%rsi
    a6e4:	48 89 c7             	mov    %rax,%rdi
    a6e7:	e8 5a 0f 00 00       	call   b646 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    a6ec:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a6f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a6f4:	48 89 d6             	mov    %rdx,%rsi
    a6f7:	48 89 c7             	mov    %rax,%rdi
    a6fa:	e8 79 0f 00 00       	call   b678 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    a6ff:	eb 1a                	jmp    a71b <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    a701:	48 89 c3             	mov    %rax,%rbx
    a704:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a708:	48 89 c7             	mov    %rax,%rdi
    a70b:	e8 cc ee ff ff       	call   95dc <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    a710:	48 89 d8             	mov    %rbx,%rax
    a713:	48 89 c7             	mov    %rax,%rdi
    a716:	e8 e5 a1 ff ff       	call   4900 <_Unwind_Resume@plt>
    a71b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a71f:	c9                   	leave
    a720:	c3                   	ret
    a721:	90                   	nop

000000000000a722 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    a722:	55                   	push   %rbp
    a723:	48 89 e5             	mov    %rsp,%rbp
    a726:	48 83 ec 10          	sub    $0x10,%rsp
    a72a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a72e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    a732:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a736:	48 89 c7             	mov    %rax,%rdi
    a739:	e8 24 00 00 00       	call   a762 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    a73e:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    a741:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a745:	48 8b 00             	mov    (%rax),%rax
    a748:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a74c:	48 89 ce             	mov    %rcx,%rsi
    a74f:	48 89 c7             	mov    %rax,%rdi
    a752:	e8 82 0f 00 00       	call   b6d9 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    a757:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a75b:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    a75f:	90                   	nop
    a760:	c9                   	leave
    a761:	c3                   	ret

000000000000a762 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    a762:	55                   	push   %rbp
    a763:	48 89 e5             	mov    %rsp,%rbp
    a766:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    a76a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a76e:	5d                   	pop    %rbp
    a76f:	c3                   	ret

000000000000a770 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    a770:	55                   	push   %rbp
    a771:	48 89 e5             	mov    %rsp,%rbp
    a774:	48 83 ec 20          	sub    $0x20,%rsp
    a778:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a77c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a780:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    a784:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a788:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a78c:	48 89 d6             	mov    %rdx,%rsi
    a78f:	48 89 c7             	mov    %rax,%rdi
    a792:	e8 6b 0f 00 00       	call   b702 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    a797:	90                   	nop
    a798:	c9                   	leave
    a799:	c3                   	ret

000000000000a79a <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    a79a:	55                   	push   %rbp
    a79b:	48 89 e5             	mov    %rsp,%rbp
    a79e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    a7a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a7aa:	5d                   	pop    %rbp
    a7ab:	c3                   	ret

000000000000a7ac <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    a7ac:	55                   	push   %rbp
    a7ad:	48 89 e5             	mov    %rsp,%rbp
    a7b0:	48 83 ec 10          	sub    $0x10,%rsp
    a7b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    a7bc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a7c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7c4:	48 89 d6             	mov    %rdx,%rsi
    a7c7:	48 89 c7             	mov    %rax,%rdi
    a7ca:	e8 59 0f 00 00       	call   b728 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    a7cf:	90                   	nop
    a7d0:	c9                   	leave
    a7d1:	c3                   	ret

000000000000a7d2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    a7d2:	55                   	push   %rbp
    a7d3:	48 89 e5             	mov    %rsp,%rbp
    a7d6:	48 83 ec 20          	sub    $0x20,%rsp
    a7da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a7e2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    a7e6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a7eb:	74 17                	je     a804 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    a7ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7f1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a7f5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a7f9:	48 89 ce             	mov    %rcx,%rsi
    a7fc:	48 89 c7             	mov    %rax,%rdi
    a7ff:	e8 33 0f 00 00       	call   b737 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    a804:	90                   	nop
    a805:	c9                   	leave
    a806:	c3                   	ret
    a807:	90                   	nop

000000000000a808 <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a808:	55                   	push   %rbp
    a809:	48 89 e5             	mov    %rsp,%rbp
    a80c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a810:	90                   	nop
    a811:	5d                   	pop    %rbp
    a812:	c3                   	ret
    a813:	90                   	nop

000000000000a814 <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a814:	55                   	push   %rbp
    a815:	48 89 e5             	mov    %rsp,%rbp
    a818:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a81c:	90                   	nop
    a81d:	5d                   	pop    %rbp
    a81e:	c3                   	ret

000000000000a81f <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    a81f:	55                   	push   %rbp
    a820:	48 89 e5             	mov    %rsp,%rbp
    a823:	53                   	push   %rbx
    a824:	48 83 ec 28          	sub    $0x28,%rsp
    a828:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a82c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    a830:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a834:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a838:	48 89 d6             	mov    %rdx,%rsi
    a83b:	48 89 c7             	mov    %rax,%rdi
    a83e:	e8 e9 00 00 00       	call   a92c <_ZNSaIPKcEC1ERKS1_>
    a843:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a847:	48 89 c7             	mov    %rax,%rdi
    a84a:	e8 16 0f 00 00       	call   b765 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    a84f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    a853:	0f 92 c3             	setb   %bl
    a856:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a85a:	48 89 c7             	mov    %rax,%rdi
    a85d:	e8 52 f1 ff ff       	call   99b4 <_ZNSaIPKcED1Ev>
    a862:	84 db                	test   %bl,%bl
    a864:	74 0f                	je     a875 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    a866:	48 8d 05 1b 4b 01 00 	lea    0x14b1b(%rip),%rax        # 1f388 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    a86d:	48 89 c7             	mov    %rax,%rdi
    a870:	e8 7b 99 ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    a875:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    a879:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a87d:	c9                   	leave
    a87e:	c3                   	ret
    a87f:	90                   	nop

000000000000a880 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    a880:	55                   	push   %rbp
    a881:	48 89 e5             	mov    %rsp,%rbp
    a884:	53                   	push   %rbx
    a885:	48 83 ec 28          	sub    $0x28,%rsp
    a889:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a88d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a891:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    a895:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a899:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a89d:	48 89 d6             	mov    %rdx,%rsi
    a8a0:	48 89 c7             	mov    %rax,%rdi
    a8a3:	e8 00 0f 00 00       	call   b7a8 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    a8a8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a8ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a8b0:	48 89 d6             	mov    %rdx,%rsi
    a8b3:	48 89 c7             	mov    %rax,%rdi
    a8b6:	e8 1f 0f 00 00       	call   b7da <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    a8bb:	eb 1a                	jmp    a8d7 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    a8bd:	48 89 c3             	mov    %rax,%rbx
    a8c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a8c4:	48 89 c7             	mov    %rax,%rdi
    a8c7:	e8 2c ed ff ff       	call   95f8 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    a8cc:	48 89 d8             	mov    %rbx,%rax
    a8cf:	48 89 c7             	mov    %rax,%rdi
    a8d2:	e8 29 a0 ff ff       	call   4900 <_Unwind_Resume@plt>
    a8d7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a8db:	c9                   	leave
    a8dc:	c3                   	ret
    a8dd:	90                   	nop

000000000000a8de <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    a8de:	55                   	push   %rbp
    a8df:	48 89 e5             	mov    %rsp,%rbp
    a8e2:	48 83 ec 10          	sub    $0x10,%rsp
    a8e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    a8ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8f2:	48 89 c7             	mov    %rax,%rdi
    a8f5:	e8 24 00 00 00       	call   a91e <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    a8fa:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    a8fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a901:	48 8b 00             	mov    (%rax),%rax
    a904:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a908:	48 89 ce             	mov    %rcx,%rsi
    a90b:	48 89 c7             	mov    %rax,%rdi
    a90e:	e8 1d 0f 00 00       	call   b830 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    a913:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a917:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    a91b:	90                   	nop
    a91c:	c9                   	leave
    a91d:	c3                   	ret

000000000000a91e <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    a91e:	55                   	push   %rbp
    a91f:	48 89 e5             	mov    %rsp,%rbp
    a922:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    a926:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a92a:	5d                   	pop    %rbp
    a92b:	c3                   	ret

000000000000a92c <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    a92c:	55                   	push   %rbp
    a92d:	48 89 e5             	mov    %rsp,%rbp
    a930:	48 83 ec 10          	sub    $0x10,%rsp
    a934:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a938:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    a93c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a940:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a944:	48 89 d6             	mov    %rdx,%rsi
    a947:	48 89 c7             	mov    %rax,%rdi
    a94a:	e8 0b 0f 00 00       	call   b85a <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    a94f:	90                   	nop
    a950:	c9                   	leave
    a951:	c3                   	ret

000000000000a952 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    a952:	55                   	push   %rbp
    a953:	48 89 e5             	mov    %rsp,%rbp
    a956:	48 83 ec 20          	sub    $0x20,%rsp
    a95a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a95e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a962:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    a966:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a96b:	74 17                	je     a984 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    a96d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a971:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a975:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a979:	48 89 ce             	mov    %rcx,%rsi
    a97c:	48 89 c7             	mov    %rax,%rdi
    a97f:	e8 e5 0e 00 00       	call   b869 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    a984:	90                   	nop
    a985:	c9                   	leave
    a986:	c3                   	ret
    a987:	90                   	nop

000000000000a988 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a988:	55                   	push   %rbp
    a989:	48 89 e5             	mov    %rsp,%rbp
    a98c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a990:	90                   	nop
    a991:	5d                   	pop    %rbp
    a992:	c3                   	ret
    a993:	90                   	nop

000000000000a994 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a994:	55                   	push   %rbp
    a995:	48 89 e5             	mov    %rsp,%rbp
    a998:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a99c:	90                   	nop
    a99d:	5d                   	pop    %rbp
    a99e:	c3                   	ret

000000000000a99f <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    a99f:	55                   	push   %rbp
    a9a0:	48 89 e5             	mov    %rsp,%rbp
    a9a3:	53                   	push   %rbx
    a9a4:	48 83 ec 28          	sub    $0x28,%rsp
    a9a8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a9ac:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    a9b0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a9b4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a9b8:	48 89 d6             	mov    %rdx,%rsi
    a9bb:	48 89 c7             	mov    %rax,%rdi
    a9be:	e8 25 01 00 00       	call   aae8 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    a9c3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a9c7:	48 89 c7             	mov    %rax,%rdi
    a9ca:	e8 c8 0e 00 00       	call   b897 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    a9cf:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    a9d3:	0f 92 c3             	setb   %bl
    a9d6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a9da:	48 89 c7             	mov    %rax,%rdi
    a9dd:	e8 ee f0 ff ff       	call   9ad0 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    a9e2:	84 db                	test   %bl,%bl
    a9e4:	74 0f                	je     a9f5 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    a9e6:	48 8d 05 9b 49 01 00 	lea    0x1499b(%rip),%rax        # 1f388 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    a9ed:	48 89 c7             	mov    %rax,%rdi
    a9f0:	e8 fb 97 ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    a9f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    a9f9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a9fd:	c9                   	leave
    a9fe:	c3                   	ret
    a9ff:	90                   	nop

000000000000aa00 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    aa00:	55                   	push   %rbp
    aa01:	48 89 e5             	mov    %rsp,%rbp
    aa04:	53                   	push   %rbx
    aa05:	48 83 ec 28          	sub    $0x28,%rsp
    aa09:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aa0d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    aa11:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    aa15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa19:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    aa1d:	48 89 d6             	mov    %rdx,%rsi
    aa20:	48 89 c7             	mov    %rax,%rdi
    aa23:	e8 b2 0e 00 00       	call   b8da <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    aa28:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    aa2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa30:	48 89 d6             	mov    %rdx,%rsi
    aa33:	48 89 c7             	mov    %rax,%rdi
    aa36:	e8 d1 0e 00 00       	call   b90c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    aa3b:	eb 1a                	jmp    aa57 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    aa3d:	48 89 c3             	mov    %rax,%rbx
    aa40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa44:	48 89 c7             	mov    %rax,%rdi
    aa47:	e8 c8 eb ff ff       	call   9614 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    aa4c:	48 89 d8             	mov    %rbx,%rax
    aa4f:	48 89 c7             	mov    %rax,%rdi
    aa52:	e8 a9 9e ff ff       	call   4900 <_Unwind_Resume@plt>
    aa57:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    aa5b:	c9                   	leave
    aa5c:	c3                   	ret
    aa5d:	90                   	nop

000000000000aa5e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    aa5e:	55                   	push   %rbp
    aa5f:	48 89 e5             	mov    %rsp,%rbp
    aa62:	48 83 ec 10          	sub    $0x10,%rsp
    aa66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    aa6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa72:	48 89 c7             	mov    %rax,%rdi
    aa75:	e8 24 00 00 00       	call   aa9e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    aa7a:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    aa7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa81:	48 8b 00             	mov    (%rax),%rax
    aa84:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    aa88:	48 89 ce             	mov    %rcx,%rsi
    aa8b:	48 89 c7             	mov    %rax,%rdi
    aa8e:	e8 cf 0e 00 00       	call   b962 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    aa93:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    aa97:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    aa9b:	90                   	nop
    aa9c:	c9                   	leave
    aa9d:	c3                   	ret

000000000000aa9e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    aa9e:	55                   	push   %rbp
    aa9f:	48 89 e5             	mov    %rsp,%rbp
    aaa2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    aaa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aaaa:	5d                   	pop    %rbp
    aaab:	c3                   	ret

000000000000aaac <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    aaac:	55                   	push   %rbp
    aaad:	48 89 e5             	mov    %rsp,%rbp
    aab0:	48 83 ec 20          	sub    $0x20,%rsp
    aab4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aab8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aabc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    aac0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aac4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aac8:	48 89 d6             	mov    %rdx,%rsi
    aacb:	48 89 c7             	mov    %rax,%rdi
    aace:	e8 b8 0e 00 00       	call   b98b <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    aad3:	90                   	nop
    aad4:	c9                   	leave
    aad5:	c3                   	ret

000000000000aad6 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    aad6:	55                   	push   %rbp
    aad7:	48 89 e5             	mov    %rsp,%rbp
    aada:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aade:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    aae2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    aae6:	5d                   	pop    %rbp
    aae7:	c3                   	ret

000000000000aae8 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    aae8:	55                   	push   %rbp
    aae9:	48 89 e5             	mov    %rsp,%rbp
    aaec:	48 83 ec 10          	sub    $0x10,%rsp
    aaf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aaf4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    aaf8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aafc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab00:	48 89 d6             	mov    %rdx,%rsi
    ab03:	48 89 c7             	mov    %rax,%rdi
    ab06:	e8 a7 0e 00 00       	call   b9b2 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    ab0b:	90                   	nop
    ab0c:	c9                   	leave
    ab0d:	c3                   	ret

000000000000ab0e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    ab0e:	55                   	push   %rbp
    ab0f:	48 89 e5             	mov    %rsp,%rbp
    ab12:	48 83 ec 20          	sub    $0x20,%rsp
    ab16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ab1e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    ab22:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ab27:	74 17                	je     ab40 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    ab29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab2d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ab31:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ab35:	48 89 ce             	mov    %rcx,%rsi
    ab38:	48 89 c7             	mov    %rax,%rdi
    ab3b:	e8 81 0e 00 00       	call   b9c1 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    ab40:	90                   	nop
    ab41:	c9                   	leave
    ab42:	c3                   	ret
    ab43:	90                   	nop

000000000000ab44 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    ab44:	55                   	push   %rbp
    ab45:	48 89 e5             	mov    %rsp,%rbp
    ab48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab4c:	90                   	nop
    ab4d:	5d                   	pop    %rbp
    ab4e:	c3                   	ret
    ab4f:	90                   	nop

000000000000ab50 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    ab50:	55                   	push   %rbp
    ab51:	48 89 e5             	mov    %rsp,%rbp
    ab54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab58:	90                   	nop
    ab59:	5d                   	pop    %rbp
    ab5a:	c3                   	ret

000000000000ab5b <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    ab5b:	55                   	push   %rbp
    ab5c:	48 89 e5             	mov    %rsp,%rbp
    ab5f:	53                   	push   %rbx
    ab60:	48 83 ec 28          	sub    $0x28,%rsp
    ab64:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    ab68:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    ab6c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ab70:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ab74:	48 89 d6             	mov    %rdx,%rsi
    ab77:	48 89 c7             	mov    %rax,%rdi
    ab7a:	e8 25 01 00 00       	call   aca4 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    ab7f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ab83:	48 89 c7             	mov    %rax,%rdi
    ab86:	e8 64 0e 00 00       	call   b9ef <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    ab8b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    ab8f:	0f 92 c3             	setb   %bl
    ab92:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ab96:	48 89 c7             	mov    %rax,%rdi
    ab99:	e8 96 f0 ff ff       	call   9c34 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    ab9e:	84 db                	test   %bl,%bl
    aba0:	74 0f                	je     abb1 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    aba2:	48 8d 05 df 47 01 00 	lea    0x147df(%rip),%rax        # 1f388 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    aba9:	48 89 c7             	mov    %rax,%rdi
    abac:	e8 3f 96 ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    abb1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    abb5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    abb9:	c9                   	leave
    abba:	c3                   	ret
    abbb:	90                   	nop

000000000000abbc <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    abbc:	55                   	push   %rbp
    abbd:	48 89 e5             	mov    %rsp,%rbp
    abc0:	53                   	push   %rbx
    abc1:	48 83 ec 28          	sub    $0x28,%rsp
    abc5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    abc9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    abcd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    abd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    abd5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    abd9:	48 89 d6             	mov    %rdx,%rsi
    abdc:	48 89 c7             	mov    %rax,%rdi
    abdf:	e8 4e 0e 00 00       	call   ba32 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    abe4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    abe8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    abec:	48 89 d6             	mov    %rdx,%rsi
    abef:	48 89 c7             	mov    %rax,%rdi
    abf2:	e8 6d 0e 00 00       	call   ba64 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    abf7:	eb 1a                	jmp    ac13 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    abf9:	48 89 c3             	mov    %rax,%rbx
    abfc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac00:	48 89 c7             	mov    %rax,%rdi
    ac03:	e8 28 ea ff ff       	call   9630 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    ac08:	48 89 d8             	mov    %rbx,%rax
    ac0b:	48 89 c7             	mov    %rax,%rdi
    ac0e:	e8 ed 9c ff ff       	call   4900 <_Unwind_Resume@plt>
    ac13:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ac17:	c9                   	leave
    ac18:	c3                   	ret
    ac19:	90                   	nop

000000000000ac1a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    ac1a:	55                   	push   %rbp
    ac1b:	48 89 e5             	mov    %rsp,%rbp
    ac1e:	48 83 ec 10          	sub    $0x10,%rsp
    ac22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    ac2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac2e:	48 89 c7             	mov    %rax,%rdi
    ac31:	e8 24 00 00 00       	call   ac5a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    ac36:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    ac39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac3d:	48 8b 00             	mov    (%rax),%rax
    ac40:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ac44:	48 89 ce             	mov    %rcx,%rsi
    ac47:	48 89 c7             	mov    %rax,%rdi
    ac4a:	e8 75 0e 00 00       	call   bac4 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    ac4f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ac53:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    ac57:	90                   	nop
    ac58:	c9                   	leave
    ac59:	c3                   	ret

000000000000ac5a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    ac5a:	55                   	push   %rbp
    ac5b:	48 89 e5             	mov    %rsp,%rbp
    ac5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    ac62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac66:	5d                   	pop    %rbp
    ac67:	c3                   	ret

000000000000ac68 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    ac68:	55                   	push   %rbp
    ac69:	48 89 e5             	mov    %rsp,%rbp
    ac6c:	48 83 ec 20          	sub    $0x20,%rsp
    ac70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac74:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ac78:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    ac7c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ac80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac84:	48 89 d6             	mov    %rdx,%rsi
    ac87:	48 89 c7             	mov    %rax,%rdi
    ac8a:	e8 5e 0e 00 00       	call   baed <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    ac8f:	90                   	nop
    ac90:	c9                   	leave
    ac91:	c3                   	ret

000000000000ac92 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    ac92:	55                   	push   %rbp
    ac93:	48 89 e5             	mov    %rsp,%rbp
    ac96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac9a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    ac9e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    aca2:	5d                   	pop    %rbp
    aca3:	c3                   	ret

000000000000aca4 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    aca4:	55                   	push   %rbp
    aca5:	48 89 e5             	mov    %rsp,%rbp
    aca8:	48 83 ec 10          	sub    $0x10,%rsp
    acac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    acb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    acb4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    acb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acbc:	48 89 d6             	mov    %rdx,%rsi
    acbf:	48 89 c7             	mov    %rax,%rdi
    acc2:	e8 4d 0e 00 00       	call   bb14 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    acc7:	90                   	nop
    acc8:	c9                   	leave
    acc9:	c3                   	ret

000000000000acca <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    acca:	55                   	push   %rbp
    accb:	48 89 e5             	mov    %rsp,%rbp
    acce:	48 83 ec 20          	sub    $0x20,%rsp
    acd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    acd6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    acda:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    acde:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ace3:	74 17                	je     acfc <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    ace5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ace9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    aced:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    acf1:	48 89 ce             	mov    %rcx,%rsi
    acf4:	48 89 c7             	mov    %rax,%rdi
    acf7:	e8 27 0e 00 00       	call   bb23 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    acfc:	90                   	nop
    acfd:	c9                   	leave
    acfe:	c3                   	ret
    acff:	90                   	nop

000000000000ad00 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    ad00:	55                   	push   %rbp
    ad01:	48 89 e5             	mov    %rsp,%rbp
    ad04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad08:	90                   	nop
    ad09:	5d                   	pop    %rbp
    ad0a:	c3                   	ret
    ad0b:	90                   	nop

000000000000ad0c <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    ad0c:	55                   	push   %rbp
    ad0d:	48 89 e5             	mov    %rsp,%rbp
    ad10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad14:	90                   	nop
    ad15:	5d                   	pop    %rbp
    ad16:	c3                   	ret

000000000000ad17 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    ad17:	55                   	push   %rbp
    ad18:	48 89 e5             	mov    %rsp,%rbp
    ad1b:	53                   	push   %rbx
    ad1c:	48 83 ec 28          	sub    $0x28,%rsp
    ad20:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    ad24:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    ad28:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ad2c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ad30:	48 89 d6             	mov    %rdx,%rsi
    ad33:	48 89 c7             	mov    %rax,%rdi
    ad36:	e8 d7 01 00 00       	call   af12 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    ad3b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ad3f:	48 89 c7             	mov    %rax,%rdi
    ad42:	e8 0a 0e 00 00       	call   bb51 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>
    ad47:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    ad4b:	0f 92 c3             	setb   %bl
    ad4e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ad52:	48 89 c7             	mov    %rax,%rdi
    ad55:	e8 76 f0 ff ff       	call   9dd0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    ad5a:	84 db                	test   %bl,%bl
    ad5c:	74 0f                	je     ad6d <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_+0x56>
	  __throw_length_error(
    ad5e:	48 8d 05 23 46 01 00 	lea    0x14623(%rip),%rax        # 1f388 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    ad65:	48 89 c7             	mov    %rax,%rdi
    ad68:	e8 83 94 ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    ad6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    ad71:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ad75:	c9                   	leave
    ad76:	c3                   	ret
    ad77:	90                   	nop

000000000000ad78 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    ad78:	55                   	push   %rbp
    ad79:	48 89 e5             	mov    %rsp,%rbp
    ad7c:	53                   	push   %rbx
    ad7d:	48 83 ec 28          	sub    $0x28,%rsp
    ad81:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ad85:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ad89:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    ad8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad91:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ad95:	48 89 d6             	mov    %rdx,%rsi
    ad98:	48 89 c7             	mov    %rax,%rdi
    ad9b:	e8 f4 0d 00 00       	call   bb94 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>
      { _M_create_storage(__n); }
    ada0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ada4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ada8:	48 89 d6             	mov    %rdx,%rsi
    adab:	48 89 c7             	mov    %rax,%rdi
    adae:	e8 13 0e 00 00       	call   bbc6 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>
    adb3:	eb 1a                	jmp    adcf <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x57>
    adb5:	48 89 c3             	mov    %rax,%rbx
    adb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    adbc:	48 89 c7             	mov    %rax,%rdi
    adbf:	e8 88 e8 ff ff       	call   964c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    adc4:	48 89 d8             	mov    %rbx,%rax
    adc7:	48 89 c7             	mov    %rax,%rdi
    adca:	e8 31 9b ff ff       	call   4900 <_Unwind_Resume@plt>
    adcf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    add3:	c9                   	leave
    add4:	c3                   	ret
    add5:	90                   	nop

000000000000add6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    add6:	55                   	push   %rbp
    add7:	48 89 e5             	mov    %rsp,%rbp
    adda:	48 83 ec 10          	sub    $0x10,%rsp
    adde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ade2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    ade6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adea:	48 89 c7             	mov    %rax,%rdi
    aded:	e8 24 00 00 00       	call   ae16 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    adf2:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    adf5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adf9:	48 8b 00             	mov    (%rax),%rax
    adfc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ae00:	48 89 ce             	mov    %rcx,%rsi
    ae03:	48 89 c7             	mov    %rax,%rdi
    ae06:	e8 1c 0e 00 00       	call   bc27 <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    ae0b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ae0f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    ae13:	90                   	nop
    ae14:	c9                   	leave
    ae15:	c3                   	ret

000000000000ae16 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    ae16:	55                   	push   %rbp
    ae17:	48 89 e5             	mov    %rsp,%rbp
    ae1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    ae1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae22:	5d                   	pop    %rbp
    ae23:	c3                   	ret

000000000000ae24 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    ae24:	55                   	push   %rbp
    ae25:	48 89 e5             	mov    %rsp,%rbp
    ae28:	48 83 ec 20          	sub    $0x20,%rsp
    ae2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae30:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ae34:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    ae38:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ae3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae40:	48 89 d6             	mov    %rdx,%rsi
    ae43:	48 89 c7             	mov    %rax,%rdi
    ae46:	e8 05 0e 00 00       	call   bc50 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>
    }
    ae4b:	90                   	nop
    ae4c:	c9                   	leave
    ae4d:	c3                   	ret

000000000000ae4e <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    ae4e:	55                   	push   %rbp
    ae4f:	48 89 e5             	mov    %rsp,%rbp
    ae52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae56:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    ae5a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ae5e:	48 8b 10             	mov    (%rax),%rdx
    ae61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae65:	48 89 10             	mov    %rdx,(%rax)
    ae68:	90                   	nop
    ae69:	5d                   	pop    %rbp
    ae6a:	c3                   	ret
    ae6b:	90                   	nop

000000000000ae6c <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    ae6c:	55                   	push   %rbp
    ae6d:	48 89 e5             	mov    %rsp,%rbp
    ae70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    ae74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae78:	5d                   	pop    %rbp
    ae79:	c3                   	ret

000000000000ae7a <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    ae7a:	55                   	push   %rbp
    ae7b:	48 89 e5             	mov    %rsp,%rbp
    ae7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    ae82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae86:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    ae8a:	5d                   	pop    %rbp
    ae8b:	c3                   	ret

000000000000ae8c <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    ae8c:	55                   	push   %rbp
    ae8d:	48 89 e5             	mov    %rsp,%rbp
    ae90:	48 83 ec 10          	sub    $0x10,%rsp
    ae94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    ae98:	e8 70 a0 ff ff       	call   4f0d <_ZSt23__is_constant_evaluatedv>
    ae9d:	84 c0                	test   %al,%al
    ae9f:	74 1a                	je     aebb <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    aea1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aea5:	48 89 c7             	mov    %rax,%rdi
    aea8:	e8 cd ff ff ff       	call   ae7a <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    aead:	83 f0 01             	xor    $0x1,%eax
    aeb0:	84 c0                	test   %al,%al
    aeb2:	74 07                	je     aebb <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    aeb4:	b8 01 00 00 00       	mov    $0x1,%eax
    aeb9:	eb 05                	jmp    aec0 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x34>
    aebb:	b8 00 00 00 00       	mov    $0x0,%eax
    aec0:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    aec2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aec6:	48 89 c7             	mov    %rax,%rdi
    aec9:	e8 a8 0d 00 00       	call   bc76 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>
      }
    aece:	c9                   	leave
    aecf:	c3                   	ret

000000000000aed0 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>:
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    aed0:	55                   	push   %rbp
    aed1:	48 89 e5             	mov    %rsp,%rbp
    aed4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    aed8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aedc:	5d                   	pop    %rbp
    aedd:	c3                   	ret

000000000000aede <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    aede:	55                   	push   %rbp
    aedf:	48 89 e5             	mov    %rsp,%rbp
    aee2:	53                   	push   %rbx
    aee3:	48 83 ec 18          	sub    $0x18,%rsp
    aee7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aeeb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  static_cast<_Dp*>(this)->_M_payload._M_construct(
    aeef:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    aef3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    aef7:	48 89 c7             	mov    %rax,%rdi
    aefa:	e8 d1 ff ff ff       	call   aed0 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    aeff:	48 89 c6             	mov    %rax,%rsi
    af02:	48 89 df             	mov    %rbx,%rdi
    af05:	e8 7a 0d 00 00       	call   bc84 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>
	}
    af0a:	90                   	nop
    af0b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    af0f:	c9                   	leave
    af10:	c3                   	ret
    af11:	90                   	nop

000000000000af12 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    af12:	55                   	push   %rbp
    af13:	48 89 e5             	mov    %rsp,%rbp
    af16:	48 83 ec 10          	sub    $0x10,%rsp
    af1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af1e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    af22:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    af26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af2a:	48 89 d6             	mov    %rdx,%rsi
    af2d:	48 89 c7             	mov    %rax,%rdi
    af30:	e8 95 0d 00 00       	call   bcca <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>
    af35:	90                   	nop
    af36:	c9                   	leave
    af37:	c3                   	ret

000000000000af38 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>:
      _M_deallocate(pointer __p, size_t __n)
    af38:	55                   	push   %rbp
    af39:	48 89 e5             	mov    %rsp,%rbp
    af3c:	48 83 ec 20          	sub    $0x20,%rsp
    af40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af44:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    af48:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    af4c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    af51:	74 17                	je     af6a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    af53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af57:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    af5b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    af5f:	48 89 ce             	mov    %rcx,%rsi
    af62:	48 89 c7             	mov    %rax,%rdi
    af65:	e8 6f 0d 00 00       	call   bcd9 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>
      }
    af6a:	90                   	nop
    af6b:	c9                   	leave
    af6c:	c3                   	ret
    af6d:	90                   	nop

000000000000af6e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    af6e:	55                   	push   %rbp
    af6f:	48 89 e5             	mov    %rsp,%rbp
    af72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af76:	90                   	nop
    af77:	5d                   	pop    %rbp
    af78:	c3                   	ret
    af79:	90                   	nop

000000000000af7a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    af7a:	55                   	push   %rbp
    af7b:	48 89 e5             	mov    %rsp,%rbp
    af7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af82:	90                   	nop
    af83:	5d                   	pop    %rbp
    af84:	c3                   	ret

000000000000af85 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    af85:	55                   	push   %rbp
    af86:	48 89 e5             	mov    %rsp,%rbp
    af89:	53                   	push   %rbx
    af8a:	48 83 ec 28          	sub    $0x28,%rsp
    af8e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    af92:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    af96:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    af9a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    af9e:	48 89 d6             	mov    %rdx,%rsi
    afa1:	48 89 c7             	mov    %rax,%rdi
    afa4:	e8 25 01 00 00       	call   b0ce <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    afa9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    afad:	48 89 c7             	mov    %rax,%rdi
    afb0:	e8 52 0d 00 00       	call   bd07 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>
    afb5:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    afb9:	0f 92 c3             	setb   %bl
    afbc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    afc0:	48 89 c7             	mov    %rax,%rdi
    afc3:	e8 b8 f0 ff ff       	call   a080 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    afc8:	84 db                	test   %bl,%bl
    afca:	74 0f                	je     afdb <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    afcc:	48 8d 05 b5 43 01 00 	lea    0x143b5(%rip),%rax        # 1f388 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    afd3:	48 89 c7             	mov    %rax,%rdi
    afd6:	e8 15 92 ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    afdb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    afdf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    afe3:	c9                   	leave
    afe4:	c3                   	ret
    afe5:	90                   	nop

000000000000afe6 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    afe6:	55                   	push   %rbp
    afe7:	48 89 e5             	mov    %rsp,%rbp
    afea:	53                   	push   %rbx
    afeb:	48 83 ec 28          	sub    $0x28,%rsp
    afef:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aff3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    aff7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    affb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    afff:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    b003:	48 89 d6             	mov    %rdx,%rsi
    b006:	48 89 c7             	mov    %rax,%rdi
    b009:	e8 3c 0d 00 00       	call   bd4a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    b00e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b012:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b016:	48 89 d6             	mov    %rdx,%rsi
    b019:	48 89 c7             	mov    %rax,%rdi
    b01c:	e8 5b 0d 00 00       	call   bd7c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>
    b021:	eb 1a                	jmp    b03d <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x57>
    b023:	48 89 c3             	mov    %rax,%rbx
    b026:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b02a:	48 89 c7             	mov    %rax,%rdi
    b02d:	e8 36 e6 ff ff       	call   9668 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    b032:	48 89 d8             	mov    %rbx,%rax
    b035:	48 89 c7             	mov    %rax,%rdi
    b038:	e8 c3 98 ff ff       	call   4900 <_Unwind_Resume@plt>
    b03d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b041:	c9                   	leave
    b042:	c3                   	ret
    b043:	90                   	nop

000000000000b044 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    b044:	55                   	push   %rbp
    b045:	48 89 e5             	mov    %rsp,%rbp
    b048:	48 83 ec 10          	sub    $0x10,%rsp
    b04c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b050:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    b054:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b058:	48 89 c7             	mov    %rax,%rdi
    b05b:	e8 24 00 00 00       	call   b084 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    b060:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    b063:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b067:	48 8b 00             	mov    (%rax),%rax
    b06a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b06e:	48 89 ce             	mov    %rcx,%rsi
    b071:	48 89 c7             	mov    %rax,%rdi
    b074:	e8 59 0d 00 00       	call   bdd2 <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    b079:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b07d:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    b081:	90                   	nop
    b082:	c9                   	leave
    b083:	c3                   	ret

000000000000b084 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    b084:	55                   	push   %rbp
    b085:	48 89 e5             	mov    %rsp,%rbp
    b088:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    b08c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b090:	5d                   	pop    %rbp
    b091:	c3                   	ret

000000000000b092 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    b092:	55                   	push   %rbp
    b093:	48 89 e5             	mov    %rsp,%rbp
    b096:	48 83 ec 20          	sub    $0x20,%rsp
    b09a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b09e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b0a2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    b0a6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b0aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0ae:	48 89 d6             	mov    %rdx,%rsi
    b0b1:	48 89 c7             	mov    %rax,%rdi
    b0b4:	e8 42 0d 00 00       	call   bdfb <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>
    }
    b0b9:	90                   	nop
    b0ba:	c9                   	leave
    b0bb:	c3                   	ret

000000000000b0bc <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    b0bc:	55                   	push   %rbp
    b0bd:	48 89 e5             	mov    %rsp,%rbp
    b0c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    b0c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b0cc:	5d                   	pop    %rbp
    b0cd:	c3                   	ret

000000000000b0ce <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    b0ce:	55                   	push   %rbp
    b0cf:	48 89 e5             	mov    %rsp,%rbp
    b0d2:	48 83 ec 10          	sub    $0x10,%rsp
    b0d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    b0de:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b0e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0e6:	48 89 d6             	mov    %rdx,%rsi
    b0e9:	48 89 c7             	mov    %rax,%rdi
    b0ec:	e8 31 0d 00 00       	call   be22 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>
    b0f1:	90                   	nop
    b0f2:	c9                   	leave
    b0f3:	c3                   	ret

000000000000b0f4 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    b0f4:	55                   	push   %rbp
    b0f5:	48 89 e5             	mov    %rsp,%rbp
    b0f8:	48 83 ec 20          	sub    $0x20,%rsp
    b0fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b100:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b104:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    b108:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b10d:	74 17                	je     b126 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    b10f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b113:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b117:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b11b:	48 89 ce             	mov    %rcx,%rsi
    b11e:	48 89 c7             	mov    %rax,%rdi
    b121:	e8 0b 0d 00 00       	call   be31 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>
      }
    b126:	90                   	nop
    b127:	c9                   	leave
    b128:	c3                   	ret
    b129:	90                   	nop

000000000000b12a <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    b12a:	55                   	push   %rbp
    b12b:	48 89 e5             	mov    %rsp,%rbp
    b12e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b132:	90                   	nop
    b133:	5d                   	pop    %rbp
    b134:	c3                   	ret
    b135:	90                   	nop

000000000000b136 <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    b136:	55                   	push   %rbp
    b137:	48 89 e5             	mov    %rsp,%rbp
    b13a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b13e:	90                   	nop
    b13f:	5d                   	pop    %rbp
    b140:	c3                   	ret

000000000000b141 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    b141:	55                   	push   %rbp
    b142:	48 89 e5             	mov    %rsp,%rbp
    b145:	53                   	push   %rbx
    b146:	48 83 ec 28          	sub    $0x28,%rsp
    b14a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b14e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    b152:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b156:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    b15a:	48 89 d6             	mov    %rdx,%rsi
    b15d:	48 89 c7             	mov    %rax,%rdi
    b160:	e8 25 01 00 00       	call   b28a <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    b165:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    b169:	48 89 c7             	mov    %rax,%rdi
    b16c:	e8 ee 0c 00 00       	call   be5f <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>
    b171:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    b175:	0f 92 c3             	setb   %bl
    b178:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    b17c:	48 89 c7             	mov    %rax,%rdi
    b17f:	e8 60 f0 ff ff       	call   a1e4 <_ZNSaI16VkPresentModeKHRED1Ev>
    b184:	84 db                	test   %bl,%bl
    b186:	74 0f                	je     b197 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    b188:	48 8d 05 f9 41 01 00 	lea    0x141f9(%rip),%rax        # 1f388 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    b18f:	48 89 c7             	mov    %rax,%rdi
    b192:	e8 59 90 ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    b197:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    b19b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b19f:	c9                   	leave
    b1a0:	c3                   	ret
    b1a1:	90                   	nop

000000000000b1a2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    b1a2:	55                   	push   %rbp
    b1a3:	48 89 e5             	mov    %rsp,%rbp
    b1a6:	53                   	push   %rbx
    b1a7:	48 83 ec 28          	sub    $0x28,%rsp
    b1ab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b1af:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b1b3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    b1b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b1bb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    b1bf:	48 89 d6             	mov    %rdx,%rsi
    b1c2:	48 89 c7             	mov    %rax,%rdi
    b1c5:	e8 d8 0c 00 00       	call   bea2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    b1ca:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b1ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b1d2:	48 89 d6             	mov    %rdx,%rsi
    b1d5:	48 89 c7             	mov    %rax,%rdi
    b1d8:	e8 f7 0c 00 00       	call   bed4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>
    b1dd:	eb 1a                	jmp    b1f9 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x57>
    b1df:	48 89 c3             	mov    %rax,%rbx
    b1e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b1e6:	48 89 c7             	mov    %rax,%rdi
    b1e9:	e8 96 e4 ff ff       	call   9684 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    b1ee:	48 89 d8             	mov    %rbx,%rax
    b1f1:	48 89 c7             	mov    %rax,%rdi
    b1f4:	e8 07 97 ff ff       	call   4900 <_Unwind_Resume@plt>
    b1f9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b1fd:	c9                   	leave
    b1fe:	c3                   	ret
    b1ff:	90                   	nop

000000000000b200 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    b200:	55                   	push   %rbp
    b201:	48 89 e5             	mov    %rsp,%rbp
    b204:	48 83 ec 10          	sub    $0x10,%rsp
    b208:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b20c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    b210:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b214:	48 89 c7             	mov    %rax,%rdi
    b217:	e8 24 00 00 00       	call   b240 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    b21c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    b21f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b223:	48 8b 00             	mov    (%rax),%rax
    b226:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b22a:	48 89 ce             	mov    %rcx,%rsi
    b22d:	48 89 c7             	mov    %rax,%rdi
    b230:	e8 f5 0c 00 00       	call   bf2a <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    b235:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b239:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    b23d:	90                   	nop
    b23e:	c9                   	leave
    b23f:	c3                   	ret

000000000000b240 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    b240:	55                   	push   %rbp
    b241:	48 89 e5             	mov    %rsp,%rbp
    b244:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    b248:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b24c:	5d                   	pop    %rbp
    b24d:	c3                   	ret

000000000000b24e <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    b24e:	55                   	push   %rbp
    b24f:	48 89 e5             	mov    %rsp,%rbp
    b252:	48 83 ec 20          	sub    $0x20,%rsp
    b256:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b25a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b25e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    b262:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b266:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b26a:	48 89 d6             	mov    %rdx,%rsi
    b26d:	48 89 c7             	mov    %rax,%rdi
    b270:	e8 de 0c 00 00       	call   bf53 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>
    }
    b275:	90                   	nop
    b276:	c9                   	leave
    b277:	c3                   	ret

000000000000b278 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    b278:	55                   	push   %rbp
    b279:	48 89 e5             	mov    %rsp,%rbp
    b27c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b280:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    b284:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b288:	5d                   	pop    %rbp
    b289:	c3                   	ret

000000000000b28a <_ZNSaI16VkPresentModeKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    b28a:	55                   	push   %rbp
    b28b:	48 89 e5             	mov    %rsp,%rbp
    b28e:	48 83 ec 10          	sub    $0x10,%rsp
    b292:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b296:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    b29a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b29e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2a2:	48 89 d6             	mov    %rdx,%rsi
    b2a5:	48 89 c7             	mov    %rax,%rdi
    b2a8:	e8 cd 0c 00 00       	call   bf7a <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>
    b2ad:	90                   	nop
    b2ae:	c9                   	leave
    b2af:	c3                   	ret

000000000000b2b0 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    b2b0:	55                   	push   %rbp
    b2b1:	48 89 e5             	mov    %rsp,%rbp
    b2b4:	48 83 ec 20          	sub    $0x20,%rsp
    b2b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b2bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b2c0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    b2c4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b2c9:	74 17                	je     b2e2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    b2cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2cf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b2d3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b2d7:	48 89 ce             	mov    %rcx,%rsi
    b2da:	48 89 c7             	mov    %rax,%rdi
    b2dd:	e8 a7 0c 00 00       	call   bf89 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>
      }
    b2e2:	90                   	nop
    b2e3:	c9                   	leave
    b2e4:	c3                   	ret
    b2e5:	90                   	nop

000000000000b2e6 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    b2e6:	55                   	push   %rbp
    b2e7:	48 89 e5             	mov    %rsp,%rbp
    b2ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b2ee:	90                   	nop
    b2ef:	5d                   	pop    %rbp
    b2f0:	c3                   	ret
    b2f1:	90                   	nop

000000000000b2f2 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    b2f2:	55                   	push   %rbp
    b2f3:	48 89 e5             	mov    %rsp,%rbp
    b2f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b2fa:	90                   	nop
    b2fb:	5d                   	pop    %rbp
    b2fc:	c3                   	ret

000000000000b2fd <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    b2fd:	55                   	push   %rbp
    b2fe:	48 89 e5             	mov    %rsp,%rbp
    b301:	53                   	push   %rbx
    b302:	48 83 ec 28          	sub    $0x28,%rsp
    b306:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b30a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    b30e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b312:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    b316:	48 89 d6             	mov    %rdx,%rsi
    b319:	48 89 c7             	mov    %rax,%rdi
    b31c:	e8 25 01 00 00       	call   b446 <_ZNSaIP9VkImage_TEC1ERKS1_>
    b321:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    b325:	48 89 c7             	mov    %rax,%rdi
    b328:	e8 8a 0c 00 00       	call   bfb7 <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>
    b32d:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    b331:	0f 92 c3             	setb   %bl
    b334:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    b338:	48 89 c7             	mov    %rax,%rdi
    b33b:	e8 08 f0 ff ff       	call   a348 <_ZNSaIP9VkImage_TED1Ev>
    b340:	84 db                	test   %bl,%bl
    b342:	74 0f                	je     b353 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    b344:	48 8d 05 3d 40 01 00 	lea    0x1403d(%rip),%rax        # 1f388 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    b34b:	48 89 c7             	mov    %rax,%rdi
    b34e:	e8 9d 8e ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    b353:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    b357:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b35b:	c9                   	leave
    b35c:	c3                   	ret
    b35d:	90                   	nop

000000000000b35e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    b35e:	55                   	push   %rbp
    b35f:	48 89 e5             	mov    %rsp,%rbp
    b362:	53                   	push   %rbx
    b363:	48 83 ec 28          	sub    $0x28,%rsp
    b367:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b36b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b36f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    b373:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b377:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    b37b:	48 89 d6             	mov    %rdx,%rsi
    b37e:	48 89 c7             	mov    %rax,%rdi
    b381:	e8 74 0c 00 00       	call   bffa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    b386:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b38a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b38e:	48 89 d6             	mov    %rdx,%rsi
    b391:	48 89 c7             	mov    %rax,%rdi
    b394:	e8 93 0c 00 00       	call   c02c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>
    b399:	eb 1a                	jmp    b3b5 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_+0x57>
    b39b:	48 89 c3             	mov    %rax,%rbx
    b39e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b3a2:	48 89 c7             	mov    %rax,%rdi
    b3a5:	e8 f6 e2 ff ff       	call   96a0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    b3aa:	48 89 d8             	mov    %rbx,%rax
    b3ad:	48 89 c7             	mov    %rax,%rdi
    b3b0:	e8 4b 95 ff ff       	call   4900 <_Unwind_Resume@plt>
    b3b5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b3b9:	c9                   	leave
    b3ba:	c3                   	ret
    b3bb:	90                   	nop

000000000000b3bc <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    b3bc:	55                   	push   %rbp
    b3bd:	48 89 e5             	mov    %rsp,%rbp
    b3c0:	48 83 ec 10          	sub    $0x10,%rsp
    b3c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b3c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    b3cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3d0:	48 89 c7             	mov    %rax,%rdi
    b3d3:	e8 24 00 00 00       	call   b3fc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    b3d8:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    b3db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3df:	48 8b 00             	mov    (%rax),%rax
    b3e2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b3e6:	48 89 ce             	mov    %rcx,%rsi
    b3e9:	48 89 c7             	mov    %rax,%rdi
    b3ec:	e8 91 0c 00 00       	call   c082 <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    b3f1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b3f5:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    b3f9:	90                   	nop
    b3fa:	c9                   	leave
    b3fb:	c3                   	ret

000000000000b3fc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    b3fc:	55                   	push   %rbp
    b3fd:	48 89 e5             	mov    %rsp,%rbp
    b400:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    b404:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b408:	5d                   	pop    %rbp
    b409:	c3                   	ret

000000000000b40a <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    b40a:	55                   	push   %rbp
    b40b:	48 89 e5             	mov    %rsp,%rbp
    b40e:	48 83 ec 20          	sub    $0x20,%rsp
    b412:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b416:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b41a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    b41e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b422:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b426:	48 89 d6             	mov    %rdx,%rsi
    b429:	48 89 c7             	mov    %rax,%rdi
    b42c:	e8 7a 0c 00 00       	call   c0ab <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>
    }
    b431:	90                   	nop
    b432:	c9                   	leave
    b433:	c3                   	ret

000000000000b434 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    b434:	55                   	push   %rbp
    b435:	48 89 e5             	mov    %rsp,%rbp
    b438:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b43c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    b440:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b444:	5d                   	pop    %rbp
    b445:	c3                   	ret

000000000000b446 <_ZNSaIP9VkImage_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    b446:	55                   	push   %rbp
    b447:	48 89 e5             	mov    %rsp,%rbp
    b44a:	48 83 ec 10          	sub    $0x10,%rsp
    b44e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b452:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    b456:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b45a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b45e:	48 89 d6             	mov    %rdx,%rsi
    b461:	48 89 c7             	mov    %rax,%rdi
    b464:	e8 69 0c 00 00       	call   c0d2 <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>
    b469:	90                   	nop
    b46a:	c9                   	leave
    b46b:	c3                   	ret

000000000000b46c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    b46c:	55                   	push   %rbp
    b46d:	48 89 e5             	mov    %rsp,%rbp
    b470:	48 83 ec 20          	sub    $0x20,%rsp
    b474:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b478:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b47c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    b480:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b485:	74 17                	je     b49e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    b487:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b48b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b48f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b493:	48 89 ce             	mov    %rcx,%rsi
    b496:	48 89 c7             	mov    %rax,%rdi
    b499:	e8 43 0c 00 00       	call   c0e1 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>
      }
    b49e:	90                   	nop
    b49f:	c9                   	leave
    b4a0:	c3                   	ret

000000000000b4a1 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    b4a1:	55                   	push   %rbp
    b4a2:	48 89 e5             	mov    %rsp,%rbp
    b4a5:	48 83 ec 20          	sub    $0x20,%rsp
    b4a9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    b4ad:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    b4b4:	03 3f 00 
    b4b7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    b4bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4bf:	48 89 c7             	mov    %rax,%rdi
    b4c2:	e8 48 0c 00 00       	call   c10f <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
    b4c7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    b4cb:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    b4cf:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b4d3:	48 89 d6             	mov    %rdx,%rsi
    b4d6:	48 89 c7             	mov    %rax,%rdi
    b4d9:	e8 df a7 ff ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    b4de:	48 8b 00             	mov    (%rax),%rax
      }
    b4e1:	c9                   	leave
    b4e2:	c3                   	ret
    b4e3:	90                   	nop

000000000000b4e4 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    b4e4:	55                   	push   %rbp
    b4e5:	48 89 e5             	mov    %rsp,%rbp
    b4e8:	48 83 ec 10          	sub    $0x10,%rsp
    b4ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b4f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    b4f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b4f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4fc:	48 89 d6             	mov    %rdx,%rsi
    b4ff:	48 89 c7             	mov    %rax,%rdi
    b502:	e8 e9 f0 ff ff       	call   a5f0 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    b507:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b50b:	48 89 c7             	mov    %rax,%rdi
    b50e:	e8 17 0c 00 00       	call   c12a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    b513:	90                   	nop
    b514:	c9                   	leave
    b515:	c3                   	ret

000000000000b516 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    b516:	55                   	push   %rbp
    b517:	48 89 e5             	mov    %rsp,%rbp
    b51a:	48 83 ec 10          	sub    $0x10,%rsp
    b51e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b522:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    b526:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b52a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b52e:	48 89 d6             	mov    %rdx,%rsi
    b531:	48 89 c7             	mov    %rax,%rdi
    b534:	e8 1f 0c 00 00       	call   c158 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
    b539:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b53d:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    b540:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b544:	48 8b 10             	mov    (%rax),%rdx
    b547:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b54b:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    b54f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b553:	48 8b 08             	mov    (%rax),%rcx
    b556:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b55a:	48 89 d0             	mov    %rdx,%rax
    b55d:	48 c1 e0 06          	shl    $0x6,%rax
    b561:	48 01 d0             	add    %rdx,%rax
    b564:	48 c1 e0 03          	shl    $0x3,%rax
    b568:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    b56c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b570:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    b574:	90                   	nop
    b575:	c9                   	leave
    b576:	c3                   	ret

000000000000b577 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    b577:	55                   	push   %rbp
    b578:	48 89 e5             	mov    %rsp,%rbp
    b57b:	48 83 ec 20          	sub    $0x20,%rsp
    b57f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b583:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b587:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    b58b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b58f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b593:	48 89 d6             	mov    %rdx,%rsi
    b596:	48 89 c7             	mov    %rax,%rdi
    b599:	e8 ed 0b 00 00       	call   c18b <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
    b59e:	c9                   	leave
    b59f:	c3                   	ret

000000000000b5a0 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    b5a0:	55                   	push   %rbp
    b5a1:	48 89 e5             	mov    %rsp,%rbp
    b5a4:	48 83 ec 10          	sub    $0x10,%rsp
    b5a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b5ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    b5b0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b5b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5b8:	48 89 d6             	mov    %rdx,%rsi
    b5bb:	48 89 c7             	mov    %rax,%rdi
    b5be:	e8 f1 0b 00 00       	call   c1b4 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
    b5c3:	90                   	nop
    b5c4:	c9                   	leave
    b5c5:	c3                   	ret

000000000000b5c6 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    b5c6:	55                   	push   %rbp
    b5c7:	48 89 e5             	mov    %rsp,%rbp
    b5ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b5ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b5d2:	90                   	nop
    b5d3:	5d                   	pop    %rbp
    b5d4:	c3                   	ret

000000000000b5d5 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    b5d5:	55                   	push   %rbp
    b5d6:	48 89 e5             	mov    %rsp,%rbp
    b5d9:	48 83 ec 20          	sub    $0x20,%rsp
    b5dd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b5e1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b5e5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    b5e9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b5ed:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b5f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5f5:	48 89 ce             	mov    %rcx,%rsi
    b5f8:	48 89 c7             	mov    %rax,%rdi
    b5fb:	e8 c4 0b 00 00       	call   c1c4 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
    b600:	90                   	nop
    b601:	c9                   	leave
    b602:	c3                   	ret

000000000000b603 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    b603:	55                   	push   %rbp
    b604:	48 89 e5             	mov    %rsp,%rbp
    b607:	48 83 ec 20          	sub    $0x20,%rsp
    b60b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    b60f:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    b616:	07 7e 00 
    b619:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    b61d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b621:	48 89 c7             	mov    %rax,%rdi
    b624:	e8 d5 0b 00 00       	call   c1fe <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    b629:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    b62d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    b631:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b635:	48 89 d6             	mov    %rdx,%rsi
    b638:	48 89 c7             	mov    %rax,%rdi
    b63b:	e8 7d a6 ff ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    b640:	48 8b 00             	mov    (%rax),%rax
      }
    b643:	c9                   	leave
    b644:	c3                   	ret
    b645:	90                   	nop

000000000000b646 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    b646:	55                   	push   %rbp
    b647:	48 89 e5             	mov    %rsp,%rbp
    b64a:	48 83 ec 10          	sub    $0x10,%rsp
    b64e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b652:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    b656:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b65a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b65e:	48 89 d6             	mov    %rdx,%rsi
    b661:	48 89 c7             	mov    %rax,%rdi
    b664:	e8 43 f1 ff ff       	call   a7ac <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    b669:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b66d:	48 89 c7             	mov    %rax,%rdi
    b670:	e8 a3 0b 00 00       	call   c218 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    b675:	90                   	nop
    b676:	c9                   	leave
    b677:	c3                   	ret

000000000000b678 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    b678:	55                   	push   %rbp
    b679:	48 89 e5             	mov    %rsp,%rbp
    b67c:	48 83 ec 10          	sub    $0x10,%rsp
    b680:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b684:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    b688:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b68c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b690:	48 89 d6             	mov    %rdx,%rsi
    b693:	48 89 c7             	mov    %rax,%rdi
    b696:	e8 ab 0b 00 00       	call   c246 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    b69b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b69f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    b6a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6a6:	48 8b 10             	mov    (%rax),%rdx
    b6a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6ad:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    b6b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6b5:	48 8b 08             	mov    (%rax),%rcx
    b6b8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b6bc:	48 89 d0             	mov    %rdx,%rax
    b6bf:	48 c1 e0 06          	shl    $0x6,%rax
    b6c3:	48 01 d0             	add    %rdx,%rax
    b6c6:	48 c1 e0 02          	shl    $0x2,%rax
    b6ca:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    b6ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6d2:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    b6d6:	90                   	nop
    b6d7:	c9                   	leave
    b6d8:	c3                   	ret

000000000000b6d9 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    b6d9:	55                   	push   %rbp
    b6da:	48 89 e5             	mov    %rsp,%rbp
    b6dd:	48 83 ec 20          	sub    $0x20,%rsp
    b6e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b6e5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b6e9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    b6ed:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b6f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6f5:	48 89 d6             	mov    %rdx,%rsi
    b6f8:	48 89 c7             	mov    %rax,%rdi
    b6fb:	e8 79 0b 00 00       	call   c279 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    b700:	c9                   	leave
    b701:	c3                   	ret

000000000000b702 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    b702:	55                   	push   %rbp
    b703:	48 89 e5             	mov    %rsp,%rbp
    b706:	48 83 ec 10          	sub    $0x10,%rsp
    b70a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b70e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    b712:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b716:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b71a:	48 89 d6             	mov    %rdx,%rsi
    b71d:	48 89 c7             	mov    %rax,%rdi
    b720:	e8 7d 0b 00 00       	call   c2a2 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    b725:	90                   	nop
    b726:	c9                   	leave
    b727:	c3                   	ret

000000000000b728 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
    b728:	55                   	push   %rbp
    b729:	48 89 e5             	mov    %rsp,%rbp
    b72c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b730:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b734:	90                   	nop
    b735:	5d                   	pop    %rbp
    b736:	c3                   	ret

000000000000b737 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    b737:	55                   	push   %rbp
    b738:	48 89 e5             	mov    %rsp,%rbp
    b73b:	48 83 ec 20          	sub    $0x20,%rsp
    b73f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b743:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b747:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    b74b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b74f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b753:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b757:	48 89 ce             	mov    %rcx,%rsi
    b75a:	48 89 c7             	mov    %rax,%rdi
    b75d:	e8 50 0b 00 00       	call   c2b2 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    b762:	90                   	nop
    b763:	c9                   	leave
    b764:	c3                   	ret

000000000000b765 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    b765:	55                   	push   %rbp
    b766:	48 89 e5             	mov    %rsp,%rbp
    b769:	48 83 ec 20          	sub    $0x20,%rsp
    b76d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    b771:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    b778:	ff ff 0f 
    b77b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    b77f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b783:	48 89 c7             	mov    %rax,%rdi
    b786:	e8 61 0b 00 00       	call   c2ec <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    b78b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    b78f:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    b793:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b797:	48 89 d6             	mov    %rdx,%rsi
    b79a:	48 89 c7             	mov    %rax,%rdi
    b79d:	e8 1b a5 ff ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    b7a2:	48 8b 00             	mov    (%rax),%rax
      }
    b7a5:	c9                   	leave
    b7a6:	c3                   	ret
    b7a7:	90                   	nop

000000000000b7a8 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    b7a8:	55                   	push   %rbp
    b7a9:	48 89 e5             	mov    %rsp,%rbp
    b7ac:	48 83 ec 10          	sub    $0x10,%rsp
    b7b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b7b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    b7b8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b7bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7c0:	48 89 d6             	mov    %rdx,%rsi
    b7c3:	48 89 c7             	mov    %rax,%rdi
    b7c6:	e8 61 f1 ff ff       	call   a92c <_ZNSaIPKcEC1ERKS1_>
    b7cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7cf:	48 89 c7             	mov    %rax,%rdi
    b7d2:	e8 2f 0b 00 00       	call   c306 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    b7d7:	90                   	nop
    b7d8:	c9                   	leave
    b7d9:	c3                   	ret

000000000000b7da <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    b7da:	55                   	push   %rbp
    b7db:	48 89 e5             	mov    %rsp,%rbp
    b7de:	48 83 ec 10          	sub    $0x10,%rsp
    b7e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b7e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    b7ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b7ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7f2:	48 89 d6             	mov    %rdx,%rsi
    b7f5:	48 89 c7             	mov    %rax,%rdi
    b7f8:	e8 37 0b 00 00       	call   c334 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    b7fd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b801:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    b804:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b808:	48 8b 10             	mov    (%rax),%rdx
    b80b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b80f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    b813:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b817:	48 8b 00             	mov    (%rax),%rax
    b81a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b81e:	48 c1 e2 03          	shl    $0x3,%rdx
    b822:	48 01 c2             	add    %rax,%rdx
    b825:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b829:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    b82d:	90                   	nop
    b82e:	c9                   	leave
    b82f:	c3                   	ret

000000000000b830 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    b830:	55                   	push   %rbp
    b831:	48 89 e5             	mov    %rsp,%rbp
    b834:	48 83 ec 20          	sub    $0x20,%rsp
    b838:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b83c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b840:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    b844:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b848:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b84c:	48 89 d6             	mov    %rdx,%rsi
    b84f:	48 89 c7             	mov    %rax,%rdi
    b852:	e8 10 0b 00 00       	call   c367 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    b857:	c9                   	leave
    b858:	c3                   	ret
    b859:	90                   	nop

000000000000b85a <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
    b85a:	55                   	push   %rbp
    b85b:	48 89 e5             	mov    %rsp,%rbp
    b85e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b862:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b866:	90                   	nop
    b867:	5d                   	pop    %rbp
    b868:	c3                   	ret

000000000000b869 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    b869:	55                   	push   %rbp
    b86a:	48 89 e5             	mov    %rsp,%rbp
    b86d:	48 83 ec 20          	sub    $0x20,%rsp
    b871:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b875:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b879:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    b87d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b881:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b885:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b889:	48 89 ce             	mov    %rcx,%rsi
    b88c:	48 89 c7             	mov    %rax,%rdi
    b88f:	e8 fc 0a 00 00       	call   c390 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    b894:	90                   	nop
    b895:	c9                   	leave
    b896:	c3                   	ret

000000000000b897 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    b897:	55                   	push   %rbp
    b898:	48 89 e5             	mov    %rsp,%rbp
    b89b:	48 83 ec 20          	sub    $0x20,%rsp
    b89f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    b8a3:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    b8aa:	ff ff 0f 
    b8ad:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    b8b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b8b5:	48 89 c7             	mov    %rax,%rdi
    b8b8:	e8 04 0b 00 00       	call   c3c1 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    b8bd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    b8c1:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    b8c5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b8c9:	48 89 d6             	mov    %rdx,%rsi
    b8cc:	48 89 c7             	mov    %rax,%rdi
    b8cf:	e8 e9 a3 ff ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    b8d4:	48 8b 00             	mov    (%rax),%rax
      }
    b8d7:	c9                   	leave
    b8d8:	c3                   	ret
    b8d9:	90                   	nop

000000000000b8da <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    b8da:	55                   	push   %rbp
    b8db:	48 89 e5             	mov    %rsp,%rbp
    b8de:	48 83 ec 10          	sub    $0x10,%rsp
    b8e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b8e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    b8ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b8ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8f2:	48 89 d6             	mov    %rdx,%rsi
    b8f5:	48 89 c7             	mov    %rax,%rdi
    b8f8:	e8 eb f1 ff ff       	call   aae8 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    b8fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b901:	48 89 c7             	mov    %rax,%rdi
    b904:	e8 d3 0a 00 00       	call   c3dc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    b909:	90                   	nop
    b90a:	c9                   	leave
    b90b:	c3                   	ret

000000000000b90c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    b90c:	55                   	push   %rbp
    b90d:	48 89 e5             	mov    %rsp,%rbp
    b910:	48 83 ec 10          	sub    $0x10,%rsp
    b914:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b918:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    b91c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b920:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b924:	48 89 d6             	mov    %rdx,%rsi
    b927:	48 89 c7             	mov    %rax,%rdi
    b92a:	e8 db 0a 00 00       	call   c40a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    b92f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b933:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    b936:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b93a:	48 8b 10             	mov    (%rax),%rdx
    b93d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b941:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    b945:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b949:	48 8b 00             	mov    (%rax),%rax
    b94c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b950:	48 c1 e2 03          	shl    $0x3,%rdx
    b954:	48 01 c2             	add    %rax,%rdx
    b957:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b95b:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    b95f:	90                   	nop
    b960:	c9                   	leave
    b961:	c3                   	ret

000000000000b962 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    b962:	55                   	push   %rbp
    b963:	48 89 e5             	mov    %rsp,%rbp
    b966:	48 83 ec 20          	sub    $0x20,%rsp
    b96a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b96e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b972:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    b976:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b97a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b97e:	48 89 d6             	mov    %rdx,%rsi
    b981:	48 89 c7             	mov    %rax,%rdi
    b984:	e8 b4 0a 00 00       	call   c43d <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    b989:	c9                   	leave
    b98a:	c3                   	ret

000000000000b98b <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    b98b:	55                   	push   %rbp
    b98c:	48 89 e5             	mov    %rsp,%rbp
    b98f:	48 83 ec 10          	sub    $0x10,%rsp
    b993:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b997:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    b99b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b99f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9a3:	48 89 d6             	mov    %rdx,%rsi
    b9a6:	48 89 c7             	mov    %rax,%rdi
    b9a9:	e8 b8 0a 00 00       	call   c466 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    b9ae:	90                   	nop
    b9af:	c9                   	leave
    b9b0:	c3                   	ret
    b9b1:	90                   	nop

000000000000b9b2 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
    b9b2:	55                   	push   %rbp
    b9b3:	48 89 e5             	mov    %rsp,%rbp
    b9b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b9ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b9be:	90                   	nop
    b9bf:	5d                   	pop    %rbp
    b9c0:	c3                   	ret

000000000000b9c1 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    b9c1:	55                   	push   %rbp
    b9c2:	48 89 e5             	mov    %rsp,%rbp
    b9c5:	48 83 ec 20          	sub    $0x20,%rsp
    b9c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b9cd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b9d1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    b9d5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b9d9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b9dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9e1:	48 89 ce             	mov    %rcx,%rsi
    b9e4:	48 89 c7             	mov    %rax,%rdi
    b9e7:	e8 8a 0a 00 00       	call   c476 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    b9ec:	90                   	nop
    b9ed:	c9                   	leave
    b9ee:	c3                   	ret

000000000000b9ef <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    b9ef:	55                   	push   %rbp
    b9f0:	48 89 e5             	mov    %rsp,%rbp
    b9f3:	48 83 ec 20          	sub    $0x20,%rsp
    b9f7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    b9fb:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    ba02:	55 55 05 
    ba05:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    ba09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ba0d:	48 89 c7             	mov    %rax,%rdi
    ba10:	e8 92 0a 00 00       	call   c4a7 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    ba15:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    ba19:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    ba1d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ba21:	48 89 d6             	mov    %rdx,%rsi
    ba24:	48 89 c7             	mov    %rax,%rdi
    ba27:	e8 91 a2 ff ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    ba2c:	48 8b 00             	mov    (%rax),%rax
      }
    ba2f:	c9                   	leave
    ba30:	c3                   	ret
    ba31:	90                   	nop

000000000000ba32 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    ba32:	55                   	push   %rbp
    ba33:	48 89 e5             	mov    %rsp,%rbp
    ba36:	48 83 ec 10          	sub    $0x10,%rsp
    ba3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba3e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    ba42:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ba46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba4a:	48 89 d6             	mov    %rdx,%rsi
    ba4d:	48 89 c7             	mov    %rax,%rdi
    ba50:	e8 4f f2 ff ff       	call   aca4 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    ba55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba59:	48 89 c7             	mov    %rax,%rdi
    ba5c:	e8 61 0a 00 00       	call   c4c2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    ba61:	90                   	nop
    ba62:	c9                   	leave
    ba63:	c3                   	ret

000000000000ba64 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    ba64:	55                   	push   %rbp
    ba65:	48 89 e5             	mov    %rsp,%rbp
    ba68:	48 83 ec 10          	sub    $0x10,%rsp
    ba6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba70:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    ba74:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ba78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba7c:	48 89 d6             	mov    %rdx,%rsi
    ba7f:	48 89 c7             	mov    %rax,%rdi
    ba82:	e8 69 0a 00 00       	call   c4f0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    ba87:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ba8b:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    ba8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba92:	48 8b 10             	mov    (%rax),%rdx
    ba95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba99:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    ba9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    baa1:	48 8b 08             	mov    (%rax),%rcx
    baa4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    baa8:	48 89 d0             	mov    %rdx,%rax
    baab:	48 01 c0             	add    %rax,%rax
    baae:	48 01 d0             	add    %rdx,%rax
    bab1:	48 c1 e0 03          	shl    $0x3,%rax
    bab5:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    bab9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    babd:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    bac1:	90                   	nop
    bac2:	c9                   	leave
    bac3:	c3                   	ret

000000000000bac4 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    bac4:	55                   	push   %rbp
    bac5:	48 89 e5             	mov    %rsp,%rbp
    bac8:	48 83 ec 20          	sub    $0x20,%rsp
    bacc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bad0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bad4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    bad8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    badc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bae0:	48 89 d6             	mov    %rdx,%rsi
    bae3:	48 89 c7             	mov    %rax,%rdi
    bae6:	e8 38 0a 00 00       	call   c523 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    baeb:	c9                   	leave
    baec:	c3                   	ret

000000000000baed <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    baed:	55                   	push   %rbp
    baee:	48 89 e5             	mov    %rsp,%rbp
    baf1:	48 83 ec 10          	sub    $0x10,%rsp
    baf5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    baf9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    bafd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bb01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb05:	48 89 d6             	mov    %rdx,%rsi
    bb08:	48 89 c7             	mov    %rax,%rdi
    bb0b:	e8 3c 0a 00 00       	call   c54c <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    bb10:	90                   	nop
    bb11:	c9                   	leave
    bb12:	c3                   	ret
    bb13:	90                   	nop

000000000000bb14 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    bb14:	55                   	push   %rbp
    bb15:	48 89 e5             	mov    %rsp,%rbp
    bb18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bb20:	90                   	nop
    bb21:	5d                   	pop    %rbp
    bb22:	c3                   	ret

000000000000bb23 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    bb23:	55                   	push   %rbp
    bb24:	48 89 e5             	mov    %rsp,%rbp
    bb27:	48 83 ec 20          	sub    $0x20,%rsp
    bb2b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb2f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bb33:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    bb37:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bb3b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    bb3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb43:	48 89 ce             	mov    %rcx,%rsi
    bb46:	48 89 c7             	mov    %rax,%rdi
    bb49:	e8 0e 0a 00 00       	call   c55c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    bb4e:	90                   	nop
    bb4f:	c9                   	leave
    bb50:	c3                   	ret

000000000000bb51 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    bb51:	55                   	push   %rbp
    bb52:	48 89 e5             	mov    %rsp,%rbp
    bb55:	48 83 ec 20          	sub    $0x20,%rsp
    bb59:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    bb5d:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    bb64:	49 92 04 
    bb67:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    bb6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bb6f:	48 89 c7             	mov    %rax,%rdi
    bb72:	e8 1e 0a 00 00       	call   c595 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>
    bb77:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    bb7b:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    bb7f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bb83:	48 89 d6             	mov    %rdx,%rsi
    bb86:	48 89 c7             	mov    %rax,%rdi
    bb89:	e8 2f a1 ff ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    bb8e:	48 8b 00             	mov    (%rax),%rax
      }
    bb91:	c9                   	leave
    bb92:	c3                   	ret
    bb93:	90                   	nop

000000000000bb94 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    bb94:	55                   	push   %rbp
    bb95:	48 89 e5             	mov    %rsp,%rbp
    bb98:	48 83 ec 10          	sub    $0x10,%rsp
    bb9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bba0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    bba4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bba8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbac:	48 89 d6             	mov    %rdx,%rsi
    bbaf:	48 89 c7             	mov    %rax,%rdi
    bbb2:	e8 5b f3 ff ff       	call   af12 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    bbb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbbb:	48 89 c7             	mov    %rax,%rdi
    bbbe:	e8 ed 09 00 00       	call   c5b0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>
	{ }
    bbc3:	90                   	nop
    bbc4:	c9                   	leave
    bbc5:	c3                   	ret

000000000000bbc6 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    bbc6:	55                   	push   %rbp
    bbc7:	48 89 e5             	mov    %rsp,%rbp
    bbca:	48 83 ec 10          	sub    $0x10,%rsp
    bbce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbd2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    bbd6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bbda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbde:	48 89 d6             	mov    %rdx,%rsi
    bbe1:	48 89 c7             	mov    %rax,%rdi
    bbe4:	e8 f5 09 00 00       	call   c5de <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>
    bbe9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    bbed:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    bbf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbf4:	48 8b 10             	mov    (%rax),%rdx
    bbf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbfb:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    bbff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc03:	48 8b 08             	mov    (%rax),%rcx
    bc06:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bc0a:	48 89 d0             	mov    %rdx,%rax
    bc0d:	48 c1 e0 03          	shl    $0x3,%rax
    bc11:	48 29 d0             	sub    %rdx,%rax
    bc14:	48 c1 e0 02          	shl    $0x2,%rax
    bc18:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    bc1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc20:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    bc24:	90                   	nop
    bc25:	c9                   	leave
    bc26:	c3                   	ret

000000000000bc27 <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    bc27:	55                   	push   %rbp
    bc28:	48 89 e5             	mov    %rsp,%rbp
    bc2b:	48 83 ec 20          	sub    $0x20,%rsp
    bc2f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc33:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bc37:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    bc3b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bc3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc43:	48 89 d6             	mov    %rdx,%rsi
    bc46:	48 89 c7             	mov    %rax,%rdi
    bc49:	e8 c3 09 00 00       	call   c611 <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>
    bc4e:	c9                   	leave
    bc4f:	c3                   	ret

000000000000bc50 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    bc50:	55                   	push   %rbp
    bc51:	48 89 e5             	mov    %rsp,%rbp
    bc54:	48 83 ec 10          	sub    $0x10,%rsp
    bc58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    bc60:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bc64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc68:	48 89 d6             	mov    %rdx,%rsi
    bc6b:	48 89 c7             	mov    %rax,%rdi
    bc6e:	e8 c7 09 00 00       	call   c63a <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>
    }
    bc73:	90                   	nop
    bc74:	c9                   	leave
    bc75:	c3                   	ret

000000000000bc76 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>:
      _M_get() noexcept
    bc76:	55                   	push   %rbp
    bc77:	48 89 e5             	mov    %rsp,%rbp
    bc7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    bc7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc82:	5d                   	pop    %rbp
    bc83:	c3                   	ret

000000000000bc84 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    bc84:	55                   	push   %rbp
    bc85:	48 89 e5             	mov    %rsp,%rbp
    bc88:	53                   	push   %rbx
    bc89:	48 83 ec 18          	sub    $0x18,%rsp
    bc8d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bc91:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    bc95:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bc99:	48 89 c7             	mov    %rax,%rdi
    bc9c:	e8 2f f2 ff ff       	call   aed0 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    bca1:	48 89 c3             	mov    %rax,%rbx
    bca4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bca8:	48 89 c7             	mov    %rax,%rdi
    bcab:	e8 99 09 00 00       	call   c649 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    bcb0:	48 89 de             	mov    %rbx,%rsi
    bcb3:	48 89 c7             	mov    %rax,%rdi
    bcb6:	e8 9c 09 00 00       	call   c657 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>
	  this->_M_engaged = true;
    bcbb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bcbf:	c6 40 18 01          	movb   $0x1,0x18(%rax)
	}
    bcc3:	90                   	nop
    bcc4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bcc8:	c9                   	leave
    bcc9:	c3                   	ret

000000000000bcca <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>:
    bcca:	55                   	push   %rbp
    bccb:	48 89 e5             	mov    %rsp,%rbp
    bcce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bcd2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bcd6:	90                   	nop
    bcd7:	5d                   	pop    %rbp
    bcd8:	c3                   	ret

000000000000bcd9 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    bcd9:	55                   	push   %rbp
    bcda:	48 89 e5             	mov    %rsp,%rbp
    bcdd:	48 83 ec 20          	sub    $0x20,%rsp
    bce1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bce5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bce9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    bced:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bcf1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    bcf5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcf9:	48 89 ce             	mov    %rcx,%rsi
    bcfc:	48 89 c7             	mov    %rax,%rdi
    bcff:	e8 a4 09 00 00       	call   c6a8 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>
    bd04:	90                   	nop
    bd05:	c9                   	leave
    bd06:	c3                   	ret

000000000000bd07 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    bd07:	55                   	push   %rbp
    bd08:	48 89 e5             	mov    %rsp,%rbp
    bd0b:	48 83 ec 20          	sub    $0x20,%rsp
    bd0f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    bd13:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    bd1a:	ff ff 0f 
    bd1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    bd21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bd25:	48 89 c7             	mov    %rax,%rdi
    bd28:	e8 b5 09 00 00       	call   c6e2 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>
    bd2d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    bd31:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    bd35:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bd39:	48 89 d6             	mov    %rdx,%rsi
    bd3c:	48 89 c7             	mov    %rax,%rdi
    bd3f:	e8 79 9f ff ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    bd44:	48 8b 00             	mov    (%rax),%rax
      }
    bd47:	c9                   	leave
    bd48:	c3                   	ret
    bd49:	90                   	nop

000000000000bd4a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    bd4a:	55                   	push   %rbp
    bd4b:	48 89 e5             	mov    %rsp,%rbp
    bd4e:	48 83 ec 10          	sub    $0x10,%rsp
    bd52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd56:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    bd5a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bd5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd62:	48 89 d6             	mov    %rdx,%rsi
    bd65:	48 89 c7             	mov    %rax,%rdi
    bd68:	e8 61 f3 ff ff       	call   b0ce <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    bd6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd71:	48 89 c7             	mov    %rax,%rdi
    bd74:	e8 83 09 00 00       	call   c6fc <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    bd79:	90                   	nop
    bd7a:	c9                   	leave
    bd7b:	c3                   	ret

000000000000bd7c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    bd7c:	55                   	push   %rbp
    bd7d:	48 89 e5             	mov    %rsp,%rbp
    bd80:	48 83 ec 10          	sub    $0x10,%rsp
    bd84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd88:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    bd8c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bd90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd94:	48 89 d6             	mov    %rdx,%rsi
    bd97:	48 89 c7             	mov    %rax,%rdi
    bd9a:	e8 8b 09 00 00       	call   c72a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>
    bd9f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    bda3:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    bda6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdaa:	48 8b 10             	mov    (%rax),%rdx
    bdad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdb1:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    bdb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdb9:	48 8b 00             	mov    (%rax),%rax
    bdbc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bdc0:	48 c1 e2 03          	shl    $0x3,%rdx
    bdc4:	48 01 c2             	add    %rax,%rdx
    bdc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdcb:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    bdcf:	90                   	nop
    bdd0:	c9                   	leave
    bdd1:	c3                   	ret

000000000000bdd2 <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    bdd2:	55                   	push   %rbp
    bdd3:	48 89 e5             	mov    %rsp,%rbp
    bdd6:	48 83 ec 20          	sub    $0x20,%rsp
    bdda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bdde:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bde2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    bde6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bdea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdee:	48 89 d6             	mov    %rdx,%rsi
    bdf1:	48 89 c7             	mov    %rax,%rdi
    bdf4:	e8 64 09 00 00       	call   c75d <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>
    bdf9:	c9                   	leave
    bdfa:	c3                   	ret

000000000000bdfb <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    bdfb:	55                   	push   %rbp
    bdfc:	48 89 e5             	mov    %rsp,%rbp
    bdff:	48 83 ec 10          	sub    $0x10,%rsp
    be03:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be07:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    be0b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    be0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be13:	48 89 d6             	mov    %rdx,%rsi
    be16:	48 89 c7             	mov    %rax,%rdi
    be19:	e8 68 09 00 00       	call   c786 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>
    }
    be1e:	90                   	nop
    be1f:	c9                   	leave
    be20:	c3                   	ret
    be21:	90                   	nop

000000000000be22 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>:
    be22:	55                   	push   %rbp
    be23:	48 89 e5             	mov    %rsp,%rbp
    be26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    be2e:	90                   	nop
    be2f:	5d                   	pop    %rbp
    be30:	c3                   	ret

000000000000be31 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    be31:	55                   	push   %rbp
    be32:	48 89 e5             	mov    %rsp,%rbp
    be35:	48 83 ec 20          	sub    $0x20,%rsp
    be39:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be3d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    be41:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    be45:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    be49:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    be4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be51:	48 89 ce             	mov    %rcx,%rsi
    be54:	48 89 c7             	mov    %rax,%rdi
    be57:	e8 3a 09 00 00       	call   c796 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>
    be5c:	90                   	nop
    be5d:	c9                   	leave
    be5e:	c3                   	ret

000000000000be5f <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    be5f:	55                   	push   %rbp
    be60:	48 89 e5             	mov    %rsp,%rbp
    be63:	48 83 ec 20          	sub    $0x20,%rsp
    be67:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    be6b:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    be72:	ff ff 1f 
    be75:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    be79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    be7d:	48 89 c7             	mov    %rax,%rdi
    be80:	e8 42 09 00 00       	call   c7c7 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>
    be85:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    be89:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    be8d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    be91:	48 89 d6             	mov    %rdx,%rsi
    be94:	48 89 c7             	mov    %rax,%rdi
    be97:	e8 21 9e ff ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    be9c:	48 8b 00             	mov    (%rax),%rax
      }
    be9f:	c9                   	leave
    bea0:	c3                   	ret
    bea1:	90                   	nop

000000000000bea2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    bea2:	55                   	push   %rbp
    bea3:	48 89 e5             	mov    %rsp,%rbp
    bea6:	48 83 ec 10          	sub    $0x10,%rsp
    beaa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    beae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    beb2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    beb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    beba:	48 89 d6             	mov    %rdx,%rsi
    bebd:	48 89 c7             	mov    %rax,%rdi
    bec0:	e8 c5 f3 ff ff       	call   b28a <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    bec5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bec9:	48 89 c7             	mov    %rax,%rdi
    becc:	e8 11 09 00 00       	call   c7e2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    bed1:	90                   	nop
    bed2:	c9                   	leave
    bed3:	c3                   	ret

000000000000bed4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    bed4:	55                   	push   %rbp
    bed5:	48 89 e5             	mov    %rsp,%rbp
    bed8:	48 83 ec 10          	sub    $0x10,%rsp
    bedc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bee0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    bee4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bee8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    beec:	48 89 d6             	mov    %rdx,%rsi
    beef:	48 89 c7             	mov    %rax,%rdi
    bef2:	e8 19 09 00 00       	call   c810 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>
    bef7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    befb:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    befe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf02:	48 8b 10             	mov    (%rax),%rdx
    bf05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf09:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    bf0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf11:	48 8b 00             	mov    (%rax),%rax
    bf14:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bf18:	48 c1 e2 02          	shl    $0x2,%rdx
    bf1c:	48 01 c2             	add    %rax,%rdx
    bf1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf23:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    bf27:	90                   	nop
    bf28:	c9                   	leave
    bf29:	c3                   	ret

000000000000bf2a <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    bf2a:	55                   	push   %rbp
    bf2b:	48 89 e5             	mov    %rsp,%rbp
    bf2e:	48 83 ec 20          	sub    $0x20,%rsp
    bf32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bf3a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    bf3e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bf42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf46:	48 89 d6             	mov    %rdx,%rsi
    bf49:	48 89 c7             	mov    %rax,%rdi
    bf4c:	e8 f2 08 00 00       	call   c843 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>
    bf51:	c9                   	leave
    bf52:	c3                   	ret

000000000000bf53 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    bf53:	55                   	push   %rbp
    bf54:	48 89 e5             	mov    %rsp,%rbp
    bf57:	48 83 ec 10          	sub    $0x10,%rsp
    bf5b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf5f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    bf63:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bf67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf6b:	48 89 d6             	mov    %rdx,%rsi
    bf6e:	48 89 c7             	mov    %rax,%rdi
    bf71:	e8 f6 08 00 00       	call   c86c <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>
    }
    bf76:	90                   	nop
    bf77:	c9                   	leave
    bf78:	c3                   	ret
    bf79:	90                   	nop

000000000000bf7a <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>:
    bf7a:	55                   	push   %rbp
    bf7b:	48 89 e5             	mov    %rsp,%rbp
    bf7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf82:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bf86:	90                   	nop
    bf87:	5d                   	pop    %rbp
    bf88:	c3                   	ret

000000000000bf89 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    bf89:	55                   	push   %rbp
    bf8a:	48 89 e5             	mov    %rsp,%rbp
    bf8d:	48 83 ec 20          	sub    $0x20,%rsp
    bf91:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf95:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bf99:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    bf9d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bfa1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    bfa5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfa9:	48 89 ce             	mov    %rcx,%rsi
    bfac:	48 89 c7             	mov    %rax,%rdi
    bfaf:	e8 c8 08 00 00       	call   c87c <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>
    bfb4:	90                   	nop
    bfb5:	c9                   	leave
    bfb6:	c3                   	ret

000000000000bfb7 <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    bfb7:	55                   	push   %rbp
    bfb8:	48 89 e5             	mov    %rsp,%rbp
    bfbb:	48 83 ec 20          	sub    $0x20,%rsp
    bfbf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    bfc3:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    bfca:	ff ff 0f 
    bfcd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    bfd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bfd5:	48 89 c7             	mov    %rax,%rdi
    bfd8:	e8 d0 08 00 00       	call   c8ad <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>
    bfdd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    bfe1:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    bfe5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bfe9:	48 89 d6             	mov    %rdx,%rsi
    bfec:	48 89 c7             	mov    %rax,%rdi
    bfef:	e8 c9 9c ff ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    bff4:	48 8b 00             	mov    (%rax),%rax
      }
    bff7:	c9                   	leave
    bff8:	c3                   	ret
    bff9:	90                   	nop

000000000000bffa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    bffa:	55                   	push   %rbp
    bffb:	48 89 e5             	mov    %rsp,%rbp
    bffe:	48 83 ec 10          	sub    $0x10,%rsp
    c002:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c006:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    c00a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c00e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c012:	48 89 d6             	mov    %rdx,%rsi
    c015:	48 89 c7             	mov    %rax,%rdi
    c018:	e8 29 f4 ff ff       	call   b446 <_ZNSaIP9VkImage_TEC1ERKS1_>
    c01d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c021:	48 89 c7             	mov    %rax,%rdi
    c024:	e8 9f 08 00 00       	call   c8c8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    c029:	90                   	nop
    c02a:	c9                   	leave
    c02b:	c3                   	ret

000000000000c02c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    c02c:	55                   	push   %rbp
    c02d:	48 89 e5             	mov    %rsp,%rbp
    c030:	48 83 ec 10          	sub    $0x10,%rsp
    c034:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c038:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    c03c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c040:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c044:	48 89 d6             	mov    %rdx,%rsi
    c047:	48 89 c7             	mov    %rax,%rdi
    c04a:	e8 a7 08 00 00       	call   c8f6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>
    c04f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c053:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    c056:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c05a:	48 8b 10             	mov    (%rax),%rdx
    c05d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c061:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    c065:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c069:	48 8b 00             	mov    (%rax),%rax
    c06c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c070:	48 c1 e2 03          	shl    $0x3,%rdx
    c074:	48 01 c2             	add    %rax,%rdx
    c077:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c07b:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    c07f:	90                   	nop
    c080:	c9                   	leave
    c081:	c3                   	ret

000000000000c082 <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    c082:	55                   	push   %rbp
    c083:	48 89 e5             	mov    %rsp,%rbp
    c086:	48 83 ec 20          	sub    $0x20,%rsp
    c08a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c08e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c092:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    c096:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c09a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c09e:	48 89 d6             	mov    %rdx,%rsi
    c0a1:	48 89 c7             	mov    %rax,%rdi
    c0a4:	e8 80 08 00 00       	call   c929 <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>
    c0a9:	c9                   	leave
    c0aa:	c3                   	ret

000000000000c0ab <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    c0ab:	55                   	push   %rbp
    c0ac:	48 89 e5             	mov    %rsp,%rbp
    c0af:	48 83 ec 10          	sub    $0x10,%rsp
    c0b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0b7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    c0bb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c0bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0c3:	48 89 d6             	mov    %rdx,%rsi
    c0c6:	48 89 c7             	mov    %rax,%rdi
    c0c9:	e8 84 08 00 00       	call   c952 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>
    }
    c0ce:	90                   	nop
    c0cf:	c9                   	leave
    c0d0:	c3                   	ret
    c0d1:	90                   	nop

000000000000c0d2 <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>:
    c0d2:	55                   	push   %rbp
    c0d3:	48 89 e5             	mov    %rsp,%rbp
    c0d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c0de:	90                   	nop
    c0df:	5d                   	pop    %rbp
    c0e0:	c3                   	ret

000000000000c0e1 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    c0e1:	55                   	push   %rbp
    c0e2:	48 89 e5             	mov    %rsp,%rbp
    c0e5:	48 83 ec 20          	sub    $0x20,%rsp
    c0e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0ed:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c0f1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    c0f5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c0f9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c0fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c101:	48 89 ce             	mov    %rcx,%rsi
    c104:	48 89 c7             	mov    %rax,%rdi
    c107:	e8 56 08 00 00       	call   c962 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>
    c10c:	90                   	nop
    c10d:	c9                   	leave
    c10e:	c3                   	ret

000000000000c10f <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    c10f:	55                   	push   %rbp
    c110:	48 89 e5             	mov    %rsp,%rbp
    c113:	48 83 ec 10          	sub    $0x10,%rsp
    c117:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    c11b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c11f:	48 89 c7             	mov    %rax,%rdi
    c122:	e8 6d 08 00 00       	call   c994 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
    c127:	c9                   	leave
    c128:	c3                   	ret
    c129:	90                   	nop

000000000000c12a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    c12a:	55                   	push   %rbp
    c12b:	48 89 e5             	mov    %rsp,%rbp
    c12e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    c132:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c136:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c13d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c141:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    c148:	00 
    c149:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c14d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    c154:	00 
	{ }
    c155:	90                   	nop
    c156:	5d                   	pop    %rbp
    c157:	c3                   	ret

000000000000c158 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    c158:	55                   	push   %rbp
    c159:	48 89 e5             	mov    %rsp,%rbp
    c15c:	48 83 ec 10          	sub    $0x10,%rsp
    c160:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c164:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    c168:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c16d:	74 15                	je     c184 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    c16f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c173:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c177:	48 89 d6             	mov    %rdx,%rsi
    c17a:	48 89 c7             	mov    %rax,%rdi
    c17d:	e8 2c 08 00 00       	call   c9ae <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
    c182:	eb 05                	jmp    c189 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
    c184:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    c189:	c9                   	leave
    c18a:	c3                   	ret

000000000000c18b <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    c18b:	55                   	push   %rbp
    c18c:	48 89 e5             	mov    %rsp,%rbp
    c18f:	48 83 ec 20          	sub    $0x20,%rsp
    c193:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c197:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    c19b:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    c19f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c1a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c1a7:	48 89 d6             	mov    %rdx,%rsi
    c1aa:	48 89 c7             	mov    %rax,%rdi
    c1ad:	e8 26 08 00 00       	call   c9d8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
    c1b2:	c9                   	leave
    c1b3:	c3                   	ret

000000000000c1b4 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    c1b4:	55                   	push   %rbp
    c1b5:	48 89 e5             	mov    %rsp,%rbp
    c1b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c1bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c1c0:	90                   	nop
    c1c1:	5d                   	pop    %rbp
    c1c2:	c3                   	ret
    c1c3:	90                   	nop

000000000000c1c4 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    c1c4:	55                   	push   %rbp
    c1c5:	48 89 e5             	mov    %rsp,%rbp
    c1c8:	48 83 ec 20          	sub    $0x20,%rsp
    c1cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c1d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c1d4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    c1d8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c1dc:	48 89 d0             	mov    %rdx,%rax
    c1df:	48 c1 e0 06          	shl    $0x6,%rax
    c1e3:	48 01 d0             	add    %rdx,%rax
    c1e6:	48 c1 e0 03          	shl    $0x3,%rax
    c1ea:	48 89 c2             	mov    %rax,%rdx
    c1ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c1f1:	48 89 d6             	mov    %rdx,%rsi
    c1f4:	48 89 c7             	mov    %rax,%rdi
    c1f7:	e8 a4 82 ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    c1fc:	c9                   	leave
    c1fd:	c3                   	ret

000000000000c1fe <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    c1fe:	55                   	push   %rbp
    c1ff:	48 89 e5             	mov    %rsp,%rbp
    c202:	48 83 ec 10          	sub    $0x10,%rsp
    c206:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    c20a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c20e:	48 89 c7             	mov    %rax,%rdi
    c211:	e8 22 08 00 00       	call   ca38 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    c216:	c9                   	leave
    c217:	c3                   	ret

000000000000c218 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    c218:	55                   	push   %rbp
    c219:	48 89 e5             	mov    %rsp,%rbp
    c21c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    c220:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c224:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c22b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c22f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    c236:	00 
    c237:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c23b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    c242:	00 
	{ }
    c243:	90                   	nop
    c244:	5d                   	pop    %rbp
    c245:	c3                   	ret

000000000000c246 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    c246:	55                   	push   %rbp
    c247:	48 89 e5             	mov    %rsp,%rbp
    c24a:	48 83 ec 10          	sub    $0x10,%rsp
    c24e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c252:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    c256:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c25b:	74 15                	je     c272 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    c25d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c261:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c265:	48 89 d6             	mov    %rdx,%rsi
    c268:	48 89 c7             	mov    %rax,%rdi
    c26b:	e8 e2 07 00 00       	call   ca52 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    c270:	eb 05                	jmp    c277 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    c272:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    c277:	c9                   	leave
    c278:	c3                   	ret

000000000000c279 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    c279:	55                   	push   %rbp
    c27a:	48 89 e5             	mov    %rsp,%rbp
    c27d:	48 83 ec 20          	sub    $0x20,%rsp
    c281:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c285:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    c289:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    c28d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c291:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c295:	48 89 d6             	mov    %rdx,%rsi
    c298:	48 89 c7             	mov    %rax,%rdi
    c29b:	e8 dc 07 00 00       	call   ca7c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    c2a0:	c9                   	leave
    c2a1:	c3                   	ret

000000000000c2a2 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
    c2a2:	55                   	push   %rbp
    c2a3:	48 89 e5             	mov    %rsp,%rbp
    c2a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c2ae:	90                   	nop
    c2af:	5d                   	pop    %rbp
    c2b0:	c3                   	ret
    c2b1:	90                   	nop

000000000000c2b2 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    c2b2:	55                   	push   %rbp
    c2b3:	48 89 e5             	mov    %rsp,%rbp
    c2b6:	48 83 ec 20          	sub    $0x20,%rsp
    c2ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c2c2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    c2c6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c2ca:	48 89 d0             	mov    %rdx,%rax
    c2cd:	48 c1 e0 06          	shl    $0x6,%rax
    c2d1:	48 01 d0             	add    %rdx,%rax
    c2d4:	48 c1 e0 02          	shl    $0x2,%rax
    c2d8:	48 89 c2             	mov    %rax,%rdx
    c2db:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c2df:	48 89 d6             	mov    %rdx,%rsi
    c2e2:	48 89 c7             	mov    %rax,%rdi
    c2e5:	e8 b6 81 ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    c2ea:	c9                   	leave
    c2eb:	c3                   	ret

000000000000c2ec <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    c2ec:	55                   	push   %rbp
    c2ed:	48 89 e5             	mov    %rsp,%rbp
    c2f0:	48 83 ec 10          	sub    $0x10,%rsp
    c2f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    c2f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2fc:	48 89 c7             	mov    %rax,%rdi
    c2ff:	e8 d8 07 00 00       	call   cadc <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    c304:	c9                   	leave
    c305:	c3                   	ret

000000000000c306 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    c306:	55                   	push   %rbp
    c307:	48 89 e5             	mov    %rsp,%rbp
    c30a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    c30e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c312:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c319:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c31d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    c324:	00 
    c325:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c329:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    c330:	00 
	{ }
    c331:	90                   	nop
    c332:	5d                   	pop    %rbp
    c333:	c3                   	ret

000000000000c334 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    c334:	55                   	push   %rbp
    c335:	48 89 e5             	mov    %rsp,%rbp
    c338:	48 83 ec 10          	sub    $0x10,%rsp
    c33c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c340:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    c344:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c349:	74 15                	je     c360 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    c34b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c34f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c353:	48 89 d6             	mov    %rdx,%rsi
    c356:	48 89 c7             	mov    %rax,%rdi
    c359:	e8 98 07 00 00       	call   caf6 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    c35e:	eb 05                	jmp    c365 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    c360:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    c365:	c9                   	leave
    c366:	c3                   	ret

000000000000c367 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    c367:	55                   	push   %rbp
    c368:	48 89 e5             	mov    %rsp,%rbp
    c36b:	48 83 ec 20          	sub    $0x20,%rsp
    c36f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c373:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    c377:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    c37b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c37f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c383:	48 89 d6             	mov    %rdx,%rsi
    c386:	48 89 c7             	mov    %rax,%rdi
    c389:	e8 92 07 00 00       	call   cb20 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    c38e:	c9                   	leave
    c38f:	c3                   	ret

000000000000c390 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    c390:	55                   	push   %rbp
    c391:	48 89 e5             	mov    %rsp,%rbp
    c394:	48 83 ec 20          	sub    $0x20,%rsp
    c398:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c39c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c3a0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    c3a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3a8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c3af:	00 
    c3b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c3b4:	48 89 d6             	mov    %rdx,%rsi
    c3b7:	48 89 c7             	mov    %rax,%rdi
    c3ba:	e8 e1 80 ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    c3bf:	c9                   	leave
    c3c0:	c3                   	ret

000000000000c3c1 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    c3c1:	55                   	push   %rbp
    c3c2:	48 89 e5             	mov    %rsp,%rbp
    c3c5:	48 83 ec 10          	sub    $0x10,%rsp
    c3c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    c3cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3d1:	48 89 c7             	mov    %rax,%rdi
    c3d4:	e8 a5 07 00 00       	call   cb7e <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    c3d9:	c9                   	leave
    c3da:	c3                   	ret
    c3db:	90                   	nop

000000000000c3dc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    c3dc:	55                   	push   %rbp
    c3dd:	48 89 e5             	mov    %rsp,%rbp
    c3e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    c3e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3e8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c3ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3f3:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    c3fa:	00 
    c3fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3ff:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    c406:	00 
	{ }
    c407:	90                   	nop
    c408:	5d                   	pop    %rbp
    c409:	c3                   	ret

000000000000c40a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    c40a:	55                   	push   %rbp
    c40b:	48 89 e5             	mov    %rsp,%rbp
    c40e:	48 83 ec 10          	sub    $0x10,%rsp
    c412:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c416:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    c41a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c41f:	74 15                	je     c436 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    c421:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c425:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c429:	48 89 d6             	mov    %rdx,%rsi
    c42c:	48 89 c7             	mov    %rax,%rdi
    c42f:	e8 64 07 00 00       	call   cb98 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    c434:	eb 05                	jmp    c43b <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    c436:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    c43b:	c9                   	leave
    c43c:	c3                   	ret

000000000000c43d <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    c43d:	55                   	push   %rbp
    c43e:	48 89 e5             	mov    %rsp,%rbp
    c441:	48 83 ec 20          	sub    $0x20,%rsp
    c445:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c449:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    c44d:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    c451:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c455:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c459:	48 89 d6             	mov    %rdx,%rsi
    c45c:	48 89 c7             	mov    %rax,%rdi
    c45f:	e8 5e 07 00 00       	call   cbc2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    c464:	c9                   	leave
    c465:	c3                   	ret

000000000000c466 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
    c466:	55                   	push   %rbp
    c467:	48 89 e5             	mov    %rsp,%rbp
    c46a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c46e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c472:	90                   	nop
    c473:	5d                   	pop    %rbp
    c474:	c3                   	ret
    c475:	90                   	nop

000000000000c476 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    c476:	55                   	push   %rbp
    c477:	48 89 e5             	mov    %rsp,%rbp
    c47a:	48 83 ec 20          	sub    $0x20,%rsp
    c47e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c482:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c486:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    c48a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c48e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c495:	00 
    c496:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c49a:	48 89 d6             	mov    %rdx,%rsi
    c49d:	48 89 c7             	mov    %rax,%rdi
    c4a0:	e8 fb 7f ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    c4a5:	c9                   	leave
    c4a6:	c3                   	ret

000000000000c4a7 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    c4a7:	55                   	push   %rbp
    c4a8:	48 89 e5             	mov    %rsp,%rbp
    c4ab:	48 83 ec 10          	sub    $0x10,%rsp
    c4af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    c4b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4b7:	48 89 c7             	mov    %rax,%rdi
    c4ba:	e8 61 07 00 00       	call   cc20 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    c4bf:	c9                   	leave
    c4c0:	c3                   	ret
    c4c1:	90                   	nop

000000000000c4c2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    c4c2:	55                   	push   %rbp
    c4c3:	48 89 e5             	mov    %rsp,%rbp
    c4c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    c4ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4ce:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c4d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4d9:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    c4e0:	00 
    c4e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4e5:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    c4ec:	00 
	{ }
    c4ed:	90                   	nop
    c4ee:	5d                   	pop    %rbp
    c4ef:	c3                   	ret

000000000000c4f0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    c4f0:	55                   	push   %rbp
    c4f1:	48 89 e5             	mov    %rsp,%rbp
    c4f4:	48 83 ec 10          	sub    $0x10,%rsp
    c4f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    c500:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c505:	74 15                	je     c51c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    c507:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c50b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c50f:	48 89 d6             	mov    %rdx,%rsi
    c512:	48 89 c7             	mov    %rax,%rdi
    c515:	e8 20 07 00 00       	call   cc3a <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    c51a:	eb 05                	jmp    c521 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    c51c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    c521:	c9                   	leave
    c522:	c3                   	ret

000000000000c523 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    c523:	55                   	push   %rbp
    c524:	48 89 e5             	mov    %rsp,%rbp
    c527:	48 83 ec 20          	sub    $0x20,%rsp
    c52b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c52f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    c533:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    c537:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c53b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c53f:	48 89 d6             	mov    %rdx,%rsi
    c542:	48 89 c7             	mov    %rax,%rdi
    c545:	e8 1a 07 00 00       	call   cc64 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    c54a:	c9                   	leave
    c54b:	c3                   	ret

000000000000c54c <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    c54c:	55                   	push   %rbp
    c54d:	48 89 e5             	mov    %rsp,%rbp
    c550:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c554:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c558:	90                   	nop
    c559:	5d                   	pop    %rbp
    c55a:	c3                   	ret
    c55b:	90                   	nop

000000000000c55c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    c55c:	55                   	push   %rbp
    c55d:	48 89 e5             	mov    %rsp,%rbp
    c560:	48 83 ec 20          	sub    $0x20,%rsp
    c564:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c568:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c56c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    c570:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c574:	48 89 d0             	mov    %rdx,%rax
    c577:	48 01 c0             	add    %rax,%rax
    c57a:	48 01 d0             	add    %rdx,%rax
    c57d:	48 c1 e0 03          	shl    $0x3,%rax
    c581:	48 89 c2             	mov    %rax,%rdx
    c584:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c588:	48 89 d6             	mov    %rdx,%rsi
    c58b:	48 89 c7             	mov    %rax,%rdi
    c58e:	e8 0d 7f ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    c593:	c9                   	leave
    c594:	c3                   	ret

000000000000c595 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    c595:	55                   	push   %rbp
    c596:	48 89 e5             	mov    %rsp,%rbp
    c599:	48 83 ec 10          	sub    $0x10,%rsp
    c59d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    c5a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5a5:	48 89 c7             	mov    %rax,%rdi
    c5a8:	e8 15 07 00 00       	call   ccc2 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>
      }
    c5ad:	c9                   	leave
    c5ae:	c3                   	ret
    c5af:	90                   	nop

000000000000c5b0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    c5b0:	55                   	push   %rbp
    c5b1:	48 89 e5             	mov    %rsp,%rbp
    c5b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    c5b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5bc:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c5c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5c7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    c5ce:	00 
    c5cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5d3:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    c5da:	00 
	{ }
    c5db:	90                   	nop
    c5dc:	5d                   	pop    %rbp
    c5dd:	c3                   	ret

000000000000c5de <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    c5de:	55                   	push   %rbp
    c5df:	48 89 e5             	mov    %rsp,%rbp
    c5e2:	48 83 ec 10          	sub    $0x10,%rsp
    c5e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c5ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    c5ee:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c5f3:	74 15                	je     c60a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x2c>
    c5f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5f9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c5fd:	48 89 d6             	mov    %rdx,%rsi
    c600:	48 89 c7             	mov    %rax,%rdi
    c603:	e8 d4 06 00 00       	call   ccdc <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>
    c608:	eb 05                	jmp    c60f <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x31>
    c60a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    c60f:	c9                   	leave
    c610:	c3                   	ret

000000000000c611 <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    c611:	55                   	push   %rbp
    c612:	48 89 e5             	mov    %rsp,%rbp
    c615:	48 83 ec 20          	sub    $0x20,%rsp
    c619:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c61d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    c621:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    c625:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c629:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c62d:	48 89 d6             	mov    %rdx,%rsi
    c630:	48 89 c7             	mov    %rax,%rdi
    c633:	e8 ce 06 00 00       	call   cd06 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>
    }
    c638:	c9                   	leave
    c639:	c3                   	ret

000000000000c63a <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>:
    c63a:	55                   	push   %rbp
    c63b:	48 89 e5             	mov    %rsp,%rbp
    c63e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c642:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c646:	90                   	nop
    c647:	5d                   	pop    %rbp
    c648:	c3                   	ret

000000000000c649 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    c649:	55                   	push   %rbp
    c64a:	48 89 e5             	mov    %rsp,%rbp
    c64d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    c651:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c655:	5d                   	pop    %rbp
    c656:	c3                   	ret

000000000000c657 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    c657:	55                   	push   %rbp
    c658:	48 89 e5             	mov    %rsp,%rbp
    c65b:	53                   	push   %rbx
    c65c:	48 83 ec 18          	sub    $0x18,%rsp
    c660:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c664:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    c668:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c66c:	48 89 c6             	mov    %rax,%rsi
    c66f:	bf 18 00 00 00       	mov    $0x18,%edi
    c674:	e8 ff 9f ff ff       	call   6678 <_ZnwmPv>
    c679:	48 89 c3             	mov    %rax,%rbx
    c67c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c680:	48 89 c7             	mov    %rax,%rdi
    c683:	e8 48 e8 ff ff       	call   aed0 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    c688:	48 89 c1             	mov    %rax,%rcx
    c68b:	48 8b 01             	mov    (%rcx),%rax
    c68e:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    c692:	48 89 03             	mov    %rax,(%rbx)
    c695:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    c699:	48 8b 41 10          	mov    0x10(%rcx),%rax
    c69d:	48 89 43 10          	mov    %rax,0x10(%rbx)
    }
    c6a1:	90                   	nop
    c6a2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c6a6:	c9                   	leave
    c6a7:	c3                   	ret

000000000000c6a8 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    c6a8:	55                   	push   %rbp
    c6a9:	48 89 e5             	mov    %rsp,%rbp
    c6ac:	48 83 ec 20          	sub    $0x20,%rsp
    c6b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c6b8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    c6bc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c6c0:	48 89 d0             	mov    %rdx,%rax
    c6c3:	48 c1 e0 03          	shl    $0x3,%rax
    c6c7:	48 29 d0             	sub    %rdx,%rax
    c6ca:	48 c1 e0 02          	shl    $0x2,%rax
    c6ce:	48 89 c2             	mov    %rax,%rdx
    c6d1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c6d5:	48 89 d6             	mov    %rdx,%rsi
    c6d8:	48 89 c7             	mov    %rax,%rdi
    c6db:	e8 c0 7d ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    c6e0:	c9                   	leave
    c6e1:	c3                   	ret

000000000000c6e2 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    c6e2:	55                   	push   %rbp
    c6e3:	48 89 e5             	mov    %rsp,%rbp
    c6e6:	48 83 ec 10          	sub    $0x10,%rsp
    c6ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    c6ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6f2:	48 89 c7             	mov    %rax,%rdi
    c6f5:	e8 52 06 00 00       	call   cd4c <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>
      }
    c6fa:	c9                   	leave
    c6fb:	c3                   	ret

000000000000c6fc <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    c6fc:	55                   	push   %rbp
    c6fd:	48 89 e5             	mov    %rsp,%rbp
    c700:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    c704:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c708:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c70f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c713:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    c71a:	00 
    c71b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c71f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    c726:	00 
	{ }
    c727:	90                   	nop
    c728:	5d                   	pop    %rbp
    c729:	c3                   	ret

000000000000c72a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    c72a:	55                   	push   %rbp
    c72b:	48 89 e5             	mov    %rsp,%rbp
    c72e:	48 83 ec 10          	sub    $0x10,%rsp
    c732:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c736:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    c73a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c73f:	74 15                	je     c756 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x2c>
    c741:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c745:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c749:	48 89 d6             	mov    %rdx,%rsi
    c74c:	48 89 c7             	mov    %rax,%rdi
    c74f:	e8 12 06 00 00       	call   cd66 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>
    c754:	eb 05                	jmp    c75b <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x31>
    c756:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    c75b:	c9                   	leave
    c75c:	c3                   	ret

000000000000c75d <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    c75d:	55                   	push   %rbp
    c75e:	48 89 e5             	mov    %rsp,%rbp
    c761:	48 83 ec 20          	sub    $0x20,%rsp
    c765:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c769:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    c76d:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    c771:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c775:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c779:	48 89 d6             	mov    %rdx,%rsi
    c77c:	48 89 c7             	mov    %rax,%rdi
    c77f:	e8 0c 06 00 00       	call   cd90 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>
    }
    c784:	c9                   	leave
    c785:	c3                   	ret

000000000000c786 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    c786:	55                   	push   %rbp
    c787:	48 89 e5             	mov    %rsp,%rbp
    c78a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c78e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c792:	90                   	nop
    c793:	5d                   	pop    %rbp
    c794:	c3                   	ret
    c795:	90                   	nop

000000000000c796 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    c796:	55                   	push   %rbp
    c797:	48 89 e5             	mov    %rsp,%rbp
    c79a:	48 83 ec 20          	sub    $0x20,%rsp
    c79e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c7a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c7a6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    c7aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c7ae:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c7b5:	00 
    c7b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c7ba:	48 89 d6             	mov    %rdx,%rsi
    c7bd:	48 89 c7             	mov    %rax,%rdi
    c7c0:	e8 db 7c ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    c7c5:	c9                   	leave
    c7c6:	c3                   	ret

000000000000c7c7 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    c7c7:	55                   	push   %rbp
    c7c8:	48 89 e5             	mov    %rsp,%rbp
    c7cb:	48 83 ec 10          	sub    $0x10,%rsp
    c7cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    c7d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7d7:	48 89 c7             	mov    %rax,%rdi
    c7da:	e8 0f 06 00 00       	call   cdee <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>
      }
    c7df:	c9                   	leave
    c7e0:	c3                   	ret
    c7e1:	90                   	nop

000000000000c7e2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    c7e2:	55                   	push   %rbp
    c7e3:	48 89 e5             	mov    %rsp,%rbp
    c7e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    c7ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7ee:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c7f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7f9:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    c800:	00 
    c801:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c805:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    c80c:	00 
	{ }
    c80d:	90                   	nop
    c80e:	5d                   	pop    %rbp
    c80f:	c3                   	ret

000000000000c810 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    c810:	55                   	push   %rbp
    c811:	48 89 e5             	mov    %rsp,%rbp
    c814:	48 83 ec 10          	sub    $0x10,%rsp
    c818:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c81c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    c820:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c825:	74 15                	je     c83c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x2c>
    c827:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c82b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c82f:	48 89 d6             	mov    %rdx,%rsi
    c832:	48 89 c7             	mov    %rax,%rdi
    c835:	e8 ce 05 00 00       	call   ce08 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>
    c83a:	eb 05                	jmp    c841 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x31>
    c83c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    c841:	c9                   	leave
    c842:	c3                   	ret

000000000000c843 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    c843:	55                   	push   %rbp
    c844:	48 89 e5             	mov    %rsp,%rbp
    c847:	48 83 ec 20          	sub    $0x20,%rsp
    c84b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c84f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    c853:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    c857:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c85b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c85f:	48 89 d6             	mov    %rdx,%rsi
    c862:	48 89 c7             	mov    %rax,%rdi
    c865:	e8 c8 05 00 00       	call   ce32 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>
    }
    c86a:	c9                   	leave
    c86b:	c3                   	ret

000000000000c86c <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>:
    c86c:	55                   	push   %rbp
    c86d:	48 89 e5             	mov    %rsp,%rbp
    c870:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c874:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c878:	90                   	nop
    c879:	5d                   	pop    %rbp
    c87a:	c3                   	ret
    c87b:	90                   	nop

000000000000c87c <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    c87c:	55                   	push   %rbp
    c87d:	48 89 e5             	mov    %rsp,%rbp
    c880:	48 83 ec 20          	sub    $0x20,%rsp
    c884:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c888:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c88c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    c890:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c894:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    c89b:	00 
    c89c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c8a0:	48 89 d6             	mov    %rdx,%rsi
    c8a3:	48 89 c7             	mov    %rax,%rdi
    c8a6:	e8 f5 7b ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    c8ab:	c9                   	leave
    c8ac:	c3                   	ret

000000000000c8ad <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    c8ad:	55                   	push   %rbp
    c8ae:	48 89 e5             	mov    %rsp,%rbp
    c8b1:	48 83 ec 10          	sub    $0x10,%rsp
    c8b5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    c8b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8bd:	48 89 c7             	mov    %rax,%rdi
    c8c0:	e8 cb 05 00 00       	call   ce90 <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>
      }
    c8c5:	c9                   	leave
    c8c6:	c3                   	ret
    c8c7:	90                   	nop

000000000000c8c8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    c8c8:	55                   	push   %rbp
    c8c9:	48 89 e5             	mov    %rsp,%rbp
    c8cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    c8d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8d4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c8db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8df:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    c8e6:	00 
    c8e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8eb:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    c8f2:	00 
	{ }
    c8f3:	90                   	nop
    c8f4:	5d                   	pop    %rbp
    c8f5:	c3                   	ret

000000000000c8f6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    c8f6:	55                   	push   %rbp
    c8f7:	48 89 e5             	mov    %rsp,%rbp
    c8fa:	48 83 ec 10          	sub    $0x10,%rsp
    c8fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c902:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    c906:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c90b:	74 15                	je     c922 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x2c>
    c90d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c911:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c915:	48 89 d6             	mov    %rdx,%rsi
    c918:	48 89 c7             	mov    %rax,%rdi
    c91b:	e8 8a 05 00 00       	call   ceaa <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>
    c920:	eb 05                	jmp    c927 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x31>
    c922:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    c927:	c9                   	leave
    c928:	c3                   	ret

000000000000c929 <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    c929:	55                   	push   %rbp
    c92a:	48 89 e5             	mov    %rsp,%rbp
    c92d:	48 83 ec 20          	sub    $0x20,%rsp
    c931:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c935:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    c939:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    c93d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c941:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c945:	48 89 d6             	mov    %rdx,%rsi
    c948:	48 89 c7             	mov    %rax,%rdi
    c94b:	e8 84 05 00 00       	call   ced4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>
    }
    c950:	c9                   	leave
    c951:	c3                   	ret

000000000000c952 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>:
    c952:	55                   	push   %rbp
    c953:	48 89 e5             	mov    %rsp,%rbp
    c956:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c95a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c95e:	90                   	nop
    c95f:	5d                   	pop    %rbp
    c960:	c3                   	ret
    c961:	90                   	nop

000000000000c962 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    c962:	55                   	push   %rbp
    c963:	48 89 e5             	mov    %rsp,%rbp
    c966:	48 83 ec 20          	sub    $0x20,%rsp
    c96a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c96e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c972:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    c976:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c97a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c981:	00 
    c982:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c986:	48 89 d6             	mov    %rdx,%rsi
    c989:	48 89 c7             	mov    %rax,%rdi
    c98c:	e8 0f 7b ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    c991:	c9                   	leave
    c992:	c3                   	ret
    c993:	90                   	nop

000000000000c994 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    c994:	55                   	push   %rbp
    c995:	48 89 e5             	mov    %rsp,%rbp
    c998:	48 83 ec 10          	sub    $0x10,%rsp
    c99c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    c9a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9a4:	48 89 c7             	mov    %rax,%rdi
    c9a7:	e8 86 05 00 00       	call   cf32 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    c9ac:	c9                   	leave
    c9ad:	c3                   	ret

000000000000c9ae <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    c9ae:	55                   	push   %rbp
    c9af:	48 89 e5             	mov    %rsp,%rbp
    c9b2:	48 83 ec 10          	sub    $0x10,%rsp
    c9b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    c9be:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c9c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9c6:	ba 00 00 00 00       	mov    $0x0,%edx
    c9cb:	48 89 ce             	mov    %rcx,%rsi
    c9ce:	48 89 c7             	mov    %rax,%rdi
    c9d1:	e8 70 05 00 00       	call   cf46 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
    c9d6:	c9                   	leave
    c9d7:	c3                   	ret

000000000000c9d8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    c9d8:	55                   	push   %rbp
    c9d9:	48 89 e5             	mov    %rsp,%rbp
    c9dc:	48 83 ec 20          	sub    $0x20,%rsp
    c9e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c9e4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    c9e8:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    c9ed:	74 43                	je     ca32 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    c9ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c9f3:	48 89 c7             	mov    %rax,%rdi
    c9f6:	e8 b6 05 00 00       	call   cfb1 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
    c9fb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    c9ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca03:	48 89 c7             	mov    %rax,%rdi
    ca06:	e8 b4 05 00 00       	call   cfbf <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
    ca0b:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
    ca12:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    ca13:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ca17:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    ca1b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ca1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca23:	48 89 ce             	mov    %rcx,%rsi
    ca26:	48 89 c7             	mov    %rax,%rdi
    ca29:	e8 eb 05 00 00       	call   d019 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
    ca2e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    ca32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    ca36:	c9                   	leave
    ca37:	c3                   	ret

000000000000ca38 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    ca38:	55                   	push   %rbp
    ca39:	48 89 e5             	mov    %rsp,%rbp
    ca3c:	48 83 ec 10          	sub    $0x10,%rsp
    ca40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    ca44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca48:	48 89 c7             	mov    %rax,%rdi
    ca4b:	e8 0e 06 00 00       	call   d05e <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    ca50:	c9                   	leave
    ca51:	c3                   	ret

000000000000ca52 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    ca52:	55                   	push   %rbp
    ca53:	48 89 e5             	mov    %rsp,%rbp
    ca56:	48 83 ec 10          	sub    $0x10,%rsp
    ca5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ca5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    ca62:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ca66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca6a:	ba 00 00 00 00       	mov    $0x0,%edx
    ca6f:	48 89 ce             	mov    %rcx,%rsi
    ca72:	48 89 c7             	mov    %rax,%rdi
    ca75:	e8 f8 05 00 00       	call   d072 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    ca7a:	c9                   	leave
    ca7b:	c3                   	ret

000000000000ca7c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    ca7c:	55                   	push   %rbp
    ca7d:	48 89 e5             	mov    %rsp,%rbp
    ca80:	48 83 ec 20          	sub    $0x20,%rsp
    ca84:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ca88:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    ca8c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    ca91:	74 43                	je     cad6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    ca93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca97:	48 89 c7             	mov    %rax,%rdi
    ca9a:	e8 3e 06 00 00       	call   d0dd <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    ca9f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    caa3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caa7:	48 89 c7             	mov    %rax,%rdi
    caaa:	e8 3c 06 00 00       	call   d0eb <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    caaf:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    cab6:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    cab7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cabb:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    cabf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cac3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cac7:	48 89 ce             	mov    %rcx,%rsi
    caca:	48 89 c7             	mov    %rax,%rdi
    cacd:	e8 73 06 00 00       	call   d145 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    cad2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    cad6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    cada:	c9                   	leave
    cadb:	c3                   	ret

000000000000cadc <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    cadc:	55                   	push   %rbp
    cadd:	48 89 e5             	mov    %rsp,%rbp
    cae0:	48 83 ec 10          	sub    $0x10,%rsp
    cae4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    cae8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caec:	48 89 c7             	mov    %rax,%rdi
    caef:	e8 96 06 00 00       	call   d18a <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    caf4:	c9                   	leave
    caf5:	c3                   	ret

000000000000caf6 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    caf6:	55                   	push   %rbp
    caf7:	48 89 e5             	mov    %rsp,%rbp
    cafa:	48 83 ec 10          	sub    $0x10,%rsp
    cafe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cb02:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    cb06:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cb0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb0e:	ba 00 00 00 00       	mov    $0x0,%edx
    cb13:	48 89 ce             	mov    %rcx,%rsi
    cb16:	48 89 c7             	mov    %rax,%rdi
    cb19:	e8 80 06 00 00       	call   d19e <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    cb1e:	c9                   	leave
    cb1f:	c3                   	ret

000000000000cb20 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    cb20:	55                   	push   %rbp
    cb21:	48 89 e5             	mov    %rsp,%rbp
    cb24:	48 83 ec 20          	sub    $0x20,%rsp
    cb28:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cb2c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    cb30:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    cb35:	74 40                	je     cb77 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    cb37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb3b:	48 89 c7             	mov    %rax,%rdi
    cb3e:	e8 bc 06 00 00       	call   d1ff <_ZSt11__addressofIPKcEPT_RS2_>
    cb43:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    cb47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb4b:	48 89 c7             	mov    %rax,%rdi
    cb4e:	e8 ba 06 00 00       	call   d20d <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    cb53:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    cb58:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cb5c:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    cb60:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cb64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb68:	48 89 ce             	mov    %rcx,%rsi
    cb6b:	48 89 c7             	mov    %rax,%rdi
    cb6e:	e8 c1 06 00 00       	call   d234 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    cb73:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    cb77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    cb7b:	c9                   	leave
    cb7c:	c3                   	ret
    cb7d:	90                   	nop

000000000000cb7e <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    cb7e:	55                   	push   %rbp
    cb7f:	48 89 e5             	mov    %rsp,%rbp
    cb82:	48 83 ec 10          	sub    $0x10,%rsp
    cb86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    cb8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb8e:	48 89 c7             	mov    %rax,%rdi
    cb91:	e8 e2 06 00 00       	call   d278 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    cb96:	c9                   	leave
    cb97:	c3                   	ret

000000000000cb98 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    cb98:	55                   	push   %rbp
    cb99:	48 89 e5             	mov    %rsp,%rbp
    cb9c:	48 83 ec 10          	sub    $0x10,%rsp
    cba0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cba4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    cba8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cbac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbb0:	ba 00 00 00 00       	mov    $0x0,%edx
    cbb5:	48 89 ce             	mov    %rcx,%rsi
    cbb8:	48 89 c7             	mov    %rax,%rdi
    cbbb:	e8 cc 06 00 00       	call   d28c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    cbc0:	c9                   	leave
    cbc1:	c3                   	ret

000000000000cbc2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    cbc2:	55                   	push   %rbp
    cbc3:	48 89 e5             	mov    %rsp,%rbp
    cbc6:	48 83 ec 20          	sub    $0x20,%rsp
    cbca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cbce:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    cbd2:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    cbd7:	74 40                	je     cc19 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    cbd9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cbdd:	48 89 c7             	mov    %rax,%rdi
    cbe0:	e8 08 07 00 00       	call   d2ed <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    cbe5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    cbe9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbed:	48 89 c7             	mov    %rax,%rdi
    cbf0:	e8 06 07 00 00       	call   d2fb <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    cbf5:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    cbfa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cbfe:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    cc02:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cc06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc0a:	48 89 ce             	mov    %rcx,%rsi
    cc0d:	48 89 c7             	mov    %rax,%rdi
    cc10:	e8 0d 07 00 00       	call   d322 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    cc15:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    cc19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    cc1d:	c9                   	leave
    cc1e:	c3                   	ret
    cc1f:	90                   	nop

000000000000cc20 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    cc20:	55                   	push   %rbp
    cc21:	48 89 e5             	mov    %rsp,%rbp
    cc24:	48 83 ec 10          	sub    $0x10,%rsp
    cc28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    cc2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc30:	48 89 c7             	mov    %rax,%rdi
    cc33:	e8 2e 07 00 00       	call   d366 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    cc38:	c9                   	leave
    cc39:	c3                   	ret

000000000000cc3a <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    cc3a:	55                   	push   %rbp
    cc3b:	48 89 e5             	mov    %rsp,%rbp
    cc3e:	48 83 ec 10          	sub    $0x10,%rsp
    cc42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cc46:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    cc4a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cc4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc52:	ba 00 00 00 00       	mov    $0x0,%edx
    cc57:	48 89 ce             	mov    %rcx,%rsi
    cc5a:	48 89 c7             	mov    %rax,%rdi
    cc5d:	e8 18 07 00 00       	call   d37a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    cc62:	c9                   	leave
    cc63:	c3                   	ret

000000000000cc64 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    cc64:	55                   	push   %rbp
    cc65:	48 89 e5             	mov    %rsp,%rbp
    cc68:	48 83 ec 20          	sub    $0x20,%rsp
    cc6c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cc70:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    cc74:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    cc79:	74 40                	je     ccbb <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    cc7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc7f:	48 89 c7             	mov    %rax,%rdi
    cc82:	e8 c2 f9 ff ff       	call   c649 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    cc87:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    cc8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc8f:	48 89 c7             	mov    %rax,%rdi
    cc92:	e8 4d 07 00 00       	call   d3e4 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    cc97:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    cc9c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cca0:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    cca4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cca8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ccac:	48 89 ce             	mov    %rcx,%rsi
    ccaf:	48 89 c7             	mov    %rax,%rdi
    ccb2:	e8 76 07 00 00       	call   d42d <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    ccb7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    ccbb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    ccbf:	c9                   	leave
    ccc0:	c3                   	ret
    ccc1:	90                   	nop

000000000000ccc2 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    ccc2:	55                   	push   %rbp
    ccc3:	48 89 e5             	mov    %rsp,%rbp
    ccc6:	48 83 ec 10          	sub    $0x10,%rsp
    ccca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    ccce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccd2:	48 89 c7             	mov    %rax,%rdi
    ccd5:	e8 98 07 00 00       	call   d472 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    ccda:	c9                   	leave
    ccdb:	c3                   	ret

000000000000ccdc <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>:
      allocate(allocator_type& __a, size_type __n)
    ccdc:	55                   	push   %rbp
    ccdd:	48 89 e5             	mov    %rsp,%rbp
    cce0:	48 83 ec 10          	sub    $0x10,%rsp
    cce4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cce8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    ccec:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ccf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccf4:	ba 00 00 00 00       	mov    $0x0,%edx
    ccf9:	48 89 ce             	mov    %rcx,%rsi
    ccfc:	48 89 c7             	mov    %rax,%rdi
    ccff:	e8 82 07 00 00       	call   d486 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>
    cd04:	c9                   	leave
    cd05:	c3                   	ret

000000000000cd06 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    cd06:	55                   	push   %rbp
    cd07:	48 89 e5             	mov    %rsp,%rbp
    cd0a:	48 83 ec 20          	sub    $0x20,%rsp
    cd0e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cd12:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
    cd16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd1a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
    cd1e:	eb 1e                	jmp    cd3e <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
    cd20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd24:	48 89 c7             	mov    %rax,%rdi
    cd27:	e8 c5 07 00 00       	call   d4f1 <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>
    cd2c:	48 89 c7             	mov    %rax,%rdi
    cd2f:	e8 cb 07 00 00       	call   d4ff <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
    cd34:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
    cd39:	48 83 45 f8 1c       	addq   $0x1c,-0x8(%rbp)
    cd3e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    cd43:	75 db                	jne    cd20 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x1a>
	      return __cur;
    cd45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    cd49:	c9                   	leave
    cd4a:	c3                   	ret
    cd4b:	90                   	nop

000000000000cd4c <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    cd4c:	55                   	push   %rbp
    cd4d:	48 89 e5             	mov    %rsp,%rbp
    cd50:	48 83 ec 10          	sub    $0x10,%rsp
    cd54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    cd58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd5c:	48 89 c7             	mov    %rax,%rdi
    cd5f:	e8 c4 07 00 00       	call   d528 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    cd64:	c9                   	leave
    cd65:	c3                   	ret

000000000000cd66 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    cd66:	55                   	push   %rbp
    cd67:	48 89 e5             	mov    %rsp,%rbp
    cd6a:	48 83 ec 10          	sub    $0x10,%rsp
    cd6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cd72:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    cd76:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cd7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd7e:	ba 00 00 00 00       	mov    $0x0,%edx
    cd83:	48 89 ce             	mov    %rcx,%rsi
    cd86:	48 89 c7             	mov    %rax,%rdi
    cd89:	e8 ae 07 00 00       	call   d53c <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>
    cd8e:	c9                   	leave
    cd8f:	c3                   	ret

000000000000cd90 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    cd90:	55                   	push   %rbp
    cd91:	48 89 e5             	mov    %rsp,%rbp
    cd94:	48 83 ec 20          	sub    $0x20,%rsp
    cd98:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cd9c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    cda0:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    cda5:	74 40                	je     cde7 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    cda7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cdab:	48 89 c7             	mov    %rax,%rdi
    cdae:	e8 ea 07 00 00       	call   d59d <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>
    cdb3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    cdb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdbb:	48 89 c7             	mov    %rax,%rdi
    cdbe:	e8 e8 07 00 00       	call   d5ab <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>
	      ++__first;
    cdc3:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    cdc8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cdcc:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    cdd0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cdd4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cdd8:	48 89 ce             	mov    %rcx,%rsi
    cddb:	48 89 c7             	mov    %rax,%rdi
    cdde:	e8 f5 07 00 00       	call   d5d8 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>
    cde3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    cde7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    cdeb:	c9                   	leave
    cdec:	c3                   	ret
    cded:	90                   	nop

000000000000cdee <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    cdee:	55                   	push   %rbp
    cdef:	48 89 e5             	mov    %rsp,%rbp
    cdf2:	48 83 ec 10          	sub    $0x10,%rsp
    cdf6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    cdfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdfe:	48 89 c7             	mov    %rax,%rdi
    ce01:	e8 16 08 00 00       	call   d61c <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    ce06:	c9                   	leave
    ce07:	c3                   	ret

000000000000ce08 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    ce08:	55                   	push   %rbp
    ce09:	48 89 e5             	mov    %rsp,%rbp
    ce0c:	48 83 ec 10          	sub    $0x10,%rsp
    ce10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce14:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    ce18:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ce1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce20:	ba 00 00 00 00       	mov    $0x0,%edx
    ce25:	48 89 ce             	mov    %rcx,%rsi
    ce28:	48 89 c7             	mov    %rax,%rdi
    ce2b:	e8 00 08 00 00       	call   d630 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>
    ce30:	c9                   	leave
    ce31:	c3                   	ret

000000000000ce32 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    ce32:	55                   	push   %rbp
    ce33:	48 89 e5             	mov    %rsp,%rbp
    ce36:	48 83 ec 20          	sub    $0x20,%rsp
    ce3a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ce3e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    ce42:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    ce47:	74 40                	je     ce89 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    ce49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce4d:	48 89 c7             	mov    %rax,%rdi
    ce50:	e8 3c 08 00 00       	call   d691 <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>
    ce55:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    ce59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce5d:	48 89 c7             	mov    %rax,%rdi
    ce60:	e8 3a 08 00 00       	call   d69f <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>
	      ++__first;
    ce65:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    ce6a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ce6e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    ce72:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ce76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce7a:	48 89 ce             	mov    %rcx,%rsi
    ce7d:	48 89 c7             	mov    %rax,%rdi
    ce80:	e8 40 08 00 00       	call   d6c5 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>
    ce85:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    ce89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    ce8d:	c9                   	leave
    ce8e:	c3                   	ret
    ce8f:	90                   	nop

000000000000ce90 <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    ce90:	55                   	push   %rbp
    ce91:	48 89 e5             	mov    %rsp,%rbp
    ce94:	48 83 ec 10          	sub    $0x10,%rsp
    ce98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    ce9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cea0:	48 89 c7             	mov    %rax,%rdi
    cea3:	e8 62 08 00 00       	call   d70a <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    cea8:	c9                   	leave
    cea9:	c3                   	ret

000000000000ceaa <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    ceaa:	55                   	push   %rbp
    ceab:	48 89 e5             	mov    %rsp,%rbp
    ceae:	48 83 ec 10          	sub    $0x10,%rsp
    ceb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ceb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    ceba:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cebe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cec2:	ba 00 00 00 00       	mov    $0x0,%edx
    cec7:	48 89 ce             	mov    %rcx,%rsi
    ceca:	48 89 c7             	mov    %rax,%rdi
    cecd:	e8 4c 08 00 00       	call   d71e <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>
    ced2:	c9                   	leave
    ced3:	c3                   	ret

000000000000ced4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    ced4:	55                   	push   %rbp
    ced5:	48 89 e5             	mov    %rsp,%rbp
    ced8:	48 83 ec 20          	sub    $0x20,%rsp
    cedc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cee0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    cee4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    cee9:	74 40                	je     cf2b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    ceeb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ceef:	48 89 c7             	mov    %rax,%rdi
    cef2:	e8 88 08 00 00       	call   d77f <_ZSt11__addressofIP9VkImage_TEPT_RS2_>
    cef7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    cefb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ceff:	48 89 c7             	mov    %rax,%rdi
    cf02:	e8 86 08 00 00       	call   d78d <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>
	      ++__first;
    cf07:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    cf0c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cf10:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    cf14:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cf18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cf1c:	48 89 ce             	mov    %rcx,%rsi
    cf1f:	48 89 c7             	mov    %rax,%rdi
    cf22:	e8 8d 08 00 00       	call   d7b4 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>
    cf27:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    cf2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    cf2f:	c9                   	leave
    cf30:	c3                   	ret
    cf31:	90                   	nop

000000000000cf32 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    cf32:	55                   	push   %rbp
    cf33:	48 89 e5             	mov    %rsp,%rbp
    cf36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    cf3a:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    cf41:	03 3f 00 
      }
    cf44:	5d                   	pop    %rbp
    cf45:	c3                   	ret

000000000000cf46 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    cf46:	55                   	push   %rbp
    cf47:	48 89 e5             	mov    %rsp,%rbp
    cf4a:	48 83 ec 20          	sub    $0x20,%rsp
    cf4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf52:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cf56:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    cf5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf5e:	48 89 c7             	mov    %rax,%rdi
    cf61:	e8 cc ff ff ff       	call   cf32 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    cf66:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    cf6a:	0f 92 c0             	setb   %al
    cf6d:	0f b6 c0             	movzbl %al,%eax
    cf70:	48 85 c0             	test   %rax,%rax
    cf73:	0f 95 c0             	setne  %al
    cf76:	84 c0                	test   %al,%al
    cf78:	74 1a                	je     cf94 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    cf7a:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    cf81:	07 7e 00 
    cf84:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    cf88:	73 05                	jae    cf8f <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    cf8a:	e8 81 73 ff ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    cf8f:	e8 7c 71 ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    cf94:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cf98:	48 89 d0             	mov    %rdx,%rax
    cf9b:	48 c1 e0 06          	shl    $0x6,%rax
    cf9f:	48 01 d0             	add    %rdx,%rax
    cfa2:	48 c1 e0 03          	shl    $0x3,%rax
    cfa6:	48 89 c7             	mov    %rax,%rdi
    cfa9:	e8 d2 74 ff ff       	call   4480 <_Znwm@plt>
    cfae:	90                   	nop
      }
    cfaf:	c9                   	leave
    cfb0:	c3                   	ret

000000000000cfb1 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    cfb1:	55                   	push   %rbp
    cfb2:	48 89 e5             	mov    %rsp,%rbp
    cfb5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    cfb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfbd:	5d                   	pop    %rbp
    cfbe:	c3                   	ret

000000000000cfbf <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    cfbf:	55                   	push   %rbp
    cfc0:	48 89 e5             	mov    %rsp,%rbp
    cfc3:	48 83 ec 10          	sub    $0x10,%rsp
    cfc7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    cfcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfcf:	48 89 c6             	mov    %rax,%rsi
    cfd2:	bf 08 02 00 00       	mov    $0x208,%edi
    cfd7:	e8 9c 96 ff ff       	call   6678 <_ZnwmPv>
    cfdc:	b9 08 02 00 00       	mov    $0x208,%ecx
    cfe1:	be 00 00 00 00       	mov    $0x0,%esi
    cfe6:	48 89 30             	mov    %rsi,(%rax)
    cfe9:	89 ca                	mov    %ecx,%edx
    cfeb:	48 01 c2             	add    %rax,%rdx
    cfee:	48 83 c2 08          	add    $0x8,%rdx
    cff2:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    cff6:	48 8d 50 08          	lea    0x8(%rax),%rdx
    cffa:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    cffe:	48 29 d0             	sub    %rdx,%rax
    d001:	01 c1                	add    %eax,%ecx
    d003:	83 e1 f8             	and    $0xfffffff8,%ecx
    d006:	89 c8                	mov    %ecx,%eax
    d008:	c1 e8 03             	shr    $0x3,%eax
    d00b:	89 c1                	mov    %eax,%ecx
    d00d:	48 89 d7             	mov    %rdx,%rdi
    d010:	48 89 f0             	mov    %rsi,%rax
    d013:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    d016:	90                   	nop
    d017:	c9                   	leave
    d018:	c3                   	ret

000000000000d019 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    d019:	55                   	push   %rbp
    d01a:	48 89 e5             	mov    %rsp,%rbp
    d01d:	48 83 ec 20          	sub    $0x20,%rsp
    d021:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d025:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d029:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    d02d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d031:	48 89 c7             	mov    %rax,%rdi
    d034:	e8 bf 07 00 00       	call   d7f8 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    d039:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d03d:	48 89 c7             	mov    %rax,%rdi
    d040:	e8 45 96 ff ff       	call   668a <_ZSt17__size_to_integerm>
    d045:	48 89 c1             	mov    %rax,%rcx
    d048:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d04c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d050:	48 89 ce             	mov    %rcx,%rsi
    d053:	48 89 c7             	mov    %rax,%rdi
    d056:	e8 a8 07 00 00       	call   d803 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    d05b:	c9                   	leave
    d05c:	c3                   	ret
    d05d:	90                   	nop

000000000000d05e <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    d05e:	55                   	push   %rbp
    d05f:	48 89 e5             	mov    %rsp,%rbp
    d062:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    d066:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    d06d:	07 7e 00 
      }
    d070:	5d                   	pop    %rbp
    d071:	c3                   	ret

000000000000d072 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    d072:	55                   	push   %rbp
    d073:	48 89 e5             	mov    %rsp,%rbp
    d076:	48 83 ec 20          	sub    $0x20,%rsp
    d07a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d07e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d082:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    d086:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d08a:	48 89 c7             	mov    %rax,%rdi
    d08d:	e8 cc ff ff ff       	call   d05e <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    d092:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d096:	0f 92 c0             	setb   %al
    d099:	0f b6 c0             	movzbl %al,%eax
    d09c:	48 85 c0             	test   %rax,%rax
    d09f:	0f 95 c0             	setne  %al
    d0a2:	84 c0                	test   %al,%al
    d0a4:	74 1a                	je     d0c0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    d0a6:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    d0ad:	0f fc 00 
    d0b0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d0b4:	73 05                	jae    d0bb <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    d0b6:	e8 55 72 ff ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    d0bb:	e8 50 70 ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    d0c0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d0c4:	48 89 d0             	mov    %rdx,%rax
    d0c7:	48 c1 e0 06          	shl    $0x6,%rax
    d0cb:	48 01 d0             	add    %rdx,%rax
    d0ce:	48 c1 e0 02          	shl    $0x2,%rax
    d0d2:	48 89 c7             	mov    %rax,%rdi
    d0d5:	e8 a6 73 ff ff       	call   4480 <_Znwm@plt>
    d0da:	90                   	nop
      }
    d0db:	c9                   	leave
    d0dc:	c3                   	ret

000000000000d0dd <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    d0dd:	55                   	push   %rbp
    d0de:	48 89 e5             	mov    %rsp,%rbp
    d0e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    d0e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0e9:	5d                   	pop    %rbp
    d0ea:	c3                   	ret

000000000000d0eb <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    d0eb:	55                   	push   %rbp
    d0ec:	48 89 e5             	mov    %rsp,%rbp
    d0ef:	48 83 ec 10          	sub    $0x10,%rsp
    d0f3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    d0f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0fb:	48 89 c6             	mov    %rax,%rsi
    d0fe:	bf 04 01 00 00       	mov    $0x104,%edi
    d103:	e8 70 95 ff ff       	call   6678 <_ZnwmPv>
    d108:	b9 04 01 00 00       	mov    $0x104,%ecx
    d10d:	be 00 00 00 00       	mov    $0x0,%esi
    d112:	48 89 30             	mov    %rsi,(%rax)
    d115:	89 ca                	mov    %ecx,%edx
    d117:	48 01 c2             	add    %rax,%rdx
    d11a:	48 83 c2 08          	add    $0x8,%rdx
    d11e:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    d122:	48 8d 50 08          	lea    0x8(%rax),%rdx
    d126:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    d12a:	48 29 d0             	sub    %rdx,%rax
    d12d:	01 c1                	add    %eax,%ecx
    d12f:	83 e1 f8             	and    $0xfffffff8,%ecx
    d132:	89 c8                	mov    %ecx,%eax
    d134:	c1 e8 03             	shr    $0x3,%eax
    d137:	89 c1                	mov    %eax,%ecx
    d139:	48 89 d7             	mov    %rdx,%rdi
    d13c:	48 89 f0             	mov    %rsi,%rax
    d13f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    d142:	90                   	nop
    d143:	c9                   	leave
    d144:	c3                   	ret

000000000000d145 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    d145:	55                   	push   %rbp
    d146:	48 89 e5             	mov    %rsp,%rbp
    d149:	48 83 ec 20          	sub    $0x20,%rsp
    d14d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d151:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d155:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    d159:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d15d:	48 89 c7             	mov    %rax,%rdi
    d160:	e8 0d 07 00 00       	call   d872 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    d165:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d169:	48 89 c7             	mov    %rax,%rdi
    d16c:	e8 19 95 ff ff       	call   668a <_ZSt17__size_to_integerm>
    d171:	48 89 c1             	mov    %rax,%rcx
    d174:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d178:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d17c:	48 89 ce             	mov    %rcx,%rsi
    d17f:	48 89 c7             	mov    %rax,%rdi
    d182:	e8 f6 06 00 00       	call   d87d <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    d187:	c9                   	leave
    d188:	c3                   	ret
    d189:	90                   	nop

000000000000d18a <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    d18a:	55                   	push   %rbp
    d18b:	48 89 e5             	mov    %rsp,%rbp
    d18e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    d192:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    d199:	ff ff 0f 
      }
    d19c:	5d                   	pop    %rbp
    d19d:	c3                   	ret

000000000000d19e <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    d19e:	55                   	push   %rbp
    d19f:	48 89 e5             	mov    %rsp,%rbp
    d1a2:	48 83 ec 20          	sub    $0x20,%rsp
    d1a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d1aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d1ae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    d1b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1b6:	48 89 c7             	mov    %rax,%rdi
    d1b9:	e8 cc ff ff ff       	call   d18a <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    d1be:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d1c2:	0f 92 c0             	setb   %al
    d1c5:	0f b6 c0             	movzbl %al,%eax
    d1c8:	48 85 c0             	test   %rax,%rax
    d1cb:	0f 95 c0             	setne  %al
    d1ce:	84 c0                	test   %al,%al
    d1d0:	74 1a                	je     d1ec <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    d1d2:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    d1d9:	ff ff 1f 
    d1dc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d1e0:	73 05                	jae    d1e7 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    d1e2:	e8 29 71 ff ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    d1e7:	e8 24 6f ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    d1ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d1f0:	48 c1 e0 03          	shl    $0x3,%rax
    d1f4:	48 89 c7             	mov    %rax,%rdi
    d1f7:	e8 84 72 ff ff       	call   4480 <_Znwm@plt>
    d1fc:	90                   	nop
      }
    d1fd:	c9                   	leave
    d1fe:	c3                   	ret

000000000000d1ff <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    d1ff:	55                   	push   %rbp
    d200:	48 89 e5             	mov    %rsp,%rbp
    d203:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    d207:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d20b:	5d                   	pop    %rbp
    d20c:	c3                   	ret

000000000000d20d <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    d20d:	55                   	push   %rbp
    d20e:	48 89 e5             	mov    %rsp,%rbp
    d211:	48 83 ec 10          	sub    $0x10,%rsp
    d215:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    d219:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d21d:	48 89 c6             	mov    %rax,%rsi
    d220:	bf 08 00 00 00       	mov    $0x8,%edi
    d225:	e8 4e 94 ff ff       	call   6678 <_ZnwmPv>
    d22a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    d231:	90                   	nop
    d232:	c9                   	leave
    d233:	c3                   	ret

000000000000d234 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    d234:	55                   	push   %rbp
    d235:	48 89 e5             	mov    %rsp,%rbp
    d238:	48 83 ec 20          	sub    $0x20,%rsp
    d23c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d240:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d244:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    d248:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d24c:	48 89 c7             	mov    %rax,%rdi
    d24f:	e8 98 06 00 00       	call   d8ec <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    d254:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d258:	48 89 c7             	mov    %rax,%rdi
    d25b:	e8 2a 94 ff ff       	call   668a <_ZSt17__size_to_integerm>
    d260:	48 89 c1             	mov    %rax,%rcx
    d263:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d267:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d26b:	48 89 ce             	mov    %rcx,%rsi
    d26e:	48 89 c7             	mov    %rax,%rdi
    d271:	e8 81 06 00 00       	call   d8f7 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    d276:	c9                   	leave
    d277:	c3                   	ret

000000000000d278 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    d278:	55                   	push   %rbp
    d279:	48 89 e5             	mov    %rsp,%rbp
    d27c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    d280:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    d287:	ff ff 0f 
      }
    d28a:	5d                   	pop    %rbp
    d28b:	c3                   	ret

000000000000d28c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    d28c:	55                   	push   %rbp
    d28d:	48 89 e5             	mov    %rsp,%rbp
    d290:	48 83 ec 20          	sub    $0x20,%rsp
    d294:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d298:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d29c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    d2a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2a4:	48 89 c7             	mov    %rax,%rdi
    d2a7:	e8 cc ff ff ff       	call   d278 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    d2ac:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d2b0:	0f 92 c0             	setb   %al
    d2b3:	0f b6 c0             	movzbl %al,%eax
    d2b6:	48 85 c0             	test   %rax,%rax
    d2b9:	0f 95 c0             	setne  %al
    d2bc:	84 c0                	test   %al,%al
    d2be:	74 1a                	je     d2da <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    d2c0:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    d2c7:	ff ff 1f 
    d2ca:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d2ce:	73 05                	jae    d2d5 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    d2d0:	e8 3b 70 ff ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    d2d5:	e8 36 6e ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    d2da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d2de:	48 c1 e0 03          	shl    $0x3,%rax
    d2e2:	48 89 c7             	mov    %rax,%rdi
    d2e5:	e8 96 71 ff ff       	call   4480 <_Znwm@plt>
    d2ea:	90                   	nop
      }
    d2eb:	c9                   	leave
    d2ec:	c3                   	ret

000000000000d2ed <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    d2ed:	55                   	push   %rbp
    d2ee:	48 89 e5             	mov    %rsp,%rbp
    d2f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    d2f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2f9:	5d                   	pop    %rbp
    d2fa:	c3                   	ret

000000000000d2fb <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    d2fb:	55                   	push   %rbp
    d2fc:	48 89 e5             	mov    %rsp,%rbp
    d2ff:	48 83 ec 10          	sub    $0x10,%rsp
    d303:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    d307:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d30b:	48 89 c6             	mov    %rax,%rsi
    d30e:	bf 08 00 00 00       	mov    $0x8,%edi
    d313:	e8 60 93 ff ff       	call   6678 <_ZnwmPv>
    d318:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    d31f:	90                   	nop
    d320:	c9                   	leave
    d321:	c3                   	ret

000000000000d322 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    d322:	55                   	push   %rbp
    d323:	48 89 e5             	mov    %rsp,%rbp
    d326:	48 83 ec 20          	sub    $0x20,%rsp
    d32a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d32e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d332:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    d336:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d33a:	48 89 c7             	mov    %rax,%rdi
    d33d:	e8 12 06 00 00       	call   d954 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    d342:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d346:	48 89 c7             	mov    %rax,%rdi
    d349:	e8 3c 93 ff ff       	call   668a <_ZSt17__size_to_integerm>
    d34e:	48 89 c1             	mov    %rax,%rcx
    d351:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d355:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d359:	48 89 ce             	mov    %rcx,%rsi
    d35c:	48 89 c7             	mov    %rax,%rdi
    d35f:	e8 fb 05 00 00       	call   d95f <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    d364:	c9                   	leave
    d365:	c3                   	ret

000000000000d366 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    d366:	55                   	push   %rbp
    d367:	48 89 e5             	mov    %rsp,%rbp
    d36a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    d36e:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    d375:	55 55 05 
      }
    d378:	5d                   	pop    %rbp
    d379:	c3                   	ret

000000000000d37a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    d37a:	55                   	push   %rbp
    d37b:	48 89 e5             	mov    %rsp,%rbp
    d37e:	48 83 ec 20          	sub    $0x20,%rsp
    d382:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d386:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d38a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    d38e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d392:	48 89 c7             	mov    %rax,%rdi
    d395:	e8 cc ff ff ff       	call   d366 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    d39a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d39e:	0f 92 c0             	setb   %al
    d3a1:	0f b6 c0             	movzbl %al,%eax
    d3a4:	48 85 c0             	test   %rax,%rax
    d3a7:	0f 95 c0             	setne  %al
    d3aa:	84 c0                	test   %al,%al
    d3ac:	74 1a                	je     d3c8 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    d3ae:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    d3b5:	aa aa 0a 
    d3b8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d3bc:	73 05                	jae    d3c3 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    d3be:	e8 4d 6f ff ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    d3c3:	e8 48 6d ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    d3c8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d3cc:	48 89 d0             	mov    %rdx,%rax
    d3cf:	48 01 c0             	add    %rax,%rax
    d3d2:	48 01 d0             	add    %rdx,%rax
    d3d5:	48 c1 e0 03          	shl    $0x3,%rax
    d3d9:	48 89 c7             	mov    %rax,%rdi
    d3dc:	e8 9f 70 ff ff       	call   4480 <_Znwm@plt>
    d3e1:	90                   	nop
      }
    d3e2:	c9                   	leave
    d3e3:	c3                   	ret

000000000000d3e4 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    d3e4:	55                   	push   %rbp
    d3e5:	48 89 e5             	mov    %rsp,%rbp
    d3e8:	48 83 ec 10          	sub    $0x10,%rsp
    d3ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    d3f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3f4:	48 89 c6             	mov    %rax,%rsi
    d3f7:	bf 18 00 00 00       	mov    $0x18,%edi
    d3fc:	e8 77 92 ff ff       	call   6678 <_ZnwmPv>
    d401:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    d407:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    d40e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    d415:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    d41c:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    d423:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    d42a:	90                   	nop
    d42b:	c9                   	leave
    d42c:	c3                   	ret

000000000000d42d <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    d42d:	55                   	push   %rbp
    d42e:	48 89 e5             	mov    %rsp,%rbp
    d431:	48 83 ec 20          	sub    $0x20,%rsp
    d435:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d439:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d43d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    d441:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d445:	48 89 c7             	mov    %rax,%rdi
    d448:	e8 6f 05 00 00       	call   d9bc <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    d44d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d451:	48 89 c7             	mov    %rax,%rdi
    d454:	e8 31 92 ff ff       	call   668a <_ZSt17__size_to_integerm>
    d459:	48 89 c1             	mov    %rax,%rcx
    d45c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d460:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d464:	48 89 ce             	mov    %rcx,%rsi
    d467:	48 89 c7             	mov    %rax,%rdi
    d46a:	e8 58 05 00 00       	call   d9c7 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    d46f:	c9                   	leave
    d470:	c3                   	ret
    d471:	90                   	nop

000000000000d472 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    d472:	55                   	push   %rbp
    d473:	48 89 e5             	mov    %rsp,%rbp
    d476:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    d47a:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    d481:	49 92 04 
      }
    d484:	5d                   	pop    %rbp
    d485:	c3                   	ret

000000000000d486 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    d486:	55                   	push   %rbp
    d487:	48 89 e5             	mov    %rsp,%rbp
    d48a:	48 83 ec 20          	sub    $0x20,%rsp
    d48e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d492:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d496:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    d49a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d49e:	48 89 c7             	mov    %rax,%rdi
    d4a1:	e8 cc ff ff ff       	call   d472 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    d4a6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d4aa:	0f 92 c0             	setb   %al
    d4ad:	0f b6 c0             	movzbl %al,%eax
    d4b0:	48 85 c0             	test   %rax,%rax
    d4b3:	0f 95 c0             	setne  %al
    d4b6:	84 c0                	test   %al,%al
    d4b8:	74 1a                	je     d4d4 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    d4ba:	48 b8 24 49 92 24 49 	movabs $0x924924924924924,%rax
    d4c1:	92 24 09 
    d4c4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d4c8:	73 05                	jae    d4cf <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    d4ca:	e8 41 6e ff ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    d4cf:	e8 3c 6c ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    d4d4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d4d8:	48 89 d0             	mov    %rdx,%rax
    d4db:	48 c1 e0 03          	shl    $0x3,%rax
    d4df:	48 29 d0             	sub    %rdx,%rax
    d4e2:	48 c1 e0 02          	shl    $0x2,%rax
    d4e6:	48 89 c7             	mov    %rax,%rdi
    d4e9:	e8 92 6f ff ff       	call   4480 <_Znwm@plt>
    d4ee:	90                   	nop
      }
    d4ef:	c9                   	leave
    d4f0:	c3                   	ret

000000000000d4f1 <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    d4f1:	55                   	push   %rbp
    d4f2:	48 89 e5             	mov    %rsp,%rbp
    d4f5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    d4f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4fd:	5d                   	pop    %rbp
    d4fe:	c3                   	ret

000000000000d4ff <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    d4ff:	55                   	push   %rbp
    d500:	48 89 e5             	mov    %rsp,%rbp
    d503:	48 83 ec 10          	sub    $0x10,%rsp
    d507:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    d50b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d50f:	48 89 c6             	mov    %rax,%rsi
    d512:	bf 1c 00 00 00       	mov    $0x1c,%edi
    d517:	e8 5c 91 ff ff       	call   6678 <_ZnwmPv>
    d51c:	48 89 c7             	mov    %rax,%rdi
    d51f:	e8 6c 05 00 00       	call   da90 <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>
    }
    d524:	90                   	nop
    d525:	c9                   	leave
    d526:	c3                   	ret
    d527:	90                   	nop

000000000000d528 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    d528:	55                   	push   %rbp
    d529:	48 89 e5             	mov    %rsp,%rbp
    d52c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    d530:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    d537:	ff ff 0f 
      }
    d53a:	5d                   	pop    %rbp
    d53b:	c3                   	ret

000000000000d53c <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    d53c:	55                   	push   %rbp
    d53d:	48 89 e5             	mov    %rsp,%rbp
    d540:	48 83 ec 20          	sub    $0x20,%rsp
    d544:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d548:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d54c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    d550:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d554:	48 89 c7             	mov    %rax,%rdi
    d557:	e8 cc ff ff ff       	call   d528 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    d55c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d560:	0f 92 c0             	setb   %al
    d563:	0f b6 c0             	movzbl %al,%eax
    d566:	48 85 c0             	test   %rax,%rax
    d569:	0f 95 c0             	setne  %al
    d56c:	84 c0                	test   %al,%al
    d56e:	74 1a                	je     d58a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    d570:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    d577:	ff ff 1f 
    d57a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d57e:	73 05                	jae    d585 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    d580:	e8 8b 6d ff ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    d585:	e8 86 6b ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    d58a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d58e:	48 c1 e0 03          	shl    $0x3,%rax
    d592:	48 89 c7             	mov    %rax,%rdi
    d595:	e8 e6 6e ff ff       	call   4480 <_Znwm@plt>
    d59a:	90                   	nop
      }
    d59b:	c9                   	leave
    d59c:	c3                   	ret

000000000000d59d <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    d59d:	55                   	push   %rbp
    d59e:	48 89 e5             	mov    %rsp,%rbp
    d5a1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    d5a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5a9:	5d                   	pop    %rbp
    d5aa:	c3                   	ret

000000000000d5ab <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    d5ab:	55                   	push   %rbp
    d5ac:	48 89 e5             	mov    %rsp,%rbp
    d5af:	48 83 ec 10          	sub    $0x10,%rsp
    d5b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    d5b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5bb:	48 89 c6             	mov    %rax,%rsi
    d5be:	bf 08 00 00 00       	mov    $0x8,%edi
    d5c3:	e8 b0 90 ff ff       	call   6678 <_ZnwmPv>
    d5c8:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    d5ce:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    }
    d5d5:	90                   	nop
    d5d6:	c9                   	leave
    d5d7:	c3                   	ret

000000000000d5d8 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    d5d8:	55                   	push   %rbp
    d5d9:	48 89 e5             	mov    %rsp,%rbp
    d5dc:	48 83 ec 20          	sub    $0x20,%rsp
    d5e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d5e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d5e8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    d5ec:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d5f0:	48 89 c7             	mov    %rax,%rdi
    d5f3:	e8 b3 04 00 00       	call   daab <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    d5f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d5fc:	48 89 c7             	mov    %rax,%rdi
    d5ff:	e8 86 90 ff ff       	call   668a <_ZSt17__size_to_integerm>
    d604:	48 89 c1             	mov    %rax,%rcx
    d607:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d60b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d60f:	48 89 ce             	mov    %rcx,%rsi
    d612:	48 89 c7             	mov    %rax,%rdi
    d615:	e8 9c 04 00 00       	call   dab6 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    d61a:	c9                   	leave
    d61b:	c3                   	ret

000000000000d61c <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    d61c:	55                   	push   %rbp
    d61d:	48 89 e5             	mov    %rsp,%rbp
    d620:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    d624:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    d62b:	ff ff 1f 
      }
    d62e:	5d                   	pop    %rbp
    d62f:	c3                   	ret

000000000000d630 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    d630:	55                   	push   %rbp
    d631:	48 89 e5             	mov    %rsp,%rbp
    d634:	48 83 ec 20          	sub    $0x20,%rsp
    d638:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d63c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d640:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    d644:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d648:	48 89 c7             	mov    %rax,%rdi
    d64b:	e8 cc ff ff ff       	call   d61c <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    d650:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d654:	0f 92 c0             	setb   %al
    d657:	0f b6 c0             	movzbl %al,%eax
    d65a:	48 85 c0             	test   %rax,%rax
    d65d:	0f 95 c0             	setne  %al
    d660:	84 c0                	test   %al,%al
    d662:	74 1a                	je     d67e <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    d664:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    d66b:	ff ff 3f 
    d66e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d672:	73 05                	jae    d679 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    d674:	e8 97 6c ff ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    d679:	e8 92 6a ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    d67e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d682:	48 c1 e0 02          	shl    $0x2,%rax
    d686:	48 89 c7             	mov    %rax,%rdi
    d689:	e8 f2 6d ff ff       	call   4480 <_Znwm@plt>
    d68e:	90                   	nop
      }
    d68f:	c9                   	leave
    d690:	c3                   	ret

000000000000d691 <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    d691:	55                   	push   %rbp
    d692:	48 89 e5             	mov    %rsp,%rbp
    d695:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    d699:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d69d:	5d                   	pop    %rbp
    d69e:	c3                   	ret

000000000000d69f <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    d69f:	55                   	push   %rbp
    d6a0:	48 89 e5             	mov    %rsp,%rbp
    d6a3:	48 83 ec 10          	sub    $0x10,%rsp
    d6a7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    d6ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6af:	48 89 c6             	mov    %rax,%rsi
    d6b2:	bf 04 00 00 00       	mov    $0x4,%edi
    d6b7:	e8 bc 8f ff ff       	call   6678 <_ZnwmPv>
    d6bc:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    }
    d6c2:	90                   	nop
    d6c3:	c9                   	leave
    d6c4:	c3                   	ret

000000000000d6c5 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    d6c5:	55                   	push   %rbp
    d6c6:	48 89 e5             	mov    %rsp,%rbp
    d6c9:	48 83 ec 20          	sub    $0x20,%rsp
    d6cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d6d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d6d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    d6d9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d6dd:	48 89 c7             	mov    %rax,%rdi
    d6e0:	e8 2e 04 00 00       	call   db13 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    d6e5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d6e9:	48 89 c7             	mov    %rax,%rdi
    d6ec:	e8 99 8f ff ff       	call   668a <_ZSt17__size_to_integerm>
    d6f1:	48 89 c1             	mov    %rax,%rcx
    d6f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6f8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d6fc:	48 89 ce             	mov    %rcx,%rsi
    d6ff:	48 89 c7             	mov    %rax,%rdi
    d702:	e8 17 04 00 00       	call   db1e <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    d707:	c9                   	leave
    d708:	c3                   	ret
    d709:	90                   	nop

000000000000d70a <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    d70a:	55                   	push   %rbp
    d70b:	48 89 e5             	mov    %rsp,%rbp
    d70e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    d712:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    d719:	ff ff 0f 
      }
    d71c:	5d                   	pop    %rbp
    d71d:	c3                   	ret

000000000000d71e <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    d71e:	55                   	push   %rbp
    d71f:	48 89 e5             	mov    %rsp,%rbp
    d722:	48 83 ec 20          	sub    $0x20,%rsp
    d726:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d72a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d72e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    d732:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d736:	48 89 c7             	mov    %rax,%rdi
    d739:	e8 cc ff ff ff       	call   d70a <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    d73e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d742:	0f 92 c0             	setb   %al
    d745:	0f b6 c0             	movzbl %al,%eax
    d748:	48 85 c0             	test   %rax,%rax
    d74b:	0f 95 c0             	setne  %al
    d74e:	84 c0                	test   %al,%al
    d750:	74 1a                	je     d76c <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    d752:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    d759:	ff ff 1f 
    d75c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d760:	73 05                	jae    d767 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    d762:	e8 a9 6b ff ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    d767:	e8 a4 69 ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    d76c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d770:	48 c1 e0 03          	shl    $0x3,%rax
    d774:	48 89 c7             	mov    %rax,%rdi
    d777:	e8 04 6d ff ff       	call   4480 <_Znwm@plt>
    d77c:	90                   	nop
      }
    d77d:	c9                   	leave
    d77e:	c3                   	ret

000000000000d77f <_ZSt11__addressofIP9VkImage_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    d77f:	55                   	push   %rbp
    d780:	48 89 e5             	mov    %rsp,%rbp
    d783:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    d787:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d78b:	5d                   	pop    %rbp
    d78c:	c3                   	ret

000000000000d78d <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    d78d:	55                   	push   %rbp
    d78e:	48 89 e5             	mov    %rsp,%rbp
    d791:	48 83 ec 10          	sub    $0x10,%rsp
    d795:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    d799:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d79d:	48 89 c6             	mov    %rax,%rsi
    d7a0:	bf 08 00 00 00       	mov    $0x8,%edi
    d7a5:	e8 ce 8e ff ff       	call   6678 <_ZnwmPv>
    d7aa:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    d7b1:	90                   	nop
    d7b2:	c9                   	leave
    d7b3:	c3                   	ret

000000000000d7b4 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    d7b4:	55                   	push   %rbp
    d7b5:	48 89 e5             	mov    %rsp,%rbp
    d7b8:	48 83 ec 20          	sub    $0x20,%rsp
    d7bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d7c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d7c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    d7c8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d7cc:	48 89 c7             	mov    %rax,%rdi
    d7cf:	e8 a7 03 00 00       	call   db7b <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    d7d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d7d8:	48 89 c7             	mov    %rax,%rdi
    d7db:	e8 aa 8e ff ff       	call   668a <_ZSt17__size_to_integerm>
    d7e0:	48 89 c1             	mov    %rax,%rcx
    d7e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d7e7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d7eb:	48 89 ce             	mov    %rcx,%rsi
    d7ee:	48 89 c7             	mov    %rax,%rdi
    d7f1:	e8 90 03 00 00       	call   db86 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    d7f6:	c9                   	leave
    d7f7:	c3                   	ret

000000000000d7f8 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    d7f8:	55                   	push   %rbp
    d7f9:	48 89 e5             	mov    %rsp,%rbp
    d7fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    d800:	90                   	nop
    d801:	5d                   	pop    %rbp
    d802:	c3                   	ret

000000000000d803 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    d803:	55                   	push   %rbp
    d804:	48 89 e5             	mov    %rsp,%rbp
    d807:	48 83 ec 20          	sub    $0x20,%rsp
    d80b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d80f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d813:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    d817:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d81c:	75 06                	jne    d824 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    d81e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d822:	eb 4c                	jmp    d870 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    d824:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d828:	48 89 d0             	mov    %rdx,%rax
    d82b:	48 c1 e0 06          	shl    $0x6,%rax
    d82f:	48 01 d0             	add    %rdx,%rax
    d832:	48 c1 e0 03          	shl    $0x3,%rax
    d836:	48 89 c2             	mov    %rax,%rdx
    d839:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d83d:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    d841:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d845:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d849:	48 89 ce             	mov    %rcx,%rsi
    d84c:	48 89 c7             	mov    %rax,%rdi
    d84f:	e8 8f 03 00 00       	call   dbe3 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    d854:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d858:	48 89 d0             	mov    %rdx,%rax
    d85b:	48 c1 e0 06          	shl    $0x6,%rax
    d85f:	48 01 d0             	add    %rdx,%rax
    d862:	48 c1 e0 03          	shl    $0x3,%rax
    d866:	48 89 c2             	mov    %rax,%rdx
    d869:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d86d:	48 01 d0             	add    %rdx,%rax
    }
    d870:	c9                   	leave
    d871:	c3                   	ret

000000000000d872 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    d872:	55                   	push   %rbp
    d873:	48 89 e5             	mov    %rsp,%rbp
    d876:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    d87a:	90                   	nop
    d87b:	5d                   	pop    %rbp
    d87c:	c3                   	ret

000000000000d87d <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    d87d:	55                   	push   %rbp
    d87e:	48 89 e5             	mov    %rsp,%rbp
    d881:	48 83 ec 20          	sub    $0x20,%rsp
    d885:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d889:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d88d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    d891:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d896:	75 06                	jne    d89e <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    d898:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d89c:	eb 4c                	jmp    d8ea <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    d89e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d8a2:	48 89 d0             	mov    %rdx,%rax
    d8a5:	48 c1 e0 06          	shl    $0x6,%rax
    d8a9:	48 01 d0             	add    %rdx,%rax
    d8ac:	48 c1 e0 02          	shl    $0x2,%rax
    d8b0:	48 89 c2             	mov    %rax,%rdx
    d8b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8b7:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    d8bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d8bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8c3:	48 89 ce             	mov    %rcx,%rsi
    d8c6:	48 89 c7             	mov    %rax,%rdi
    d8c9:	e8 43 03 00 00       	call   dc11 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    d8ce:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d8d2:	48 89 d0             	mov    %rdx,%rax
    d8d5:	48 c1 e0 06          	shl    $0x6,%rax
    d8d9:	48 01 d0             	add    %rdx,%rax
    d8dc:	48 c1 e0 02          	shl    $0x2,%rax
    d8e0:	48 89 c2             	mov    %rax,%rdx
    d8e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8e7:	48 01 d0             	add    %rdx,%rax
    }
    d8ea:	c9                   	leave
    d8eb:	c3                   	ret

000000000000d8ec <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    d8ec:	55                   	push   %rbp
    d8ed:	48 89 e5             	mov    %rsp,%rbp
    d8f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    d8f4:	90                   	nop
    d8f5:	5d                   	pop    %rbp
    d8f6:	c3                   	ret

000000000000d8f7 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    d8f7:	55                   	push   %rbp
    d8f8:	48 89 e5             	mov    %rsp,%rbp
    d8fb:	48 83 ec 20          	sub    $0x20,%rsp
    d8ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d903:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d907:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    d90b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d910:	75 06                	jne    d918 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    d912:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d916:	eb 3a                	jmp    d952 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    d918:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d91c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    d923:	00 
    d924:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d928:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    d92c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d930:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d934:	48 89 ce             	mov    %rcx,%rsi
    d937:	48 89 c7             	mov    %rax,%rdi
    d93a:	e8 00 03 00 00       	call   dc3f <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    d93f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d943:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    d94a:	00 
    d94b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d94f:	48 01 d0             	add    %rdx,%rax
    }
    d952:	c9                   	leave
    d953:	c3                   	ret

000000000000d954 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    d954:	55                   	push   %rbp
    d955:	48 89 e5             	mov    %rsp,%rbp
    d958:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    d95c:	90                   	nop
    d95d:	5d                   	pop    %rbp
    d95e:	c3                   	ret

000000000000d95f <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    d95f:	55                   	push   %rbp
    d960:	48 89 e5             	mov    %rsp,%rbp
    d963:	48 83 ec 20          	sub    $0x20,%rsp
    d967:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d96b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d96f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    d973:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d978:	75 06                	jne    d980 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    d97a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d97e:	eb 3a                	jmp    d9ba <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    d980:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d984:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    d98b:	00 
    d98c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d990:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    d994:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d998:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d99c:	48 89 ce             	mov    %rcx,%rsi
    d99f:	48 89 c7             	mov    %rax,%rdi
    d9a2:	e8 c6 02 00 00       	call   dc6d <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    d9a7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d9ab:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    d9b2:	00 
    d9b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9b7:	48 01 d0             	add    %rdx,%rax
    }
    d9ba:	c9                   	leave
    d9bb:	c3                   	ret

000000000000d9bc <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    d9bc:	55                   	push   %rbp
    d9bd:	48 89 e5             	mov    %rsp,%rbp
    d9c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    d9c4:	90                   	nop
    d9c5:	5d                   	pop    %rbp
    d9c6:	c3                   	ret

000000000000d9c7 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    d9c7:	55                   	push   %rbp
    d9c8:	48 89 e5             	mov    %rsp,%rbp
    d9cb:	48 83 ec 20          	sub    $0x20,%rsp
    d9cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d9d3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d9d7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    d9db:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d9e0:	75 06                	jne    d9e8 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    d9e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9e6:	eb 4a                	jmp    da32 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    d9e8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d9ec:	48 89 d0             	mov    %rdx,%rax
    d9ef:	48 01 c0             	add    %rax,%rax
    d9f2:	48 01 d0             	add    %rdx,%rax
    d9f5:	48 c1 e0 03          	shl    $0x3,%rax
    d9f9:	48 89 c2             	mov    %rax,%rdx
    d9fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da00:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    da04:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    da08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da0c:	48 89 ce             	mov    %rcx,%rsi
    da0f:	48 89 c7             	mov    %rax,%rdi
    da12:	e8 84 02 00 00       	call   dc9b <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    da17:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    da1b:	48 89 d0             	mov    %rdx,%rax
    da1e:	48 01 c0             	add    %rax,%rax
    da21:	48 01 d0             	add    %rdx,%rax
    da24:	48 c1 e0 03          	shl    $0x3,%rax
    da28:	48 89 c2             	mov    %rax,%rdx
    da2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da2f:	48 01 d0             	add    %rdx,%rax
    }
    da32:	c9                   	leave
    da33:	c3                   	ret

000000000000da34 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>:
      _Optional_payload_base() = default;
    da34:	55                   	push   %rbp
    da35:	48 89 e5             	mov    %rsp,%rbp
    da38:	48 83 ec 10          	sub    $0x10,%rsp
    da3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da44:	48 89 c7             	mov    %rax,%rdi
    da47:	e8 7e 02 00 00       	call   dcca <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>
    da4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da50:	c6 40 18 00          	movb   $0x0,0x18(%rax)
    da54:	90                   	nop
    da55:	c9                   	leave
    da56:	c3                   	ret
    da57:	90                   	nop

000000000000da58 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>:
      _Optional_payload() = default;
    da58:	55                   	push   %rbp
    da59:	48 89 e5             	mov    %rsp,%rbp
    da5c:	48 83 ec 10          	sub    $0x10,%rsp
    da60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da68:	48 89 c7             	mov    %rax,%rdi
    da6b:	e8 c4 ff ff ff       	call   da34 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>
    da70:	90                   	nop
    da71:	c9                   	leave
    da72:	c3                   	ret
    da73:	90                   	nop

000000000000da74 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    da74:	55                   	push   %rbp
    da75:	48 89 e5             	mov    %rsp,%rbp
    da78:	48 83 ec 10          	sub    $0x10,%rsp
    da7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da84:	48 89 c7             	mov    %rax,%rdi
    da87:	e8 cc ff ff ff       	call   da58 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>
    da8c:	90                   	nop
    da8d:	c9                   	leave
    da8e:	c3                   	ret
    da8f:	90                   	nop

000000000000da90 <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>:
      constexpr optional() noexcept { }
    da90:	55                   	push   %rbp
    da91:	48 89 e5             	mov    %rsp,%rbp
    da94:	48 83 ec 10          	sub    $0x10,%rsp
    da98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    daa0:	48 89 c7             	mov    %rax,%rdi
    daa3:	e8 cc ff ff ff       	call   da74 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>
    daa8:	90                   	nop
    daa9:	c9                   	leave
    daaa:	c3                   	ret

000000000000daab <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    daab:	55                   	push   %rbp
    daac:	48 89 e5             	mov    %rsp,%rbp
    daaf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    dab3:	90                   	nop
    dab4:	5d                   	pop    %rbp
    dab5:	c3                   	ret

000000000000dab6 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    dab6:	55                   	push   %rbp
    dab7:	48 89 e5             	mov    %rsp,%rbp
    daba:	48 83 ec 20          	sub    $0x20,%rsp
    dabe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dac2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dac6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    daca:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    dacf:	75 06                	jne    dad7 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    dad1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dad5:	eb 3a                	jmp    db11 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    dad7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dadb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    dae2:	00 
    dae3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dae7:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    daeb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    daef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    daf3:	48 89 ce             	mov    %rcx,%rsi
    daf6:	48 89 c7             	mov    %rax,%rdi
    daf9:	e8 d7 01 00 00       	call   dcd5 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    dafe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    db02:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    db09:	00 
    db0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db0e:	48 01 d0             	add    %rdx,%rax
    }
    db11:	c9                   	leave
    db12:	c3                   	ret

000000000000db13 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    db13:	55                   	push   %rbp
    db14:	48 89 e5             	mov    %rsp,%rbp
    db17:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    db1b:	90                   	nop
    db1c:	5d                   	pop    %rbp
    db1d:	c3                   	ret

000000000000db1e <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    db1e:	55                   	push   %rbp
    db1f:	48 89 e5             	mov    %rsp,%rbp
    db22:	48 83 ec 20          	sub    $0x20,%rsp
    db26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    db2e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    db32:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    db37:	75 06                	jne    db3f <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    db39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db3d:	eb 3a                	jmp    db79 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    db3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    db43:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    db4a:	00 
    db4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db4f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    db53:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    db57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db5b:	48 89 ce             	mov    %rcx,%rsi
    db5e:	48 89 c7             	mov    %rax,%rdi
    db61:	e8 9d 01 00 00       	call   dd03 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    db66:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    db6a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    db71:	00 
    db72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db76:	48 01 d0             	add    %rdx,%rax
    }
    db79:	c9                   	leave
    db7a:	c3                   	ret

000000000000db7b <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    db7b:	55                   	push   %rbp
    db7c:	48 89 e5             	mov    %rsp,%rbp
    db7f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    db83:	90                   	nop
    db84:	5d                   	pop    %rbp
    db85:	c3                   	ret

000000000000db86 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    db86:	55                   	push   %rbp
    db87:	48 89 e5             	mov    %rsp,%rbp
    db8a:	48 83 ec 20          	sub    $0x20,%rsp
    db8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    db96:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    db9a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    db9f:	75 06                	jne    dba7 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    dba1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dba5:	eb 3a                	jmp    dbe1 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    dba7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dbab:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    dbb2:	00 
    dbb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbb7:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    dbbb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dbbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbc3:	48 89 ce             	mov    %rcx,%rsi
    dbc6:	48 89 c7             	mov    %rax,%rdi
    dbc9:	e8 63 01 00 00       	call   dd31 <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>
      return __first + __n;
    dbce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dbd2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    dbd9:	00 
    dbda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbde:	48 01 d0             	add    %rdx,%rax
    }
    dbe1:	c9                   	leave
    dbe2:	c3                   	ret

000000000000dbe3 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    dbe3:	55                   	push   %rbp
    dbe4:	48 89 e5             	mov    %rsp,%rbp
    dbe7:	48 83 ec 20          	sub    $0x20,%rsp
    dbeb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dbef:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dbf3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    dbf7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dbfb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dbff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc03:	48 89 ce             	mov    %rcx,%rsi
    dc06:	48 89 c7             	mov    %rax,%rdi
    dc09:	e8 51 01 00 00       	call   dd5f <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    dc0e:	90                   	nop
    dc0f:	c9                   	leave
    dc10:	c3                   	ret

000000000000dc11 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    dc11:	55                   	push   %rbp
    dc12:	48 89 e5             	mov    %rsp,%rbp
    dc15:	48 83 ec 20          	sub    $0x20,%rsp
    dc19:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc1d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dc21:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    dc25:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dc29:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dc2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc31:	48 89 ce             	mov    %rcx,%rsi
    dc34:	48 89 c7             	mov    %rax,%rdi
    dc37:	e8 9b 01 00 00       	call   ddd7 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    dc3c:	90                   	nop
    dc3d:	c9                   	leave
    dc3e:	c3                   	ret

000000000000dc3f <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    dc3f:	55                   	push   %rbp
    dc40:	48 89 e5             	mov    %rsp,%rbp
    dc43:	48 83 ec 20          	sub    $0x20,%rsp
    dc47:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc4b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dc4f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    dc53:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dc57:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dc5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc5f:	48 89 ce             	mov    %rcx,%rsi
    dc62:	48 89 c7             	mov    %rax,%rdi
    dc65:	e8 e5 01 00 00       	call   de4f <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    dc6a:	90                   	nop
    dc6b:	c9                   	leave
    dc6c:	c3                   	ret

000000000000dc6d <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    dc6d:	55                   	push   %rbp
    dc6e:	48 89 e5             	mov    %rsp,%rbp
    dc71:	48 83 ec 20          	sub    $0x20,%rsp
    dc75:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc79:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dc7d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    dc81:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dc85:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dc89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc8d:	48 89 ce             	mov    %rcx,%rsi
    dc90:	48 89 c7             	mov    %rax,%rdi
    dc93:	e8 f2 01 00 00       	call   de8a <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    dc98:	90                   	nop
    dc99:	c9                   	leave
    dc9a:	c3                   	ret

000000000000dc9b <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    dc9b:	55                   	push   %rbp
    dc9c:	48 89 e5             	mov    %rsp,%rbp
    dc9f:	48 83 ec 20          	sub    $0x20,%rsp
    dca3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dca7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dcab:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    dcaf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dcb3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dcb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcbb:	48 89 ce             	mov    %rcx,%rsi
    dcbe:	48 89 c7             	mov    %rax,%rdi
    dcc1:	e8 ff 01 00 00       	call   dec5 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    dcc6:	90                   	nop
    dcc7:	c9                   	leave
    dcc8:	c3                   	ret
    dcc9:	90                   	nop

000000000000dcca <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    dcca:	55                   	push   %rbp
    dccb:	48 89 e5             	mov    %rsp,%rbp
    dcce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dcd2:	90                   	nop
    dcd3:	5d                   	pop    %rbp
    dcd4:	c3                   	ret

000000000000dcd5 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    dcd5:	55                   	push   %rbp
    dcd6:	48 89 e5             	mov    %rsp,%rbp
    dcd9:	48 83 ec 20          	sub    $0x20,%rsp
    dcdd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dce1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dce5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    dce9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dced:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dcf1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcf5:	48 89 ce             	mov    %rcx,%rsi
    dcf8:	48 89 c7             	mov    %rax,%rdi
    dcfb:	e8 08 02 00 00       	call   df08 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    dd00:	90                   	nop
    dd01:	c9                   	leave
    dd02:	c3                   	ret

000000000000dd03 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    dd03:	55                   	push   %rbp
    dd04:	48 89 e5             	mov    %rsp,%rbp
    dd07:	48 83 ec 20          	sub    $0x20,%rsp
    dd0b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dd0f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dd13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    dd17:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dd1b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dd1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd23:	48 89 ce             	mov    %rcx,%rsi
    dd26:	48 89 c7             	mov    %rax,%rdi
    dd29:	e8 0d 02 00 00       	call   df3b <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    dd2e:	90                   	nop
    dd2f:	c9                   	leave
    dd30:	c3                   	ret

000000000000dd31 <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    dd31:	55                   	push   %rbp
    dd32:	48 89 e5             	mov    %rsp,%rbp
    dd35:	48 83 ec 20          	sub    $0x20,%rsp
    dd39:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dd3d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dd41:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    dd45:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dd49:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dd4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd51:	48 89 ce             	mov    %rcx,%rsi
    dd54:	48 89 c7             	mov    %rax,%rdi
    dd57:	e8 10 02 00 00       	call   df6c <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    dd5c:	90                   	nop
    dd5d:	c9                   	leave
    dd5e:	c3                   	ret

000000000000dd5f <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    dd5f:	55                   	push   %rbp
    dd60:	48 89 e5             	mov    %rsp,%rbp
    dd63:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dd67:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dd6b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    dd6f:	eb 58                	jmp    ddc9 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    dd71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd75:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dd79:	b9 08 02 00 00       	mov    $0x208,%ecx
    dd7e:	48 8b 32             	mov    (%rdx),%rsi
    dd81:	48 89 30             	mov    %rsi,(%rax)
    dd84:	89 ce                	mov    %ecx,%esi
    dd86:	48 01 c6             	add    %rax,%rsi
    dd89:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    dd8d:	89 ce                	mov    %ecx,%esi
    dd8f:	48 01 d6             	add    %rdx,%rsi
    dd92:	48 83 c6 08          	add    $0x8,%rsi
    dd96:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    dd9a:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    dd9e:	48 8d 78 08          	lea    0x8(%rax),%rdi
    dda2:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    dda6:	48 29 f8             	sub    %rdi,%rax
    dda9:	48 29 c2             	sub    %rax,%rdx
    ddac:	01 c1                	add    %eax,%ecx
    ddae:	83 e1 f8             	and    $0xfffffff8,%ecx
    ddb1:	89 c8                	mov    %ecx,%eax
    ddb3:	c1 e8 03             	shr    $0x3,%eax
    ddb6:	89 c0                	mov    %eax,%eax
    ddb8:	48 89 d6             	mov    %rdx,%rsi
    ddbb:	48 89 c1             	mov    %rax,%rcx
    ddbe:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    ddc1:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
    ddc8:	00 
    ddc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ddcd:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ddd1:	75 9e                	jne    dd71 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    ddd3:	90                   	nop
    ddd4:	90                   	nop
    ddd5:	5d                   	pop    %rbp
    ddd6:	c3                   	ret

000000000000ddd7 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    ddd7:	55                   	push   %rbp
    ddd8:	48 89 e5             	mov    %rsp,%rbp
    dddb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dddf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dde3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    dde7:	eb 58                	jmp    de41 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    dde9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dded:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ddf1:	b9 04 01 00 00       	mov    $0x104,%ecx
    ddf6:	48 8b 32             	mov    (%rdx),%rsi
    ddf9:	48 89 30             	mov    %rsi,(%rax)
    ddfc:	89 ce                	mov    %ecx,%esi
    ddfe:	48 01 c6             	add    %rax,%rsi
    de01:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    de05:	89 ce                	mov    %ecx,%esi
    de07:	48 01 d6             	add    %rdx,%rsi
    de0a:	48 83 c6 08          	add    $0x8,%rsi
    de0e:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    de12:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    de16:	48 8d 78 08          	lea    0x8(%rax),%rdi
    de1a:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    de1e:	48 29 f8             	sub    %rdi,%rax
    de21:	48 29 c2             	sub    %rax,%rdx
    de24:	01 c1                	add    %eax,%ecx
    de26:	83 e1 f8             	and    $0xfffffff8,%ecx
    de29:	89 c8                	mov    %ecx,%eax
    de2b:	c1 e8 03             	shr    $0x3,%eax
    de2e:	89 c0                	mov    %eax,%eax
    de30:	48 89 d6             	mov    %rdx,%rsi
    de33:	48 89 c1             	mov    %rax,%rcx
    de36:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    de39:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    de40:	00 
    de41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de45:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    de49:	75 9e                	jne    dde9 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    de4b:	90                   	nop
    de4c:	90                   	nop
    de4d:	5d                   	pop    %rbp
    de4e:	c3                   	ret

000000000000de4f <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    de4f:	55                   	push   %rbp
    de50:	48 89 e5             	mov    %rsp,%rbp
    de53:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    de57:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    de5b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    de5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    de63:	48 8b 00             	mov    (%rax),%rax
    de66:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    de6a:	eb 10                	jmp    de7c <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    de6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    de70:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    de74:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    de77:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    de7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    de80:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    de84:	75 e6                	jne    de6c <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    de86:	90                   	nop
    de87:	90                   	nop
    de88:	5d                   	pop    %rbp
    de89:	c3                   	ret

000000000000de8a <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    de8a:	55                   	push   %rbp
    de8b:	48 89 e5             	mov    %rsp,%rbp
    de8e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    de92:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    de96:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    de9a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    de9e:	48 8b 00             	mov    (%rax),%rax
    dea1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    dea5:	eb 10                	jmp    deb7 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    dea7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    deab:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    deaf:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    deb2:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    deb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    debb:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    debf:	75 e6                	jne    dea7 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    dec1:	90                   	nop
    dec2:	90                   	nop
    dec3:	5d                   	pop    %rbp
    dec4:	c3                   	ret

000000000000dec5 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    dec5:	55                   	push   %rbp
    dec6:	48 89 e5             	mov    %rsp,%rbp
    dec9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    decd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ded1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    ded5:	eb 23                	jmp    defa <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    ded7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    dedb:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    dedf:	48 8b 06             	mov    (%rsi),%rax
    dee2:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    dee6:	48 89 01             	mov    %rax,(%rcx)
    dee9:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    deed:	48 8b 46 10          	mov    0x10(%rsi),%rax
    def1:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    def5:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    defa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    defe:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    df02:	75 d3                	jne    ded7 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    df04:	90                   	nop
    df05:	90                   	nop
    df06:	5d                   	pop    %rbp
    df07:	c3                   	ret

000000000000df08 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    df08:	55                   	push   %rbp
    df09:	48 89 e5             	mov    %rsp,%rbp
    df0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    df10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    df14:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    df18:	eb 13                	jmp    df2d <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x25>
	*__first = __value;
    df1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df1e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    df22:	48 8b 12             	mov    (%rdx),%rdx
    df25:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    df28:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    df2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df31:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    df35:	75 e3                	jne    df1a <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    df37:	90                   	nop
    df38:	90                   	nop
    df39:	5d                   	pop    %rbp
    df3a:	c3                   	ret

000000000000df3b <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    df3b:	55                   	push   %rbp
    df3c:	48 89 e5             	mov    %rsp,%rbp
    df3f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    df43:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    df47:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    df4b:	eb 11                	jmp    df5e <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x23>
	*__first = __value;
    df4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df51:	8b 10                	mov    (%rax),%edx
    df53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df57:	89 10                	mov    %edx,(%rax)
      for (; __first != __last; ++__first)
    df59:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
    df5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df62:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    df66:	75 e5                	jne    df4d <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    df68:	90                   	nop
    df69:	90                   	nop
    df6a:	5d                   	pop    %rbp
    df6b:	c3                   	ret

000000000000df6c <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    df6c:	55                   	push   %rbp
    df6d:	48 89 e5             	mov    %rsp,%rbp
    df70:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    df74:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    df78:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    df7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    df80:	48 8b 00             	mov    (%rax),%rax
    df83:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    df87:	eb 10                	jmp    df99 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    df89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df8d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    df91:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    df94:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    df99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df9d:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    dfa1:	75 e6                	jne    df89 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    dfa3:	90                   	nop
    dfa4:	90                   	nop
    dfa5:	5d                   	pop    %rbp
    dfa6:	c3                   	ret

000000000000dfa7 <_ZN3vkh27checkValidationLayerSupportEv>:
#include "validation_layers.hpp"

namespace vkh {

bool checkValidationLayerSupport() {
    dfa7:	55                   	push   %rbp
    dfa8:	48 89 e5             	mov    %rsp,%rbp
    dfab:	53                   	push   %rbx
    dfac:	48 83 ec 58          	sub    $0x58,%rsp
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    dfb0:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    dfb4:	be 00 00 00 00       	mov    $0x0,%esi
    dfb9:	48 89 c7             	mov    %rax,%rdi
    dfbc:	e8 bf 65 ff ff       	call   4580 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    dfc1:	8b 45 c8             	mov    -0x38(%rbp),%eax
    dfc4:	89 c3                	mov    %eax,%ebx
    dfc6:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    dfca:	48 89 c7             	mov    %rax,%rdi
    dfcd:	e8 ea b6 ff ff       	call   96bc <_ZNSaI17VkLayerPropertiesEC1Ev>
    dfd2:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    dfd6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    dfda:	48 89 de             	mov    %rbx,%rsi
    dfdd:	48 89 c7             	mov    %rax,%rdi
    dfe0:	e8 0f b7 ff ff       	call   96f4 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    dfe5:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    dfe9:	48 89 c7             	mov    %rax,%rdi
    dfec:	e8 e7 b6 ff ff       	call   96d8 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    dff1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    dff5:	48 89 c7             	mov    %rax,%rdi
    dff8:	e8 b1 b7 ff ff       	call   97ae <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    dffd:	48 89 c2             	mov    %rax,%rdx
    e000:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    e004:	48 89 d6             	mov    %rdx,%rsi
    e007:	48 89 c7             	mov    %rax,%rdi
    e00a:	e8 71 65 ff ff       	call   4580 <vkEnumerateInstanceLayerProperties@plt>

  for (const auto &layerProperties : availableLayers) {
    e00f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e013:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e017:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e01b:	48 89 c7             	mov    %rax,%rdi
    e01e:	e8 63 04 00 00       	call   e486 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    e023:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    e027:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e02b:	48 89 c7             	mov    %rax,%rdi
    e02e:	e8 79 04 00 00       	call   e4ac <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    e033:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    e037:	eb 5b                	jmp    e094 <_ZN3vkh27checkValidationLayerSupportEv+0xed>
    e039:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    e03d:	48 89 c7             	mov    %rax,%rdi
    e040:	e8 ef 04 00 00       	call   e534 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    e045:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    if (validationLayerName == layerProperties.layerName) {
    e049:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    e04d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    e051:	48 89 d6             	mov    %rdx,%rsi
    e054:	48 89 c7             	mov    %rax,%rdi
    e057:	e8 f8 03 00 00       	call   e454 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>
    e05c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e060:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e064:	48 8b 3d 35 2c 02 00 	mov    0x22c35(%rip),%rdi        # 30ca0 <_ZN3vkh19validationLayerNameE>
    e06b:	48 8b 35 36 2c 02 00 	mov    0x22c36(%rip),%rsi        # 30ca8 <_ZN3vkh19validationLayerNameE+0x8>
    e072:	48 89 d1             	mov    %rdx,%rcx
    e075:	48 89 c2             	mov    %rax,%rdx
    e078:	e8 da 04 00 00       	call   e557 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>
    e07d:	84 c0                	test   %al,%al
    e07f:	74 07                	je     e088 <_ZN3vkh27checkValidationLayerSupportEv+0xe1>
      return true;
    e081:	bb 01 00 00 00       	mov    $0x1,%ebx
    e086:	eb 28                	jmp    e0b0 <_ZN3vkh27checkValidationLayerSupportEv+0x109>
  for (const auto &layerProperties : availableLayers) {
    e088:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    e08c:	48 89 c7             	mov    %rax,%rdi
    e08f:	e8 7c 04 00 00       	call   e510 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    e094:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    e098:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    e09c:	48 89 d6             	mov    %rdx,%rsi
    e09f:	48 89 c7             	mov    %rax,%rdi
    e0a2:	e8 2e 04 00 00       	call   e4d5 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    e0a7:	84 c0                	test   %al,%al
    e0a9:	75 8e                	jne    e039 <_ZN3vkh27checkValidationLayerSupportEv+0x92>
    }
  }
  return false;
    e0ab:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    e0b0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e0b4:	48 89 c7             	mov    %rax,%rdi
    e0b7:	e8 ae b6 ff ff       	call   976a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    e0bc:	89 d8                	mov    %ebx,%eax
    e0be:	eb 34                	jmp    e0f4 <_ZN3vkh27checkValidationLayerSupportEv+0x14d>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    e0c0:	48 89 c3             	mov    %rax,%rbx
    e0c3:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    e0c7:	48 89 c7             	mov    %rax,%rdi
    e0ca:	e8 09 b6 ff ff       	call   96d8 <_ZNSaI17VkLayerPropertiesED1Ev>
    e0cf:	48 89 d8             	mov    %rbx,%rax
    e0d2:	48 89 c7             	mov    %rax,%rdi
    e0d5:	e8 26 68 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    e0da:	48 89 c3             	mov    %rax,%rbx
    e0dd:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e0e1:	48 89 c7             	mov    %rax,%rdi
    e0e4:	e8 81 b6 ff ff       	call   976a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    e0e9:	48 89 d8             	mov    %rbx,%rax
    e0ec:	48 89 c7             	mov    %rax,%rdi
    e0ef:	e8 0c 68 ff ff       	call   4900 <_Unwind_Resume@plt>
    e0f4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e0f8:	c9                   	leave
    e0f9:	c3                   	ret

000000000000e0fa <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL
debugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
              [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
              const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
              [[maybe_unused]] void *pUserData) {
    e0fa:	55                   	push   %rbp
    e0fb:	48 89 e5             	mov    %rsp,%rbp
    e0fe:	48 83 ec 20          	sub    $0x20,%rsp
    e102:	89 7d fc             	mov    %edi,-0x4(%rbp)
    e105:	89 75 f8             	mov    %esi,-0x8(%rbp)
    e108:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    e10c:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    e110:	8b 45 fc             	mov    -0x4(%rbp),%eax
    e113:	83 f8 01             	cmp    $0x1,%eax
    e116:	7e 3c                	jle    e154 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    e118:	be 0a 00 00 00       	mov    $0xa,%esi
    e11d:	48 8d 05 bc 33 02 00 	lea    0x233bc(%rip),%rax        # 314e0 <_ZSt4cerr@GLIBCXX_3.4>
    e124:	48 89 c7             	mov    %rax,%rdi
    e127:	e8 74 64 ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    e12c:	48 89 c2             	mov    %rax,%rdx
    e12f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e133:	48 8b 40 28          	mov    0x28(%rax),%rax
    e137:	48 89 c6             	mov    %rax,%rsi
    e13a:	48 89 d7             	mov    %rdx,%rdi
    e13d:	e8 2e 63 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    e142:	48 8b 15 4f 2e 02 00 	mov    0x22e4f(%rip),%rdx        # 30f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    e149:	48 89 d6             	mov    %rdx,%rsi
    e14c:	48 89 c7             	mov    %rax,%rdi
    e14f:	e8 9c 63 ff ff       	call   44f0 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    e154:	b8 00 00 00 00       	mov    $0x0,%eax
}
    e159:	c9                   	leave
    e15a:	c3                   	ret

000000000000e15b <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo) {
    e15b:	55                   	push   %rbp
    e15c:	48 89 e5             	mov    %rsp,%rbp
    e15f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  createInfo = {};
    e163:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e167:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e16b:	0f 11 00             	movups %xmm0,(%rax)
    e16e:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    e172:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    e176:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e17a:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
  createInfo.messageSeverity =
    e180:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e184:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      //  VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  createInfo.messageType = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
    e18b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e18f:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
                           VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
                           VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  createInfo.pfnUserCallback = debugCallback;
    e196:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e19a:	48 8d 15 59 ff ff ff 	lea    -0xa7(%rip),%rdx        # e0fa <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    e1a1:	48 89 50 20          	mov    %rdx,0x20(%rax)
  createInfo.pUserData = nullptr;
    e1a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1a9:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    e1b0:	00 
}
    e1b1:	90                   	nop
    e1b2:	5d                   	pop    %rbp
    e1b3:	c3                   	ret

000000000000e1b4 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult createDebugUtilsMessengerEXT(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    e1b4:	55                   	push   %rbp
    e1b5:	48 89 e5             	mov    %rsp,%rbp
    e1b8:	48 83 ec 30          	sub    $0x30,%rsp
    e1bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e1c0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e1c4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    e1c8:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    e1cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e1d0:	48 8d 15 39 18 01 00 	lea    0x11839(%rip),%rdx        # 1fa10 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x28>
    e1d7:	48 89 d6             	mov    %rdx,%rsi
    e1da:	48 89 c7             	mov    %rax,%rdi
    e1dd:	e8 4e 62 ff ff       	call   4430 <vkGetInstanceProcAddr@plt>
    e1e2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (func == nullptr) {
    e1e6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    e1eb:	75 07                	jne    e1f4 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x40>
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    e1ed:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    e1f2:	eb 1b                	jmp    e20f <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5b>
  }
  return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    e1f4:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    e1f8:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    e1fc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e200:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    e204:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e208:	48 89 c7             	mov    %rax,%rdi
    e20b:	41 ff d0             	call   *%r8
    e20e:	90                   	nop
}
    e20f:	c9                   	leave
    e210:	c3                   	ret

000000000000e211 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>:

VkDebugUtilsMessengerEXT createDebugMessenger(VkInstance instance) {
    e211:	55                   	push   %rbp
    e212:	48 89 e5             	mov    %rsp,%rbp
    e215:	41 54                	push   %r12
    e217:	53                   	push   %rbx
    e218:	48 83 ec 50          	sub    $0x50,%rsp
    e21c:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkDebugUtilsMessengerCreateInfoEXT createInfo;
  populateDebugMessengerCreateInfo(createInfo);
    e220:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    e224:	48 89 c7             	mov    %rax,%rdi
    e227:	e8 2f ff ff ff       	call   e15b <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  VkDebugUtilsMessengerEXT debugMessenger{};
    e22c:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    e233:	00 
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    e234:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    e238:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    e23c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    e240:	48 89 d1             	mov    %rdx,%rcx
    e243:	ba 00 00 00 00       	mov    $0x0,%edx
    e248:	48 89 c7             	mov    %rax,%rdi
    e24b:	e8 64 ff ff ff       	call   e1b4 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                   &debugMessenger) != VK_SUCCESS) {
    e250:	85 c0                	test   %eax,%eax
    e252:	0f 95 c0             	setne  %al
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    e255:	84 c0                	test   %al,%al
    e257:	74 3b                	je     e294 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x83>
    throw std::runtime_error("Failed to set up debug message.");
    e259:	bf 10 00 00 00       	mov    $0x10,%edi
    e25e:	e8 5d 5f ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    e263:	48 89 c3             	mov    %rax,%rbx
    e266:	48 8d 05 c3 17 01 00 	lea    0x117c3(%rip),%rax        # 1fa30 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x48>
    e26d:	48 89 c6             	mov    %rax,%rsi
    e270:	48 89 df             	mov    %rbx,%rdi
    e273:	e8 b8 5e ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    e278:	48 8b 05 29 2d 02 00 	mov    0x22d29(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    e27f:	48 89 c2             	mov    %rax,%rdx
    e282:	48 8d 05 b7 2a 02 00 	lea    0x22ab7(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    e289:	48 89 c6             	mov    %rax,%rsi
    e28c:	48 89 df             	mov    %rbx,%rdi
    e28f:	e8 fc 65 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return debugMessenger;
    e294:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e298:	eb 16                	jmp    e2b0 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x9f>
    throw std::runtime_error("Failed to set up debug message.");
    e29a:	49 89 c4             	mov    %rax,%r12
    e29d:	48 89 df             	mov    %rbx,%rdi
    e2a0:	e8 2b 60 ff ff       	call   42d0 <__cxa_free_exception@plt>
    e2a5:	4c 89 e0             	mov    %r12,%rax
    e2a8:	48 89 c7             	mov    %rax,%rdi
    e2ab:	e8 50 66 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    e2b0:	48 83 c4 50          	add    $0x50,%rsp
    e2b4:	5b                   	pop    %rbx
    e2b5:	41 5c                	pop    %r12
    e2b7:	5d                   	pop    %rbp
    e2b8:	c3                   	ret

000000000000e2b9 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator) {
    e2b9:	55                   	push   %rbp
    e2ba:	48 89 e5             	mov    %rsp,%rbp
    e2bd:	48 83 ec 30          	sub    $0x30,%rsp
    e2c1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e2c5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e2c9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    e2cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e2d1:	48 8d 15 78 17 01 00 	lea    0x11778(%rip),%rdx        # 1fa50 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x68>
    e2d8:	48 89 d6             	mov    %rdx,%rsi
    e2db:	48 89 c7             	mov    %rax,%rdi
    e2de:	e8 4d 61 ff ff       	call   4430 <vkGetInstanceProcAddr@plt>
    e2e3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    e2e7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    e2ec:	74 19                	je     e307 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4e>
    func(instance, debugMessenger, pAllocator);
    e2ee:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    e2f2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e2f6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e2fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e2fe:	48 89 ce             	mov    %rcx,%rsi
    e301:	48 89 c7             	mov    %rax,%rdi
    e304:	41 ff d0             	call   *%r8
  }
}
    e307:	90                   	nop
    e308:	c9                   	leave
    e309:	c3                   	ret

000000000000e30a <_Z41__static_initialization_and_destruction_0ii>:

    e30a:	55                   	push   %rbp
    e30b:	48 89 e5             	mov    %rsp,%rbp
    e30e:	48 83 ec 10          	sub    $0x10,%rsp
    e312:	89 7d fc             	mov    %edi,-0x4(%rbp)
    e315:	89 75 f8             	mov    %esi,-0x8(%rbp)
    e318:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    e31c:	75 3b                	jne    e359 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    e31e:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    e325:	75 32                	jne    e359 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    e327:	48 8d 05 1a 33 02 00 	lea    0x2331a(%rip),%rax        # 31648 <_ZStL8__ioinit>
    e32e:	48 89 c7             	mov    %rax,%rdi
    e331:	e8 6a 64 ff ff       	call   47a0 <_ZNSt8ios_base4InitC1Ev@plt>
    e336:	48 8d 05 7b 31 02 00 	lea    0x2317b(%rip),%rax        # 314b8 <__dso_handle>
    e33d:	48 89 c2             	mov    %rax,%rdx
    e340:	48 8d 05 01 33 02 00 	lea    0x23301(%rip),%rax        # 31648 <_ZStL8__ioinit>
    e347:	48 89 c6             	mov    %rax,%rsi
    e34a:	48 8b 05 77 2c 02 00 	mov    0x22c77(%rip),%rax        # 30fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    e351:	48 89 c7             	mov    %rax,%rdi
    e354:	e8 77 60 ff ff       	call   43d0 <__cxa_atexit@plt>
    e359:	90                   	nop
    e35a:	c9                   	leave
    e35b:	c3                   	ret

000000000000e35c <_GLOBAL__sub_I__ZN3vkh27checkValidationLayerSupportEv>:
    e35c:	55                   	push   %rbp
    e35d:	48 89 e5             	mov    %rsp,%rbp
    e360:	be ff ff 00 00       	mov    $0xffff,%esi
    e365:	bf 01 00 00 00       	mov    $0x1,%edi
    e36a:	e8 9b ff ff ff       	call   e30a <_Z41__static_initialization_and_destruction_0ii>
    e36f:	5d                   	pop    %rbp
    e370:	c3                   	ret

000000000000e371 <_ZNSt11char_traitsIcE2ltERKcS2_>:
      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    e371:	55                   	push   %rbp
    e372:	48 89 e5             	mov    %rsp,%rbp
    e375:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e379:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return (static_cast<unsigned char>(__c1)
    e37d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e381:	0f b6 00             	movzbl (%rax),%eax
    e384:	89 c2                	mov    %eax,%edx
		< static_cast<unsigned char>(__c2));
    e386:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e38a:	0f b6 00             	movzbl (%rax),%eax
    e38d:	38 c2                	cmp    %al,%dl
    e38f:	0f 92 c0             	setb   %al
      }
    e392:	5d                   	pop    %rbp
    e393:	c3                   	ret

000000000000e394 <_ZNSt11char_traitsIcE7compareEPKcS2_m>:
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
    e394:	55                   	push   %rbp
    e395:	48 89 e5             	mov    %rsp,%rbp
    e398:	48 83 ec 30          	sub    $0x30,%rsp
    e39c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e3a0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e3a4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	if (__n == 0)
    e3a8:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    e3ad:	75 0a                	jne    e3b9 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x25>
	  return 0;
    e3af:	b8 00 00 00 00       	mov    $0x0,%eax
    e3b4:	e9 99 00 00 00       	jmp    e452 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	if (std::__is_constant_evaluated())
    e3b9:	e8 4f 6b ff ff       	call   4f0d <_ZSt23__is_constant_evaluatedv>
    e3be:	84 c0                	test   %al,%al
    e3c0:	74 78                	je     e43a <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xa6>
	    for (size_t __i = 0; __i < __n; ++__i)
    e3c2:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    e3c9:	00 
    e3ca:	eb 5d                	jmp    e429 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x95>
	      if (lt(__s1[__i], __s2[__i]))
    e3cc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    e3d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e3d4:	48 01 c2             	add    %rax,%rdx
    e3d7:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    e3db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e3df:	48 01 c8             	add    %rcx,%rax
    e3e2:	48 89 d6             	mov    %rdx,%rsi
    e3e5:	48 89 c7             	mov    %rax,%rdi
    e3e8:	e8 84 ff ff ff       	call   e371 <_ZNSt11char_traitsIcE2ltERKcS2_>
    e3ed:	84 c0                	test   %al,%al
    e3ef:	74 07                	je     e3f8 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x64>
		return -1;
    e3f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    e3f6:	eb 5a                	jmp    e452 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	      else if (lt(__s2[__i], __s1[__i]))
    e3f8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e3fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e400:	48 01 c2             	add    %rax,%rdx
    e403:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e407:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e40b:	48 01 c8             	add    %rcx,%rax
    e40e:	48 89 d6             	mov    %rdx,%rsi
    e411:	48 89 c7             	mov    %rax,%rdi
    e414:	e8 58 ff ff ff       	call   e371 <_ZNSt11char_traitsIcE2ltERKcS2_>
    e419:	84 c0                	test   %al,%al
    e41b:	74 07                	je     e424 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x90>
		return 1;
    e41d:	b8 01 00 00 00       	mov    $0x1,%eax
    e422:	eb 2e                	jmp    e452 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	    for (size_t __i = 0; __i < __n; ++__i)
    e424:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    e429:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e42d:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    e431:	72 99                	jb     e3cc <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x38>
	    return 0;
    e433:	b8 00 00 00 00       	mov    $0x0,%eax
    e438:	eb 18                	jmp    e452 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	return __builtin_memcmp(__s1, __s2, __n);
    e43a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e43e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e442:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e446:	48 89 ce             	mov    %rcx,%rsi
    e449:	48 89 c7             	mov    %rax,%rdi
    e44c:	e8 4f 5d ff ff       	call   41a0 <memcmp@plt>
    e451:	90                   	nop
      }
    e452:	c9                   	leave
    e453:	c3                   	ret

000000000000e454 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>:
      { }

      constexpr basic_string_view(const basic_string_view&) noexcept = default;

      __attribute__((__nonnull__)) constexpr
      basic_string_view(const _CharT* __str) noexcept
    e454:	55                   	push   %rbp
    e455:	48 89 e5             	mov    %rsp,%rbp
    e458:	48 83 ec 10          	sub    $0x10,%rsp
    e45c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e460:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_len{traits_type::length(__str)},
    e464:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e468:	48 89 c7             	mov    %rax,%rdi
    e46b:	e8 a8 6a ff ff       	call   4f18 <_ZNSt11char_traitsIcE6lengthEPKc>
    e470:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e474:	48 89 02             	mov    %rax,(%rdx)
	_M_str{__str}
    e477:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e47b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e47f:	48 89 50 08          	mov    %rdx,0x8(%rax)
      { }
    e483:	90                   	nop
    e484:	c9                   	leave
    e485:	c3                   	ret

000000000000e486 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    e486:	55                   	push   %rbp
    e487:	48 89 e5             	mov    %rsp,%rbp
    e48a:	48 83 ec 20          	sub    $0x20,%rsp
    e48e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    e492:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e496:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e49a:	48 89 d6             	mov    %rdx,%rsi
    e49d:	48 89 c7             	mov    %rax,%rdi
    e4a0:	e8 27 01 00 00       	call   e5cc <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    e4a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e4a9:	c9                   	leave
    e4aa:	c3                   	ret
    e4ab:	90                   	nop

000000000000e4ac <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    e4ac:	55                   	push   %rbp
    e4ad:	48 89 e5             	mov    %rsp,%rbp
    e4b0:	48 83 ec 20          	sub    $0x20,%rsp
    e4b4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    e4b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e4bc:	48 8d 50 08          	lea    0x8(%rax),%rdx
    e4c0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e4c4:	48 89 d6             	mov    %rdx,%rsi
    e4c7:	48 89 c7             	mov    %rax,%rdi
    e4ca:	e8 fd 00 00 00       	call   e5cc <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    e4cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e4d3:	c9                   	leave
    e4d4:	c3                   	ret

000000000000e4d5 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    e4d5:	55                   	push   %rbp
    e4d6:	48 89 e5             	mov    %rsp,%rbp
    e4d9:	53                   	push   %rbx
    e4da:	48 83 ec 18          	sub    $0x18,%rsp
    e4de:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e4e2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    e4e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e4ea:	48 89 c7             	mov    %rax,%rdi
    e4ed:	e8 f8 00 00 00       	call   e5ea <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    e4f2:	48 8b 18             	mov    (%rax),%rbx
    e4f5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e4f9:	48 89 c7             	mov    %rax,%rdi
    e4fc:	e8 e9 00 00 00       	call   e5ea <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    e501:	48 8b 00             	mov    (%rax),%rax
    e504:	48 39 c3             	cmp    %rax,%rbx
    e507:	0f 95 c0             	setne  %al
    e50a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e50e:	c9                   	leave
    e50f:	c3                   	ret

000000000000e510 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    e510:	55                   	push   %rbp
    e511:	48 89 e5             	mov    %rsp,%rbp
    e514:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    e518:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e51c:	48 8b 00             	mov    (%rax),%rax
    e51f:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    e526:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e52a:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    e52d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    e531:	5d                   	pop    %rbp
    e532:	c3                   	ret
    e533:	90                   	nop

000000000000e534 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    e534:	55                   	push   %rbp
    e535:	48 89 e5             	mov    %rsp,%rbp
    e538:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    e53c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e540:	48 8b 00             	mov    (%rax),%rax
    e543:	5d                   	pop    %rbp
    e544:	c3                   	ret
    e545:	90                   	nop

000000000000e546 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>:
      { return const_reverse_iterator(this->begin()); }

      // [string.view.capacity], capacity

      constexpr size_type
      size() const noexcept
    e546:	55                   	push   %rbp
    e547:	48 89 e5             	mov    %rsp,%rbp
    e54a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_len; }
    e54e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e552:	48 8b 00             	mov    (%rax),%rax
    e555:	5d                   	pop    %rbp
    e556:	c3                   	ret

000000000000e557 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>:
               basic_string_view<_CharT, _Traits> __y) noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }

  template<typename _CharT, typename _Traits>
    constexpr bool
    operator==(basic_string_view<_CharT, _Traits> __x,
    e557:	55                   	push   %rbp
    e558:	48 89 e5             	mov    %rsp,%rbp
    e55b:	53                   	push   %rbx
    e55c:	48 83 ec 28          	sub    $0x28,%rsp
    e560:	48 89 f0             	mov    %rsi,%rax
    e563:	49 89 f8             	mov    %rdi,%r8
    e566:	4c 89 c6             	mov    %r8,%rsi
    e569:	4c 89 cf             	mov    %r9,%rdi
    e56c:	48 89 c7             	mov    %rax,%rdi
    e56f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e573:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e577:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    e57b:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
               __type_identity_t<basic_string_view<_CharT, _Traits>> __y)
    noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }
    e57f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e583:	48 89 c7             	mov    %rax,%rdi
    e586:	e8 bb ff ff ff       	call   e546 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    e58b:	48 89 c3             	mov    %rax,%rbx
    e58e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    e592:	48 89 c7             	mov    %rax,%rdi
    e595:	e8 ac ff ff ff       	call   e546 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    e59a:	48 39 c3             	cmp    %rax,%rbx
    e59d:	75 22                	jne    e5c1 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    e59f:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    e5a3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e5a7:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e5ab:	48 89 ce             	mov    %rcx,%rsi
    e5ae:	48 89 c7             	mov    %rax,%rdi
    e5b1:	e8 42 00 00 00       	call   e5f8 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>
    e5b6:	85 c0                	test   %eax,%eax
    e5b8:	75 07                	jne    e5c1 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    e5ba:	b8 01 00 00 00       	mov    $0x1,%eax
    e5bf:	eb 05                	jmp    e5c6 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6f>
    e5c1:	b8 00 00 00 00       	mov    $0x0,%eax
    e5c6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e5ca:	c9                   	leave
    e5cb:	c3                   	ret

000000000000e5cc <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    e5cc:	55                   	push   %rbp
    e5cd:	48 89 e5             	mov    %rsp,%rbp
    e5d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e5d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    e5d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e5dc:	48 8b 10             	mov    (%rax),%rdx
    e5df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e5e3:	48 89 10             	mov    %rdx,(%rax)
    e5e6:	90                   	nop
    e5e7:	5d                   	pop    %rbp
    e5e8:	c3                   	ret
    e5e9:	90                   	nop

000000000000e5ea <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    e5ea:	55                   	push   %rbp
    e5eb:	48 89 e5             	mov    %rsp,%rbp
    e5ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    e5f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e5f6:	5d                   	pop    %rbp
    e5f7:	c3                   	ret

000000000000e5f8 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>:
      compare(basic_string_view __str) const noexcept
    e5f8:	55                   	push   %rbp
    e5f9:	48 89 e5             	mov    %rsp,%rbp
    e5fc:	48 83 ec 30          	sub    $0x30,%rsp
    e600:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e604:	48 89 d1             	mov    %rdx,%rcx
    e607:	48 89 f0             	mov    %rsi,%rax
    e60a:	48 89 fa             	mov    %rdi,%rdx
    e60d:	48 89 ca             	mov    %rcx,%rdx
    e610:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    e614:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const size_type __rlen = std::min(this->_M_len, __str._M_len);
    e618:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e61c:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    e620:	48 89 d6             	mov    %rdx,%rsi
    e623:	48 89 c7             	mov    %rax,%rdi
    e626:	e8 92 76 ff ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    e62b:	48 8b 00             	mov    (%rax),%rax
    e62e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	int __ret = traits_type::compare(this->_M_str, __str._M_str, __rlen);
    e632:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    e636:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e63a:	48 8b 40 08          	mov    0x8(%rax),%rax
    e63e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e642:	48 89 ce             	mov    %rcx,%rsi
    e645:	48 89 c7             	mov    %rax,%rdi
    e648:	e8 47 fd ff ff       	call   e394 <_ZNSt11char_traitsIcE7compareEPKcS2_m>
    e64d:	89 45 fc             	mov    %eax,-0x4(%rbp)
	if (__ret == 0)
    e650:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    e654:	75 19                	jne    e66f <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_+0x77>
	  __ret = _S_compare(this->_M_len, __str._M_len);
    e656:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    e65a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e65e:	48 8b 00             	mov    (%rax),%rax
    e661:	48 89 d6             	mov    %rdx,%rsi
    e664:	48 89 c7             	mov    %rax,%rdi
    e667:	e8 08 00 00 00       	call   e674 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>
    e66c:	89 45 fc             	mov    %eax,-0x4(%rbp)
	return __ret;
    e66f:	8b 45 fc             	mov    -0x4(%rbp),%eax
      }
    e672:	c9                   	leave
    e673:	c3                   	ret

000000000000e674 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>:
      _S_compare(size_type __n1, size_type __n2) noexcept
    e674:	55                   	push   %rbp
    e675:	48 89 e5             	mov    %rsp,%rbp
    e678:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e67c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const difference_type __diff = __n1 - __n2;
    e680:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e684:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    e688:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (__diff > __limits::__max)
    e68c:	b8 00 00 00 80       	mov    $0x80000000,%eax
    e691:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    e695:	7c 07                	jl     e69e <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x2a>
	  return __limits::__max;
    e697:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    e69c:	eb 1b                	jmp    e6b9 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	if (__diff < __limits::__min)
    e69e:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
    e6a5:	ff ff ff 
    e6a8:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    e6ac:	7f 07                	jg     e6b5 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x41>
	  return __limits::__min;
    e6ae:	b8 00 00 00 80       	mov    $0x80000000,%eax
    e6b3:	eb 04                	jmp    e6b9 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	return static_cast<int>(__diff);
    e6b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    e6b9:	5d                   	pop    %rbp
    e6ba:	c3                   	ret

000000000000e6bb <_Z41__static_initialization_and_destruction_0ii>:
  VkPipelineLayout layout = nullptr;
  VkPipelineCache cache = nullptr;
  VkRenderPass renderPass = nullptr;
};

} /* namespace vkh */
    e6bb:	55                   	push   %rbp
    e6bc:	48 89 e5             	mov    %rsp,%rbp
    e6bf:	48 83 ec 10          	sub    $0x10,%rsp
    e6c3:	89 7d fc             	mov    %edi,-0x4(%rbp)
    e6c6:	89 75 f8             	mov    %esi,-0x8(%rbp)
    e6c9:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    e6cd:	75 3b                	jne    e70a <_Z41__static_initialization_and_destruction_0ii+0x4f>
    e6cf:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    e6d6:	75 32                	jne    e70a <_Z41__static_initialization_and_destruction_0ii+0x4f>
    e6d8:	48 8d 05 6a 2f 02 00 	lea    0x22f6a(%rip),%rax        # 31649 <_ZStL8__ioinit>
    e6df:	48 89 c7             	mov    %rax,%rdi
    e6e2:	e8 b9 60 ff ff       	call   47a0 <_ZNSt8ios_base4InitC1Ev@plt>
    e6e7:	48 8d 05 ca 2d 02 00 	lea    0x22dca(%rip),%rax        # 314b8 <__dso_handle>
    e6ee:	48 89 c2             	mov    %rax,%rdx
    e6f1:	48 8d 05 51 2f 02 00 	lea    0x22f51(%rip),%rax        # 31649 <_ZStL8__ioinit>
    e6f8:	48 89 c6             	mov    %rax,%rsi
    e6fb:	48 8b 05 c6 28 02 00 	mov    0x228c6(%rip),%rax        # 30fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    e702:	48 89 c7             	mov    %rax,%rdi
    e705:	e8 c6 5c ff ff       	call   43d0 <__cxa_atexit@plt>
    e70a:	90                   	nop
    e70b:	c9                   	leave
    e70c:	c3                   	ret

000000000000e70d <_GLOBAL__sub_I_vkh.cpp>:
    e70d:	55                   	push   %rbp
    e70e:	48 89 e5             	mov    %rsp,%rbp
    e711:	be ff ff 00 00       	mov    $0xffff,%esi
    e716:	bf 01 00 00 00       	mov    $0x1,%edi
    e71b:	e8 9b ff ff ff       	call   e6bb <_Z41__static_initialization_and_destruction_0ii>
    e720:	5d                   	pop    %rbp
    e721:	c3                   	ret

000000000000e722 <_ZN9VulkanApp12createWindowEv>:
#include "vulkan_app.hpp"

void VulkanApp::createWindow() {
    e722:	55                   	push   %rbp
    e723:	48 89 e5             	mov    %rsp,%rbp
    e726:	48 83 ec 10          	sub    $0x10,%rsp
    e72a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  glfwInit();
    e72e:	e8 5d 5e ff ff       	call   4590 <glfwInit@plt>
  window = vkh::createWindow(800, 600);
    e733:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    e739:	b9 00 00 00 00       	mov    $0x0,%ecx
    e73e:	48 8d 05 0f 26 01 00 	lea    0x1260f(%rip),%rax        # 20d54 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1c>
    e745:	48 89 c2             	mov    %rax,%rdx
    e748:	be 58 02 00 00       	mov    $0x258,%esi
    e74d:	bf 20 03 00 00       	mov    $0x320,%edi
    e752:	e8 1c 87 ff ff       	call   6e73 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>
    e757:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e75b:	48 89 02             	mov    %rax,(%rdx)
  glfwSetWindowUserPointer(window, this);
    e75e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e762:	48 8b 00             	mov    (%rax),%rax
    e765:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e769:	48 89 d6             	mov    %rdx,%rsi
    e76c:	48 89 c7             	mov    %rax,%rdi
    e76f:	e8 6c 5a ff ff       	call   41e0 <glfwSetWindowUserPointer@plt>
  glfwSetFramebufferSizeCallback(window, framebufferResizeCallback);
    e774:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e778:	48 8b 00             	mov    (%rax),%rax
    e77b:	48 8d 15 86 23 00 00 	lea    0x2386(%rip),%rdx        # 10b08 <_ZN9VulkanApp25framebufferResizeCallbackEP10GLFWwindowii>
    e782:	48 89 d6             	mov    %rdx,%rsi
    e785:	48 89 c7             	mov    %rax,%rdi
    e788:	e8 03 60 ff ff       	call   4790 <glfwSetFramebufferSizeCallback@plt>
}
    e78d:	90                   	nop
    e78e:	c9                   	leave
    e78f:	c3                   	ret

000000000000e790 <_ZN9VulkanApp14createInstanceEv>:

void VulkanApp::createInstance() {
    e790:	55                   	push   %rbp
    e791:	48 89 e5             	mov    %rsp,%rbp
    e794:	53                   	push   %rbx
    e795:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
    e79c:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
  VkApplicationInfo appInfo{};
    e7a3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e7a7:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    e7ab:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    e7af:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    e7b3:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
  appInfo.pApplicationName = "Vulkan Application";
    e7ba:	48 8d 05 93 25 01 00 	lea    0x12593(%rip),%rax        # 20d54 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1c>
    e7c1:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    e7c5:	c7 45 c8 00 00 40 00 	movl   $0x400000,-0x38(%rbp)
  appInfo.pEngineName = "No Engine";
    e7cc:	48 8d 05 94 25 01 00 	lea    0x12594(%rip),%rax        # 20d67 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x2f>
    e7d3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    e7d7:	c7 45 d8 00 00 40 00 	movl   $0x400000,-0x28(%rbp)
  appInfo.apiVersion = VK_API_VERSION_1_3;
    e7de:	c7 45 dc 00 30 40 00 	movl   $0x403000,-0x24(%rbp)

  auto requiredExtensions = vkh::getRequiredInstanceExtensionNameList();
    e7e5:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e7e9:	48 89 c7             	mov    %rax,%rdi
    e7ec:	e8 e9 a0 ff ff       	call   88da <_ZN3vkh36getRequiredInstanceExtensionNameListEv>
  for (auto &&extension : requiredExtensions) {
    e7f1:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e7f5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e7f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e7fd:	48 89 c7             	mov    %rax,%rdi
    e800:	e8 87 52 00 00       	call   13a8c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    e805:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    e80c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e810:	48 89 c7             	mov    %rax,%rdi
    e813:	e8 9a 52 00 00       	call   13ab2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    e818:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    e81f:	eb 3c                	jmp    e85d <_ZN9VulkanApp14createInstanceEv+0xcd>
    e821:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    e828:	48 89 c7             	mov    %rax,%rdi
    e82b:	e8 06 53 00 00       	call   13b36 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    e830:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    instanceExtensions.emplace_back(extension);
    e834:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    e83b:	48 8d 50 10          	lea    0x10(%rax),%rdx
    e83f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e843:	48 89 c6             	mov    %rax,%rsi
    e846:	48 89 d7             	mov    %rdx,%rdi
    e849:	e8 fa 52 00 00       	call   13b48 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>
  for (auto &&extension : requiredExtensions) {
    e84e:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    e855:	48 89 c7             	mov    %rax,%rdi
    e858:	e8 b9 52 00 00       	call   13b16 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    e85d:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    e864:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    e86b:	48 89 d6             	mov    %rdx,%rsi
    e86e:	48 89 c7             	mov    %rax,%rdi
    e871:	e8 65 52 00 00       	call   13adb <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    e876:	84 c0                	test   %al,%al
    e878:	75 a7                	jne    e821 <_ZN9VulkanApp14createInstanceEv+0x91>
  }

  auto debugCreateInfo = VkDebugUtilsMessengerCreateInfoEXT{};
    e87a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e87e:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    e885:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    e88c:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  vkh::populateDebugMessengerCreateInfo(debugCreateInfo);
    e890:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e897:	48 89 c7             	mov    %rax,%rdi
    e89a:	e8 bc f8 ff ff       	call   e15b <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>

  VkInstanceCreateInfo instanceInfo;
  instanceInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    e89f:	c7 85 20 ff ff ff 01 	movl   $0x1,-0xe0(%rbp)
    e8a6:	00 00 00 
  instanceInfo.pNext = (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo;
    e8a9:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e8b0:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  instanceInfo.pApplicationInfo = &appInfo;
    e8b7:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e8bb:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  instanceInfo.enabledLayerCount = static_cast<uint32_t>(instanceLayers.size());
    e8c2:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    e8c9:	48 83 c0 28          	add    $0x28,%rax
    e8cd:	48 89 c7             	mov    %rax,%rdi
    e8d0:	e8 17 53 00 00       	call   13bec <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    e8d5:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
  instanceInfo.ppEnabledLayerNames = instanceLayers.data();
    e8db:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    e8e2:	48 83 c0 28          	add    $0x28,%rax
    e8e6:	48 89 c7             	mov    %rax,%rdi
    e8e9:	e8 22 53 00 00       	call   13c10 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    e8ee:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  instanceInfo.enabledExtensionCount =
      static_cast<uint32_t>(instanceExtensions.size());
    e8f5:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    e8fc:	48 83 c0 10          	add    $0x10,%rax
    e900:	48 89 c7             	mov    %rax,%rdi
    e903:	e8 e4 52 00 00       	call   13bec <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  instanceInfo.enabledExtensionCount =
    e908:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  instanceInfo.ppEnabledExtensionNames = instanceExtensions.data();
    e90e:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    e915:	48 83 c0 10          	add    $0x10,%rax
    e919:	48 89 c7             	mov    %rax,%rdi
    e91c:	e8 13 53 00 00       	call   13c34 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    e921:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)

  instance = vkh::createInstance(&instanceInfo);
    e928:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    e92f:	be 00 00 00 00       	mov    $0x0,%esi
    e934:	48 89 c7             	mov    %rax,%rdi
    e937:	e8 7e 85 ff ff       	call   6eba <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>
    e93c:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    e943:	48 89 42 08          	mov    %rax,0x8(%rdx)
}
    e947:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e94b:	48 89 c7             	mov    %rax,%rdi
    e94e:	e8 f5 50 00 00       	call   13a48 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    e953:	eb 1a                	jmp    e96f <_ZN9VulkanApp14createInstanceEv+0x1df>
    e955:	48 89 c3             	mov    %rax,%rbx
    e958:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e95c:	48 89 c7             	mov    %rax,%rdi
    e95f:	e8 e4 50 00 00       	call   13a48 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    e964:	48 89 d8             	mov    %rbx,%rax
    e967:	48 89 c7             	mov    %rax,%rdi
    e96a:	e8 91 5f ff ff       	call   4900 <_Unwind_Resume@plt>
    e96f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e973:	c9                   	leave
    e974:	c3                   	ret
    e975:	90                   	nop

000000000000e976 <_ZN9VulkanApp20createDebugMessengerEv>:

void VulkanApp::createDebugMessenger() {
    e976:	55                   	push   %rbp
    e977:	48 89 e5             	mov    %rsp,%rbp
    e97a:	41 54                	push   %r12
    e97c:	53                   	push   %rbx
    e97d:	48 83 ec 10          	sub    $0x10,%rsp
    e981:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (vkh::checkValidationLayerSupport() == false) {
    e985:	e8 1d f6 ff ff       	call   dfa7 <_ZN3vkh27checkValidationLayerSupportEv>
    e98a:	0f b6 c0             	movzbl %al,%eax
    e98d:	85 c0                	test   %eax,%eax
    e98f:	0f 94 c0             	sete   %al
    e992:	84 c0                	test   %al,%al
    e994:	74 3b                	je     e9d1 <_ZN9VulkanApp20createDebugMessengerEv+0x5b>
    throw std::runtime_error("Validation layers are not supported.");
    e996:	bf 10 00 00 00       	mov    $0x10,%edi
    e99b:	e8 20 58 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    e9a0:	48 89 c3             	mov    %rax,%rbx
    e9a3:	48 8d 05 ce 23 01 00 	lea    0x123ce(%rip),%rax        # 20d78 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x40>
    e9aa:	48 89 c6             	mov    %rax,%rsi
    e9ad:	48 89 df             	mov    %rbx,%rdi
    e9b0:	e8 7b 57 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    e9b5:	48 8b 05 ec 25 02 00 	mov    0x225ec(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    e9bc:	48 89 c2             	mov    %rax,%rdx
    e9bf:	48 8d 05 7a 23 02 00 	lea    0x2237a(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    e9c6:	48 89 c6             	mov    %rax,%rsi
    e9c9:	48 89 df             	mov    %rbx,%rdi
    e9cc:	e8 bf 5e ff ff       	call   4890 <__cxa_throw@plt>
  }
  debugMessenger = vkh::createDebugMessenger(instance);
    e9d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e9d5:	48 8b 40 08          	mov    0x8(%rax),%rax
    e9d9:	48 89 c7             	mov    %rax,%rdi
    e9dc:	e8 30 f8 ff ff       	call   e211 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>
    e9e1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e9e5:	48 89 42 40          	mov    %rax,0x40(%rdx)
}
    e9e9:	eb 16                	jmp    ea01 <_ZN9VulkanApp20createDebugMessengerEv+0x8b>
    throw std::runtime_error("Validation layers are not supported.");
    e9eb:	49 89 c4             	mov    %rax,%r12
    e9ee:	48 89 df             	mov    %rbx,%rdi
    e9f1:	e8 da 58 ff ff       	call   42d0 <__cxa_free_exception@plt>
    e9f6:	4c 89 e0             	mov    %r12,%rax
    e9f9:	48 89 c7             	mov    %rax,%rdi
    e9fc:	e8 ff 5e ff ff       	call   4900 <_Unwind_Resume@plt>
}
    ea01:	48 83 c4 10          	add    $0x10,%rsp
    ea05:	5b                   	pop    %rbx
    ea06:	41 5c                	pop    %r12
    ea08:	5d                   	pop    %rbp
    ea09:	c3                   	ret

000000000000ea0a <_ZN9VulkanApp13createSurfaceEv>:

void VulkanApp::createSurface() {
    ea0a:	55                   	push   %rbp
    ea0b:	48 89 e5             	mov    %rsp,%rbp
    ea0e:	48 83 ec 10          	sub    $0x10,%rsp
    ea12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  surface = vkh::createSurface(instance, window);
    ea16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea1a:	48 8b 08             	mov    (%rax),%rcx
    ea1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea21:	48 8b 40 08          	mov    0x8(%rax),%rax
    ea25:	ba 00 00 00 00       	mov    $0x0,%edx
    ea2a:	48 89 ce             	mov    %rcx,%rsi
    ea2d:	48 89 c7             	mov    %rax,%rdi
    ea30:	e8 b0 85 ff ff       	call   6fe5 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>
    ea35:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ea39:	48 89 42 48          	mov    %rax,0x48(%rdx)
}
    ea3d:	90                   	nop
    ea3e:	c9                   	leave
    ea3f:	c3                   	ret

000000000000ea40 <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceProperties(VkPhysicalDevice physDev) {
    ea40:	55                   	push   %rbp
    ea41:	48 89 e5             	mov    %rsp,%rbp
    ea44:	48 81 ec 50 03 00 00 	sub    $0x350,%rsp
    ea4b:	48 89 bd b8 fc ff ff 	mov    %rdi,-0x348(%rbp)
    ea52:	48 89 b5 b0 fc ff ff 	mov    %rsi,-0x350(%rbp)
  auto physDevPropList = vkh::getPhysicalDevicePropertyList(physDev);
    ea59:	48 8d 85 c0 fc ff ff 	lea    -0x340(%rbp),%rax
    ea60:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
    ea67:	48 89 d6             	mov    %rdx,%rsi
    ea6a:	48 89 c7             	mov    %rax,%rdi
    ea6d:	e8 35 a1 ff ff       	call   8ba7 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  return physDevPropList.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU;
    ea72:	8b 85 d0 fc ff ff    	mov    -0x330(%rbp),%eax
    ea78:	83 f8 02             	cmp    $0x2,%eax
    ea7b:	0f 94 c0             	sete   %al
}
    ea7e:	c9                   	leave
    ea7f:	c3                   	ret

000000000000ea80 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>:

std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
VulkanApp::selectQueueFamily(VkPhysicalDevice physDev) {
    ea80:	55                   	push   %rbp
    ea81:	48 89 e5             	mov    %rsp,%rbp
    ea84:	53                   	push   %rbx
    ea85:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    ea8c:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    ea93:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    ea9a:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
  auto graphicsFamilies = vkh::getGraphicsQueueFamilyPropertyList(physDev);
    eaa1:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    eaa5:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    eaac:	48 89 d6             	mov    %rdx,%rsi
    eaaf:	48 89 c7             	mov    %rax,%rdi
    eab2:	e8 19 a2 ff ff       	call   8cd0 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto computeFamilies = vkh::getComputeQueueFamilyPropertyList(physDev);
    eab7:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    eabb:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    eac2:	48 89 d6             	mov    %rdx,%rsi
    eac5:	48 89 c7             	mov    %rax,%rdi
    eac8:	e8 37 a3 ff ff       	call   8e04 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto presentFamilies =
      vkh::getPresentQueueFamilyPropertyList(physDev, surface);
    eacd:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    ead4:	48 8b 50 48          	mov    0x48(%rax),%rdx
    ead8:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    eadf:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
    eae6:	48 89 ce             	mov    %rcx,%rsi
    eae9:	48 89 c7             	mov    %rax,%rdi
    eaec:	e8 4c a4 ff ff       	call   8f3d <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  /* Find a queue that is capable of handling graphics, computing, and
  supporting presentation to the surface */
  /* any queue family with {VK_QUEUE_GRAPHICS_BIT} or {VK_QUEUE_COMPUTE_BIT}
  capabilities already implicitly support {VK_QUEUE_TRANSFER_BIT} operations */
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    eaf1:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    eaf8:	00 
    eaf9:	e9 c5 00 00 00       	jmp    ebc3 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x143>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    eafe:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    eb02:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    eb06:	48 89 d6             	mov    %rdx,%rsi
    eb09:	48 89 c7             	mov    %rax,%rdi
    eb0c:	e8 51 b4 ff ff       	call   9f62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    eb11:	48 89 c7             	mov    %rax,%rdi
    eb14:	e8 6d 51 00 00       	call   13c86 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    eb19:	84 c0                	test   %al,%al
    eb1b:	74 48                	je     eb65 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    eb1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    eb21:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    eb25:	48 89 d6             	mov    %rdx,%rsi
    eb28:	48 89 c7             	mov    %rax,%rdi
    eb2b:	e8 32 b4 ff ff       	call   9f62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    eb30:	48 89 c7             	mov    %rax,%rdi
    eb33:	e8 4e 51 00 00       	call   13c86 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    eb38:	84 c0                	test   %al,%al
    eb3a:	74 29                	je     eb65 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
        presentFamilies[i].has_value()) {
    eb3c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    eb40:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    eb47:	48 89 d6             	mov    %rdx,%rsi
    eb4a:	48 89 c7             	mov    %rax,%rdi
    eb4d:	e8 10 b4 ff ff       	call   9f62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    eb52:	48 89 c7             	mov    %rax,%rdi
    eb55:	e8 2c 51 00 00       	call   13c86 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    eb5a:	84 c0                	test   %al,%al
    eb5c:	74 07                	je     eb65 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    eb5e:	b8 01 00 00 00       	mov    $0x1,%eax
    eb63:	eb 05                	jmp    eb6a <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xea>
    eb65:	b8 00 00 00 00       	mov    $0x0,%eax
    eb6a:	84 c0                	test   %al,%al
    eb6c:	74 50                	je     ebbe <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x13e>
      return {{static_cast<uint32_t>(i), graphicsFamilies[i].value()}};
    eb6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eb72:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    eb75:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    eb79:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    eb7d:	48 89 d6             	mov    %rdx,%rsi
    eb80:	48 89 c7             	mov    %rax,%rdi
    eb83:	e8 da b3 ff ff       	call   9f62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    eb88:	48 89 c7             	mov    %rax,%rdi
    eb8b:	e8 10 51 00 00       	call   13ca0 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>
    eb90:	48 89 c2             	mov    %rax,%rdx
    eb93:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    eb97:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    eb9b:	48 89 ce             	mov    %rcx,%rsi
    eb9e:	48 89 c7             	mov    %rax,%rdi
    eba1:	e8 2c 51 00 00       	call   13cd2 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>
    eba6:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    ebaa:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    ebb1:	48 89 d6             	mov    %rdx,%rsi
    ebb4:	48 89 c7             	mov    %rax,%rdi
    ebb7:	e8 6c 51 00 00       	call   13d28 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>
    ebbc:	eb 2f                	jmp    ebed <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x16d>
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    ebbe:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    ebc3:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    ebc7:	48 89 c7             	mov    %rax,%rdi
    ebca:	e8 89 50 00 00       	call   13c58 <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>
    ebcf:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    ebd3:	0f 92 c0             	setb   %al
    ebd6:	84 c0                	test   %al,%al
    ebd8:	0f 85 20 ff ff ff    	jne    eafe <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x7e>
    }
  }
  return {};
    ebde:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    ebe5:	48 89 c7             	mov    %rax,%rdi
    ebe8:	e8 fd 49 00 00       	call   135ea <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
}
    ebed:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ebf4:	48 89 c7             	mov    %rax,%rdi
    ebf7:	e8 66 b2 ff ff       	call   9e62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    ebfc:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    ec00:	48 89 c7             	mov    %rax,%rdi
    ec03:	e8 5a b2 ff ff       	call   9e62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    ec08:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    ec0c:	48 89 c7             	mov    %rax,%rdi
    ec0f:	e8 4e b2 ff ff       	call   9e62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    ec14:	eb 3f                	jmp    ec55 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1d5>
    ec16:	48 89 c3             	mov    %rax,%rbx
    ec19:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ec20:	48 89 c7             	mov    %rax,%rdi
    ec23:	e8 3a b2 ff ff       	call   9e62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    ec28:	eb 03                	jmp    ec2d <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1ad>
    ec2a:	48 89 c3             	mov    %rax,%rbx
    ec2d:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    ec31:	48 89 c7             	mov    %rax,%rdi
    ec34:	e8 29 b2 ff ff       	call   9e62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    ec39:	eb 03                	jmp    ec3e <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1be>
    ec3b:	48 89 c3             	mov    %rax,%rbx
    ec3e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    ec42:	48 89 c7             	mov    %rax,%rdi
    ec45:	e8 18 b2 ff ff       	call   9e62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    ec4a:	48 89 d8             	mov    %rbx,%rax
    ec4d:	48 89 c7             	mov    %rax,%rdi
    ec50:	e8 ab 5c ff ff       	call   4900 <_Unwind_Resume@plt>
    ec55:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    ec5c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ec60:	c9                   	leave
    ec61:	c3                   	ret

000000000000ec62 <_ZN9VulkanApp12createDeviceEv>:

void VulkanApp::createDevice() {
    ec62:	55                   	push   %rbp
    ec63:	48 89 e5             	mov    %rsp,%rbp
    ec66:	41 54                	push   %r12
    ec68:	53                   	push   %rbx
    ec69:	48 81 ec 00 02 00 00 	sub    $0x200,%rsp
    ec70:	48 89 bd f8 fd ff ff 	mov    %rdi,-0x208(%rbp)
  /* Select a suitable physical device and one of its queue families */
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    ec77:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    ec7e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    ec82:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ec86:	48 89 d6             	mov    %rdx,%rsi
    ec89:	48 89 c7             	mov    %rax,%rdi
    ec8c:	e8 a7 9d ff ff       	call   8a38 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  VkPhysicalDevice selectedPhysDev = VK_NULL_HANDLE;
    ec91:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    ec98:	00 
  std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
      selectedQueueFamily;
    ec99:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ec9d:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    eca1:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    eca5:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    eca9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    ecad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ecb1:	48 89 c7             	mov    %rax,%rdi
    ecb4:	e8 a3 50 00 00       	call   13d5c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    ecb9:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    ecc0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ecc4:	48 89 c7             	mov    %rax,%rdi
    ecc7:	e8 b6 50 00 00       	call   13d82 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    eccc:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    ecd3:	e9 dd 00 00 00       	jmp    edb5 <_ZN9VulkanApp12createDeviceEv+0x153>
    ecd8:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    ecdf:	48 89 c7             	mov    %rax,%rdi
    ece2:	e8 1f 51 00 00       	call   13e06 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    ece7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    graphics, computing, and presentation commands */
    /* When the application creates a swapchain, the selected physical device
    must support VK_KHR_swapchain */
    /* Also, the selected physical device must be compatible with the swapchain
     that will be created. */
    if (checkDeviceProperties(physDev) &&
    eceb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ecef:	48 8b 10             	mov    (%rax),%rdx
    ecf2:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    ecf9:	48 89 d6             	mov    %rdx,%rsi
    ecfc:	48 89 c7             	mov    %rax,%rdi
    ecff:	e8 3c fd ff ff       	call   ea40 <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    ed04:	84 c0                	test   %al,%al
    ed06:	74 41                	je     ed49 <_ZN9VulkanApp12createDeviceEv+0xe7>
    ed08:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ed0c:	48 8b 10             	mov    (%rax),%rdx
    ed0f:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    ed16:	48 89 d6             	mov    %rdx,%rsi
    ed19:	48 89 c7             	mov    %rax,%rdi
    ed1c:	e8 f9 02 00 00       	call   f01a <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>
    if (checkDeviceProperties(physDev) &&
    ed21:	84 c0                	test   %al,%al
    ed23:	74 24                	je     ed49 <_ZN9VulkanApp12createDeviceEv+0xe7>
        checkDeviceSwapchainSupport(physDev)) {
    ed25:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ed29:	48 8b 10             	mov    (%rax),%rdx
    ed2c:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    ed33:	48 89 d6             	mov    %rdx,%rsi
    ed36:	48 89 c7             	mov    %rax,%rdi
    ed39:	e8 16 06 00 00       	call   f354 <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    ed3e:	84 c0                	test   %al,%al
    ed40:	74 07                	je     ed49 <_ZN9VulkanApp12createDeviceEv+0xe7>
    ed42:	b8 01 00 00 00       	mov    $0x1,%eax
    ed47:	eb 05                	jmp    ed4e <_ZN9VulkanApp12createDeviceEv+0xec>
    ed49:	b8 00 00 00 00       	mov    $0x0,%eax
    if (checkDeviceProperties(physDev) &&
    ed4e:	84 c0                	test   %al,%al
    ed50:	74 54                	je     eda6 <_ZN9VulkanApp12createDeviceEv+0x144>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    ed52:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ed56:	48 8b 10             	mov    (%rax),%rdx
    ed59:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    ed60:	48 8b 8d f8 fd ff ff 	mov    -0x208(%rbp),%rcx
    ed67:	48 89 ce             	mov    %rcx,%rsi
    ed6a:	48 89 c7             	mov    %rax,%rdi
    ed6d:	e8 0e fd ff ff       	call   ea80 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>
          returnedQueueFamily.has_value()) {
    ed72:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    ed79:	48 89 c7             	mov    %rax,%rdi
    ed7c:	e8 97 50 00 00       	call   13e18 <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    ed81:	84 c0                	test   %al,%al
    ed83:	74 21                	je     eda6 <_ZN9VulkanApp12createDeviceEv+0x144>
        selectedQueueFamily = returnedQueueFamily;
    ed85:	48 8d 95 00 fe ff ff 	lea    -0x200(%rbp),%rdx
    ed8c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    ed90:	48 89 d6             	mov    %rdx,%rsi
    ed93:	48 89 c7             	mov    %rax,%rdi
    ed96:	e8 a1 48 00 00       	call   1363c <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>
        selectedPhysDev = physDev;
    ed9b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ed9f:	48 8b 00             	mov    (%rax),%rax
    eda2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    eda6:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    edad:	48 89 c7             	mov    %rax,%rdi
    edb0:	e8 31 50 00 00       	call   13de6 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    edb5:	48 8d 95 20 fe ff ff 	lea    -0x1e0(%rbp),%rdx
    edbc:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    edc3:	48 89 d6             	mov    %rdx,%rsi
    edc6:	48 89 c7             	mov    %rax,%rdi
    edc9:	e8 dd 4f 00 00       	call   13dab <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    edce:	84 c0                	test   %al,%al
    edd0:	0f 85 02 ff ff ff    	jne    ecd8 <_ZN9VulkanApp12createDeviceEv+0x76>
      }
    }
  }
  if (selectedPhysDev == VK_NULL_HANDLE) {
    edd6:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    eddb:	75 3b                	jne    ee18 <_ZN9VulkanApp12createDeviceEv+0x1b6>
    throw std::runtime_error("Failed to select a physical device.");
    eddd:	bf 10 00 00 00       	mov    $0x10,%edi
    ede2:	e8 d9 53 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    ede7:	48 89 c3             	mov    %rax,%rbx
    edea:	48 8d 05 af 1f 01 00 	lea    0x11faf(%rip),%rax        # 20da0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x68>
    edf1:	48 89 c6             	mov    %rax,%rsi
    edf4:	48 89 df             	mov    %rbx,%rdi
    edf7:	e8 34 53 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    edfc:	48 8b 05 a5 21 02 00 	mov    0x221a5(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    ee03:	48 89 c2             	mov    %rax,%rdx
    ee06:	48 8d 05 33 1f 02 00 	lea    0x21f33(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    ee0d:	48 89 c6             	mov    %rax,%rsi
    ee10:	48 89 df             	mov    %rbx,%rdi
    ee13:	e8 78 5a ff ff       	call   4890 <__cxa_throw@plt>
  }

  /* Set up the selected queue family's creation info */
  uint32_t selectedIndex = selectedQueueFamily.value().first;
    ee18:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    ee1c:	48 89 c7             	mov    %rax,%rdi
    ee1f:	e8 42 48 00 00       	call   13666 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>
    ee24:	8b 00                	mov    (%rax),%eax
    ee26:	89 45 dc             	mov    %eax,-0x24(%rbp)
  const float queuePriority = 1.0f;
    ee29:	f3 0f 10 05 87 24 01 	movss  0x12487(%rip),%xmm0        # 212b8 <_ZZN9VulkanApp6renderEvE11submitCount+0x38c>
    ee30:	00 
    ee31:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)

  VkDeviceQueueCreateInfo queueInfo{};
    ee36:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ee3a:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    ee41:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    ee48:	66 0f d6 45 80       	movq   %xmm0,-0x80(%rbp)
  queueInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    ee4d:	c7 85 60 ff ff ff 02 	movl   $0x2,-0xa0(%rbp)
    ee54:	00 00 00 
  queueInfo.pNext = nullptr;
    ee57:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    ee5e:	00 00 00 00 
  queueInfo.queueFamilyIndex = selectedIndex;
    ee62:	8b 45 dc             	mov    -0x24(%rbp),%eax
    ee65:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  queueInfo.queueCount = 1;
    ee6b:	c7 85 78 ff ff ff 01 	movl   $0x1,-0x88(%rbp)
    ee72:	00 00 00 
  queueInfo.pQueuePriorities = &queuePriority;
    ee75:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
    ee79:	48 89 45 80          	mov    %rax,-0x80(%rbp)

  /* Create the logical device */
  VkPhysicalDeviceFeatures deviceFeatures{};
    ee7d:	48 8d 95 80 fe ff ff 	lea    -0x180(%rbp),%rdx
    ee84:	b8 00 00 00 00       	mov    $0x0,%eax
    ee89:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    ee8e:	48 89 d7             	mov    %rdx,%rdi
    ee91:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    ee94:	48 89 fa             	mov    %rdi,%rdx
    ee97:	89 02                	mov    %eax,(%rdx)
    ee99:	48 83 c2 04          	add    $0x4,%rdx

  VkDeviceCreateInfo deviceCreateInfo{};
    ee9d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    eea1:	0f 29 85 30 fe ff ff 	movaps %xmm0,-0x1d0(%rbp)
    eea8:	0f 29 85 40 fe ff ff 	movaps %xmm0,-0x1c0(%rbp)
    eeaf:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    eeb6:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    eebd:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    eec4:	ff 
  deviceCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    eec5:	c7 85 30 fe ff ff 03 	movl   $0x3,-0x1d0(%rbp)
    eecc:	00 00 00 
  deviceCreateInfo.pNext = nullptr;
    eecf:	48 c7 85 38 fe ff ff 	movq   $0x0,-0x1c8(%rbp)
    eed6:	00 00 00 00 
  deviceCreateInfo.queueCreateInfoCount = 1;
    eeda:	c7 85 44 fe ff ff 01 	movl   $0x1,-0x1bc(%rbp)
    eee1:	00 00 00 
  deviceCreateInfo.pQueueCreateInfos = &queueInfo;
    eee4:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    eeeb:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  deviceCreateInfo.enabledExtensionCount =
      static_cast<uint32_t>(deviceExtensions.size());
    eef2:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    eef9:	48 05 90 00 00 00    	add    $0x90,%rax
    eeff:	48 89 c7             	mov    %rax,%rdi
    ef02:	e8 e5 4c 00 00       	call   13bec <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledExtensionCount =
    ef07:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
  deviceCreateInfo.ppEnabledExtensionNames = deviceExtensions.data();
    ef0d:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    ef14:	48 05 90 00 00 00    	add    $0x90,%rax
    ef1a:	48 89 c7             	mov    %rax,%rdi
    ef1d:	e8 12 4d 00 00       	call   13c34 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    ef22:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  deviceCreateInfo.pEnabledFeatures = &deviceFeatures;
    ef29:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    ef30:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  deviceCreateInfo.enabledLayerCount =
      static_cast<uint32_t>(instanceLayers.size());
    ef37:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    ef3e:	48 83 c0 28          	add    $0x28,%rax
    ef42:	48 89 c7             	mov    %rax,%rdi
    ef45:	e8 a2 4c 00 00       	call   13bec <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledLayerCount =
    ef4a:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%rbp)
  deviceCreateInfo.ppEnabledLayerNames = instanceLayers.data();
    ef50:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    ef57:	48 83 c0 28          	add    $0x28,%rax
    ef5b:	48 89 c7             	mov    %rax,%rdi
    ef5e:	e8 ad 4c 00 00       	call   13c10 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    ef63:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)

  device = vkh::createDevice(selectedPhysDev, &deviceCreateInfo);
    ef6a:	48 8d 8d 30 fe ff ff 	lea    -0x1d0(%rbp),%rcx
    ef71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ef75:	ba 00 00 00 00       	mov    $0x0,%edx
    ef7a:	48 89 ce             	mov    %rcx,%rsi
    ef7d:	48 89 c7             	mov    %rax,%rdi
    ef80:	e8 c8 7f ff ff       	call   6f4d <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>
    ef85:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
    ef8c:	48 89 42 50          	mov    %rax,0x50(%rdx)

  /* Get a queue handle */
  vkGetDeviceQueue(device, selectedIndex, 0, &queue);
    ef90:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    ef97:	48 8d 50 60          	lea    0x60(%rax),%rdx
    ef9b:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    efa2:	48 8b 40 50          	mov    0x50(%rax),%rax
    efa6:	8b 75 dc             	mov    -0x24(%rbp),%esi
    efa9:	48 89 d1             	mov    %rdx,%rcx
    efac:	ba 00 00 00 00       	mov    $0x0,%edx
    efb1:	48 89 c7             	mov    %rax,%rdi
    efb4:	e8 d7 56 ff ff       	call   4690 <vkGetDeviceQueue@plt>

  /* Store the selected device for later uses */
  physicalDevice = selectedPhysDev;
    efb9:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    efc0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    efc4:	48 89 50 58          	mov    %rdx,0x58(%rax)

  /* Store the index of the selected queue family */
  queueFamilyIndex = selectedIndex;
    efc8:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    efcf:	8b 55 dc             	mov    -0x24(%rbp),%edx
    efd2:	89 50 68             	mov    %edx,0x68(%rax)
}
    efd5:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    efd9:	48 89 c7             	mov    %rax,%rdi
    efdc:	e8 81 ab ff ff       	call   9b62 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    efe1:	eb 2a                	jmp    f00d <_ZN9VulkanApp12createDeviceEv+0x3ab>
    throw std::runtime_error("Failed to select a physical device.");
    efe3:	49 89 c4             	mov    %rax,%r12
    efe6:	48 89 df             	mov    %rbx,%rdi
    efe9:	e8 e2 52 ff ff       	call   42d0 <__cxa_free_exception@plt>
    efee:	4c 89 e3             	mov    %r12,%rbx
    eff1:	eb 03                	jmp    eff6 <_ZN9VulkanApp12createDeviceEv+0x394>
}
    eff3:	48 89 c3             	mov    %rax,%rbx
    eff6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    effa:	48 89 c7             	mov    %rax,%rdi
    effd:	e8 60 ab ff ff       	call   9b62 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    f002:	48 89 d8             	mov    %rbx,%rax
    f005:	48 89 c7             	mov    %rax,%rdi
    f008:	e8 f3 58 ff ff       	call   4900 <_Unwind_Resume@plt>
    f00d:	48 81 c4 00 02 00 00 	add    $0x200,%rsp
    f014:	5b                   	pop    %rbx
    f015:	41 5c                	pop    %r12
    f017:	5d                   	pop    %rbp
    f018:	c3                   	ret
    f019:	90                   	nop

000000000000f01a <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceExtensionSupport(VkPhysicalDevice physDev) {
    f01a:	55                   	push   %rbp
    f01b:	48 89 e5             	mov    %rsp,%rbp
    f01e:	53                   	push   %rbx
    f01f:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
    f026:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
    f02d:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  auto availableExtensionsList = vkh::getAvailableDeviceExtensionList(physDev);
    f034:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f03b:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
    f042:	ba 00 00 00 00       	mov    $0x0,%edx
    f047:	48 89 ce             	mov    %rcx,%rsi
    f04a:	48 89 c7             	mov    %rax,%rdi
    f04d:	e8 11 97 ff ff       	call   8763 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
  std::map<std::string, uint32_t> helper;
    f052:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    f059:	48 89 c7             	mov    %rax,%rdi
    f05c:	e8 81 46 00 00       	call   136e2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
  for (const auto &availableExtension : availableExtensionsList) {
    f061:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f068:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    f06c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f070:	48 89 c7             	mov    %rax,%rdi
    f073:	e8 b6 4e 00 00       	call   13f2e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    f078:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    f07f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f083:	48 89 c7             	mov    %rax,%rdi
    f086:	e8 c9 4e 00 00       	call   13f54 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    f08b:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    f092:	e9 8c 00 00 00       	jmp    f123 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x109>
    f097:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    f09e:	48 89 c7             	mov    %rax,%rdi
    f0a1:	e8 36 4f 00 00       	call   13fdc <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    f0a6:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    helper[availableExtension.extensionName]++;
    f0aa:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    f0b1:	48 89 c7             	mov    %rax,%rdi
    f0b4:	e8 57 58 ff ff       	call   4910 <_ZNSaIcEC1Ev@plt>
    f0b9:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    f0bd:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    f0c4:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f0cb:	48 89 ce             	mov    %rcx,%rsi
    f0ce:	48 89 c7             	mov    %rax,%rdi
    f0d1:	e8 78 60 ff ff       	call   514e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    f0d6:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    f0dd:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    f0e4:	48 89 d6             	mov    %rdx,%rsi
    f0e7:	48 89 c7             	mov    %rax,%rdi
    f0ea:	e8 ff 4e 00 00       	call   13fee <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    f0ef:	8b 10                	mov    (%rax),%edx
    f0f1:	83 c2 01             	add    $0x1,%edx
    f0f4:	89 10                	mov    %edx,(%rax)
    f0f6:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f0fd:	48 89 c7             	mov    %rax,%rdi
    f100:	e8 6b 51 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f105:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    f10c:	48 89 c7             	mov    %rax,%rdi
    f10f:	e8 1c 54 ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
  for (const auto &availableExtension : availableExtensionsList) {
    f114:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    f11b:	48 89 c7             	mov    %rax,%rdi
    f11e:	e8 95 4e 00 00       	call   13fb8 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    f123:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
    f12a:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    f131:	48 89 d6             	mov    %rdx,%rsi
    f134:	48 89 c7             	mov    %rax,%rdi
    f137:	e8 41 4e 00 00       	call   13f7d <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    f13c:	84 c0                	test   %al,%al
    f13e:	0f 85 53 ff ff ff    	jne    f097 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x7d>
    // std::cout << availableExtension.extensionName << '\n';
  }
  for (const auto &deviceExtension : deviceExtensions) {
    f144:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    f14b:	48 05 90 00 00 00    	add    $0x90,%rax
    f151:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    f155:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f159:	48 89 c7             	mov    %rax,%rdi
    f15c:	e8 2b 49 00 00       	call   13a8c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    f161:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    f168:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f16c:	48 89 c7             	mov    %rax,%rdi
    f16f:	e8 3e 49 00 00       	call   13ab2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    f174:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    f17b:	e9 ed 00 00 00       	jmp    f26d <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x253>
    f180:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    f187:	48 89 c7             	mov    %rax,%rdi
    f18a:	e8 a7 49 00 00       	call   13b36 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    f18f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    helper[deviceExtension]++;
    f193:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    f197:	48 89 c7             	mov    %rax,%rdi
    f19a:	e8 71 57 ff ff       	call   4910 <_ZNSaIcEC1Ev@plt>
    f19f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f1a3:	48 8b 08             	mov    (%rax),%rcx
    f1a6:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
    f1aa:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    f1b1:	48 89 ce             	mov    %rcx,%rsi
    f1b4:	48 89 c7             	mov    %rax,%rdi
    f1b7:	e8 92 5f ff ff       	call   514e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    f1bc:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    f1c3:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    f1ca:	48 89 d6             	mov    %rdx,%rsi
    f1cd:	48 89 c7             	mov    %rax,%rdi
    f1d0:	e8 19 4e 00 00       	call   13fee <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    f1d5:	8b 10                	mov    (%rax),%edx
    f1d7:	83 c2 01             	add    $0x1,%edx
    f1da:	89 10                	mov    %edx,(%rax)
    f1dc:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    f1e3:	48 89 c7             	mov    %rax,%rdi
    f1e6:	e8 85 50 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f1eb:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    f1ef:	48 89 c7             	mov    %rax,%rdi
    f1f2:	e8 39 53 ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
    if (helper[deviceExtension] < 2) {
    f1f7:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f1fb:	48 89 c7             	mov    %rax,%rdi
    f1fe:	e8 0d 57 ff ff       	call   4910 <_ZNSaIcEC1Ev@plt>
    f203:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f207:	48 8b 08             	mov    (%rax),%rcx
    f20a:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    f20e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    f212:	48 89 ce             	mov    %rcx,%rsi
    f215:	48 89 c7             	mov    %rax,%rdi
    f218:	e8 31 5f ff ff       	call   514e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    f21d:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    f221:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    f228:	48 89 d6             	mov    %rdx,%rsi
    f22b:	48 89 c7             	mov    %rax,%rdi
    f22e:	e8 bb 4d 00 00       	call   13fee <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    f233:	8b 00                	mov    (%rax),%eax
    f235:	83 f8 01             	cmp    $0x1,%eax
    f238:	0f 96 c3             	setbe  %bl
    f23b:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    f23f:	48 89 c7             	mov    %rax,%rdi
    f242:	e8 29 50 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f247:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f24b:	48 89 c7             	mov    %rax,%rdi
    f24e:	e8 dd 52 ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
    f253:	84 db                	test   %bl,%bl
    f255:	74 07                	je     f25e <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x244>
      return false;
    f257:	bb 00 00 00 00       	mov    $0x0,%ebx
    f25c:	eb 35                	jmp    f293 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x279>
  for (const auto &deviceExtension : deviceExtensions) {
    f25e:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    f265:	48 89 c7             	mov    %rax,%rdi
    f268:	e8 a9 48 00 00       	call   13b16 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    f26d:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    f274:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    f27b:	48 89 d6             	mov    %rdx,%rsi
    f27e:	48 89 c7             	mov    %rax,%rdi
    f281:	e8 55 48 00 00       	call   13adb <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    f286:	84 c0                	test   %al,%al
    f288:	0f 85 f2 fe ff ff    	jne    f180 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x166>
    }
  }
  return true;
    f28e:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    f293:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    f29a:	48 89 c7             	mov    %rax,%rdi
    f29d:	e8 5c 44 00 00       	call   136fe <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    f2a2:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f2a9:	48 89 c7             	mov    %rax,%rdi
    f2ac:	e8 27 a6 ff ff       	call   98d8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    f2b1:	89 d8                	mov    %ebx,%eax
    f2b3:	e9 96 00 00 00       	jmp    f34e <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x334>
    helper[availableExtension.extensionName]++;
    f2b8:	48 89 c3             	mov    %rax,%rbx
    f2bb:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f2c2:	48 89 c7             	mov    %rax,%rdi
    f2c5:	e8 a6 4f ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f2ca:	eb 03                	jmp    f2cf <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2b5>
    f2cc:	48 89 c3             	mov    %rax,%rbx
    f2cf:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    f2d6:	48 89 c7             	mov    %rax,%rdi
    f2d9:	e8 52 52 ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
    f2de:	eb 45                	jmp    f325 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    helper[deviceExtension]++;
    f2e0:	48 89 c3             	mov    %rax,%rbx
    f2e3:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    f2ea:	48 89 c7             	mov    %rax,%rdi
    f2ed:	e8 7e 4f ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f2f2:	eb 03                	jmp    f2f7 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2dd>
    f2f4:	48 89 c3             	mov    %rax,%rbx
    f2f7:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    f2fb:	48 89 c7             	mov    %rax,%rdi
    f2fe:	e8 2d 52 ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
    f303:	eb 20                	jmp    f325 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    if (helper[deviceExtension] < 2) {
    f305:	48 89 c3             	mov    %rax,%rbx
    f308:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    f30c:	48 89 c7             	mov    %rax,%rdi
    f30f:	e8 5c 4f ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f314:	eb 03                	jmp    f319 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2ff>
    f316:	48 89 c3             	mov    %rax,%rbx
    f319:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f31d:	48 89 c7             	mov    %rax,%rdi
    f320:	e8 0b 52 ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
}
    f325:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    f32c:	48 89 c7             	mov    %rax,%rdi
    f32f:	e8 ca 43 00 00       	call   136fe <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    f334:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f33b:	48 89 c7             	mov    %rax,%rdi
    f33e:	e8 95 a5 ff ff       	call   98d8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    f343:	48 89 d8             	mov    %rbx,%rax
    f346:	48 89 c7             	mov    %rax,%rdi
    f349:	e8 b2 55 ff ff       	call   4900 <_Unwind_Resume@plt>
    f34e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f352:	c9                   	leave
    f353:	c3                   	ret

000000000000f354 <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceSwapchainSupport(
    [[maybe_unused]] VkPhysicalDevice physDev) {
    f354:	55                   	push   %rbp
    f355:	48 89 e5             	mov    %rsp,%rbp
    f358:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f35c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return true;
    f360:	b8 01 00 00 00       	mov    $0x1,%eax
}
    f365:	5d                   	pop    %rbp
    f366:	c3                   	ret
    f367:	90                   	nop

000000000000f368 <_ZN9VulkanApp27populateSwapchainCreateInfoEv>:

VkSwapchainCreateInfoKHR VulkanApp::populateSwapchainCreateInfo() {
    f368:	55                   	push   %rbp
    f369:	48 89 e5             	mov    %rsp,%rbp
    f36c:	41 54                	push   %r12
    f36e:	53                   	push   %rbx
    f36f:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
    f376:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    f37d:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  /* Vulkan 1.3.231 - A Specification, pg 2235 */

  auto surfaceCapabilities =
      vkh::getPhysicalDeviceSurfaceCapabilities(physicalDevice, surface);
    f384:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    f38b:	48 8b 50 48          	mov    0x48(%rax),%rdx
    f38f:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    f396:	48 8b 48 58          	mov    0x58(%rax),%rcx
    f39a:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    f39e:	48 89 ce             	mov    %rcx,%rsi
    f3a1:	48 89 c7             	mov    %rax,%rdi
    f3a4:	e8 04 9d ff ff       	call   90ad <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfaceFormats =
      vkh::getPhysicalDeviceSurfaceFormatList(physicalDevice, surface);
    f3a9:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    f3b0:	48 8b 50 48          	mov    0x48(%rax),%rdx
    f3b4:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    f3bb:	48 8b 48 58          	mov    0x58(%rax),%rcx
    f3bf:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    f3c6:	48 89 ce             	mov    %rcx,%rsi
    f3c9:	48 89 c7             	mov    %rax,%rdi
    f3cc:	e8 8a 9d ff ff       	call   915b <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfacePresentModes =
      vkh::getPhysicalDeviceSurfacePresentModeList(physicalDevice, surface);
    f3d1:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    f3d8:	48 8b 50 48          	mov    0x48(%rax),%rdx
    f3dc:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    f3e3:	48 8b 48 58          	mov    0x58(%rax),%rcx
    f3e7:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f3ee:	48 89 ce             	mov    %rcx,%rsi
    f3f1:	48 89 c7             	mov    %rax,%rdi
    f3f4:	e8 d9 9e ff ff       	call   92d2 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  VkSwapchainCreateInfoKHR swapchainCreateInfo{};
    f3f9:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f400:	48 89 c6             	mov    %rax,%rsi
    f403:	b8 00 00 00 00       	mov    $0x0,%eax
    f408:	ba 0d 00 00 00       	mov    $0xd,%edx
    f40d:	48 89 f7             	mov    %rsi,%rdi
    f410:	48 89 d1             	mov    %rdx,%rcx
    f413:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  swapchainCreateInfo.sType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR;
    f416:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f41d:	c7 00 e8 cd 9a 3b    	movl   $0x3b9acde8,(%rax)
  swapchainCreateInfo.pNext = nullptr;
    f423:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f42a:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    f431:	00 
  pNext chain must include a VkImageFormatListCreateInfo structure with a
  viewFormatCount greater than zero and pViewFormats must have an element
  equal to imageFormat */
  // swapchainCreateInfo.flags = VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR;

  swapchainCreateInfo.surface = surface;
    f432:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    f439:	48 8b 50 48          	mov    0x48(%rax),%rdx
    f43d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f444:	48 89 50 18          	mov    %rdx,0x18(%rax)

  /* plus 1 to prevent waiting on the driver to complete internal operations
  before another image is accquired */
  uint32_t minImageCount = surfaceCapabilities.minImageCount + 1;
    f448:	8b 45 80             	mov    -0x80(%rbp),%eax
    f44b:	83 c0 01             	add    $0x1,%eax
    f44e:	89 45 ec             	mov    %eax,-0x14(%rbp)

  /* minImageCount <= surfaceCapabilities.maxImageCount, and
  surfaceCapabilities.maxImageCount might be less than
  surfaceCapabilities.minImageCount */
  if (surfaceCapabilities.maxImageCount > 0 &&
    f451:	8b 45 84             	mov    -0x7c(%rbp),%eax
    f454:	85 c0                	test   %eax,%eax
    f456:	74 0e                	je     f466 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
      minImageCount > surfaceCapabilities.maxImageCount) {
    f458:	8b 45 84             	mov    -0x7c(%rbp),%eax
  if (surfaceCapabilities.maxImageCount > 0 &&
    f45b:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    f45e:	73 06                	jae    f466 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
    minImageCount = surfaceCapabilities.maxImageCount;
    f460:	8b 45 84             	mov    -0x7c(%rbp),%eax
    f463:	89 45 ec             	mov    %eax,-0x14(%rbp)
  }
  swapchainCreateInfo.minImageCount = minImageCount;
    f466:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f46d:	8b 55 ec             	mov    -0x14(%rbp),%edx
    f470:	89 50 20             	mov    %edx,0x20(%rax)

  /* imageFormat and imageColorSpace must match the surfaceFormats.format and
  surfaceFormats.colorSpace members, respectively */
  if (surfaceFormats.empty()) {
    f473:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    f47a:	48 89 c7             	mov    %rax,%rdi
    f47d:	e8 70 4c 00 00       	call   140f2 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>
    f482:	84 c0                	test   %al,%al
    f484:	74 3b                	je     f4c1 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x159>
    throw std::runtime_error("No surface format available.");
    f486:	bf 10 00 00 00       	mov    $0x10,%edi
    f48b:	e8 30 4d ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    f490:	48 89 c3             	mov    %rax,%rbx
    f493:	48 8d 05 2a 19 01 00 	lea    0x1192a(%rip),%rax        # 20dc4 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8c>
    f49a:	48 89 c6             	mov    %rax,%rsi
    f49d:	48 89 df             	mov    %rbx,%rdi
    f4a0:	e8 8b 4c ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    f4a5:	48 8b 05 fc 1a 02 00 	mov    0x21afc(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    f4ac:	48 89 c2             	mov    %rax,%rdx
    f4af:	48 8d 05 8a 18 02 00 	lea    0x2188a(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    f4b6:	48 89 c6             	mov    %rax,%rsi
    f4b9:	48 89 df             	mov    %rbx,%rdi
    f4bc:	e8 cf 53 ff ff       	call   4890 <__cxa_throw@plt>
  }
  swapchainCreateInfo.imageFormat = surfaceFormats[0].format;
    f4c1:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    f4c8:	be 00 00 00 00       	mov    $0x0,%esi
    f4cd:	48 89 c7             	mov    %rax,%rdi
    f4d0:	e8 5f 4c 00 00       	call   14134 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    f4d5:	8b 10                	mov    (%rax),%edx
    f4d7:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f4de:	89 50 24             	mov    %edx,0x24(%rax)
  swapchainCreateInfo.imageColorSpace = surfaceFormats[0].colorSpace;
    f4e1:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    f4e8:	be 00 00 00 00       	mov    $0x0,%esi
    f4ed:	48 89 c7             	mov    %rax,%rdi
    f4f0:	e8 3f 4c 00 00       	call   14134 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    f4f5:	8b 50 04             	mov    0x4(%rax),%edx
    f4f8:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f4ff:	89 50 28             	mov    %edx,0x28(%rax)
  for (const auto &format : surfaceFormats) {
    f502:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    f509:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    f50d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f511:	48 89 c7             	mov    %rax,%rdi
    f514:	e8 3b 4c 00 00       	call   14154 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    f519:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    f520:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f524:	48 89 c7             	mov    %rax,%rdi
    f527:	e8 4e 4c 00 00       	call   1417a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    f52c:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    f533:	eb 5b                	jmp    f590 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x228>
    f535:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    f53c:	48 89 c7             	mov    %rax,%rdi
    f53f:	e8 ba 4c 00 00       	call   141fe <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>
    f544:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    f548:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f54c:	8b 00                	mov    (%rax),%eax
    f54e:	83 f8 2b             	cmp    $0x2b,%eax
    f551:	75 2e                	jne    f581 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
        format.colorSpace == VK_COLOR_SPACE_SRGB_NONLINEAR_KHR) {
    f553:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f557:	8b 40 04             	mov    0x4(%rax),%eax
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    f55a:	85 c0                	test   %eax,%eax
    f55c:	75 23                	jne    f581 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
      swapchainCreateInfo.imageFormat = format.format;
    f55e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f562:	8b 10                	mov    (%rax),%edx
    f564:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f56b:	89 50 24             	mov    %edx,0x24(%rax)
      swapchainCreateInfo.imageColorSpace = format.colorSpace;
    f56e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f572:	8b 50 04             	mov    0x4(%rax),%edx
    f575:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f57c:	89 50 28             	mov    %edx,0x28(%rax)
      break;
    f57f:	eb 2c                	jmp    f5ad <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x245>
  for (const auto &format : surfaceFormats) {
    f581:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    f588:	48 89 c7             	mov    %rax,%rdi
    f58b:	e8 4e 4c 00 00       	call   141de <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>
    f590:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    f597:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    f59e:	48 89 d6             	mov    %rdx,%rsi
    f5a1:	48 89 c7             	mov    %rax,%rdi
    f5a4:	e8 fa 4b 00 00       	call   141a3 <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    f5a9:	84 c0                	test   %al,%al
    f5ab:	75 88                	jne    f535 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x1cd>
    }
  }
  swapchain.format = swapchainCreateInfo.imageFormat;
    f5ad:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f5b4:	8b 50 24             	mov    0x24(%rax),%edx
    f5b7:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    f5be:	89 50 78             	mov    %edx,0x78(%rax)

  /* imageExtent is the size (in pixels) of the swapchain
  image(s). The behavior is platform-dependent if the image
  extent does not match the surface’s currentExtent as returned
  by vkGetPhysicalDeviceSurfaceCapabilitiesKHR. */
  uint32_t imageExtentWidth = surfaceCapabilities.currentExtent.width;
    f5c1:	8b 45 88             	mov    -0x78(%rbp),%eax
    f5c4:	89 45 e8             	mov    %eax,-0x18(%rbp)
  uint32_t imageExtentHeight = surfaceCapabilities.currentExtent.height;
    f5c7:	8b 45 8c             	mov    -0x74(%rbp),%eax
    f5ca:	89 45 e4             	mov    %eax,-0x1c(%rbp)

  /* {0, 0} <= minImageExtent <= imageExtent <= maxImageExtent */
  if (imageExtentWidth > surfaceCapabilities.maxImageExtent.width) {
    f5cd:	8b 45 98             	mov    -0x68(%rbp),%eax
    f5d0:	3b 45 e8             	cmp    -0x18(%rbp),%eax
    f5d3:	73 06                	jae    f5db <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x273>
    imageExtentWidth = surfaceCapabilities.maxImageExtent.width;
    f5d5:	8b 45 98             	mov    -0x68(%rbp),%eax
    f5d8:	89 45 e8             	mov    %eax,-0x18(%rbp)
  }
  if (imageExtentHeight > surfaceCapabilities.maxImageExtent.height) {
    f5db:	8b 45 9c             	mov    -0x64(%rbp),%eax
    f5de:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    f5e1:	73 06                	jae    f5e9 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x281>
    imageExtentHeight = surfaceCapabilities.maxImageExtent.height;
    f5e3:	8b 45 9c             	mov    -0x64(%rbp),%eax
    f5e6:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  }
  swapchainCreateInfo.imageExtent = {imageExtentWidth, imageExtentHeight};
    f5e9:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f5f0:	8b 55 e8             	mov    -0x18(%rbp),%edx
    f5f3:	89 50 2c             	mov    %edx,0x2c(%rax)
    f5f6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f5fd:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    f600:	89 50 30             	mov    %edx,0x30(%rax)
  swapchain.extent = swapchainCreateInfo.imageExtent;
    f603:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    f60a:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    f611:	48 8b 52 2c          	mov    0x2c(%rdx),%rdx
    f615:	48 89 50 7c          	mov    %rdx,0x7c(%rax)

  /* imageArrayLayers is the number of views in a multiview/stereo surface. For
  non-stereoscopic-3D applications, this value is 1. */
  /* 0 < imageArrayLayers <= maxImageArrayLayers */
  swapchainCreateInfo.imageArrayLayers = 1;
    f619:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f620:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%rax)

  /* {presentMode} determines how incoming present requests will be processed
  and queued internally. */
  /* enum {VkPresentModeKHR}, pg 2219 */
  /* {VK_PRESENT_MODE_FIFO_KHR} is guaranteed to be available */
  swapchainCreateInfo.presentMode = VK_PRESENT_MODE_FIFO_KHR;
    f627:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f62e:	c7 40 58 02 00 00 00 	movl   $0x2,0x58(%rax)
  // auto  = VK_PRESENT_MODE_IMMEDIATE_KHR;
  for (const auto &presentMode : surfacePresentModes) {
    f635:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f63c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    f640:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f644:	48 89 c7             	mov    %rax,%rdi
    f647:	e8 c4 4b 00 00       	call   14210 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>
    f64c:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    f653:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f657:	48 89 c7             	mov    %rax,%rdi
    f65a:	e8 d7 4b 00 00       	call   14236 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>
    f65f:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    f666:	eb 52                	jmp    f6ba <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x352>
    f668:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    f66f:	48 89 c7             	mov    %rax,%rdi
    f672:	e8 43 4c 00 00       	call   142ba <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>
    f677:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    if (presentMode == preferredPresentMode) {
    f67b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f67f:	8b 10                	mov    (%rax),%edx
    f681:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    f688:	8b 80 88 00 00 00    	mov    0x88(%rax),%eax
    f68e:	39 c2                	cmp    %eax,%edx
    f690:	75 19                	jne    f6ab <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x343>
      swapchainCreateInfo.presentMode = preferredPresentMode;
    f692:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    f699:	8b 90 88 00 00 00    	mov    0x88(%rax),%edx
    f69f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f6a6:	89 50 58             	mov    %edx,0x58(%rax)
      break;
    f6a9:	eb 2c                	jmp    f6d7 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x36f>
  for (const auto &presentMode : surfacePresentModes) {
    f6ab:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    f6b2:	48 89 c7             	mov    %rax,%rdi
    f6b5:	e8 e0 4b 00 00       	call   1429a <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>
    f6ba:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
    f6c1:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    f6c8:	48 89 d6             	mov    %rdx,%rsi
    f6cb:	48 89 c7             	mov    %rax,%rdi
    f6ce:	e8 8c 4b 00 00       	call   1425f <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    f6d3:	84 c0                	test   %al,%al
    f6d5:	75 91                	jne    f668 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x300>
  }

  /* {VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT} specifies that the image can be used
  to create a {VkImageView} suitable for use as a color or resolve attachment in
  a {VkFramebuffer}, pg 898 */
  swapchainCreateInfo.imageUsage = VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT;
    f6d7:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f6de:	c7 40 38 10 00 00 00 	movl   $0x10,0x38(%rax)

  /* {VK_SHARING_MODE_EXCLUSIVE} requires some works to be done with ownership
   */
  swapchainCreateInfo.imageSharingMode = VK_SHARING_MODE_EXCLUSIVE;
    f6e5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f6ec:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%rax)
  swapchainCreateInfo.queueFamilyIndexCount = 0;
    f6f3:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f6fa:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)
  swapchainCreateInfo.pQueueFamilyIndices = nullptr;
    f701:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f708:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
    f70f:	00 

  /* image content is presented without being transformed */
  if (surfaceCapabilities.supportedTransforms &
    f710:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    f713:	83 e0 01             	and    $0x1,%eax
    f716:	85 c0                	test   %eax,%eax
    f718:	74 1e                	je     f738 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3d0>
      VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR) {
    swapchainCreateInfo.preTransform = VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR;
    f71a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f721:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%rax)
  } else {
    throw std::runtime_error(
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
  }

  if (surfaceCapabilities.supportedCompositeAlpha &
    f728:	8b 45 ac             	mov    -0x54(%rbp),%eax
    f72b:	83 e0 01             	and    $0x1,%eax
    f72e:	85 c0                	test   %eax,%eax
    f730:	0f 84 9b 00 00 00    	je     f7d1 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x469>
    f736:	eb 3b                	jmp    f773 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x40b>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    f738:	bf 10 00 00 00       	mov    $0x10,%edi
    f73d:	e8 7e 4a ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    f742:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    f745:	48 8d 05 9c 16 01 00 	lea    0x1169c(%rip),%rax        # 20de8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xb0>
    f74c:	48 89 c6             	mov    %rax,%rsi
    f74f:	48 89 df             	mov    %rbx,%rdi
    f752:	e8 d9 49 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    f757:	48 8b 05 4a 18 02 00 	mov    0x2184a(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    f75e:	48 89 c2             	mov    %rax,%rdx
    f761:	48 8d 05 d8 15 02 00 	lea    0x215d8(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    f768:	48 89 c6             	mov    %rax,%rsi
    f76b:	48 89 df             	mov    %rbx,%rdi
    f76e:	e8 1d 51 ff ff       	call   4890 <__cxa_throw@plt>
      VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR) {
    swapchainCreateInfo.compositeAlpha = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR;
    f773:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f77a:	c7 40 54 01 00 00 00 	movl   $0x1,0x54(%rax)
  } else {
    throw std::runtime_error(
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
  }

  swapchainCreateInfo.clipped = VK_TRUE;
    f781:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f788:	c7 40 5c 01 00 00 00 	movl   $0x1,0x5c(%rax)

  swapchainCreateInfo.pNext = nullptr;
    f78f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f796:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    f79d:	00 
  swapchainCreateInfo.oldSwapchain = VK_NULL_HANDLE;
    f79e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f7a5:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
    f7ac:	00 

  return swapchainCreateInfo;
    f7ad:	90                   	nop
}
    f7ae:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f7b5:	48 89 c7             	mov    %rax,%rdi
    f7b8:	e8 b9 aa ff ff       	call   a276 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    f7bd:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    f7c4:	48 89 c7             	mov    %rax,%rdi
    f7c7:	e8 46 a9 ff ff       	call   a112 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
  return swapchainCreateInfo;
    f7cc:	e9 9c 00 00 00       	jmp    f86d <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x505>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    f7d1:	bf 10 00 00 00       	mov    $0x10,%edi
    f7d6:	e8 e5 49 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    f7db:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    f7de:	48 8d 05 3b 16 01 00 	lea    0x1163b(%rip),%rax        # 20e20 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe8>
    f7e5:	48 89 c6             	mov    %rax,%rsi
    f7e8:	48 89 df             	mov    %rbx,%rdi
    f7eb:	e8 40 49 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    f7f0:	48 8b 05 b1 17 02 00 	mov    0x217b1(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    f7f7:	48 89 c2             	mov    %rax,%rdx
    f7fa:	48 8d 05 3f 15 02 00 	lea    0x2153f(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    f801:	48 89 c6             	mov    %rax,%rsi
    f804:	48 89 df             	mov    %rbx,%rdi
    f807:	e8 84 50 ff ff       	call   4890 <__cxa_throw@plt>
    throw std::runtime_error("No surface format available.");
    f80c:	49 89 c4             	mov    %rax,%r12
    f80f:	48 89 df             	mov    %rbx,%rdi
    f812:	e8 b9 4a ff ff       	call   42d0 <__cxa_free_exception@plt>
    f817:	4c 89 e3             	mov    %r12,%rbx
    f81a:	eb 23                	jmp    f83f <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4d7>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    f81c:	49 89 c4             	mov    %rax,%r12
    f81f:	48 89 df             	mov    %rbx,%rdi
    f822:	e8 a9 4a ff ff       	call   42d0 <__cxa_free_exception@plt>
    f827:	4c 89 e3             	mov    %r12,%rbx
    f82a:	eb 13                	jmp    f83f <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4d7>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    f82c:	49 89 c4             	mov    %rax,%r12
    f82f:	48 89 df             	mov    %rbx,%rdi
    f832:	e8 99 4a ff ff       	call   42d0 <__cxa_free_exception@plt>
    f837:	4c 89 e3             	mov    %r12,%rbx
    f83a:	eb 03                	jmp    f83f <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4d7>
}
    f83c:	48 89 c3             	mov    %rax,%rbx
    f83f:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f846:	48 89 c7             	mov    %rax,%rdi
    f849:	e8 28 aa ff ff       	call   a276 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    f84e:	eb 03                	jmp    f853 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4eb>
    f850:	48 89 c3             	mov    %rax,%rbx
    f853:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    f85a:	48 89 c7             	mov    %rax,%rdi
    f85d:	e8 b0 a8 ff ff       	call   a112 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    f862:	48 89 d8             	mov    %rbx,%rax
    f865:	48 89 c7             	mov    %rax,%rdi
    f868:	e8 93 50 ff ff       	call   4900 <_Unwind_Resume@plt>
    f86d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f874:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
    f87b:	5b                   	pop    %rbx
    f87c:	41 5c                	pop    %r12
    f87e:	5d                   	pop    %rbp
    f87f:	c3                   	ret

000000000000f880 <_ZN9VulkanApp15createSwapchainEv>:

void VulkanApp::createSwapchain() {
    f880:	55                   	push   %rbp
    f881:	48 89 e5             	mov    %rsp,%rbp
    f884:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    f888:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  auto swapchainCreateInfo = populateSwapchainCreateInfo();
    f88c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    f890:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    f894:	48 89 d6             	mov    %rdx,%rsi
    f897:	48 89 c7             	mov    %rax,%rdi
    f89a:	e8 c9 fa ff ff       	call   f368 <_ZN9VulkanApp27populateSwapchainCreateInfoEv>
  swapchain.self = vkh::createSwapchain(device, &swapchainCreateInfo);
    f89f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f8a3:	48 8b 40 50          	mov    0x50(%rax),%rax
    f8a7:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    f8ab:	ba 00 00 00 00       	mov    $0x0,%edx
    f8b0:	48 89 ce             	mov    %rcx,%rsi
    f8b3:	48 89 c7             	mov    %rax,%rdi
    f8b6:	e8 c2 77 ff ff       	call   707d <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>
    f8bb:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    f8bf:	48 89 42 70          	mov    %rax,0x70(%rdx)
}
    f8c3:	90                   	nop
    f8c4:	c9                   	leave
    f8c5:	c3                   	ret

000000000000f8c6 <_ZN9VulkanApp16createImageViewsEv>:

void VulkanApp::createImageViews() {
    f8c6:	55                   	push   %rbp
    f8c7:	48 89 e5             	mov    %rsp,%rbp
    f8ca:	53                   	push   %rbx
    f8cb:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    f8d2:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  images = vkh::getSwapchainImages(device, swapchain.self);
    f8d9:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f8e0:	48 8b 50 70          	mov    0x70(%rax),%rdx
    f8e4:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f8eb:	48 8b 48 50          	mov    0x50(%rax),%rcx
    f8ef:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f8f3:	48 89 ce             	mov    %rcx,%rsi
    f8f6:	48 89 c7             	mov    %rax,%rdi
    f8f9:	e8 4b 9b ff ff       	call   9449 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>
    f8fe:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f905:	48 8d 90 c0 00 00 00 	lea    0xc0(%rax),%rdx
    f90c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f910:	48 89 c6             	mov    %rax,%rsi
    f913:	48 89 d7             	mov    %rdx,%rdi
    f916:	e8 b1 49 00 00       	call   142cc <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>
    f91b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f91f:	48 89 c7             	mov    %rax,%rdi
    f922:	e8 b3 aa ff ff       	call   a3da <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
  size_t imageCount = images.size();
    f927:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f92e:	48 05 c0 00 00 00    	add    $0xc0,%rax
    f934:	48 89 c7             	mov    %rax,%rdi
    f937:	e8 c8 49 00 00       	call   14304 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    f93c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  imageViews.resize(imageCount);
    f940:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f947:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
    f94e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f952:	48 89 c6             	mov    %rax,%rsi
    f955:	48 89 d7             	mov    %rdx,%rdi
    f958:	e8 cb 49 00 00       	call   14328 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < imageCount; ++i) {
    f95d:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    f964:	00 
    f965:	e9 f1 00 00 00       	jmp    fa5b <_ZN9VulkanApp16createImageViewsEv+0x195>
    VkImageViewCreateInfo imageViewInfo{};
    f96a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f96e:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    f975:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    f979:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    f97d:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    f981:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    imageViewInfo.sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;
    f985:	c7 85 70 ff ff ff 0f 	movl   $0xf,-0x90(%rbp)
    f98c:	00 00 00 
    imageViewInfo.pNext = nullptr;
    f98f:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
    f996:	00 00 00 00 
    // imageViewInfo.flags =
    imageViewInfo.image = images[i];
    f99a:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f9a1:	48 8d 90 c0 00 00 00 	lea    0xc0(%rax),%rdx
    f9a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f9ac:	48 89 c6             	mov    %rax,%rsi
    f9af:	48 89 d7             	mov    %rdx,%rdi
    f9b2:	e8 f7 49 00 00       	call   143ae <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>
    f9b7:	48 8b 00             	mov    (%rax),%rax
    f9ba:	48 89 45 88          	mov    %rax,-0x78(%rbp)

    /* treat images as 2D textures */
    imageViewInfo.viewType = VK_IMAGE_VIEW_TYPE_2D;
    f9be:	c7 45 90 01 00 00 00 	movl   $0x1,-0x70(%rbp)

    imageViewInfo.format = swapchain.format;
    f9c5:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f9cc:	8b 40 78             	mov    0x78(%rax),%eax
    f9cf:	89 45 94             	mov    %eax,-0x6c(%rbp)

    /* default mapping */
    imageViewInfo.components.r = VK_COMPONENT_SWIZZLE_IDENTITY;
    f9d2:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%rbp)
    imageViewInfo.components.g = VK_COMPONENT_SWIZZLE_IDENTITY;
    f9d9:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    imageViewInfo.components.b = VK_COMPONENT_SWIZZLE_IDENTITY;
    f9e0:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
    imageViewInfo.components.a = VK_COMPONENT_SWIZZLE_IDENTITY;
    f9e7:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)

    /* color aspect */
    imageViewInfo.subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
    f9ee:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)

    /* In stereographic 3D applications, create a swapchain with multiple
    layers before creating multiple image views for each images representing
    the views for the left and right eyes by accessing different layers */
    imageViewInfo.subresourceRange.baseMipLevel = 0;
    f9f5:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
    imageViewInfo.subresourceRange.levelCount = 1;
    f9fc:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
    imageViewInfo.subresourceRange.baseArrayLayer = 0;
    fa03:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    imageViewInfo.subresourceRange.layerCount = 1;
    fa0a:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%rbp)

    imageViews[i] = vkh::createImageView(device, &imageViewInfo);
    fa11:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    fa18:	48 8b 40 50          	mov    0x50(%rax),%rax
    fa1c:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    fa23:	ba 00 00 00 00       	mov    $0x0,%edx
    fa28:	48 89 ce             	mov    %rcx,%rsi
    fa2b:	48 89 c7             	mov    %rax,%rdi
    fa2e:	e8 ea 76 ff ff       	call   711d <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>
    fa33:	48 89 c3             	mov    %rax,%rbx
    fa36:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    fa3d:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
    fa44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fa48:	48 89 c6             	mov    %rax,%rsi
    fa4b:	48 89 d7             	mov    %rdx,%rdi
    fa4e:	e8 7b 49 00 00       	call   143ce <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    fa53:	48 89 18             	mov    %rbx,(%rax)
  for (size_t i = 0; i < imageCount; ++i) {
    fa56:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    fa5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fa5f:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    fa63:	0f 82 01 ff ff ff    	jb     f96a <_ZN9VulkanApp16createImageViewsEv+0xa4>
  }
}
    fa69:	90                   	nop
    fa6a:	90                   	nop
    fa6b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    fa6f:	c9                   	leave
    fa70:	c3                   	ret
    fa71:	90                   	nop

000000000000fa72 <_ZN9VulkanApp22createGraphicsPipelineEv>:

void VulkanApp::createGraphicsPipeline() {
    fa72:	55                   	push   %rbp
    fa73:	48 89 e5             	mov    %rsp,%rbp
    fa76:	41 55                	push   %r13
    fa78:	41 54                	push   %r12
    fa7a:	53                   	push   %rbx
    fa7b:	48 81 ec 78 05 00 00 	sub    $0x578,%rsp
    fa82:	48 89 bd 78 fa ff ff 	mov    %rdi,-0x588(%rbp)
  vkh::ShaderModuleWrapper shaderModule{};
    fa89:	48 c7 85 b0 fe ff ff 	movq   $0x0,-0x150(%rbp)
    fa90:	00 00 00 00 
    fa94:	48 c7 85 b8 fe ff ff 	movq   $0x0,-0x148(%rbp)
    fa9b:	00 00 00 00 
  shaderModule.vertex = vkh::createShaderModule(device, "build/shaders/"
    fa9f:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    faa6:	48 89 c7             	mov    %rax,%rdi
    faa9:	e8 62 4e ff ff       	call   4910 <_ZNSaIcEC1Ev@plt>
    faae:	48 8d 95 ef fe ff ff 	lea    -0x111(%rbp),%rdx
    fab5:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    fabc:	48 8d 0d 95 13 01 00 	lea    0x11395(%rip),%rcx        # 20e58 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x120>
    fac3:	48 89 ce             	mov    %rcx,%rsi
    fac6:	48 89 c7             	mov    %rax,%rdi
    fac9:	e8 80 56 ff ff       	call   514e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    face:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    fad5:	48 8b 40 50          	mov    0x50(%rax),%rax
    fad9:	48 8d 8d c0 fe ff ff 	lea    -0x140(%rbp),%rcx
    fae0:	ba 00 00 00 00       	mov    $0x0,%edx
    fae5:	48 89 ce             	mov    %rcx,%rsi
    fae8:	48 89 c7             	mov    %rax,%rdi
    faeb:	e8 9d 77 ff ff       	call   728d <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
    faf0:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
    faf7:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    fafe:	48 89 c7             	mov    %rax,%rdi
    fb01:	e8 6a 47 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    fb06:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    fb0d:	48 89 c7             	mov    %rax,%rdi
    fb10:	e8 1b 4a ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
                                                        "triangle_vert.spv");
  shaderModule.fragment = vkh::createShaderModule(device, "build/shaders/"
    fb15:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    fb1c:	48 89 c7             	mov    %rax,%rdi
    fb1f:	e8 ec 4d ff ff       	call   4910 <_ZNSaIcEC1Ev@plt>
    fb24:	48 8d 95 1f ff ff ff 	lea    -0xe1(%rbp),%rdx
    fb2b:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    fb32:	48 8d 0d 3f 13 01 00 	lea    0x1133f(%rip),%rcx        # 20e78 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x140>
    fb39:	48 89 ce             	mov    %rcx,%rsi
    fb3c:	48 89 c7             	mov    %rax,%rdi
    fb3f:	e8 0a 56 ff ff       	call   514e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    fb44:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    fb4b:	48 8b 40 50          	mov    0x50(%rax),%rax
    fb4f:	48 8d 8d f0 fe ff ff 	lea    -0x110(%rbp),%rcx
    fb56:	ba 00 00 00 00       	mov    $0x0,%edx
    fb5b:	48 89 ce             	mov    %rcx,%rsi
    fb5e:	48 89 c7             	mov    %rax,%rdi
    fb61:	e8 27 77 ff ff       	call   728d <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
    fb66:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
    fb6d:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    fb74:	48 89 c7             	mov    %rax,%rdi
    fb77:	e8 f4 46 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    fb7c:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    fb83:	48 89 c7             	mov    %rax,%rdi
    fb86:	e8 a5 49 ff ff       	call   4530 <_ZNSaIcED1Ev@plt>

  // std::vector<VkGraphicsPipelineCreateInfo>
  // graphicsPipelineCreateInfos{};

  /*  */
  VkPipelineShaderStageCreateInfo vertShaderStageInfo{};
    fb8b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fb8f:	0f 29 85 80 fe ff ff 	movaps %xmm0,-0x180(%rbp)
    fb96:	0f 29 85 90 fe ff ff 	movaps %xmm0,-0x170(%rbp)
    fb9d:	0f 29 85 a0 fe ff ff 	movaps %xmm0,-0x160(%rbp)
  vertShaderStageInfo.sType =
    fba4:	c7 85 80 fe ff ff 12 	movl   $0x12,-0x180(%rbp)
    fbab:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  vertShaderStageInfo.stage = VK_SHADER_STAGE_VERTEX_BIT;
    fbae:	c7 85 94 fe ff ff 01 	movl   $0x1,-0x16c(%rbp)
    fbb5:	00 00 00 
  vertShaderStageInfo.module = shaderModule.vertex;
    fbb8:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    fbbf:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  vertShaderStageInfo.pName = "main";
    fbc6:	48 8d 05 cb 12 01 00 	lea    0x112cb(%rip),%rax        # 20e98 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x160>
    fbcd:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
  vertShaderStageInfo.pSpecializationInfo = nullptr;
    fbd4:	48 c7 85 a8 fe ff ff 	movq   $0x0,-0x158(%rbp)
    fbdb:	00 00 00 00 

  VkPipelineShaderStageCreateInfo fragShaderStageInfo{};
    fbdf:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fbe3:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    fbea:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    fbf1:	0f 29 85 70 fe ff ff 	movaps %xmm0,-0x190(%rbp)
  fragShaderStageInfo.sType =
    fbf8:	c7 85 50 fe ff ff 12 	movl   $0x12,-0x1b0(%rbp)
    fbff:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  fragShaderStageInfo.stage = VK_SHADER_STAGE_FRAGMENT_BIT;
    fc02:	c7 85 64 fe ff ff 10 	movl   $0x10,-0x19c(%rbp)
    fc09:	00 00 00 
  fragShaderStageInfo.module = shaderModule.fragment;
    fc0c:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    fc13:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  fragShaderStageInfo.pName = "main";
    fc1a:	48 8d 05 77 12 01 00 	lea    0x11277(%rip),%rax        # 20e98 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x160>
    fc21:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  fragShaderStageInfo.pSpecializationInfo = nullptr;
    fc28:	48 c7 85 78 fe ff ff 	movq   $0x0,-0x188(%rbp)
    fc2f:	00 00 00 00 

  VkPipelineShaderStageCreateInfo shaderStages[] = {vertShaderStageInfo,
                                                    fragShaderStageInfo};
    fc33:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    fc3a:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
    fc41:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
    fc48:	48 89 95 f8 fd ff ff 	mov    %rdx,-0x208(%rbp)
    fc4f:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
    fc56:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
    fc5d:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
    fc64:	48 89 95 08 fe ff ff 	mov    %rdx,-0x1f8(%rbp)
    fc6b:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
    fc72:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
    fc79:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
    fc80:	48 89 95 18 fe ff ff 	mov    %rdx,-0x1e8(%rbp)
    fc87:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
    fc8e:	48 8b 95 58 fe ff ff 	mov    -0x1a8(%rbp),%rdx
    fc95:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    fc9c:	48 89 95 28 fe ff ff 	mov    %rdx,-0x1d8(%rbp)
    fca3:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
    fcaa:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx
    fcb1:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
    fcb8:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
    fcbf:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
    fcc6:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
    fccd:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
    fcd4:	48 89 95 48 fe ff ff 	mov    %rdx,-0x1b8(%rbp)

  /*  */
  auto bindingDescription = vkh::Vertex2D_RGB::getBindingDescription();
    fcdb:	e8 0e 47 00 00       	call   143ee <_ZN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EE21getBindingDescriptionEv>
    fce0:	48 89 85 e4 fd ff ff 	mov    %rax,-0x21c(%rbp)
    fce7:	8b 85 ec fd ff ff    	mov    -0x214(%rbp),%eax
    fced:	83 e0 00             	and    $0x0,%eax
    fcf0:	09 d0                	or     %edx,%eax
    fcf2:	89 85 ec fd ff ff    	mov    %eax,-0x214(%rbp)
  auto attributeDescriptions = vkh::Vertex2D_RGB::getAttributeDescriptions();
    fcf8:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    fcff:	48 89 c7             	mov    %rax,%rdi
    fd02:	e8 29 47 00 00       	call   14430 <_ZN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EE24getAttributeDescriptionsEv>

  VkPipelineVertexInputStateCreateInfo vertInputInfo{};
    fd07:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fd0b:	0f 29 85 90 fd ff ff 	movaps %xmm0,-0x270(%rbp)
    fd12:	0f 29 85 a0 fd ff ff 	movaps %xmm0,-0x260(%rbp)
    fd19:	0f 29 85 b0 fd ff ff 	movaps %xmm0,-0x250(%rbp)
  vertInputInfo.sType =
    fd20:	c7 85 90 fd ff ff 13 	movl   $0x13,-0x270(%rbp)
    fd27:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO;
  vertInputInfo.vertexBindingDescriptionCount = 1;
    fd2a:	c7 85 a4 fd ff ff 01 	movl   $0x1,-0x25c(%rbp)
    fd31:	00 00 00 
  vertInputInfo.pVertexBindingDescriptions = &bindingDescription;
    fd34:	48 8d 85 e4 fd ff ff 	lea    -0x21c(%rbp),%rax
    fd3b:	48 89 85 a8 fd ff ff 	mov    %rax,-0x258(%rbp)
  vertInputInfo.vertexAttributeDescriptionCount =
      static_cast<uint32_t>(attributeDescriptions.size());
    fd42:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    fd49:	48 89 c7             	mov    %rax,%rdi
    fd4c:	e8 bf 47 00 00       	call   14510 <_ZNKSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4sizeEv>
  vertInputInfo.vertexAttributeDescriptionCount =
    fd51:	89 85 b0 fd ff ff    	mov    %eax,-0x250(%rbp)
  vertInputInfo.pVertexAttributeDescriptions = attributeDescriptions.data();
    fd57:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    fd5e:	48 89 c7             	mov    %rax,%rdi
    fd61:	e8 b4 39 00 00       	call   1371a <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4dataEv>
    fd66:	48 89 85 b8 fd ff ff 	mov    %rax,-0x248(%rbp)

  /*  */
  VkPipelineInputAssemblyStateCreateInfo inputAssemblyInfo{};
    fd6d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fd71:	0f 29 85 70 fd ff ff 	movaps %xmm0,-0x290(%rbp)
    fd78:	0f 29 85 80 fd ff ff 	movaps %xmm0,-0x280(%rbp)
  inputAssemblyInfo.sType =
    fd7f:	c7 85 70 fd ff ff 14 	movl   $0x14,-0x290(%rbp)
    fd86:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO;
  inputAssemblyInfo.topology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST;
    fd89:	c7 85 84 fd ff ff 03 	movl   $0x3,-0x27c(%rbp)
    fd90:	00 00 00 
  inputAssemblyInfo.primitiveRestartEnable = VK_FALSE;
    fd93:	c7 85 88 fd ff ff 00 	movl   $0x0,-0x278(%rbp)
    fd9a:	00 00 00 

  /*  */
  VkViewport viewport{};
    fd9d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fda1:	0f 29 85 50 fd ff ff 	movaps %xmm0,-0x2b0(%rbp)
    fda8:	66 0f d6 85 60 fd ff 	movq   %xmm0,-0x2a0(%rbp)
    fdaf:	ff 
  viewport.x = 0.0f;
    fdb0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fdb4:	f3 0f 11 85 50 fd ff 	movss  %xmm0,-0x2b0(%rbp)
    fdbb:	ff 
  viewport.y = 0.0f;
    fdbc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fdc0:	f3 0f 11 85 54 fd ff 	movss  %xmm0,-0x2ac(%rbp)
    fdc7:	ff 
  viewport.width = static_cast<float>(swapchain.extent.width);
    fdc8:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    fdcf:	8b 40 7c             	mov    0x7c(%rax),%eax
    fdd2:	89 c0                	mov    %eax,%eax
    fdd4:	48 85 c0             	test   %rax,%rax
    fdd7:	78 0b                	js     fde4 <_ZN9VulkanApp22createGraphicsPipelineEv+0x372>
    fdd9:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fddd:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    fde2:	eb 19                	jmp    fdfd <_ZN9VulkanApp22createGraphicsPipelineEv+0x38b>
    fde4:	48 89 c2             	mov    %rax,%rdx
    fde7:	48 d1 ea             	shr    %rdx
    fdea:	83 e0 01             	and    $0x1,%eax
    fded:	48 09 c2             	or     %rax,%rdx
    fdf0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fdf4:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    fdf9:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    fdfd:	f3 0f 11 85 58 fd ff 	movss  %xmm0,-0x2a8(%rbp)
    fe04:	ff 
  viewport.height = static_cast<float>(swapchain.extent.height);
    fe05:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    fe0c:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
    fe12:	89 c0                	mov    %eax,%eax
    fe14:	48 85 c0             	test   %rax,%rax
    fe17:	78 0b                	js     fe24 <_ZN9VulkanApp22createGraphicsPipelineEv+0x3b2>
    fe19:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fe1d:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    fe22:	eb 19                	jmp    fe3d <_ZN9VulkanApp22createGraphicsPipelineEv+0x3cb>
    fe24:	48 89 c2             	mov    %rax,%rdx
    fe27:	48 d1 ea             	shr    %rdx
    fe2a:	83 e0 01             	and    $0x1,%eax
    fe2d:	48 09 c2             	or     %rax,%rdx
    fe30:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fe34:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    fe39:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    fe3d:	f3 0f 11 85 5c fd ff 	movss  %xmm0,-0x2a4(%rbp)
    fe44:	ff 
  viewport.minDepth = 0.0f;
    fe45:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fe49:	f3 0f 11 85 60 fd ff 	movss  %xmm0,-0x2a0(%rbp)
    fe50:	ff 
  viewport.maxDepth = 1.0f;
    fe51:	f3 0f 10 05 5f 14 01 	movss  0x1145f(%rip),%xmm0        # 212b8 <_ZZN9VulkanApp6renderEvE11submitCount+0x38c>
    fe58:	00 
    fe59:	f3 0f 11 85 64 fd ff 	movss  %xmm0,-0x29c(%rbp)
    fe60:	ff 

  VkRect2D scissor{};
    fe61:	48 c7 85 40 fd ff ff 	movq   $0x0,-0x2c0(%rbp)
    fe68:	00 00 00 00 
    fe6c:	48 c7 85 48 fd ff ff 	movq   $0x0,-0x2b8(%rbp)
    fe73:	00 00 00 00 
  scissor.offset = {0, 0};
    fe77:	c7 85 40 fd ff ff 00 	movl   $0x0,-0x2c0(%rbp)
    fe7e:	00 00 00 
    fe81:	c7 85 44 fd ff ff 00 	movl   $0x0,-0x2bc(%rbp)
    fe88:	00 00 00 
  scissor.extent = swapchain.extent;
    fe8b:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    fe92:	48 8b 40 7c          	mov    0x7c(%rax),%rax
    fe96:	48 89 85 48 fd ff ff 	mov    %rax,-0x2b8(%rbp)

  VkPipelineViewportStateCreateInfo viewportStateInfo{};
    fe9d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fea1:	0f 29 85 10 fd ff ff 	movaps %xmm0,-0x2f0(%rbp)
    fea8:	0f 29 85 20 fd ff ff 	movaps %xmm0,-0x2e0(%rbp)
    feaf:	0f 29 85 30 fd ff ff 	movaps %xmm0,-0x2d0(%rbp)
  viewportStateInfo.sType =
    feb6:	c7 85 10 fd ff ff 16 	movl   $0x16,-0x2f0(%rbp)
    febd:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO;
  viewportStateInfo.viewportCount = 1;
    fec0:	c7 85 24 fd ff ff 01 	movl   $0x1,-0x2dc(%rbp)
    fec7:	00 00 00 
  viewportStateInfo.pViewports = &viewport;
    feca:	48 8d 85 50 fd ff ff 	lea    -0x2b0(%rbp),%rax
    fed1:	48 89 85 28 fd ff ff 	mov    %rax,-0x2d8(%rbp)
  viewportStateInfo.scissorCount = 1;
    fed8:	c7 85 30 fd ff ff 01 	movl   $0x1,-0x2d0(%rbp)
    fedf:	00 00 00 
  viewportStateInfo.pScissors = &scissor;
    fee2:	48 8d 85 40 fd ff ff 	lea    -0x2c0(%rbp),%rax
    fee9:	48 89 85 38 fd ff ff 	mov    %rax,-0x2c8(%rbp)

  /*  */
  VkPipelineRasterizationStateCreateInfo rastStateInfo{};
    fef0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fef4:	0f 29 85 d0 fc ff ff 	movaps %xmm0,-0x330(%rbp)
    fefb:	0f 29 85 e0 fc ff ff 	movaps %xmm0,-0x320(%rbp)
    ff02:	0f 29 85 f0 fc ff ff 	movaps %xmm0,-0x310(%rbp)
    ff09:	0f 29 85 00 fd ff ff 	movaps %xmm0,-0x300(%rbp)
  rastStateInfo.sType =
    ff10:	c7 85 d0 fc ff ff 17 	movl   $0x17,-0x330(%rbp)
    ff17:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO;
  rastStateInfo.pNext = nullptr;
    ff1a:	48 c7 85 d8 fc ff ff 	movq   $0x0,-0x328(%rbp)
    ff21:	00 00 00 00 
  rastStateInfo.depthClampEnable = VK_FALSE;
    ff25:	c7 85 e4 fc ff ff 00 	movl   $0x0,-0x31c(%rbp)
    ff2c:	00 00 00 
  rastStateInfo.rasterizerDiscardEnable = VK_FALSE;
    ff2f:	c7 85 e8 fc ff ff 00 	movl   $0x0,-0x318(%rbp)
    ff36:	00 00 00 
  rastStateInfo.polygonMode = VK_POLYGON_MODE_FILL;
    ff39:	c7 85 ec fc ff ff 00 	movl   $0x0,-0x314(%rbp)
    ff40:	00 00 00 
  rastStateInfo.lineWidth = 1.0f;
    ff43:	f3 0f 10 05 6d 13 01 	movss  0x1136d(%rip),%xmm0        # 212b8 <_ZZN9VulkanApp6renderEvE11submitCount+0x38c>
    ff4a:	00 
    ff4b:	f3 0f 11 85 08 fd ff 	movss  %xmm0,-0x2f8(%rbp)
    ff52:	ff 
  rastStateInfo.cullMode = VK_CULL_MODE_BACK_BIT;
    ff53:	c7 85 f0 fc ff ff 02 	movl   $0x2,-0x310(%rbp)
    ff5a:	00 00 00 
  rastStateInfo.frontFace = VK_FRONT_FACE_CLOCKWISE;
    ff5d:	c7 85 f4 fc ff ff 01 	movl   $0x1,-0x30c(%rbp)
    ff64:	00 00 00 
  rastStateInfo.depthBiasEnable = VK_FALSE;
    ff67:	c7 85 f8 fc ff ff 00 	movl   $0x0,-0x308(%rbp)
    ff6e:	00 00 00 
  rastStateInfo.depthBiasConstantFactor = 0.0f;
    ff71:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ff75:	f3 0f 11 85 fc fc ff 	movss  %xmm0,-0x304(%rbp)
    ff7c:	ff 
  rastStateInfo.depthBiasClamp = 0.0f;
    ff7d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ff81:	f3 0f 11 85 00 fd ff 	movss  %xmm0,-0x300(%rbp)
    ff88:	ff 
  rastStateInfo.depthBiasSlopeFactor = 0.0f;
    ff89:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ff8d:	f3 0f 11 85 04 fd ff 	movss  %xmm0,-0x2fc(%rbp)
    ff94:	ff 

  /*  */
  VkPipelineMultisampleStateCreateInfo multisampleStateInfo{};
    ff95:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ff99:	0f 29 85 a0 fc ff ff 	movaps %xmm0,-0x360(%rbp)
    ffa0:	0f 29 85 b0 fc ff ff 	movaps %xmm0,-0x350(%rbp)
    ffa7:	0f 29 85 c0 fc ff ff 	movaps %xmm0,-0x340(%rbp)
  multisampleStateInfo.sType =
    ffae:	c7 85 a0 fc ff ff 18 	movl   $0x18,-0x360(%rbp)
    ffb5:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO;
  multisampleStateInfo.sampleShadingEnable = VK_FALSE;
    ffb8:	c7 85 b8 fc ff ff 00 	movl   $0x0,-0x348(%rbp)
    ffbf:	00 00 00 
  multisampleStateInfo.rasterizationSamples = VK_SAMPLE_COUNT_1_BIT;
    ffc2:	c7 85 b4 fc ff ff 01 	movl   $0x1,-0x34c(%rbp)
    ffc9:	00 00 00 
  multisampleStateInfo.minSampleShading = 1.0f;
    ffcc:	f3 0f 10 05 e4 12 01 	movss  0x112e4(%rip),%xmm0        # 212b8 <_ZZN9VulkanApp6renderEvE11submitCount+0x38c>
    ffd3:	00 
    ffd4:	f3 0f 11 85 bc fc ff 	movss  %xmm0,-0x344(%rbp)
    ffdb:	ff 
  multisampleStateInfo.pSampleMask = nullptr;
    ffdc:	48 c7 85 c0 fc ff ff 	movq   $0x0,-0x340(%rbp)
    ffe3:	00 00 00 00 
  multisampleStateInfo.alphaToCoverageEnable = VK_FALSE;
    ffe7:	c7 85 c8 fc ff ff 00 	movl   $0x0,-0x338(%rbp)
    ffee:	00 00 00 
  multisampleStateInfo.alphaToOneEnable = VK_FALSE;
    fff1:	c7 85 cc fc ff ff 00 	movl   $0x0,-0x334(%rbp)
    fff8:	00 00 00 

  /* Depth and stencil testing */

  /* Color blending */
  VkPipelineColorBlendAttachmentState colorBlendAttachment{};
    fffb:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ffff:	0f 29 85 80 fc ff ff 	movaps %xmm0,-0x380(%rbp)
   10006:	0f 29 85 90 fc ff ff 	movaps %xmm0,-0x370(%rbp)
  colorBlendAttachment.colorWriteMask =
   1000d:	c7 85 9c fc ff ff 0f 	movl   $0xf,-0x364(%rbp)
   10014:	00 00 00 
      VK_COLOR_COMPONENT_R_BIT | VK_COLOR_COMPONENT_G_BIT |
      VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_A_BIT;
  colorBlendAttachment.blendEnable = VK_TRUE;
   10017:	c7 85 80 fc ff ff 01 	movl   $0x1,-0x380(%rbp)
   1001e:	00 00 00 
  colorBlendAttachment.srcColorBlendFactor = VK_BLEND_FACTOR_SRC_ALPHA;
   10021:	c7 85 84 fc ff ff 06 	movl   $0x6,-0x37c(%rbp)
   10028:	00 00 00 
  colorBlendAttachment.dstColorBlendFactor =
   1002b:	c7 85 88 fc ff ff 07 	movl   $0x7,-0x378(%rbp)
   10032:	00 00 00 
      VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA;
  colorBlendAttachment.colorBlendOp = VK_BLEND_OP_ADD;
   10035:	c7 85 8c fc ff ff 00 	movl   $0x0,-0x374(%rbp)
   1003c:	00 00 00 
  colorBlendAttachment.srcAlphaBlendFactor = VK_BLEND_FACTOR_ONE;
   1003f:	c7 85 90 fc ff ff 01 	movl   $0x1,-0x370(%rbp)
   10046:	00 00 00 
  colorBlendAttachment.dstAlphaBlendFactor = VK_BLEND_FACTOR_ZERO;
   10049:	c7 85 94 fc ff ff 00 	movl   $0x0,-0x36c(%rbp)
   10050:	00 00 00 
  colorBlendAttachment.alphaBlendOp = VK_BLEND_OP_ADD;
   10053:	c7 85 98 fc ff ff 00 	movl   $0x0,-0x368(%rbp)
   1005a:	00 00 00 

  VkPipelineColorBlendStateCreateInfo colorBlendState{};
   1005d:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10061:	0f 29 85 40 fc ff ff 	movaps %xmm0,-0x3c0(%rbp)
   10068:	0f 29 85 50 fc ff ff 	movaps %xmm0,-0x3b0(%rbp)
   1006f:	0f 29 85 60 fc ff ff 	movaps %xmm0,-0x3a0(%rbp)
   10076:	66 0f d6 85 70 fc ff 	movq   %xmm0,-0x390(%rbp)
   1007d:	ff 
  colorBlendState.sType =
   1007e:	c7 85 40 fc ff ff 1a 	movl   $0x1a,-0x3c0(%rbp)
   10085:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO;
  colorBlendState.logicOpEnable = VK_FALSE;
   10088:	c7 85 54 fc ff ff 00 	movl   $0x0,-0x3ac(%rbp)
   1008f:	00 00 00 
  colorBlendState.logicOp = VK_LOGIC_OP_COPY;
   10092:	c7 85 58 fc ff ff 03 	movl   $0x3,-0x3a8(%rbp)
   10099:	00 00 00 
  colorBlendState.attachmentCount = 1;
   1009c:	c7 85 5c fc ff ff 01 	movl   $0x1,-0x3a4(%rbp)
   100a3:	00 00 00 
  colorBlendState.pAttachments = &colorBlendAttachment;
   100a6:	48 8d 85 80 fc ff ff 	lea    -0x380(%rbp),%rax
   100ad:	48 89 85 60 fc ff ff 	mov    %rax,-0x3a0(%rbp)
  colorBlendState.blendConstants[0] = 0.0f;
   100b4:	66 0f ef c0          	pxor   %xmm0,%xmm0
   100b8:	f3 0f 11 85 68 fc ff 	movss  %xmm0,-0x398(%rbp)
   100bf:	ff 
  colorBlendState.blendConstants[1] = 0.0f;
   100c0:	66 0f ef c0          	pxor   %xmm0,%xmm0
   100c4:	f3 0f 11 85 6c fc ff 	movss  %xmm0,-0x394(%rbp)
   100cb:	ff 
  colorBlendState.blendConstants[2] = 0.0f;
   100cc:	66 0f ef c0          	pxor   %xmm0,%xmm0
   100d0:	f3 0f 11 85 70 fc ff 	movss  %xmm0,-0x390(%rbp)
   100d7:	ff 
  colorBlendState.blendConstants[3] = 0.0f;
   100d8:	66 0f ef c0          	pxor   %xmm0,%xmm0
   100dc:	f3 0f 11 85 74 fc ff 	movss  %xmm0,-0x38c(%rbp)
   100e3:	ff 
  // dynamicStateInfo.dynamicStateCount =
  //     static_cast<uint32_t>(dynamicStates.size());
  // dynamicStateInfo.pDynamicStates = dynamicStates.data();

  /* Pipeline layout */
  VkPipelineLayoutCreateInfo pipelineLayoutInfo{};
   100e4:	66 0f ef c0          	pxor   %xmm0,%xmm0
   100e8:	0f 29 85 10 fc ff ff 	movaps %xmm0,-0x3f0(%rbp)
   100ef:	0f 29 85 20 fc ff ff 	movaps %xmm0,-0x3e0(%rbp)
   100f6:	0f 29 85 30 fc ff ff 	movaps %xmm0,-0x3d0(%rbp)
  pipelineLayoutInfo.sType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO;
   100fd:	c7 85 10 fc ff ff 1e 	movl   $0x1e,-0x3f0(%rbp)
   10104:	00 00 00 
  pipelineLayoutInfo.setLayoutCount = 0;
   10107:	c7 85 24 fc ff ff 00 	movl   $0x0,-0x3dc(%rbp)
   1010e:	00 00 00 
  pipelineLayoutInfo.pSetLayouts = nullptr;
   10111:	48 c7 85 28 fc ff ff 	movq   $0x0,-0x3d8(%rbp)
   10118:	00 00 00 00 
  pipelineLayoutInfo.pushConstantRangeCount = 0;
   1011c:	c7 85 30 fc ff ff 00 	movl   $0x0,-0x3d0(%rbp)
   10123:	00 00 00 
  pipelineLayoutInfo.pPushConstantRanges = nullptr;
   10126:	48 c7 85 38 fc ff ff 	movq   $0x0,-0x3c8(%rbp)
   1012d:	00 00 00 00 
  graphicsPipeline.layout =
      vkh::createPipelineLayout(device, &pipelineLayoutInfo);
   10131:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
   10138:	48 8b 40 50          	mov    0x50(%rax),%rax
   1013c:	48 8d 8d 10 fc ff ff 	lea    -0x3f0(%rbp),%rcx
   10143:	ba 00 00 00 00       	mov    $0x0,%edx
   10148:	48 89 ce             	mov    %rcx,%rsi
   1014b:	48 89 c7             	mov    %rax,%rdi
   1014e:	e8 72 73 ff ff       	call   74c5 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks>
  graphicsPipeline.layout =
   10153:	48 8b 95 78 fa ff ff 	mov    -0x588(%rbp),%rdx
   1015a:	48 89 82 e0 00 00 00 	mov    %rax,0xe0(%rdx)

  /* Render pass */
  VkAttachmentDescription colorAttachment{};
   10161:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10165:	0f 29 85 e0 fb ff ff 	movaps %xmm0,-0x420(%rbp)
   1016c:	0f 29 85 f0 fb ff ff 	movaps %xmm0,-0x410(%rbp)
   10173:	66 0f 7e 85 00 fc ff 	movd   %xmm0,-0x400(%rbp)
   1017a:	ff 
  colorAttachment.format = swapchain.format;
   1017b:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
   10182:	8b 40 78             	mov    0x78(%rax),%eax
   10185:	89 85 e4 fb ff ff    	mov    %eax,-0x41c(%rbp)
  colorAttachment.samples = VK_SAMPLE_COUNT_1_BIT;
   1018b:	c7 85 e8 fb ff ff 01 	movl   $0x1,-0x418(%rbp)
   10192:	00 00 00 
  colorAttachment.loadOp = VK_ATTACHMENT_LOAD_OP_CLEAR;
   10195:	c7 85 ec fb ff ff 01 	movl   $0x1,-0x414(%rbp)
   1019c:	00 00 00 
  colorAttachment.storeOp = VK_ATTACHMENT_STORE_OP_STORE;
   1019f:	c7 85 f0 fb ff ff 00 	movl   $0x0,-0x410(%rbp)
   101a6:	00 00 00 
  colorAttachment.stencilLoadOp = VK_ATTACHMENT_LOAD_OP_DONT_CARE;
   101a9:	c7 85 f4 fb ff ff 02 	movl   $0x2,-0x40c(%rbp)
   101b0:	00 00 00 
  colorAttachment.stencilStoreOp = VK_ATTACHMENT_STORE_OP_DONT_CARE;
   101b3:	c7 85 f8 fb ff ff 01 	movl   $0x1,-0x408(%rbp)
   101ba:	00 00 00 
  colorAttachment.initialLayout = VK_IMAGE_LAYOUT_UNDEFINED;
   101bd:	c7 85 fc fb ff ff 00 	movl   $0x0,-0x404(%rbp)
   101c4:	00 00 00 
  colorAttachment.finalLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR;
   101c7:	c7 85 00 fc ff ff ea 	movl   $0x3b9acdea,-0x400(%rbp)
   101ce:	cd 9a 3b 

  VkAttachmentReference colorAttachmentRef{};
   101d1:	48 c7 85 d8 fb ff ff 	movq   $0x0,-0x428(%rbp)
   101d8:	00 00 00 00 
  colorAttachmentRef.attachment = 0;
   101dc:	c7 85 d8 fb ff ff 00 	movl   $0x0,-0x428(%rbp)
   101e3:	00 00 00 
  colorAttachmentRef.layout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL;
   101e6:	c7 85 dc fb ff ff 02 	movl   $0x2,-0x424(%rbp)
   101ed:	00 00 00 

  VkSubpassDescription subpass{};
   101f0:	66 0f ef c0          	pxor   %xmm0,%xmm0
   101f4:	0f 29 85 90 fb ff ff 	movaps %xmm0,-0x470(%rbp)
   101fb:	0f 29 85 a0 fb ff ff 	movaps %xmm0,-0x460(%rbp)
   10202:	0f 29 85 b0 fb ff ff 	movaps %xmm0,-0x450(%rbp)
   10209:	0f 29 85 c0 fb ff ff 	movaps %xmm0,-0x440(%rbp)
   10210:	66 0f d6 85 d0 fb ff 	movq   %xmm0,-0x430(%rbp)
   10217:	ff 
  subpass.pipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS;
   10218:	c7 85 94 fb ff ff 00 	movl   $0x0,-0x46c(%rbp)
   1021f:	00 00 00 
  subpass.colorAttachmentCount = 1;
   10222:	c7 85 a8 fb ff ff 01 	movl   $0x1,-0x458(%rbp)
   10229:	00 00 00 
  subpass.pColorAttachments = &colorAttachmentRef;
   1022c:	48 8d 85 d8 fb ff ff 	lea    -0x428(%rbp),%rax
   10233:	48 89 85 b0 fb ff ff 	mov    %rax,-0x450(%rbp)

  VkSubpassDependency subPassDep{}; /* Needed when rendering */
   1023a:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1023e:	0f 29 85 70 fb ff ff 	movaps %xmm0,-0x490(%rbp)
   10245:	0f 11 85 7c fb ff ff 	movups %xmm0,-0x484(%rbp)
  subPassDep.srcSubpass = VK_SUBPASS_EXTERNAL;
   1024c:	c7 85 70 fb ff ff ff 	movl   $0xffffffff,-0x490(%rbp)
   10253:	ff ff ff 
  subPassDep.dstSubpass = 0;
   10256:	c7 85 74 fb ff ff 00 	movl   $0x0,-0x48c(%rbp)
   1025d:	00 00 00 
  subPassDep.srcStageMask = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT;
   10260:	c7 85 78 fb ff ff 00 	movl   $0x400,-0x488(%rbp)
   10267:	04 00 00 
  subPassDep.srcAccessMask = 0;
   1026a:	c7 85 80 fb ff ff 00 	movl   $0x0,-0x480(%rbp)
   10271:	00 00 00 
  subPassDep.dstStageMask = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT;
   10274:	c7 85 7c fb ff ff 00 	movl   $0x400,-0x484(%rbp)
   1027b:	04 00 00 
  subPassDep.dstAccessMask = VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT;
   1027e:	c7 85 84 fb ff ff 00 	movl   $0x100,-0x47c(%rbp)
   10285:	01 00 00 

  VkRenderPassCreateInfo renderPassInfo{};
   10288:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1028c:	0f 29 85 30 fb ff ff 	movaps %xmm0,-0x4d0(%rbp)
   10293:	0f 29 85 40 fb ff ff 	movaps %xmm0,-0x4c0(%rbp)
   1029a:	0f 29 85 50 fb ff ff 	movaps %xmm0,-0x4b0(%rbp)
   102a1:	0f 29 85 60 fb ff ff 	movaps %xmm0,-0x4a0(%rbp)
  renderPassInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO;
   102a8:	c7 85 30 fb ff ff 26 	movl   $0x26,-0x4d0(%rbp)
   102af:	00 00 00 
  renderPassInfo.pNext = nullptr;
   102b2:	48 c7 85 38 fb ff ff 	movq   $0x0,-0x4c8(%rbp)
   102b9:	00 00 00 00 
  renderPassInfo.attachmentCount = 1;
   102bd:	c7 85 44 fb ff ff 01 	movl   $0x1,-0x4bc(%rbp)
   102c4:	00 00 00 
  renderPassInfo.pAttachments = &colorAttachment;
   102c7:	48 8d 85 e0 fb ff ff 	lea    -0x420(%rbp),%rax
   102ce:	48 89 85 48 fb ff ff 	mov    %rax,-0x4b8(%rbp)
  renderPassInfo.subpassCount = 1;
   102d5:	c7 85 50 fb ff ff 01 	movl   $0x1,-0x4b0(%rbp)
   102dc:	00 00 00 
  renderPassInfo.pSubpasses = &subpass;
   102df:	48 8d 85 90 fb ff ff 	lea    -0x470(%rbp),%rax
   102e6:	48 89 85 58 fb ff ff 	mov    %rax,-0x4a8(%rbp)
  renderPassInfo.dependencyCount = 1;
   102ed:	c7 85 60 fb ff ff 01 	movl   $0x1,-0x4a0(%rbp)
   102f4:	00 00 00 
  renderPassInfo.pDependencies = &subPassDep;
   102f7:	48 8d 85 70 fb ff ff 	lea    -0x490(%rbp),%rax
   102fe:	48 89 85 68 fb ff ff 	mov    %rax,-0x498(%rbp)
  graphicsPipeline.renderPass = vkh::createRenderPass(device, &renderPassInfo);
   10305:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
   1030c:	48 8b 40 50          	mov    0x50(%rax),%rax
   10310:	48 8d 8d 30 fb ff ff 	lea    -0x4d0(%rbp),%rcx
   10317:	ba 00 00 00 00       	mov    $0x0,%edx
   1031c:	48 89 ce             	mov    %rcx,%rsi
   1031f:	48 89 c7             	mov    %rax,%rdi
   10322:	e8 36 72 ff ff       	call   755d <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks>
   10327:	48 8b 95 78 fa ff ff 	mov    -0x588(%rbp),%rdx
   1032e:	48 89 82 f0 00 00 00 	mov    %rax,0xf0(%rdx)

  /* Create a graphics pipeline */
  VkGraphicsPipelineCreateInfo pipelineInfo{};
   10335:	48 8d 95 a0 fa ff ff 	lea    -0x560(%rbp),%rdx
   1033c:	b8 00 00 00 00       	mov    $0x0,%eax
   10341:	b9 12 00 00 00       	mov    $0x12,%ecx
   10346:	48 89 d7             	mov    %rdx,%rdi
   10349:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  pipelineInfo.sType = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO;
   1034c:	c7 85 a0 fa ff ff 1c 	movl   $0x1c,-0x560(%rbp)
   10353:	00 00 00 
  pipelineInfo.pNext = nullptr;
   10356:	48 c7 85 a8 fa ff ff 	movq   $0x0,-0x558(%rbp)
   1035d:	00 00 00 00 
  pipelineInfo.stageCount = vkh::ShaderModuleWrapper::stageCount;
   10361:	c7 85 b4 fa ff ff 02 	movl   $0x2,-0x54c(%rbp)
   10368:	00 00 00 
  pipelineInfo.pStages = shaderStages;
   1036b:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
   10372:	48 89 85 b8 fa ff ff 	mov    %rax,-0x548(%rbp)
  pipelineInfo.pVertexInputState = &vertInputInfo;
   10379:	48 8d 85 90 fd ff ff 	lea    -0x270(%rbp),%rax
   10380:	48 89 85 c0 fa ff ff 	mov    %rax,-0x540(%rbp)
  pipelineInfo.pInputAssemblyState = &inputAssemblyInfo;
   10387:	48 8d 85 70 fd ff ff 	lea    -0x290(%rbp),%rax
   1038e:	48 89 85 c8 fa ff ff 	mov    %rax,-0x538(%rbp)
  pipelineInfo.pViewportState = &viewportStateInfo;
   10395:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1039c:	48 89 85 d8 fa ff ff 	mov    %rax,-0x528(%rbp)
  pipelineInfo.pRasterizationState = &rastStateInfo;
   103a3:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   103aa:	48 89 85 e0 fa ff ff 	mov    %rax,-0x520(%rbp)
  pipelineInfo.pMultisampleState = &multisampleStateInfo;
   103b1:	48 8d 85 a0 fc ff ff 	lea    -0x360(%rbp),%rax
   103b8:	48 89 85 e8 fa ff ff 	mov    %rax,-0x518(%rbp)
  pipelineInfo.pDepthStencilState = nullptr;
   103bf:	48 c7 85 f0 fa ff ff 	movq   $0x0,-0x510(%rbp)
   103c6:	00 00 00 00 
  pipelineInfo.pColorBlendState = &colorBlendState;
   103ca:	48 8d 85 40 fc ff ff 	lea    -0x3c0(%rbp),%rax
   103d1:	48 89 85 f8 fa ff ff 	mov    %rax,-0x508(%rbp)
  pipelineInfo.pDynamicState = nullptr;
   103d8:	48 c7 85 00 fb ff ff 	movq   $0x0,-0x500(%rbp)
   103df:	00 00 00 00 
  pipelineInfo.layout = graphicsPipeline.layout;
   103e3:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
   103ea:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax
   103f1:	48 89 85 08 fb ff ff 	mov    %rax,-0x4f8(%rbp)
  pipelineInfo.renderPass = graphicsPipeline.renderPass;
   103f8:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
   103ff:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
   10406:	48 89 85 10 fb ff ff 	mov    %rax,-0x4f0(%rbp)
  pipelineInfo.subpass = 0;
   1040d:	c7 85 18 fb ff ff 00 	movl   $0x0,-0x4e8(%rbp)
   10414:	00 00 00 
  pipelineInfo.basePipelineHandle = VK_NULL_HANDLE;
   10417:	48 c7 85 20 fb ff ff 	movq   $0x0,-0x4e0(%rbp)
   1041e:	00 00 00 00 
  pipelineInfo.basePipelineIndex = -1;
   10422:	c7 85 28 fb ff ff ff 	movl   $0xffffffff,-0x4d8(%rbp)
   10429:	ff ff ff 

  std::vector<VkGraphicsPipelineCreateInfo> pipelineInfoWrapper{pipelineInfo};
   1042c:	48 8b 85 a0 fa ff ff 	mov    -0x560(%rbp),%rax
   10433:	48 8b 95 a8 fa ff ff 	mov    -0x558(%rbp),%rdx
   1043a:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   10441:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
   10448:	48 8b 85 b0 fa ff ff 	mov    -0x550(%rbp),%rax
   1044f:	48 8b 95 b8 fa ff ff 	mov    -0x548(%rbp),%rdx
   10456:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   1045d:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
   10464:	48 8b 85 c0 fa ff ff 	mov    -0x540(%rbp),%rax
   1046b:	48 8b 95 c8 fa ff ff 	mov    -0x538(%rbp),%rdx
   10472:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   10479:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
   10480:	48 8b 85 d0 fa ff ff 	mov    -0x530(%rbp),%rax
   10487:	48 8b 95 d8 fa ff ff 	mov    -0x528(%rbp),%rdx
   1048e:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   10495:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
   1049c:	48 8b 85 e0 fa ff ff 	mov    -0x520(%rbp),%rax
   104a3:	48 8b 95 e8 fa ff ff 	mov    -0x518(%rbp),%rdx
   104aa:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   104b1:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
   104b8:	48 8b 85 f0 fa ff ff 	mov    -0x510(%rbp),%rax
   104bf:	48 8b 95 f8 fa ff ff 	mov    -0x508(%rbp),%rdx
   104c6:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   104cd:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
   104d4:	48 8b 85 00 fb ff ff 	mov    -0x500(%rbp),%rax
   104db:	48 8b 95 08 fb ff ff 	mov    -0x4f8(%rbp),%rdx
   104e2:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   104e6:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
   104ea:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
   104f1:	48 8b 95 18 fb ff ff 	mov    -0x4e8(%rbp),%rdx
   104f8:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   104fc:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   10500:	48 8b 85 20 fb ff ff 	mov    -0x4e0(%rbp),%rax
   10507:	48 8b 95 28 fb ff ff 	mov    -0x4d8(%rbp),%rdx
   1050e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   10512:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   10516:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   1051d:	49 89 c4             	mov    %rax,%r12
   10520:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   10526:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   1052a:	48 89 c7             	mov    %rax,%rdi
   1052d:	e8 ee 3f 00 00       	call   14520 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1Ev>
   10532:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
   10536:	4c 89 e6             	mov    %r12,%rsi
   10539:	4c 89 ef             	mov    %r13,%rdi
   1053c:	4c 89 e1             	mov    %r12,%rcx
   1053f:	4c 89 eb             	mov    %r13,%rbx
   10542:	48 89 df             	mov    %rbx,%rdi
   10545:	48 8d 85 80 fa ff ff 	lea    -0x580(%rbp),%rax
   1054c:	48 89 d1             	mov    %rdx,%rcx
   1054f:	48 89 fa             	mov    %rdi,%rdx
   10552:	48 89 c7             	mov    %rax,%rdi
   10555:	e8 fe 3f 00 00       	call   14558 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>
   1055a:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   1055e:	48 89 c7             	mov    %rax,%rdi
   10561:	e8 d6 3f 00 00       	call   1453c <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>

  graphicsPipeline.self = vkh::createPipelines(device, graphicsPipeline.cache,
   10566:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
   1056d:	48 8b 90 e8 00 00 00 	mov    0xe8(%rax),%rdx
   10574:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
   1057b:	48 8b 70 50          	mov    0x50(%rax),%rsi
   1057f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10583:	48 8d 8d 80 fa ff ff 	lea    -0x580(%rbp),%rcx
   1058a:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   10590:	48 89 c7             	mov    %rax,%rdi
   10593:	e8 a7 40 00 00       	call   1463f <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks>
                                               pipelineInfoWrapper)[0];
   10598:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1059c:	be 00 00 00 00       	mov    $0x0,%esi
   105a1:	48 89 c7             	mov    %rax,%rdi
   105a4:	e8 07 42 00 00       	call   147b0 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEixEm>
  graphicsPipeline.self = vkh::createPipelines(device, graphicsPipeline.cache,
   105a9:	48 8b 10             	mov    (%rax),%rdx
   105ac:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
   105b3:	48 89 90 d8 00 00 00 	mov    %rdx,0xd8(%rax)
   105ba:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   105be:	48 89 c7             	mov    %rax,%rdi
   105c1:	e8 a6 41 00 00       	call   1476c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>

  vkh::destroyShaderModule(device, shaderModule.vertex);
   105c6:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
   105cd:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
   105d4:	48 8b 40 50          	mov    0x50(%rax),%rax
   105d8:	ba 00 00 00 00       	mov    $0x0,%edx
   105dd:	48 89 ce             	mov    %rcx,%rsi
   105e0:	48 89 c7             	mov    %rax,%rdi
   105e3:	e8 76 7c ff ff       	call   825e <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
  vkh::destroyShaderModule(device, shaderModule.fragment);
   105e8:	48 8b 8d b8 fe ff ff 	mov    -0x148(%rbp),%rcx
   105ef:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
   105f6:	48 8b 40 50          	mov    0x50(%rax),%rax
   105fa:	ba 00 00 00 00       	mov    $0x0,%edx
   105ff:	48 89 ce             	mov    %rcx,%rsi
   10602:	48 89 c7             	mov    %rax,%rdi
   10605:	e8 54 7c ff ff       	call   825e <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
}
   1060a:	48 8d 85 80 fa ff ff 	lea    -0x580(%rbp),%rax
   10611:	48 89 c7             	mov    %rax,%rdi
   10614:	e8 c7 3f 00 00       	call   145e0 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   10619:	e9 99 00 00 00       	jmp    106b7 <_ZN9VulkanApp22createGraphicsPipelineEv+0xc45>
  shaderModule.vertex = vkh::createShaderModule(device, "build/shaders/"
   1061e:	48 89 c3             	mov    %rax,%rbx
   10621:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
   10628:	48 89 c7             	mov    %rax,%rdi
   1062b:	e8 40 3c ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   10630:	eb 03                	jmp    10635 <_ZN9VulkanApp22createGraphicsPipelineEv+0xbc3>
   10632:	48 89 c3             	mov    %rax,%rbx
   10635:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
   1063c:	48 89 c7             	mov    %rax,%rdi
   1063f:	e8 ec 3e ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
   10644:	48 89 d8             	mov    %rbx,%rax
   10647:	48 89 c7             	mov    %rax,%rdi
   1064a:	e8 b1 42 ff ff       	call   4900 <_Unwind_Resume@plt>
  shaderModule.fragment = vkh::createShaderModule(device, "build/shaders/"
   1064f:	48 89 c3             	mov    %rax,%rbx
   10652:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   10659:	48 89 c7             	mov    %rax,%rdi
   1065c:	e8 0f 3c ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   10661:	eb 03                	jmp    10666 <_ZN9VulkanApp22createGraphicsPipelineEv+0xbf4>
   10663:	48 89 c3             	mov    %rax,%rbx
   10666:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
   1066d:	48 89 c7             	mov    %rax,%rdi
   10670:	e8 bb 3e ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
   10675:	48 89 d8             	mov    %rbx,%rax
   10678:	48 89 c7             	mov    %rax,%rdi
   1067b:	e8 80 42 ff ff       	call   4900 <_Unwind_Resume@plt>
  std::vector<VkGraphicsPipelineCreateInfo> pipelineInfoWrapper{pipelineInfo};
   10680:	48 89 c3             	mov    %rax,%rbx
   10683:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   10687:	48 89 c7             	mov    %rax,%rdi
   1068a:	e8 ad 3e 00 00       	call   1453c <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
   1068f:	48 89 d8             	mov    %rbx,%rax
   10692:	48 89 c7             	mov    %rax,%rdi
   10695:	e8 66 42 ff ff       	call   4900 <_Unwind_Resume@plt>
}
   1069a:	48 89 c3             	mov    %rax,%rbx
   1069d:	48 8d 85 80 fa ff ff 	lea    -0x580(%rbp),%rax
   106a4:	48 89 c7             	mov    %rax,%rdi
   106a7:	e8 34 3f 00 00       	call   145e0 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   106ac:	48 89 d8             	mov    %rbx,%rax
   106af:	48 89 c7             	mov    %rax,%rdi
   106b2:	e8 49 42 ff ff       	call   4900 <_Unwind_Resume@plt>
   106b7:	48 81 c4 78 05 00 00 	add    $0x578,%rsp
   106be:	5b                   	pop    %rbx
   106bf:	41 5c                	pop    %r12
   106c1:	41 5d                	pop    %r13
   106c3:	5d                   	pop    %rbp
   106c4:	c3                   	ret
   106c5:	90                   	nop

00000000000106c6 <_ZN9VulkanApp18createFramebuffersEv>:

void VulkanApp::createFramebuffers() {
   106c6:	55                   	push   %rbp
   106c7:	48 89 e5             	mov    %rsp,%rbp
   106ca:	41 55                	push   %r13
   106cc:	41 54                	push   %r12
   106ce:	53                   	push   %rbx
   106cf:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   106d6:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  framebuffers.resize(imageViews.size());
   106dd:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   106e4:	48 8d 98 00 01 00 00 	lea    0x100(%rax),%rbx
   106eb:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   106f2:	48 05 a8 00 00 00    	add    $0xa8,%rax
   106f8:	48 89 c7             	mov    %rax,%rdi
   106fb:	e8 d0 40 00 00       	call   147d0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   10700:	48 89 c6             	mov    %rax,%rsi
   10703:	48 89 df             	mov    %rbx,%rdi
   10706:	e8 e9 40 00 00       	call   147f4 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < imageViews.size(); ++i) {
   1070b:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   10712:	00 
   10713:	e9 3a 01 00 00       	jmp    10852 <_ZN9VulkanApp18createFramebuffersEv+0x18c>
    std::vector<VkImageView> attachments{imageViews[i]};
   10718:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1071f:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
   10726:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1072a:	48 89 c6             	mov    %rax,%rsi
   1072d:	48 89 d7             	mov    %rdx,%rdi
   10730:	e8 99 3c 00 00       	call   143ce <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
   10735:	48 8b 00             	mov    (%rax),%rax
   10738:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1073c:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   10740:	49 89 c4             	mov    %rax,%r12
   10743:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   10749:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
   1074d:	48 89 c7             	mov    %rax,%rdi
   10750:	e8 25 41 00 00       	call   1487a <_ZNSaIP13VkImageView_TEC1Ev>
   10755:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
   10759:	4c 89 e6             	mov    %r12,%rsi
   1075c:	4c 89 ef             	mov    %r13,%rdi
   1075f:	4c 89 e1             	mov    %r12,%rcx
   10762:	4c 89 eb             	mov    %r13,%rbx
   10765:	48 89 df             	mov    %rbx,%rdi
   10768:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1076c:	48 89 d1             	mov    %rdx,%rcx
   1076f:	48 89 fa             	mov    %rdi,%rdx
   10772:	48 89 c7             	mov    %rax,%rdi
   10775:	e8 38 41 00 00       	call   148b2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   1077a:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
   1077e:	48 89 c7             	mov    %rax,%rdi
   10781:	e8 10 41 00 00       	call   14896 <_ZNSaIP13VkImageView_TED1Ev>
    VkFramebufferCreateInfo framebufferInfo{};
   10786:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1078a:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
   10791:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
   10795:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
   10799:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    framebufferInfo.sType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO;
   1079d:	c7 85 70 ff ff ff 25 	movl   $0x25,-0x90(%rbp)
   107a4:	00 00 00 
    framebufferInfo.renderPass = graphicsPipeline.renderPass;
   107a7:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   107ae:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
   107b5:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    framebufferInfo.attachmentCount = static_cast<uint32_t>(attachments.size());
   107b9:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   107bd:	48 89 c7             	mov    %rax,%rdi
   107c0:	e8 0b 40 00 00       	call   147d0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   107c5:	89 45 90             	mov    %eax,-0x70(%rbp)
    framebufferInfo.pAttachments = attachments.data();
   107c8:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   107cc:	48 89 c7             	mov    %rax,%rdi
   107cf:	e8 aa 41 00 00       	call   1497e <_ZNSt6vectorIP13VkImageView_TSaIS1_EE4dataEv>
   107d4:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    framebufferInfo.width = swapchain.extent.width;
   107d8:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   107df:	8b 40 7c             	mov    0x7c(%rax),%eax
   107e2:	89 45 a0             	mov    %eax,-0x60(%rbp)
    framebufferInfo.height = swapchain.extent.height;
   107e5:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   107ec:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
   107f2:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    framebufferInfo.layers = 1;
   107f5:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)
    framebuffers[i] = vkh::createFramebuffer(device, &framebufferInfo);
   107fc:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10803:	48 8b 40 50          	mov    0x50(%rax),%rax
   10807:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
   1080e:	ba 00 00 00 00       	mov    $0x0,%edx
   10813:	48 89 ce             	mov    %rcx,%rsi
   10816:	48 89 c7             	mov    %rax,%rdi
   10819:	e8 d7 6d ff ff       	call   75f5 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks>
   1081e:	48 89 c3             	mov    %rax,%rbx
   10821:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10828:	48 8d 90 00 01 00 00 	lea    0x100(%rax),%rdx
   1082f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10833:	48 89 c6             	mov    %rax,%rsi
   10836:	48 89 d7             	mov    %rdx,%rdi
   10839:	e8 64 41 00 00       	call   149a2 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>
   1083e:	48 89 18             	mov    %rbx,(%rax)
  }
   10841:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   10845:	48 89 c7             	mov    %rax,%rdi
   10848:	e8 ed 40 00 00       	call   1493a <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
  for (size_t i = 0; i < imageViews.size(); ++i) {
   1084d:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
   10852:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10859:	48 05 a8 00 00 00    	add    $0xa8,%rax
   1085f:	48 89 c7             	mov    %rax,%rdi
   10862:	e8 69 3f 00 00       	call   147d0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   10867:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   1086b:	0f 92 c0             	setb   %al
   1086e:	84 c0                	test   %al,%al
   10870:	0f 85 a2 fe ff ff    	jne    10718 <_ZN9VulkanApp18createFramebuffersEv+0x52>
}
   10876:	eb 34                	jmp    108ac <_ZN9VulkanApp18createFramebuffersEv+0x1e6>
    std::vector<VkImageView> attachments{imageViews[i]};
   10878:	48 89 c3             	mov    %rax,%rbx
   1087b:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
   1087f:	48 89 c7             	mov    %rax,%rdi
   10882:	e8 0f 40 00 00       	call   14896 <_ZNSaIP13VkImageView_TED1Ev>
   10887:	48 89 d8             	mov    %rbx,%rax
   1088a:	48 89 c7             	mov    %rax,%rdi
   1088d:	e8 6e 40 ff ff       	call   4900 <_Unwind_Resume@plt>
  }
   10892:	48 89 c3             	mov    %rax,%rbx
   10895:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   10899:	48 89 c7             	mov    %rax,%rdi
   1089c:	e8 99 40 00 00       	call   1493a <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
   108a1:	48 89 d8             	mov    %rbx,%rax
   108a4:	48 89 c7             	mov    %rax,%rdi
   108a7:	e8 54 40 ff ff       	call   4900 <_Unwind_Resume@plt>
}
   108ac:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   108b3:	5b                   	pop    %rbx
   108b4:	41 5c                	pop    %r12
   108b6:	41 5d                	pop    %r13
   108b8:	5d                   	pop    %rbp
   108b9:	c3                   	ret

00000000000108ba <_ZN9VulkanApp17recreateSwapchainEv>:

void VulkanApp::recreateSwapchain() {
   108ba:	55                   	push   %rbp
   108bb:	48 89 e5             	mov    %rsp,%rbp
   108be:	48 83 ec 20          	sub    $0x20,%rsp
   108c2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  /* Handle minimization */
  int width = 0, heigth = 0;
   108c6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   108cd:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  glfwGetFramebufferSize(window, &width, &heigth);
   108d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   108d8:	48 8b 00             	mov    (%rax),%rax
   108db:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   108df:	48 8d 4d fc          	lea    -0x4(%rbp),%rcx
   108e3:	48 89 ce             	mov    %rcx,%rsi
   108e6:	48 89 c7             	mov    %rax,%rdi
   108e9:	e8 22 3f ff ff       	call   4810 <glfwGetFramebufferSize@plt>
  while (width == 0 || heigth == 0) {
   108ee:	eb 1f                	jmp    1090f <_ZN9VulkanApp17recreateSwapchainEv+0x55>
    glfwGetFramebufferSize(window, &width, &heigth);
   108f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   108f4:	48 8b 00             	mov    (%rax),%rax
   108f7:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   108fb:	48 8d 4d fc          	lea    -0x4(%rbp),%rcx
   108ff:	48 89 ce             	mov    %rcx,%rsi
   10902:	48 89 c7             	mov    %rax,%rdi
   10905:	e8 06 3f ff ff       	call   4810 <glfwGetFramebufferSize@plt>
    glfwWaitEvents();
   1090a:	e8 31 39 ff ff       	call   4240 <glfwWaitEvents@plt>
  while (width == 0 || heigth == 0) {
   1090f:	8b 45 fc             	mov    -0x4(%rbp),%eax
   10912:	85 c0                	test   %eax,%eax
   10914:	74 da                	je     108f0 <_ZN9VulkanApp17recreateSwapchainEv+0x36>
   10916:	8b 45 f8             	mov    -0x8(%rbp),%eax
   10919:	85 c0                	test   %eax,%eax
   1091b:	74 d3                	je     108f0 <_ZN9VulkanApp17recreateSwapchainEv+0x36>
  }

  /* Recreate the swapchain */
  vkDeviceWaitIdle(device);
   1091d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10921:	48 8b 40 50          	mov    0x50(%rax),%rax
   10925:	48 89 c7             	mov    %rax,%rdi
   10928:	e8 93 37 ff ff       	call   40c0 <vkDeviceWaitIdle@plt>
  cleanupSwapchain();
   1092d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10931:	48 89 c7             	mov    %rax,%rdi
   10934:	e8 33 00 00 00       	call   1096c <_ZN9VulkanApp16cleanupSwapchainEv>
  createSwapchain();
   10939:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1093d:	48 89 c7             	mov    %rax,%rdi
   10940:	e8 3b ef ff ff       	call   f880 <_ZN9VulkanApp15createSwapchainEv>
  createImageViews();
   10945:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10949:	48 89 c7             	mov    %rax,%rdi
   1094c:	e8 75 ef ff ff       	call   f8c6 <_ZN9VulkanApp16createImageViewsEv>
  createGraphicsPipeline();
   10951:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10955:	48 89 c7             	mov    %rax,%rdi
   10958:	e8 15 f1 ff ff       	call   fa72 <_ZN9VulkanApp22createGraphicsPipelineEv>
  createFramebuffers();
   1095d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10961:	48 89 c7             	mov    %rax,%rdi
   10964:	e8 5d fd ff ff       	call   106c6 <_ZN9VulkanApp18createFramebuffersEv>
}
   10969:	90                   	nop
   1096a:	c9                   	leave
   1096b:	c3                   	ret

000000000001096c <_ZN9VulkanApp16cleanupSwapchainEv>:

void VulkanApp::cleanupSwapchain() {
   1096c:	55                   	push   %rbp
   1096d:	48 89 e5             	mov    %rsp,%rbp
   10970:	48 83 ec 50          	sub    $0x50,%rsp
   10974:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  for (auto &framebuffer : framebuffers) {
   10978:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1097c:	48 05 00 01 00 00    	add    $0x100,%rax
   10982:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10986:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1098a:	48 89 c7             	mov    %rax,%rdi
   1098d:	e8 30 40 00 00       	call   149c2 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE5beginEv>
   10992:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   10996:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1099a:	48 89 c7             	mov    %rax,%rdi
   1099d:	e8 46 40 00 00       	call   149e8 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE3endEv>
   109a2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   109a6:	eb 3b                	jmp    109e3 <_ZN9VulkanApp16cleanupSwapchainEv+0x77>
   109a8:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   109ac:	48 89 c7             	mov    %rax,%rdi
   109af:	e8 b8 40 00 00       	call   14a6c <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEdeEv>
   109b4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    vkh::destroyFramebuffer(device, framebuffer);
   109b8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   109bc:	48 8b 08             	mov    (%rax),%rcx
   109bf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   109c3:	48 8b 40 50          	mov    0x50(%rax),%rax
   109c7:	ba 00 00 00 00       	mov    $0x0,%edx
   109cc:	48 89 ce             	mov    %rcx,%rsi
   109cf:	48 89 c7             	mov    %rax,%rdi
   109d2:	e8 ce 79 ff ff       	call   83a5 <_ZN3vkh18destroyFramebufferEP10VkDevice_TP15VkFramebuffer_TPK21VkAllocationCallbacks>
  for (auto &framebuffer : framebuffers) {
   109d7:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   109db:	48 89 c7             	mov    %rax,%rdi
   109de:	e8 69 40 00 00       	call   14a4c <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEppEv>
   109e3:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   109e7:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   109eb:	48 89 d6             	mov    %rdx,%rsi
   109ee:	48 89 c7             	mov    %rax,%rdi
   109f1:	e8 1b 40 00 00       	call   14a11 <_ZN9__gnu_cxxneIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   109f6:	84 c0                	test   %al,%al
   109f8:	75 ae                	jne    109a8 <_ZN9VulkanApp16cleanupSwapchainEv+0x3c>
  }
  vkh::destroyPipeline(device, graphicsPipeline.self);
   109fa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   109fe:	48 8b 88 d8 00 00 00 	mov    0xd8(%rax),%rcx
   10a05:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10a09:	48 8b 40 50          	mov    0x50(%rax),%rax
   10a0d:	ba 00 00 00 00       	mov    $0x0,%edx
   10a12:	48 89 ce             	mov    %rcx,%rsi
   10a15:	48 89 c7             	mov    %rax,%rdi
   10a18:	e8 cb 78 ff ff       	call   82e8 <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>
  vkh::destroyPipelineLayout(device, graphicsPipeline.layout);
   10a1d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10a21:	48 8b 88 e0 00 00 00 	mov    0xe0(%rax),%rcx
   10a28:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10a2c:	48 8b 40 50          	mov    0x50(%rax),%rax
   10a30:	ba 00 00 00 00       	mov    $0x0,%edx
   10a35:	48 89 ce             	mov    %rcx,%rsi
   10a38:	48 89 c7             	mov    %rax,%rdi
   10a3b:	e8 4c 78 ff ff       	call   828c <_ZN3vkh21destroyPipelineLayoutEP10VkDevice_TP18VkPipelineLayout_TPK21VkAllocationCallbacks>
  vkh::destroyRenderPass(device, graphicsPipeline.renderPass);
   10a40:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10a44:	48 8b 88 f0 00 00 00 	mov    0xf0(%rax),%rcx
   10a4b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10a4f:	48 8b 40 50          	mov    0x50(%rax),%rax
   10a53:	ba 00 00 00 00       	mov    $0x0,%edx
   10a58:	48 89 ce             	mov    %rcx,%rsi
   10a5b:	48 89 c7             	mov    %rax,%rdi
   10a5e:	e8 57 78 ff ff       	call   82ba <_ZN3vkh17destroyRenderPassEP10VkDevice_TP14VkRenderPass_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
   10a63:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10a67:	48 05 a8 00 00 00    	add    $0xa8,%rax
   10a6d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10a71:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10a75:	48 89 c7             	mov    %rax,%rdi
   10a78:	e8 01 40 00 00       	call   14a7e <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>
   10a7d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   10a81:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10a85:	48 89 c7             	mov    %rax,%rdi
   10a88:	e8 17 40 00 00       	call   14aa4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>
   10a8d:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   10a91:	eb 3b                	jmp    10ace <_ZN9VulkanApp16cleanupSwapchainEv+0x162>
   10a93:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   10a97:	48 89 c7             	mov    %rax,%rdi
   10a9a:	e8 89 40 00 00       	call   14b28 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>
   10a9f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    vkh::destroyImageView(device, imageView);
   10aa3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10aa7:	48 8b 08             	mov    (%rax),%rcx
   10aaa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10aae:	48 8b 40 50          	mov    0x50(%rax),%rax
   10ab2:	ba 00 00 00 00       	mov    $0x0,%edx
   10ab7:	48 89 ce             	mov    %rcx,%rsi
   10aba:	48 89 c7             	mov    %rax,%rdi
   10abd:	e8 6e 77 ff ff       	call   8230 <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
   10ac2:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   10ac6:	48 89 c7             	mov    %rax,%rdi
   10ac9:	e8 3a 40 00 00       	call   14b08 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>
   10ace:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   10ad2:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   10ad6:	48 89 d6             	mov    %rdx,%rsi
   10ad9:	48 89 c7             	mov    %rax,%rdi
   10adc:	e8 ec 3f 00 00       	call   14acd <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   10ae1:	84 c0                	test   %al,%al
   10ae3:	75 ae                	jne    10a93 <_ZN9VulkanApp16cleanupSwapchainEv+0x127>
  }
  vkh::destroySwapchain(device, swapchain.self);
   10ae5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10ae9:	48 8b 48 70          	mov    0x70(%rax),%rcx
   10aed:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10af1:	48 8b 40 50          	mov    0x50(%rax),%rax
   10af5:	ba 00 00 00 00       	mov    $0x0,%edx
   10afa:	48 89 ce             	mov    %rcx,%rsi
   10afd:	48 89 c7             	mov    %rax,%rdi
   10b00:	e8 fd 76 ff ff       	call   8202 <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>
}
   10b05:	90                   	nop
   10b06:	c9                   	leave
   10b07:	c3                   	ret

0000000000010b08 <_ZN9VulkanApp25framebufferResizeCallbackEP10GLFWwindowii>:

void VulkanApp::framebufferResizeCallback(GLFWwindow *windowInstance,
                                          [[maybe_unused]] int width,
                                          [[maybe_unused]] int height) {
   10b08:	55                   	push   %rbp
   10b09:	48 89 e5             	mov    %rsp,%rbp
   10b0c:	48 83 ec 20          	sub    $0x20,%rsp
   10b10:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10b14:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   10b17:	89 55 e0             	mov    %edx,-0x20(%rbp)
  auto app =
      reinterpret_cast<VulkanApp *>(glfwGetWindowUserPointer(windowInstance));
   10b1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10b1e:	48 89 c7             	mov    %rax,%rdi
   10b21:	e8 9a 3b ff ff       	call   46c0 <glfwGetWindowUserPointer@plt>
   10b26:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  app->framebufferResized = true;
   10b2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b2e:	c6 80 18 01 00 00 01 	movb   $0x1,0x118(%rax)
}
   10b35:	90                   	nop
   10b36:	c9                   	leave
   10b37:	c3                   	ret

0000000000010b38 <_ZN9VulkanApp17createCommandPoolEv>:

void VulkanApp::createCommandPool() {
   10b38:	55                   	push   %rbp
   10b39:	48 89 e5             	mov    %rsp,%rbp
   10b3c:	48 83 ec 30          	sub    $0x30,%rsp
   10b40:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  VkCommandPoolCreateInfo cmdPoolInfo{};
   10b44:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10b48:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
   10b4c:	66 0f d6 45 f0       	movq   %xmm0,-0x10(%rbp)
  cmdPoolInfo.sType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO;
   10b51:	c7 45 e0 27 00 00 00 	movl   $0x27,-0x20(%rbp)
  cmdPoolInfo.pNext = nullptr;
   10b58:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   10b5f:	00 
  pool to be individually reset to the initial state; either by calling
  vkResetCommandBuffer, or via the implicit reset when calling
  vkBeginCommandBuffer. If this flag is not set on a pool, then
  vkResetCommandBuffer must not be called for any command buffer allocated
  from that pool. */
  cmdPoolInfo.flags = VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT;
   10b60:	c7 45 f0 02 00 00 00 	movl   $0x2,-0x10(%rbp)
  /* All command buffers allocated from this command pool must be
  submitted on queues from the same queue family. */
  cmdPoolInfo.queueFamilyIndex = queueFamilyIndex;
   10b67:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10b6b:	8b 40 68             	mov    0x68(%rax),%eax
   10b6e:	89 45 f4             	mov    %eax,-0xc(%rbp)

  commandPool = vkh::createCommandPool(device, &cmdPoolInfo);
   10b71:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10b75:	48 8b 40 50          	mov    0x50(%rax),%rax
   10b79:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   10b7d:	ba 00 00 00 00       	mov    $0x0,%edx
   10b82:	48 89 ce             	mov    %rcx,%rsi
   10b85:	48 89 c7             	mov    %rax,%rdi
   10b88:	e8 00 6b ff ff       	call   768d <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>
   10b8d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10b91:	48 89 82 40 01 00 00 	mov    %rax,0x140(%rdx)
}
   10b98:	90                   	nop
   10b99:	c9                   	leave
   10b9a:	c3                   	ret
   10b9b:	90                   	nop

0000000000010b9c <_ZN9VulkanApp20createCommandBuffersEv>:

void VulkanApp::createCommandBuffers() {
   10b9c:	55                   	push   %rbp
   10b9d:	48 89 e5             	mov    %rsp,%rbp
   10ba0:	48 83 ec 50          	sub    $0x50,%rsp
   10ba4:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  VkCommandBufferAllocateInfo cmdBufferAllocInfo{};
   10ba8:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10bac:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
   10bb0:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
  cmdBufferAllocInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO;
   10bb4:	c7 45 c0 28 00 00 00 	movl   $0x28,-0x40(%rbp)
  cmdBufferAllocInfo.commandPool = commandPool;
   10bbb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10bbf:	48 8b 80 40 01 00 00 	mov    0x140(%rax),%rax
   10bc6:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  cmdBufferAllocInfo.level = VK_COMMAND_BUFFER_LEVEL_PRIMARY;
   10bca:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
  cmdBufferAllocInfo.commandBufferCount =
      static_cast<uint32_t>(maxFramesInFlight);
   10bd1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10bd5:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  cmdBufferAllocInfo.commandBufferCount =
   10bdc:	89 45 dc             	mov    %eax,-0x24(%rbp)
  commandBuffers = vkh::allocateCommandBuffers(device, &cmdBufferAllocInfo);
   10bdf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10be3:	48 8b 48 50          	mov    0x50(%rax),%rcx
   10be7:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   10beb:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   10bef:	48 89 ce             	mov    %rcx,%rsi
   10bf2:	48 89 c7             	mov    %rax,%rdi
   10bf5:	e8 72 58 ff ff       	call   646c <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo>
   10bfa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10bfe:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
   10c05:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   10c09:	48 89 c6             	mov    %rax,%rsi
   10c0c:	48 89 d7             	mov    %rdx,%rdi
   10c0f:	e8 26 3f 00 00       	call   14b3a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEaSEOS3_>
   10c14:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   10c18:	48 89 c7             	mov    %rax,%rdi
   10c1b:	e8 42 5b ff ff       	call   6762 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
}
   10c20:	90                   	nop
   10c21:	c9                   	leave
   10c22:	c3                   	ret
   10c23:	90                   	nop

0000000000010c24 <_ZN9VulkanApp19recordCommandBufferEP17VkCommandBuffer_Tj>:

void VulkanApp::recordCommandBuffer(VkCommandBuffer cmdBuffer,
                                    uint32_t imageIndex) {
   10c24:	55                   	push   %rbp
   10c25:	48 89 e5             	mov    %rsp,%rbp
   10c28:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   10c2f:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
   10c36:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
   10c3d:	89 95 6c ff ff ff    	mov    %edx,-0x94(%rbp)
  /* 1. Begin recording a command buffer */
  VkCommandBufferBeginInfo cmdBufferBeginInfo{};
   10c43:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10c47:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
   10c4b:	0f 29 45 f0          	movaps %xmm0,-0x10(%rbp)
  cmdBufferBeginInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO;
   10c4f:	c7 45 e0 2a 00 00 00 	movl   $0x2a,-0x20(%rbp)
  cmdBufferBeginInfo.flags = 0;
   10c56:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  cmdBufferBeginInfo.pInheritanceInfo = nullptr;
   10c5d:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   10c64:	00 
  vkh::beginCommandBuffer(cmdBuffer, &cmdBufferBeginInfo);
   10c65:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   10c69:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   10c70:	48 89 d6             	mov    %rdx,%rsi
   10c73:	48 89 c7             	mov    %rax,%rdi
   10c76:	e8 f4 58 ff ff       	call   656f <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo>

  /* 2. Start a render pass */
  VkClearValue clearColor = {{{0.0f, 0.0f, 0.0f, 1.0f}}};
   10c7b:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10c7f:	f3 0f 11 45 d0       	movss  %xmm0,-0x30(%rbp)
   10c84:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10c88:	f3 0f 11 45 d4       	movss  %xmm0,-0x2c(%rbp)
   10c8d:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10c91:	f3 0f 11 45 d8       	movss  %xmm0,-0x28(%rbp)
   10c96:	f3 0f 10 05 1a 06 01 	movss  0x1061a(%rip),%xmm0        # 212b8 <_ZZN9VulkanApp6renderEvE11submitCount+0x38c>
   10c9d:	00 
   10c9e:	f3 0f 11 45 dc       	movss  %xmm0,-0x24(%rbp)

  VkRenderPassBeginInfo renderPassBeginInfo{};
   10ca3:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10ca7:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
   10cab:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
   10caf:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
   10cb3:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
  renderPassBeginInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO;
   10cb7:	c7 45 90 2b 00 00 00 	movl   $0x2b,-0x70(%rbp)
  renderPassBeginInfo.renderPass = graphicsPipeline.renderPass;
   10cbe:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   10cc5:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
   10ccc:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  renderPassBeginInfo.framebuffer = framebuffers[imageIndex];
   10cd0:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   10cd7:	48 8d 90 00 01 00 00 	lea    0x100(%rax),%rdx
   10cde:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
   10ce4:	48 89 c6             	mov    %rax,%rsi
   10ce7:	48 89 d7             	mov    %rdx,%rdi
   10cea:	e8 b3 3c 00 00       	call   149a2 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>
   10cef:	48 8b 00             	mov    (%rax),%rax
   10cf2:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  renderPassBeginInfo.renderArea.offset = {0, 0};
   10cf6:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
   10cfd:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
  renderPassBeginInfo.renderArea.extent = swapchain.extent;
   10d04:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   10d0b:	48 8b 40 7c          	mov    0x7c(%rax),%rax
   10d0f:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  renderPassBeginInfo.clearValueCount = 1;
   10d13:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
  renderPassBeginInfo.pClearValues = &clearColor;
   10d1a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   10d1e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)

  vkCmdBeginRenderPass(cmdBuffer, &renderPassBeginInfo,
   10d22:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   10d26:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   10d2d:	ba 00 00 00 00       	mov    $0x0,%edx
   10d32:	48 89 ce             	mov    %rcx,%rsi
   10d35:	48 89 c7             	mov    %rax,%rdi
   10d38:	e8 d3 39 ff ff       	call   4710 <vkCmdBeginRenderPass@plt>
                       VK_SUBPASS_CONTENTS_INLINE);

  /* 3. Drawing commands */
  vkCmdBindPipeline(cmdBuffer, VK_PIPELINE_BIND_POINT_GRAPHICS,
   10d3d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   10d44:	48 8b 90 d8 00 00 00 	mov    0xd8(%rax),%rdx
   10d4b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   10d52:	be 00 00 00 00       	mov    $0x0,%esi
   10d57:	48 89 c7             	mov    %rax,%rdi
   10d5a:	e8 61 36 ff ff       	call   43c0 <vkCmdBindPipeline@plt>
                    graphicsPipeline.self);

  /* Bind the buffers */
  VkBuffer vertexBuffers[] = {vertexBuffer};
   10d5f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   10d66:	48 8b 80 48 01 00 00 	mov    0x148(%rax),%rax
   10d6d:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  VkDeviceSize offsets[] = {0};
   10d71:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
   10d78:	00 
  vkCmdBindVertexBuffers(cmdBuffer, 0, 1, vertexBuffers, offsets);
   10d79:	48 8d 4d 80          	lea    -0x80(%rbp),%rcx
   10d7d:	48 8d 55 88          	lea    -0x78(%rbp),%rdx
   10d81:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   10d88:	49 89 c8             	mov    %rcx,%r8
   10d8b:	48 89 d1             	mov    %rdx,%rcx
   10d8e:	ba 01 00 00 00       	mov    $0x1,%edx
   10d93:	be 00 00 00 00       	mov    $0x0,%esi
   10d98:	48 89 c7             	mov    %rax,%rdi
   10d9b:	e8 a0 39 ff ff       	call   4740 <vkCmdBindVertexBuffers@plt>

  /* Bind if using index buffers */
  vkCmdBindIndexBuffer(cmdBuffer, indexBuffer, 0, VK_INDEX_TYPE_UINT16);
   10da0:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   10da7:	48 8b b0 58 01 00 00 	mov    0x158(%rax),%rsi
   10dae:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   10db5:	b9 00 00 00 00       	mov    $0x0,%ecx
   10dba:	ba 00 00 00 00       	mov    $0x0,%edx
   10dbf:	48 89 c7             	mov    %rax,%rdi
   10dc2:	e8 69 39 ff ff       	call   4730 <vkCmdBindIndexBuffer@plt>
  static const uint32_t instanceCount = 1;
  static const uint32_t firstIndex = 0;
  static const uint32_t vertexOffset = 0;
  static const uint32_t firstInstance = 0;
  vkCmdDrawIndexed(cmdBuffer,
                   static_cast<uint32_t>(shader::triangle_indices.size()),
   10dc7:	48 8d 05 92 08 02 00 	lea    0x20892(%rip),%rax        # 31660 <_ZN6shaderL16triangle_indicesE>
   10dce:	48 89 c7             	mov    %rax,%rdi
   10dd1:	e8 9c 3d 00 00       	call   14b72 <_ZNKSt6vectorItSaItEE4sizeEv>
  vkCmdDrawIndexed(cmdBuffer,
   10dd6:	89 c6                	mov    %eax,%esi
   10dd8:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   10ddf:	41 b9 00 00 00 00    	mov    $0x0,%r9d
   10de5:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   10deb:	b9 00 00 00 00       	mov    $0x0,%ecx
   10df0:	ba 01 00 00 00       	mov    $0x1,%edx
   10df5:	48 89 c7             	mov    %rax,%rdi
   10df8:	e8 53 33 ff ff       	call   4150 <vkCmdDrawIndexed@plt>
                   instanceCount, firstIndex, vertexOffset, firstInstance);

  /* 4. End recording the command buffer */
  vkCmdEndRenderPass(cmdBuffer);
   10dfd:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   10e04:	48 89 c7             	mov    %rax,%rdi
   10e07:	e8 44 32 ff ff       	call   4050 <vkCmdEndRenderPass@plt>
  vkh::endCommandBuffer(cmdBuffer);
   10e0c:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   10e13:	48 89 c7             	mov    %rax,%rdi
   10e16:	e8 de 57 ff ff       	call   65f9 <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T>
}
   10e1b:	90                   	nop
   10e1c:	c9                   	leave
   10e1d:	c3                   	ret

0000000000010e1e <_ZN9VulkanApp14findMemoryTypeEjj>:

uint32_t VulkanApp::findMemoryType(uint32_t typeFilter,
                                   VkMemoryPropertyFlags propFlags) {
   10e1e:	55                   	push   %rbp
   10e1f:	48 89 e5             	mov    %rsp,%rbp
   10e22:	41 54                	push   %r12
   10e24:	53                   	push   %rbx
   10e25:	48 81 ec 20 02 00 00 	sub    $0x220,%rsp
   10e2c:	48 89 bd d8 fd ff ff 	mov    %rdi,-0x228(%rbp)
   10e33:	89 b5 d4 fd ff ff    	mov    %esi,-0x22c(%rbp)
   10e39:	89 95 d0 fd ff ff    	mov    %edx,-0x230(%rbp)
  VkPhysicalDeviceMemoryProperties memoryProperties;
  vkGetPhysicalDeviceMemoryProperties(physicalDevice, &memoryProperties);
   10e3f:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
   10e46:	48 8b 40 58          	mov    0x58(%rax),%rax
   10e4a:	48 8d 95 e0 fd ff ff 	lea    -0x220(%rbp),%rdx
   10e51:	48 89 d6             	mov    %rdx,%rsi
   10e54:	48 89 c7             	mov    %rax,%rdi
   10e57:	e8 a4 39 ff ff       	call   4800 <vkGetPhysicalDeviceMemoryProperties@plt>
  for (uint32_t i = 0; i < memoryProperties.memoryTypeCount; ++i) {
   10e5c:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
   10e63:	eb 39                	jmp    10e9e <_ZN9VulkanApp14findMemoryTypeEjj+0x80>
    if (typeFilter & (1 << i) &&
   10e65:	8b 45 ec             	mov    -0x14(%rbp),%eax
   10e68:	ba 01 00 00 00       	mov    $0x1,%edx
   10e6d:	89 c1                	mov    %eax,%ecx
   10e6f:	d3 e2                	shl    %cl,%edx
   10e71:	89 d0                	mov    %edx,%eax
   10e73:	23 85 d4 fd ff ff    	and    -0x22c(%rbp),%eax
   10e79:	85 c0                	test   %eax,%eax
   10e7b:	74 1d                	je     10e9a <_ZN9VulkanApp14findMemoryTypeEjj+0x7c>
        (memoryProperties.memoryTypes[i].propertyFlags & propFlags) ==
   10e7d:	8b 45 ec             	mov    -0x14(%rbp),%eax
   10e80:	8b 84 c5 e4 fd ff ff 	mov    -0x21c(%rbp,%rax,8),%eax
   10e87:	23 85 d0 fd ff ff    	and    -0x230(%rbp),%eax
    if (typeFilter & (1 << i) &&
   10e8d:	39 85 d0 fd ff ff    	cmp    %eax,-0x230(%rbp)
   10e93:	75 05                	jne    10e9a <_ZN9VulkanApp14findMemoryTypeEjj+0x7c>
            propFlags) {
      return i;
   10e95:	8b 45 ec             	mov    -0x14(%rbp),%eax
   10e98:	eb 60                	jmp    10efa <_ZN9VulkanApp14findMemoryTypeEjj+0xdc>
  for (uint32_t i = 0; i < memoryProperties.memoryTypeCount; ++i) {
   10e9a:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
   10e9e:	8b 85 e0 fd ff ff    	mov    -0x220(%rbp),%eax
   10ea4:	39 45 ec             	cmp    %eax,-0x14(%rbp)
   10ea7:	72 bc                	jb     10e65 <_ZN9VulkanApp14findMemoryTypeEjj+0x47>
    }
  }
  throw std::runtime_error("Failed to find suitable memory type.");
   10ea9:	bf 10 00 00 00       	mov    $0x10,%edi
   10eae:	e8 0d 33 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
   10eb3:	48 89 c3             	mov    %rax,%rbx
   10eb6:	48 8d 05 f3 ff 00 00 	lea    0xfff3(%rip),%rax        # 20eb0 <_ZZN9VulkanApp19recordCommandBufferEP17VkCommandBuffer_TjE13firstInstance+0x4>
   10ebd:	48 89 c6             	mov    %rax,%rsi
   10ec0:	48 89 df             	mov    %rbx,%rdi
   10ec3:	e8 68 32 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
   10ec8:	48 8b 05 d9 00 02 00 	mov    0x200d9(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   10ecf:	48 89 c2             	mov    %rax,%rdx
   10ed2:	48 8d 05 67 fe 01 00 	lea    0x1fe67(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   10ed9:	48 89 c6             	mov    %rax,%rsi
   10edc:	48 89 df             	mov    %rbx,%rdi
   10edf:	e8 ac 39 ff ff       	call   4890 <__cxa_throw@plt>
   10ee4:	49 89 c4             	mov    %rax,%r12
   10ee7:	48 89 df             	mov    %rbx,%rdi
   10eea:	e8 e1 33 ff ff       	call   42d0 <__cxa_free_exception@plt>
   10eef:	4c 89 e0             	mov    %r12,%rax
   10ef2:	48 89 c7             	mov    %rax,%rdi
   10ef5:	e8 06 3a ff ff       	call   4900 <_Unwind_Resume@plt>
}
   10efa:	48 81 c4 20 02 00 00 	add    $0x220,%rsp
   10f01:	5b                   	pop    %rbx
   10f02:	41 5c                	pop    %r12
   10f04:	5d                   	pop    %rbp
   10f05:	c3                   	ret

0000000000010f06 <_ZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T>:

void VulkanApp::createBuffer(VkDeviceSize size, VkBufferUsageFlags usage,
                             VkMemoryPropertyFlags propertyFlags,
                             VkBuffer &buffer, VkDeviceMemory &bufferMemory) {
   10f06:	55                   	push   %rbp
   10f07:	48 89 e5             	mov    %rsp,%rbp
   10f0a:	41 54                	push   %r12
   10f0c:	53                   	push   %rbx
   10f0d:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
   10f14:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
   10f1b:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
   10f22:	89 95 5c ff ff ff    	mov    %edx,-0xa4(%rbp)
   10f28:	89 8d 58 ff ff ff    	mov    %ecx,-0xa8(%rbp)
   10f2e:	4c 89 85 50 ff ff ff 	mov    %r8,-0xb0(%rbp)
   10f35:	4c 89 8d 48 ff ff ff 	mov    %r9,-0xb8(%rbp)
  [[maybe_unused]] static constexpr uint32_t vertexBufferCount = 1;
  VkBufferCreateInfo bufferInfo{};
   10f3c:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10f40:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
   10f44:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
   10f48:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
   10f4c:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  bufferInfo.sType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO;
   10f51:	c7 45 b0 0c 00 00 00 	movl   $0xc,-0x50(%rbp)
  bufferInfo.size = size;
   10f58:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   10f5f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  bufferInfo.usage = usage;
   10f63:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   10f69:	89 45 d0             	mov    %eax,-0x30(%rbp)
  bufferInfo.sharingMode = VK_SHARING_MODE_EXCLUSIVE;
   10f6c:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)

  if (vkCreateBuffer(device, &bufferInfo, nullptr, &buffer) != VK_SUCCESS) {
   10f73:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10f7a:	48 8b 40 50          	mov    0x50(%rax),%rax
   10f7e:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   10f85:	48 8d 75 b0          	lea    -0x50(%rbp),%rsi
   10f89:	48 89 d1             	mov    %rdx,%rcx
   10f8c:	ba 00 00 00 00       	mov    $0x0,%edx
   10f91:	48 89 c7             	mov    %rax,%rdi
   10f94:	e8 c7 34 ff ff       	call   4460 <vkCreateBuffer@plt>
   10f99:	85 c0                	test   %eax,%eax
   10f9b:	0f 95 c0             	setne  %al
   10f9e:	84 c0                	test   %al,%al
   10fa0:	74 3b                	je     10fdd <_ZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T+0xd7>
    throw std::runtime_error("Failed creating vertex buffer.");
   10fa2:	bf 10 00 00 00       	mov    $0x10,%edi
   10fa7:	e8 14 32 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
   10fac:	48 89 c3             	mov    %rax,%rbx
   10faf:	48 8d 05 2a ff 00 00 	lea    0xff2a(%rip),%rax        # 20ee0 <_ZZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_TE17vertexBufferCount+0x8>
   10fb6:	48 89 c6             	mov    %rax,%rsi
   10fb9:	48 89 df             	mov    %rbx,%rdi
   10fbc:	e8 6f 31 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
   10fc1:	48 8b 05 e0 ff 01 00 	mov    0x1ffe0(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   10fc8:	48 89 c2             	mov    %rax,%rdx
   10fcb:	48 8d 05 6e fd 01 00 	lea    0x1fd6e(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   10fd2:	48 89 c6             	mov    %rax,%rsi
   10fd5:	48 89 df             	mov    %rbx,%rdi
   10fd8:	e8 b3 38 ff ff       	call   4890 <__cxa_throw@plt>
  }

  VkMemoryRequirements memoryRequirements;
  vkGetBufferMemoryRequirements(device, buffer, &memoryRequirements);
   10fdd:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   10fe4:	48 8b 08             	mov    (%rax),%rcx
   10fe7:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10fee:	48 8b 40 50          	mov    0x50(%rax),%rax
   10ff2:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
   10ff6:	48 89 ce             	mov    %rcx,%rsi
   10ff9:	48 89 c7             	mov    %rax,%rdi
   10ffc:	e8 8f 30 ff ff       	call   4090 <vkGetBufferMemoryRequirements@plt>

  VkMemoryAllocateInfo allocInfo{};
   11001:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11005:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
   1100c:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  allocInfo.sType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO;
   11010:	c7 85 70 ff ff ff 05 	movl   $0x5,-0x90(%rbp)
   11017:	00 00 00 
  allocInfo.allocationSize = memoryRequirements.size;
   1101a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1101e:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  allocInfo.memoryTypeIndex =
      findMemoryType(memoryRequirements.memoryTypeBits, propertyFlags);
   11022:	8b 4d a0             	mov    -0x60(%rbp),%ecx
   11025:	8b 95 58 ff ff ff    	mov    -0xa8(%rbp),%edx
   1102b:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   11032:	89 ce                	mov    %ecx,%esi
   11034:	48 89 c7             	mov    %rax,%rdi
   11037:	e8 e2 fd ff ff       	call   10e1e <_ZN9VulkanApp14findMemoryTypeEjj>
  allocInfo.memoryTypeIndex =
   1103c:	89 45 88             	mov    %eax,-0x78(%rbp)
  if (vkAllocateMemory(device, &allocInfo, nullptr, &bufferMemory) !=
   1103f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   11046:	48 8b 40 50          	mov    0x50(%rax),%rax
   1104a:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   11051:	48 8d b5 70 ff ff ff 	lea    -0x90(%rbp),%rsi
   11058:	48 89 d1             	mov    %rdx,%rcx
   1105b:	ba 00 00 00 00       	mov    $0x0,%edx
   11060:	48 89 c7             	mov    %rax,%rdi
   11063:	e8 08 38 ff ff       	call   4870 <vkAllocateMemory@plt>
   11068:	85 c0                	test   %eax,%eax
   1106a:	0f 95 c0             	setne  %al
   1106d:	84 c0                	test   %al,%al
   1106f:	74 3b                	je     110ac <_ZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T+0x1a6>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to allocate vertex buffer memory.");
   11071:	bf 10 00 00 00       	mov    $0x10,%edi
   11076:	e8 45 31 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
   1107b:	48 89 c3             	mov    %rax,%rbx
   1107e:	48 8d 05 7b fe 00 00 	lea    0xfe7b(%rip),%rax        # 20f00 <_ZZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_TE17vertexBufferCount+0x28>
   11085:	48 89 c6             	mov    %rax,%rsi
   11088:	48 89 df             	mov    %rbx,%rdi
   1108b:	e8 a0 30 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
   11090:	48 8b 05 11 ff 01 00 	mov    0x1ff11(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   11097:	48 89 c2             	mov    %rax,%rdx
   1109a:	48 8d 05 9f fc 01 00 	lea    0x1fc9f(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   110a1:	48 89 c6             	mov    %rax,%rsi
   110a4:	48 89 df             	mov    %rbx,%rdi
   110a7:	e8 e4 37 ff ff       	call   4890 <__cxa_throw@plt>
  }
  vkBindBufferMemory(device, buffer, bufferMemory, 0);
   110ac:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   110b3:	48 8b 10             	mov    (%rax),%rdx
   110b6:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   110bd:	48 8b 30             	mov    (%rax),%rsi
   110c0:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   110c7:	48 8b 40 50          	mov    0x50(%rax),%rax
   110cb:	b9 00 00 00 00       	mov    $0x0,%ecx
   110d0:	48 89 c7             	mov    %rax,%rdi
   110d3:	e8 d8 34 ff ff       	call   45b0 <vkBindBufferMemory@plt>
}
   110d8:	eb 2c                	jmp    11106 <_ZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T+0x200>
    throw std::runtime_error("Failed creating vertex buffer.");
   110da:	49 89 c4             	mov    %rax,%r12
   110dd:	48 89 df             	mov    %rbx,%rdi
   110e0:	e8 eb 31 ff ff       	call   42d0 <__cxa_free_exception@plt>
   110e5:	4c 89 e0             	mov    %r12,%rax
   110e8:	48 89 c7             	mov    %rax,%rdi
   110eb:	e8 10 38 ff ff       	call   4900 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to allocate vertex buffer memory.");
   110f0:	49 89 c4             	mov    %rax,%r12
   110f3:	48 89 df             	mov    %rbx,%rdi
   110f6:	e8 d5 31 ff ff       	call   42d0 <__cxa_free_exception@plt>
   110fb:	4c 89 e0             	mov    %r12,%rax
   110fe:	48 89 c7             	mov    %rax,%rdi
   11101:	e8 fa 37 ff ff       	call   4900 <_Unwind_Resume@plt>
}
   11106:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
   1110d:	5b                   	pop    %rbx
   1110e:	41 5c                	pop    %r12
   11110:	5d                   	pop    %rbp
   11111:	c3                   	ret

0000000000011112 <_ZN9VulkanApp10copyBufferEP10VkBuffer_TS1_m>:

void VulkanApp::copyBuffer(VkBuffer src, VkBuffer dst, VkDeviceSize size) {
   11112:	55                   	push   %rbp
   11113:	48 89 e5             	mov    %rsp,%rbp
   11116:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
   1111d:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
   11124:	48 89 b5 30 ff ff ff 	mov    %rsi,-0xd0(%rbp)
   1112b:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
   11132:	48 89 8d 20 ff ff ff 	mov    %rcx,-0xe0(%rbp)
  VkCommandBufferAllocateInfo allocInfo{};
   11139:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1113d:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
   11141:	0f 29 45 f0          	movaps %xmm0,-0x10(%rbp)
  allocInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO;
   11145:	c7 45 e0 28 00 00 00 	movl   $0x28,-0x20(%rbp)
  allocInfo.level = VK_COMMAND_BUFFER_LEVEL_PRIMARY;
   1114c:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  allocInfo.commandPool = commandPool;
   11153:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1115a:	48 8b 80 40 01 00 00 	mov    0x140(%rax),%rax
   11161:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  allocInfo.commandBufferCount = 1;
   11165:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)

  VkCommandBuffer commandBuffer =
      vkh::allocateCommandBuffer(device, &allocInfo);
   1116c:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   11173:	48 8b 40 50          	mov    0x50(%rax),%rax
   11177:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1117b:	48 89 d6             	mov    %rdx,%rsi
   1117e:	48 89 c7             	mov    %rax,%rdi
   11181:	e8 f6 51 ff ff       	call   637c <_ZN3vkh21allocateCommandBufferEP10VkDevice_TPK27VkCommandBufferAllocateInfo>
   11186:	48 89 45 d8          	mov    %rax,-0x28(%rbp)

  VkCommandBufferBeginInfo beginInfo{};
   1118a:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1118e:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
   11192:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
  beginInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO;
   11196:	c7 45 b0 2a 00 00 00 	movl   $0x2a,-0x50(%rbp)
  beginInfo.flags = VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT;
   1119d:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
  vkh::beginCommandBuffer(commandBuffer, &beginInfo);
   111a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   111a8:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
   111ac:	48 89 d6             	mov    %rdx,%rsi
   111af:	48 89 c7             	mov    %rax,%rdi
   111b2:	e8 b8 53 ff ff       	call   656f <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo>

  VkBufferCopy copyRegion{};
   111b7:	66 0f ef c0          	pxor   %xmm0,%xmm0
   111bb:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
   111bf:	66 0f d6 45 a0       	movq   %xmm0,-0x60(%rbp)
  copyRegion.srcOffset = 0;
   111c4:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
   111cb:	00 
  copyRegion.dstOffset = 0;
   111cc:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   111d3:	00 
  copyRegion.size = size;
   111d4:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   111db:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  vkCmdCopyBuffer(commandBuffer, src, dst, 1, &copyRegion);
   111df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   111e3:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   111e7:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   111ee:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
   111f5:	49 89 c8             	mov    %rcx,%r8
   111f8:	b9 01 00 00 00       	mov    $0x1,%ecx
   111fd:	48 89 c7             	mov    %rax,%rdi
   11200:	e8 5b 35 ff ff       	call   4760 <vkCmdCopyBuffer@plt>

  vkh::endCommandBuffer(commandBuffer);
   11205:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11209:	48 89 c7             	mov    %rax,%rdi
   1120c:	e8 e8 53 ff ff       	call   65f9 <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T>

  VkSubmitInfo submitInfo{};
   11211:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11215:	0f 29 85 40 ff ff ff 	movaps %xmm0,-0xc0(%rbp)
   1121c:	0f 29 85 50 ff ff ff 	movaps %xmm0,-0xb0(%rbp)
   11223:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
   1122a:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
   11231:	66 0f d6 45 80       	movq   %xmm0,-0x80(%rbp)
  submitInfo.sType = VK_STRUCTURE_TYPE_SUBMIT_INFO;
   11236:	c7 85 40 ff ff ff 04 	movl   $0x4,-0xc0(%rbp)
   1123d:	00 00 00 
  submitInfo.commandBufferCount = 1;
   11240:	c7 85 68 ff ff ff 01 	movl   $0x1,-0x98(%rbp)
   11247:	00 00 00 
  submitInfo.pCommandBuffers = &commandBuffer;
   1124a:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1124e:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)

  /* Submit and wait on this transfer to complete before cleaning up
  the command buffer */
  vkQueueSubmit(queue, 1, &submitInfo, VK_NULL_HANDLE);
   11255:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1125c:	48 8b 40 60          	mov    0x60(%rax),%rax
   11260:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
   11267:	b9 00 00 00 00       	mov    $0x0,%ecx
   1126c:	be 01 00 00 00       	mov    $0x1,%esi
   11271:	48 89 c7             	mov    %rax,%rdi
   11274:	e8 07 34 ff ff       	call   4680 <vkQueueSubmit@plt>
  vkQueueWaitIdle(queue);
   11279:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   11280:	48 8b 40 60          	mov    0x60(%rax),%rax
   11284:	48 89 c7             	mov    %rax,%rdi
   11287:	e8 54 36 ff ff       	call   48e0 <vkQueueWaitIdle@plt>
  vkFreeCommandBuffers(device, commandPool, 1, &commandBuffer);
   1128c:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   11293:	48 8b b0 40 01 00 00 	mov    0x140(%rax),%rsi
   1129a:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   112a1:	48 8b 40 50          	mov    0x50(%rax),%rax
   112a5:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   112a9:	48 89 d1             	mov    %rdx,%rcx
   112ac:	ba 01 00 00 00       	mov    $0x1,%edx
   112b1:	48 89 c7             	mov    %rax,%rdi
   112b4:	e8 27 30 ff ff       	call   42e0 <vkFreeCommandBuffers@plt>
}
   112b9:	90                   	nop
   112ba:	c9                   	leave
   112bb:	c3                   	ret

00000000000112bc <_ZN9VulkanApp18createVertexBufferEv>:

void VulkanApp::createVertexBuffer() {
   112bc:	55                   	push   %rbp
   112bd:	48 89 e5             	mov    %rsp,%rbp
   112c0:	48 83 ec 30          	sub    $0x30,%rsp
   112c4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  VkDeviceSize bufferSize = sizeof(shader::triangle_index_data[0]) *
                            shader::triangle_index_data.size();
   112c8:	48 8d 05 b1 03 02 00 	lea    0x203b1(%rip),%rax        # 31680 <_ZN6shaderL19triangle_index_dataE>
   112cf:	48 89 c7             	mov    %rax,%rdi
   112d2:	e8 bd 38 00 00       	call   14b94 <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE4sizeEv>
   112d7:	48 89 c2             	mov    %rax,%rdx
   112da:	48 89 d0             	mov    %rdx,%rax
   112dd:	48 c1 e0 02          	shl    $0x2,%rax
   112e1:	48 01 d0             	add    %rdx,%rax
   112e4:	48 c1 e0 02          	shl    $0x2,%rax
   112e8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)

  /* Create a host visible buffer as temporary buffer */
  VkBuffer stagingBuffer;
  VkDeviceMemory stagingBufferMemory;
  createBuffer(bufferSize, VK_BUFFER_USAGE_TRANSFER_SRC_BIT,
   112ec:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
   112f0:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   112f4:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   112f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   112fc:	49 89 c9             	mov    %rcx,%r9
   112ff:	49 89 d0             	mov    %rdx,%r8
   11302:	b9 06 00 00 00       	mov    $0x6,%ecx
   11307:	ba 01 00 00 00       	mov    $0x1,%edx
   1130c:	48 89 c7             	mov    %rax,%rdi
   1130f:	e8 f2 fb ff ff       	call   10f06 <_ZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T>
                   VK_MEMORY_PROPERTY_HOST_COHERENT_BIT,
               stagingBuffer, stagingBufferMemory);

  /* Copy the vertices data to the staging buffer */
  void *data;
  vkMapMemory(device, stagingBufferMemory, 0, bufferSize, 0, &data);
   11314:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   11318:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1131c:	48 8b 40 50          	mov    0x50(%rax),%rax
   11320:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   11324:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11328:	49 89 c9             	mov    %rcx,%r9
   1132b:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   11331:	48 89 d1             	mov    %rdx,%rcx
   11334:	ba 00 00 00 00       	mov    $0x0,%edx
   11339:	48 89 c7             	mov    %rax,%rdi
   1133c:	e8 af 30 ff ff       	call   43f0 <vkMapMemory@plt>
  std::memcpy(data, shader::triangle_index_data.data(),
   11341:	48 8d 05 38 03 02 00 	lea    0x20338(%rip),%rax        # 31680 <_ZN6shaderL19triangle_index_dataE>
   11348:	48 89 c7             	mov    %rax,%rdi
   1134b:	e8 72 38 00 00       	call   14bc2 <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE4dataEv>
   11350:	48 89 c1             	mov    %rax,%rcx
   11353:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11357:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1135b:	48 89 ce             	mov    %rcx,%rsi
   1135e:	48 89 c7             	mov    %rax,%rdi
   11361:	e8 ea 2f ff ff       	call   4350 <memcpy@plt>
              static_cast<size_t>(bufferSize));
  vkUnmapMemory(device, stagingBufferMemory);
   11366:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1136a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1136e:	48 8b 40 50          	mov    0x50(%rax),%rax
   11372:	48 89 d6             	mov    %rdx,%rsi
   11375:	48 89 c7             	mov    %rax,%rdi
   11378:	e8 c3 2f ff ff       	call   4340 <vkUnmapMemory@plt>

  /* Create a device local buffer as actual vertex buffer */
  createBuffer(
      bufferSize,
      VK_BUFFER_USAGE_TRANSFER_DST_BIT | VK_BUFFER_USAGE_VERTEX_BUFFER_BIT,
      VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT, vertexBuffer, vertexBufferMemory);
   1137d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11381:	48 8d 88 50 01 00 00 	lea    0x150(%rax),%rcx
   11388:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1138c:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
  createBuffer(
   11393:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   11397:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1139b:	49 89 c9             	mov    %rcx,%r9
   1139e:	49 89 d0             	mov    %rdx,%r8
   113a1:	b9 01 00 00 00       	mov    $0x1,%ecx
   113a6:	ba 82 00 00 00       	mov    $0x82,%edx
   113ab:	48 89 c7             	mov    %rax,%rdi
   113ae:	e8 53 fb ff ff       	call   10f06 <_ZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T>

  /* Copy the data from the staging buffer to the device buffer */
  copyBuffer(stagingBuffer, vertexBuffer, bufferSize);
   113b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   113b7:	48 8b 90 48 01 00 00 	mov    0x148(%rax),%rdx
   113be:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   113c2:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   113c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   113ca:	48 89 c7             	mov    %rax,%rdi
   113cd:	e8 40 fd ff ff       	call   11112 <_ZN9VulkanApp10copyBufferEP10VkBuffer_TS1_m>

  /* Clean the staging buffer */
  vkDestroyBuffer(device, stagingBuffer, nullptr);
   113d2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   113d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   113da:	48 8b 40 50          	mov    0x50(%rax),%rax
   113de:	ba 00 00 00 00       	mov    $0x0,%edx
   113e3:	48 89 ce             	mov    %rcx,%rsi
   113e6:	48 89 c7             	mov    %rax,%rdi
   113e9:	e8 e2 2d ff ff       	call   41d0 <vkDestroyBuffer@plt>
  vkFreeMemory(device, stagingBufferMemory, nullptr);
   113ee:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   113f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   113f6:	48 8b 40 50          	mov    0x50(%rax),%rax
   113fa:	ba 00 00 00 00       	mov    $0x0,%edx
   113ff:	48 89 ce             	mov    %rcx,%rsi
   11402:	48 89 c7             	mov    %rax,%rdi
   11405:	e8 f6 2f ff ff       	call   4400 <vkFreeMemory@plt>
}
   1140a:	90                   	nop
   1140b:	c9                   	leave
   1140c:	c3                   	ret
   1140d:	90                   	nop

000000000001140e <_ZN9VulkanApp17createIndexBufferEv>:

void VulkanApp::createIndexBuffer() {
   1140e:	55                   	push   %rbp
   1140f:	48 89 e5             	mov    %rsp,%rbp
   11412:	48 83 ec 30          	sub    $0x30,%rsp
   11416:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  VkDeviceSize bufferSize =
      sizeof(shader::triangle_indices[0]) * shader::triangle_indices.size();
   1141a:	48 8d 05 3f 02 02 00 	lea    0x2023f(%rip),%rax        # 31660 <_ZN6shaderL16triangle_indicesE>
   11421:	48 89 c7             	mov    %rax,%rdi
   11424:	e8 49 37 00 00       	call   14b72 <_ZNKSt6vectorItSaItEE4sizeEv>
   11429:	48 01 c0             	add    %rax,%rax
   1142c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)

  /* Create a host visible buffer as temporary buffer */
  VkBuffer stagingBuffer;
  VkDeviceMemory stagingBufferMemory;
  createBuffer(bufferSize, VK_BUFFER_USAGE_TRANSFER_SRC_BIT,
   11430:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
   11434:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   11438:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   1143c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11440:	49 89 c9             	mov    %rcx,%r9
   11443:	49 89 d0             	mov    %rdx,%r8
   11446:	b9 06 00 00 00       	mov    $0x6,%ecx
   1144b:	ba 01 00 00 00       	mov    $0x1,%edx
   11450:	48 89 c7             	mov    %rax,%rdi
   11453:	e8 ae fa ff ff       	call   10f06 <_ZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T>
                   VK_MEMORY_PROPERTY_HOST_COHERENT_BIT,
               stagingBuffer, stagingBufferMemory);

  /* Copy the vertices data to the staging buffer */
  void *data;
  vkMapMemory(device, stagingBufferMemory, 0, bufferSize, 0, &data);
   11458:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   1145c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11460:	48 8b 40 50          	mov    0x50(%rax),%rax
   11464:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   11468:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1146c:	49 89 c9             	mov    %rcx,%r9
   1146f:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   11475:	48 89 d1             	mov    %rdx,%rcx
   11478:	ba 00 00 00 00       	mov    $0x0,%edx
   1147d:	48 89 c7             	mov    %rax,%rdi
   11480:	e8 6b 2f ff ff       	call   43f0 <vkMapMemory@plt>
  std::memcpy(data, shader::triangle_indices.data(),
   11485:	48 8d 05 d4 01 02 00 	lea    0x201d4(%rip),%rax        # 31660 <_ZN6shaderL16triangle_indicesE>
   1148c:	48 89 c7             	mov    %rax,%rdi
   1148f:	e8 52 37 00 00       	call   14be6 <_ZNKSt6vectorItSaItEE4dataEv>
   11494:	48 89 c1             	mov    %rax,%rcx
   11497:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1149b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1149f:	48 89 ce             	mov    %rcx,%rsi
   114a2:	48 89 c7             	mov    %rax,%rdi
   114a5:	e8 a6 2e ff ff       	call   4350 <memcpy@plt>
              static_cast<size_t>(bufferSize));
  vkUnmapMemory(device, stagingBufferMemory);
   114aa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   114ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   114b2:	48 8b 40 50          	mov    0x50(%rax),%rax
   114b6:	48 89 d6             	mov    %rdx,%rsi
   114b9:	48 89 c7             	mov    %rax,%rdi
   114bc:	e8 7f 2e ff ff       	call   4340 <vkUnmapMemory@plt>

  /* Create a device local buffer as actual vertex buffer */
  createBuffer(
      bufferSize,
      VK_BUFFER_USAGE_TRANSFER_DST_BIT | VK_BUFFER_USAGE_INDEX_BUFFER_BIT,
      VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT, indexBuffer, indexBufferMemory);
   114c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   114c5:	48 8d 88 60 01 00 00 	lea    0x160(%rax),%rcx
   114cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   114d0:	48 8d 90 58 01 00 00 	lea    0x158(%rax),%rdx
  createBuffer(
   114d7:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   114db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   114df:	49 89 c9             	mov    %rcx,%r9
   114e2:	49 89 d0             	mov    %rdx,%r8
   114e5:	b9 01 00 00 00       	mov    $0x1,%ecx
   114ea:	ba 42 00 00 00       	mov    $0x42,%edx
   114ef:	48 89 c7             	mov    %rax,%rdi
   114f2:	e8 0f fa ff ff       	call   10f06 <_ZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T>

  /* Copy the data from the staging buffer to the device buffer */
  copyBuffer(stagingBuffer, indexBuffer, bufferSize);
   114f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   114fb:	48 8b 90 58 01 00 00 	mov    0x158(%rax),%rdx
   11502:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   11506:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   1150a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1150e:	48 89 c7             	mov    %rax,%rdi
   11511:	e8 fc fb ff ff       	call   11112 <_ZN9VulkanApp10copyBufferEP10VkBuffer_TS1_m>

  /* Clean the staging buffer */
  vkDestroyBuffer(device, stagingBuffer, nullptr);
   11516:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1151a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1151e:	48 8b 40 50          	mov    0x50(%rax),%rax
   11522:	ba 00 00 00 00       	mov    $0x0,%edx
   11527:	48 89 ce             	mov    %rcx,%rsi
   1152a:	48 89 c7             	mov    %rax,%rdi
   1152d:	e8 9e 2c ff ff       	call   41d0 <vkDestroyBuffer@plt>
  vkFreeMemory(device, stagingBufferMemory, nullptr);
   11532:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   11536:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1153a:	48 8b 40 50          	mov    0x50(%rax),%rax
   1153e:	ba 00 00 00 00       	mov    $0x0,%edx
   11543:	48 89 ce             	mov    %rcx,%rsi
   11546:	48 89 c7             	mov    %rax,%rdi
   11549:	e8 b2 2e ff ff       	call   4400 <vkFreeMemory@plt>
}
   1154e:	90                   	nop
   1154f:	c9                   	leave
   11550:	c3                   	ret
   11551:	90                   	nop

0000000000011552 <_ZN9VulkanApp28createSynchronizationObjectsEv>:

void VulkanApp::createSynchronizationObjects() {
   11552:	55                   	push   %rbp
   11553:	48 89 e5             	mov    %rsp,%rbp
   11556:	53                   	push   %rbx
   11557:	48 83 ec 58          	sub    $0x58,%rsp
   1155b:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkSemaphoreCreateInfo semaphoreInfo{};
   1155f:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11563:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
   11567:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  semaphoreInfo.sType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO;
   1156c:	c7 45 d0 09 00 00 00 	movl   $0x9,-0x30(%rbp)

  VkFenceCreateInfo fenceInfo{};
   11573:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11577:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
   1157b:	66 0f d6 45 c0       	movq   %xmm0,-0x40(%rbp)
  fenceInfo.sType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO;
   11580:	c7 45 b0 08 00 00 00 	movl   $0x8,-0x50(%rbp)
  fenceInfo.flags = VK_FENCE_CREATE_SIGNALED_BIT;
   11587:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)

  sync.imageAvailableSemaphore.resize(maxFramesInFlight);
   1158e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11592:	48 8d 90 68 01 00 00 	lea    0x168(%rax),%rdx
   11599:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1159d:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   115a4:	48 89 c6             	mov    %rax,%rsi
   115a7:	48 89 d7             	mov    %rdx,%rdi
   115aa:	e8 5b 36 00 00       	call   14c0a <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm>
  sync.renderFinisedSemaphore.resize(maxFramesInFlight);
   115af:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   115b3:	48 8d 90 80 01 00 00 	lea    0x180(%rax),%rdx
   115ba:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   115be:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   115c5:	48 89 c6             	mov    %rax,%rsi
   115c8:	48 89 d7             	mov    %rdx,%rdi
   115cb:	e8 3a 36 00 00       	call   14c0a <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm>
  sync.inFlightFence.resize(maxFramesInFlight);
   115d0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   115d4:	48 8d 90 98 01 00 00 	lea    0x198(%rax),%rdx
   115db:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   115df:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   115e6:	48 89 c6             	mov    %rax,%rsi
   115e9:	48 89 d7             	mov    %rdx,%rdi
   115ec:	e8 9f 36 00 00       	call   14c90 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   115f1:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   115f8:	00 
   115f9:	e9 b9 00 00 00       	jmp    116b7 <_ZN9VulkanApp28createSynchronizationObjectsEv+0x165>
    sync.imageAvailableSemaphore[i] =
        vkh::createSemaphore(device, &semaphoreInfo);
   115fe:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11602:	48 8b 40 50          	mov    0x50(%rax),%rax
   11606:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
   1160a:	ba 00 00 00 00       	mov    $0x0,%edx
   1160f:	48 89 ce             	mov    %rcx,%rsi
   11612:	48 89 c7             	mov    %rax,%rdi
   11615:	e8 13 61 ff ff       	call   772d <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks>
   1161a:	48 89 c3             	mov    %rax,%rbx
    sync.imageAvailableSemaphore[i] =
   1161d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11621:	48 8d 90 68 01 00 00 	lea    0x168(%rax),%rdx
   11628:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1162c:	48 89 c6             	mov    %rax,%rsi
   1162f:	48 89 d7             	mov    %rdx,%rdi
   11632:	e8 df 36 00 00       	call   14d16 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   11637:	48 89 18             	mov    %rbx,(%rax)
    sync.renderFinisedSemaphore[i] =
        vkh::createSemaphore(device, &semaphoreInfo);
   1163a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1163e:	48 8b 40 50          	mov    0x50(%rax),%rax
   11642:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
   11646:	ba 00 00 00 00       	mov    $0x0,%edx
   1164b:	48 89 ce             	mov    %rcx,%rsi
   1164e:	48 89 c7             	mov    %rax,%rdi
   11651:	e8 d7 60 ff ff       	call   772d <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks>
   11656:	48 89 c3             	mov    %rax,%rbx
    sync.renderFinisedSemaphore[i] =
   11659:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1165d:	48 8d 90 80 01 00 00 	lea    0x180(%rax),%rdx
   11664:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11668:	48 89 c6             	mov    %rax,%rsi
   1166b:	48 89 d7             	mov    %rdx,%rdi
   1166e:	e8 a3 36 00 00       	call   14d16 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   11673:	48 89 18             	mov    %rbx,(%rax)
    sync.inFlightFence[i] = vkh::createFence(device, &fenceInfo);
   11676:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1167a:	48 8b 40 50          	mov    0x50(%rax),%rax
   1167e:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
   11682:	ba 00 00 00 00       	mov    $0x0,%edx
   11687:	48 89 ce             	mov    %rcx,%rsi
   1168a:	48 89 c7             	mov    %rax,%rdi
   1168d:	e8 33 61 ff ff       	call   77c5 <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks>
   11692:	48 89 c3             	mov    %rax,%rbx
   11695:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11699:	48 8d 90 98 01 00 00 	lea    0x198(%rax),%rdx
   116a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   116a4:	48 89 c6             	mov    %rax,%rsi
   116a7:	48 89 d7             	mov    %rdx,%rdi
   116aa:	e8 87 36 00 00       	call   14d36 <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
   116af:	48 89 18             	mov    %rbx,(%rax)
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   116b2:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
   116b7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   116bb:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   116c2:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   116c6:	0f 82 32 ff ff ff    	jb     115fe <_ZN9VulkanApp28createSynchronizationObjectsEv+0xac>
  }
}
   116cc:	90                   	nop
   116cd:	90                   	nop
   116ce:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   116d2:	c9                   	leave
   116d3:	c3                   	ret

00000000000116d4 <_ZN9VulkanApp6renderEv>:

void VulkanApp::render() {
   116d4:	55                   	push   %rbp
   116d5:	48 89 e5             	mov    %rsp,%rbp
   116d8:	41 57                	push   %r15
   116da:	41 56                	push   %r14
   116dc:	41 55                	push   %r13
   116de:	41 54                	push   %r12
   116e0:	53                   	push   %rbx
   116e1:	48 81 ec 48 01 00 00 	sub    $0x148,%rsp
   116e8:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
  /* 1. Wait for the previous frame to finish */
  vkWaitForFences(device, 1, &sync.inFlightFence[sync.currentFrame], VK_TRUE,
   116ef:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   116f6:	48 8d 90 98 01 00 00 	lea    0x198(%rax),%rdx
   116fd:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11704:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   1170b:	48 89 c6             	mov    %rax,%rsi
   1170e:	48 89 d7             	mov    %rdx,%rdi
   11711:	e8 20 36 00 00       	call   14d36 <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
   11716:	48 89 c2             	mov    %rax,%rdx
   11719:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11720:	48 8b 40 50          	mov    0x50(%rax),%rax
   11724:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
   1172b:	b9 01 00 00 00       	mov    $0x1,%ecx
   11730:	be 01 00 00 00       	mov    $0x1,%esi
   11735:	48 89 c7             	mov    %rax,%rdi
   11738:	e8 f3 2a ff ff       	call   4230 <vkWaitForFences@plt>

  /* 2. Acquire an image frome the swapchain */
  uint32_t imageIndex;
  VkResult result =
      vkAcquireNextImageKHR(device, swapchain.self, UINT64_MAX,
                            sync.imageAvailableSemaphore[sync.currentFrame],
   1173d:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11744:	48 8d 90 68 01 00 00 	lea    0x168(%rax),%rdx
   1174b:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11752:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   11759:	48 89 c6             	mov    %rax,%rsi
   1175c:	48 89 d7             	mov    %rdx,%rdi
   1175f:	e8 b2 35 00 00       	call   14d16 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
      vkAcquireNextImageKHR(device, swapchain.self, UINT64_MAX,
   11764:	48 8b 10             	mov    (%rax),%rdx
   11767:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1176e:	48 8b 70 70          	mov    0x70(%rax),%rsi
   11772:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11779:	48 8b 40 50          	mov    0x50(%rax),%rax
   1177d:	48 8d 4d a4          	lea    -0x5c(%rbp),%rcx
   11781:	49 89 c9             	mov    %rcx,%r9
   11784:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   1178a:	48 89 d1             	mov    %rdx,%rcx
   1178d:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   11794:	48 89 c7             	mov    %rax,%rdi
   11797:	e8 d4 29 ff ff       	call   4170 <vkAcquireNextImageKHR@plt>
   1179c:	89 45 cc             	mov    %eax,-0x34(%rbp)
                            VK_NULL_HANDLE, &imageIndex);
  if (result == VK_SUBOPTIMAL_KHR || result == VK_ERROR_OUT_OF_DATE_KHR) {
   1179f:	81 7d cc eb cd 9a 3b 	cmpl   $0x3b9acdeb,-0x34(%rbp)
   117a6:	74 09                	je     117b1 <_ZN9VulkanApp6renderEv+0xdd>
   117a8:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
   117af:	75 14                	jne    117c5 <_ZN9VulkanApp6renderEv+0xf1>
    recreateSwapchain();
   117b1:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   117b8:	48 89 c7             	mov    %rax,%rdi
   117bb:	e8 fa f0 ff ff       	call   108ba <_ZN9VulkanApp17recreateSwapchainEv>
    throw std::runtime_error("Failed to present swapchain image.");
  }

  /* 6. Set up the next frame */
  sync.currentFrame = (sync.currentFrame + 1) % maxFramesInFlight;
}
   117c0:	e9 f6 05 00 00       	jmp    11dbb <_ZN9VulkanApp6renderEv+0x6e7>
  } else if (result != VK_SUCCESS) {
   117c5:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   117c9:	74 3b                	je     11806 <_ZN9VulkanApp6renderEv+0x132>
    throw std::runtime_error("Failed to acquire swapchain image.");
   117cb:	bf 10 00 00 00       	mov    $0x10,%edi
   117d0:	e8 eb 29 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
   117d5:	48 89 c3             	mov    %rax,%rbx
   117d8:	48 8d 05 51 f7 00 00 	lea    0xf751(%rip),%rax        # 20f30 <_ZZN9VulkanApp6renderEvE11submitCount+0x4>
   117df:	48 89 c6             	mov    %rax,%rsi
   117e2:	48 89 df             	mov    %rbx,%rdi
   117e5:	e8 46 29 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
   117ea:	48 8b 05 b7 f7 01 00 	mov    0x1f7b7(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   117f1:	48 89 c2             	mov    %rax,%rdx
   117f4:	48 8d 05 45 f5 01 00 	lea    0x1f545(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   117fb:	48 89 c6             	mov    %rax,%rsi
   117fe:	48 89 df             	mov    %rbx,%rdi
   11801:	e8 8a 30 ff ff       	call   4890 <__cxa_throw@plt>
  vkResetFences(device, 1, &sync.inFlightFence[sync.currentFrame]);
   11806:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1180d:	48 8d 90 98 01 00 00 	lea    0x198(%rax),%rdx
   11814:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1181b:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   11822:	48 89 c6             	mov    %rax,%rsi
   11825:	48 89 d7             	mov    %rdx,%rdi
   11828:	e8 09 35 00 00       	call   14d36 <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
   1182d:	48 89 c2             	mov    %rax,%rdx
   11830:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11837:	48 8b 40 50          	mov    0x50(%rax),%rax
   1183b:	be 01 00 00 00       	mov    $0x1,%esi
   11840:	48 89 c7             	mov    %rax,%rdi
   11843:	e8 78 2f ff ff       	call   47c0 <vkResetFences@plt>
  vkResetCommandBuffer(commandBuffers[sync.currentFrame], 0);
   11848:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1184f:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
   11856:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1185d:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   11864:	48 89 c6             	mov    %rax,%rsi
   11867:	48 89 d7             	mov    %rdx,%rdi
   1186a:	e8 e7 34 00 00       	call   14d56 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>
   1186f:	48 8b 00             	mov    (%rax),%rax
   11872:	be 00 00 00 00       	mov    $0x0,%esi
   11877:	48 89 c7             	mov    %rax,%rdi
   1187a:	e8 a1 2d ff ff       	call   4620 <vkResetCommandBuffer@plt>
  recordCommandBuffer(commandBuffers[sync.currentFrame], imageIndex);
   1187f:	8b 5d a4             	mov    -0x5c(%rbp),%ebx
   11882:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11889:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
   11890:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11897:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   1189e:	48 89 c6             	mov    %rax,%rsi
   118a1:	48 89 d7             	mov    %rdx,%rdi
   118a4:	e8 ad 34 00 00       	call   14d56 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>
   118a9:	48 8b 08             	mov    (%rax),%rcx
   118ac:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   118b3:	89 da                	mov    %ebx,%edx
   118b5:	48 89 ce             	mov    %rcx,%rsi
   118b8:	48 89 c7             	mov    %rax,%rdi
   118bb:	e8 64 f3 ff ff       	call   10c24 <_ZN9VulkanApp19recordCommandBufferEP17VkCommandBuffer_Tj>
      sync.imageAvailableSemaphore[sync.currentFrame]};
   118c0:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   118c7:	48 8d 90 68 01 00 00 	lea    0x168(%rax),%rdx
   118ce:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   118d5:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   118dc:	48 89 c6             	mov    %rax,%rsi
   118df:	48 89 d7             	mov    %rdx,%rdi
   118e2:	e8 2f 34 00 00       	call   14d16 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   118e7:	48 8b 00             	mov    (%rax),%rax
   118ea:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   118ee:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
   118f2:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
   118f9:	48 c7 85 98 fe ff ff 	movq   $0x1,-0x168(%rbp)
   11900:	01 00 00 00 
   11904:	48 8d 45 b7          	lea    -0x49(%rbp),%rax
   11908:	48 89 c7             	mov    %rax,%rdi
   1190b:	e8 66 34 00 00       	call   14d76 <_ZNSaIP13VkSemaphore_TEC1Ev>
   11910:	48 8d 55 b7          	lea    -0x49(%rbp),%rdx
   11914:	48 8b 8d 90 fe ff ff 	mov    -0x170(%rbp),%rcx
   1191b:	48 8b 9d 98 fe ff ff 	mov    -0x168(%rbp),%rbx
   11922:	48 89 ce             	mov    %rcx,%rsi
   11925:	48 89 df             	mov    %rbx,%rdi
   11928:	48 89 df             	mov    %rbx,%rdi
   1192b:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   1192f:	48 89 d1             	mov    %rdx,%rcx
   11932:	48 89 fa             	mov    %rdi,%rdx
   11935:	48 89 c7             	mov    %rax,%rdi
   11938:	e8 71 34 00 00       	call   14dae <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   1193d:	48 8d 45 b7          	lea    -0x49(%rbp),%rax
   11941:	48 89 c7             	mov    %rax,%rdi
   11944:	e8 49 34 00 00       	call   14d92 <_ZNSaIP13VkSemaphore_TED1Ev>
      VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT};
   11949:	c7 45 b8 00 04 00 00 	movl   $0x400,-0x48(%rbp)
   11950:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
   11954:	49 89 c6             	mov    %rax,%r14
   11957:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   1195d:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   11961:	48 89 c7             	mov    %rax,%rdi
   11964:	e8 11 35 00 00       	call   14e7a <_ZNSaIjEC1Ev>
   11969:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
   1196d:	4c 89 f6             	mov    %r14,%rsi
   11970:	4c 89 ff             	mov    %r15,%rdi
   11973:	4c 89 f1             	mov    %r14,%rcx
   11976:	4c 89 fb             	mov    %r15,%rbx
   11979:	48 89 df             	mov    %rbx,%rdi
   1197c:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   11983:	48 89 d1             	mov    %rdx,%rcx
   11986:	48 89 fa             	mov    %rdi,%rdx
   11989:	48 89 c7             	mov    %rax,%rdi
   1198c:	e8 21 35 00 00       	call   14eb2 <_ZNSt6vectorIjSaIjEEC1ESt16initializer_listIjERKS0_>
   11991:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   11995:	48 89 c7             	mov    %rax,%rdi
   11998:	e8 f9 34 00 00       	call   14e96 <_ZNSaIjED1Ev>
      sync.renderFinisedSemaphore[sync.currentFrame]};
   1199d:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   119a4:	48 8d 90 80 01 00 00 	lea    0x180(%rax),%rdx
   119ab:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   119b2:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   119b9:	48 89 c6             	mov    %rax,%rsi
   119bc:	48 89 d7             	mov    %rdx,%rdi
   119bf:	e8 52 33 00 00       	call   14d16 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   119c4:	48 8b 00             	mov    (%rax),%rax
   119c7:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   119cb:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   119cf:	49 89 c4             	mov    %rax,%r12
   119d2:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   119d8:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
   119dc:	48 89 c7             	mov    %rax,%rdi
   119df:	e8 92 33 00 00       	call   14d76 <_ZNSaIP13VkSemaphore_TEC1Ev>
   119e4:	48 8d 55 cb          	lea    -0x35(%rbp),%rdx
   119e8:	4c 89 e6             	mov    %r12,%rsi
   119eb:	4c 89 ef             	mov    %r13,%rdi
   119ee:	4c 89 e1             	mov    %r12,%rcx
   119f1:	4c 89 eb             	mov    %r13,%rbx
   119f4:	48 89 df             	mov    %rbx,%rdi
   119f7:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   119fe:	48 89 d1             	mov    %rdx,%rcx
   11a01:	48 89 fa             	mov    %rdi,%rdx
   11a04:	48 89 c7             	mov    %rax,%rdi
   11a07:	e8 a2 33 00 00       	call   14dae <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   11a0c:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
   11a10:	48 89 c7             	mov    %rax,%rdi
   11a13:	e8 7a 33 00 00       	call   14d92 <_ZNSaIP13VkSemaphore_TED1Ev>
  VkSubmitInfo submitInfo{};
   11a18:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11a1c:	0f 29 85 f0 fe ff ff 	movaps %xmm0,-0x110(%rbp)
   11a23:	0f 29 85 00 ff ff ff 	movaps %xmm0,-0x100(%rbp)
   11a2a:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
   11a31:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
   11a38:	66 0f d6 85 30 ff ff 	movq   %xmm0,-0xd0(%rbp)
   11a3f:	ff 
  submitInfo.sType = VK_STRUCTURE_TYPE_SUBMIT_INFO;
   11a40:	c7 85 f0 fe ff ff 04 	movl   $0x4,-0x110(%rbp)
   11a47:	00 00 00 
  submitInfo.waitSemaphoreCount = static_cast<uint32_t>(waitSemaphores.size());
   11a4a:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   11a4e:	48 89 c7             	mov    %rax,%rdi
   11a51:	e8 28 35 00 00       	call   14f7e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   11a56:	89 85 00 ff ff ff    	mov    %eax,-0x100(%rbp)
  submitInfo.pWaitSemaphores = waitSemaphores.data();
   11a5c:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   11a60:	48 89 c7             	mov    %rax,%rdi
   11a63:	e8 3a 35 00 00       	call   14fa2 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>
   11a68:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
  submitInfo.pWaitDstStageMask = waitStages.data();
   11a6f:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   11a76:	48 89 c7             	mov    %rax,%rdi
   11a79:	e8 48 35 00 00       	call   14fc6 <_ZNSt6vectorIjSaIjEE4dataEv>
   11a7e:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  submitInfo.commandBufferCount = 1;
   11a85:	c7 85 18 ff ff ff 01 	movl   $0x1,-0xe8(%rbp)
   11a8c:	00 00 00 
  submitInfo.pCommandBuffers = &commandBuffers[sync.currentFrame];
   11a8f:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11a96:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
   11a9d:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11aa4:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   11aab:	48 89 c6             	mov    %rax,%rsi
   11aae:	48 89 d7             	mov    %rdx,%rdi
   11ab1:	e8 a0 32 00 00       	call   14d56 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>
   11ab6:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
      static_cast<uint32_t>(signalSemaphores.size());
   11abd:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   11ac4:	48 89 c7             	mov    %rax,%rdi
   11ac7:	e8 b2 34 00 00       	call   14f7e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
  submitInfo.signalSemaphoreCount =
   11acc:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
  submitInfo.pSignalSemaphores = signalSemaphores.data();
   11ad2:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   11ad9:	48 89 c7             	mov    %rax,%rdi
   11adc:	e8 c1 34 00 00       	call   14fa2 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>
   11ae1:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
                    sync.inFlightFence[sync.currentFrame]) != VK_SUCCESS) {
   11ae8:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11aef:	48 8d 90 98 01 00 00 	lea    0x198(%rax),%rdx
   11af6:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11afd:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   11b04:	48 89 c6             	mov    %rax,%rsi
   11b07:	48 89 d7             	mov    %rdx,%rdi
   11b0a:	e8 27 32 00 00       	call   14d36 <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
  if (vkQueueSubmit(queue, submitCount, &submitInfo,
   11b0f:	48 8b 08             	mov    (%rax),%rcx
   11b12:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11b19:	48 8b 40 60          	mov    0x60(%rax),%rax
   11b1d:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
   11b24:	be 01 00 00 00       	mov    $0x1,%esi
   11b29:	48 89 c7             	mov    %rax,%rdi
   11b2c:	e8 4f 2b ff ff       	call   4680 <vkQueueSubmit@plt>
                    sync.inFlightFence[sync.currentFrame]) != VK_SUCCESS) {
   11b31:	85 c0                	test   %eax,%eax
   11b33:	0f 95 c0             	setne  %al
  if (vkQueueSubmit(queue, submitCount, &submitInfo,
   11b36:	84 c0                	test   %al,%al
   11b38:	74 3b                	je     11b75 <_ZN9VulkanApp6renderEv+0x4a1>
    throw std::runtime_error("Failed to submit draw command buffer.");
   11b3a:	bf 10 00 00 00       	mov    $0x10,%edi
   11b3f:	e8 7c 26 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
   11b44:	48 89 c3             	mov    %rax,%rbx
   11b47:	48 8d 05 0a f4 00 00 	lea    0xf40a(%rip),%rax        # 20f58 <_ZZN9VulkanApp6renderEvE11submitCount+0x2c>
   11b4e:	48 89 c6             	mov    %rax,%rsi
   11b51:	48 89 df             	mov    %rbx,%rdi
   11b54:	e8 d7 25 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
   11b59:	48 8b 05 48 f4 01 00 	mov    0x1f448(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   11b60:	48 89 c2             	mov    %rax,%rdx
   11b63:	48 8d 05 d6 f1 01 00 	lea    0x1f1d6(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   11b6a:	48 89 c6             	mov    %rax,%rsi
   11b6d:	48 89 df             	mov    %rbx,%rdi
   11b70:	e8 1b 2d ff ff       	call   4890 <__cxa_throw@plt>
  VkPresentInfoKHR presentInfo{};
   11b75:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11b79:	0f 29 85 b0 fe ff ff 	movaps %xmm0,-0x150(%rbp)
   11b80:	0f 29 85 c0 fe ff ff 	movaps %xmm0,-0x140(%rbp)
   11b87:	0f 29 85 d0 fe ff ff 	movaps %xmm0,-0x130(%rbp)
   11b8e:	0f 29 85 e0 fe ff ff 	movaps %xmm0,-0x120(%rbp)
  presentInfo.sType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR;
   11b95:	c7 85 b0 fe ff ff e9 	movl   $0x3b9acde9,-0x150(%rbp)
   11b9c:	cd 9a 3b 
      static_cast<uint32_t>(signalSemaphores.size());
   11b9f:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   11ba6:	48 89 c7             	mov    %rax,%rdi
   11ba9:	e8 d0 33 00 00       	call   14f7e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
  presentInfo.waitSemaphoreCount =
   11bae:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%rbp)
  presentInfo.pWaitSemaphores = signalSemaphores.data();
   11bb4:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   11bbb:	48 89 c7             	mov    %rax,%rdi
   11bbe:	e8 df 33 00 00       	call   14fa2 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>
   11bc3:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
  presentInfo.swapchainCount = swapchainCount;
   11bca:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11bd1:	8b 80 8c 00 00 00    	mov    0x8c(%rax),%eax
   11bd7:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%rbp)
  presentInfo.pSwapchains = &swapchain.self;
   11bdd:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11be4:	48 83 c0 70          	add    $0x70,%rax
   11be8:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
  presentInfo.pImageIndices = &imageIndex;
   11bef:	48 8d 45 a4          	lea    -0x5c(%rbp),%rax
   11bf3:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  presentInfo.pResults = nullptr;
   11bfa:	48 c7 85 e8 fe ff ff 	movq   $0x0,-0x118(%rbp)
   11c01:	00 00 00 00 
  result = vkQueuePresentKHR(queue, &presentInfo);
   11c05:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11c0c:	48 8b 40 60          	mov    0x60(%rax),%rax
   11c10:	48 8d 95 b0 fe ff ff 	lea    -0x150(%rbp),%rdx
   11c17:	48 89 d6             	mov    %rdx,%rsi
   11c1a:	48 89 c7             	mov    %rax,%rdi
   11c1d:	e8 ce 2b ff ff       	call   47f0 <vkQueuePresentKHR@plt>
   11c22:	89 45 cc             	mov    %eax,-0x34(%rbp)
  if (result == VK_SUBOPTIMAL_KHR || result == VK_ERROR_OUT_OF_DATE_KHR ||
   11c25:	81 7d cc eb cd 9a 3b 	cmpl   $0x3b9acdeb,-0x34(%rbp)
   11c2c:	74 1b                	je     11c49 <_ZN9VulkanApp6renderEv+0x575>
   11c2e:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
   11c35:	74 12                	je     11c49 <_ZN9VulkanApp6renderEv+0x575>
      framebufferResized) {
   11c37:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11c3e:	0f b6 80 18 01 00 00 	movzbl 0x118(%rax),%eax
  if (result == VK_SUBOPTIMAL_KHR || result == VK_ERROR_OUT_OF_DATE_KHR ||
   11c45:	84 c0                	test   %al,%al
   11c47:	74 1f                	je     11c68 <_ZN9VulkanApp6renderEv+0x594>
    framebufferResized = false;
   11c49:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11c50:	c6 80 18 01 00 00 00 	movb   $0x0,0x118(%rax)
    recreateSwapchain();
   11c57:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11c5e:	48 89 c7             	mov    %rax,%rdi
   11c61:	e8 54 ec ff ff       	call   108ba <_ZN9VulkanApp17recreateSwapchainEv>
   11c66:	eb 41                	jmp    11ca9 <_ZN9VulkanApp6renderEv+0x5d5>
  } else if (result != VK_SUCCESS) {
   11c68:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   11c6c:	74 3b                	je     11ca9 <_ZN9VulkanApp6renderEv+0x5d5>
    throw std::runtime_error("Failed to present swapchain image.");
   11c6e:	bf 10 00 00 00       	mov    $0x10,%edi
   11c73:	e8 48 25 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
   11c78:	48 89 c3             	mov    %rax,%rbx
   11c7b:	48 8d 05 fe f2 00 00 	lea    0xf2fe(%rip),%rax        # 20f80 <_ZZN9VulkanApp6renderEvE11submitCount+0x54>
   11c82:	48 89 c6             	mov    %rax,%rsi
   11c85:	48 89 df             	mov    %rbx,%rdi
   11c88:	e8 a3 24 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
   11c8d:	48 8b 05 14 f3 01 00 	mov    0x1f314(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   11c94:	48 89 c2             	mov    %rax,%rdx
   11c97:	48 8d 05 a2 f0 01 00 	lea    0x1f0a2(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   11c9e:	48 89 c6             	mov    %rax,%rsi
   11ca1:	48 89 df             	mov    %rbx,%rdi
   11ca4:	e8 e7 2b ff ff       	call   4890 <__cxa_throw@plt>
  sync.currentFrame = (sync.currentFrame + 1) % maxFramesInFlight;
   11ca9:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11cb0:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   11cb7:	48 8d 50 01          	lea    0x1(%rax),%rdx
   11cbb:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11cc2:	48 8b 88 20 01 00 00 	mov    0x120(%rax),%rcx
   11cc9:	48 89 d0             	mov    %rdx,%rax
   11ccc:	ba 00 00 00 00       	mov    $0x0,%edx
   11cd1:	48 f7 f1             	div    %rcx
   11cd4:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11cdb:	48 89 90 b0 01 00 00 	mov    %rdx,0x1b0(%rax)
}
   11ce2:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   11ce9:	48 89 c7             	mov    %rax,%rdi
   11cec:	e8 45 31 00 00       	call   14e36 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   11cf1:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   11cf8:	48 89 c7             	mov    %rax,%rdi
   11cfb:	e8 3a 32 00 00       	call   14f3a <_ZNSt6vectorIjSaIjEED1Ev>
   11d00:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   11d04:	48 89 c7             	mov    %rax,%rdi
   11d07:	e8 2a 31 00 00       	call   14e36 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   11d0c:	e9 aa 00 00 00       	jmp    11dbb <_ZN9VulkanApp6renderEv+0x6e7>
    throw std::runtime_error("Failed to acquire swapchain image.");
   11d11:	49 89 c4             	mov    %rax,%r12
   11d14:	48 89 df             	mov    %rbx,%rdi
   11d17:	e8 b4 25 ff ff       	call   42d0 <__cxa_free_exception@plt>
   11d1c:	4c 89 e0             	mov    %r12,%rax
   11d1f:	48 89 c7             	mov    %rax,%rdi
   11d22:	e8 d9 2b ff ff       	call   4900 <_Unwind_Resume@plt>
      sync.imageAvailableSemaphore[sync.currentFrame]};
   11d27:	48 89 c3             	mov    %rax,%rbx
   11d2a:	48 8d 45 b7          	lea    -0x49(%rbp),%rax
   11d2e:	48 89 c7             	mov    %rax,%rdi
   11d31:	e8 5c 30 00 00       	call   14d92 <_ZNSaIP13VkSemaphore_TED1Ev>
   11d36:	48 89 d8             	mov    %rbx,%rax
   11d39:	48 89 c7             	mov    %rax,%rdi
   11d3c:	e8 bf 2b ff ff       	call   4900 <_Unwind_Resume@plt>
      VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT};
   11d41:	48 89 c3             	mov    %rax,%rbx
   11d44:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   11d48:	48 89 c7             	mov    %rax,%rdi
   11d4b:	e8 46 31 00 00       	call   14e96 <_ZNSaIjED1Ev>
   11d50:	eb 52                	jmp    11da4 <_ZN9VulkanApp6renderEv+0x6d0>
      sync.renderFinisedSemaphore[sync.currentFrame]};
   11d52:	48 89 c3             	mov    %rax,%rbx
   11d55:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
   11d59:	48 89 c7             	mov    %rax,%rdi
   11d5c:	e8 31 30 00 00       	call   14d92 <_ZNSaIP13VkSemaphore_TED1Ev>
   11d61:	eb 32                	jmp    11d95 <_ZN9VulkanApp6renderEv+0x6c1>
    throw std::runtime_error("Failed to submit draw command buffer.");
   11d63:	49 89 c4             	mov    %rax,%r12
   11d66:	48 89 df             	mov    %rbx,%rdi
   11d69:	e8 62 25 ff ff       	call   42d0 <__cxa_free_exception@plt>
   11d6e:	4c 89 e3             	mov    %r12,%rbx
   11d71:	eb 13                	jmp    11d86 <_ZN9VulkanApp6renderEv+0x6b2>
    throw std::runtime_error("Failed to present swapchain image.");
   11d73:	49 89 c4             	mov    %rax,%r12
   11d76:	48 89 df             	mov    %rbx,%rdi
   11d79:	e8 52 25 ff ff       	call   42d0 <__cxa_free_exception@plt>
   11d7e:	4c 89 e3             	mov    %r12,%rbx
   11d81:	eb 03                	jmp    11d86 <_ZN9VulkanApp6renderEv+0x6b2>
}
   11d83:	48 89 c3             	mov    %rax,%rbx
   11d86:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   11d8d:	48 89 c7             	mov    %rax,%rdi
   11d90:	e8 a1 30 00 00       	call   14e36 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   11d95:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   11d9c:	48 89 c7             	mov    %rax,%rdi
   11d9f:	e8 96 31 00 00       	call   14f3a <_ZNSt6vectorIjSaIjEED1Ev>
   11da4:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   11da8:	48 89 c7             	mov    %rax,%rdi
   11dab:	e8 86 30 00 00       	call   14e36 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   11db0:	48 89 d8             	mov    %rbx,%rax
   11db3:	48 89 c7             	mov    %rax,%rdi
   11db6:	e8 45 2b ff ff       	call   4900 <_Unwind_Resume@plt>
   11dbb:	48 81 c4 48 01 00 00 	add    $0x148,%rsp
   11dc2:	5b                   	pop    %rbx
   11dc3:	41 5c                	pop    %r12
   11dc5:	41 5d                	pop    %r13
   11dc7:	41 5e                	pop    %r14
   11dc9:	41 5f                	pop    %r15
   11dcb:	5d                   	pop    %rbp
   11dcc:	c3                   	ret
   11dcd:	90                   	nop

0000000000011dce <_ZN9VulkanAppC1Ev>:

VulkanApp::VulkanApp() {
   11dce:	55                   	push   %rbp
   11dcf:	48 89 e5             	mov    %rsp,%rbp
   11dd2:	41 57                	push   %r15
   11dd4:	41 56                	push   %r14
   11dd6:	41 55                	push   %r13
   11dd8:	41 54                	push   %r12
   11dda:	53                   	push   %rbx
   11ddb:	48 83 ec 38          	sub    $0x38,%rsp
   11ddf:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   11de3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11de7:	48 8d 58 10          	lea    0x10(%rax),%rbx
   11deb:	48 8d 05 b1 f1 00 00 	lea    0xf1b1(%rip),%rax        # 20fa3 <_ZZN9VulkanApp6renderEvE11submitCount+0x77>
   11df2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   11df6:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11dfa:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   11dfe:	48 c7 45 a8 01 00 00 	movq   $0x1,-0x58(%rbp)
   11e05:	00 
   11e06:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
   11e0a:	48 89 c7             	mov    %rax,%rdi
   11e0d:	e8 86 7b ff ff       	call   9998 <_ZNSaIPKcEC1Ev>
   11e12:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
   11e16:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   11e1a:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
   11e1e:	49 89 f0             	mov    %rsi,%r8
   11e21:	49 89 f9             	mov    %rdi,%r9
   11e24:	48 89 fa             	mov    %rdi,%rdx
   11e27:	48 89 c1             	mov    %rax,%rcx
   11e2a:	4c 89 c6             	mov    %r8,%rsi
   11e2d:	48 89 df             	mov    %rbx,%rdi
   11e30:	e8 8b 1b 00 00       	call   139c0 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   11e35:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
   11e39:	48 89 c7             	mov    %rax,%rdi
   11e3c:	e8 73 7b ff ff       	call   99b4 <_ZNSaIPKcED1Ev>
   11e41:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11e45:	48 8d 58 28          	lea    0x28(%rax),%rbx
   11e49:	4c 8d 35 90 ee 01 00 	lea    0x1ee90(%rip),%r14        # 30ce0 <C.161.0>
   11e50:	41 bf 02 00 00 00    	mov    $0x2,%r15d
   11e56:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
   11e5a:	48 89 c7             	mov    %rax,%rdi
   11e5d:	e8 36 7b ff ff       	call   9998 <_ZNSaIPKcEC1Ev>
   11e62:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
   11e66:	4d 89 f0             	mov    %r14,%r8
   11e69:	4d 89 f9             	mov    %r15,%r9
   11e6c:	4c 89 f6             	mov    %r14,%rsi
   11e6f:	4c 89 ff             	mov    %r15,%rdi
   11e72:	48 89 fa             	mov    %rdi,%rdx
   11e75:	48 89 c1             	mov    %rax,%rcx
   11e78:	4c 89 c6             	mov    %r8,%rsi
   11e7b:	48 89 df             	mov    %rbx,%rdi
   11e7e:	e8 3d 1b 00 00       	call   139c0 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   11e83:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
   11e87:	48 89 c7             	mov    %rax,%rdi
   11e8a:	e8 25 7b ff ff       	call   99b4 <_ZNSaIPKcED1Ev>
   11e8f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11e93:	c7 80 88 00 00 00 00 	movl   $0x0,0x88(%rax)
   11e9a:	00 00 00 
   11e9d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11ea1:	c7 80 8c 00 00 00 01 	movl   $0x1,0x8c(%rax)
   11ea8:	00 00 00 
   11eab:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11eaf:	48 8d 98 90 00 00 00 	lea    0x90(%rax),%rbx
   11eb6:	4c 8d 25 33 ee 01 00 	lea    0x1ee33(%rip),%r12        # 30cf0 <C.162.1>
   11ebd:	41 bd 02 00 00 00    	mov    $0x2,%r13d
   11ec3:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   11ec7:	48 89 c7             	mov    %rax,%rdi
   11eca:	e8 c9 7a ff ff       	call   9998 <_ZNSaIPKcEC1Ev>
   11ecf:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   11ed3:	4d 89 e0             	mov    %r12,%r8
   11ed6:	4d 89 e9             	mov    %r13,%r9
   11ed9:	4c 89 e6             	mov    %r12,%rsi
   11edc:	4c 89 ef             	mov    %r13,%rdi
   11edf:	48 89 fa             	mov    %rdi,%rdx
   11ee2:	48 89 c1             	mov    %rax,%rcx
   11ee5:	4c 89 c6             	mov    %r8,%rsi
   11ee8:	48 89 df             	mov    %rbx,%rdi
   11eeb:	e8 d0 1a 00 00       	call   139c0 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   11ef0:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   11ef4:	48 89 c7             	mov    %rax,%rdi
   11ef7:	e8 b8 7a ff ff       	call   99b4 <_ZNSaIPKcED1Ev>
   11efc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f00:	48 05 a8 00 00 00    	add    $0xa8,%rax
   11f06:	48 89 c7             	mov    %rax,%rdi
   11f09:	e8 6c 18 00 00       	call   1377a <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>
   11f0e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f12:	48 05 c0 00 00 00    	add    $0xc0,%rax
   11f18:	48 89 c7             	mov    %rax,%rdi
   11f1b:	e8 92 18 00 00       	call   137b2 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>
   11f20:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f24:	48 05 d8 00 00 00    	add    $0xd8,%rax
   11f2a:	48 89 c7             	mov    %rax,%rdi
   11f2d:	e8 9c 18 00 00       	call   137ce <_ZN3vkh23GraphicsPipelineWrapperC1Ev>
   11f32:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f36:	c7 80 f8 00 00 00 01 	movl   $0x1,0xf8(%rax)
   11f3d:	00 00 00 
   11f40:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f44:	48 05 00 01 00 00    	add    $0x100,%rax
   11f4a:	48 89 c7             	mov    %rax,%rdi
   11f4d:	e8 ee 18 00 00       	call   13840 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEC1Ev>
   11f52:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f56:	c6 80 18 01 00 00 00 	movb   $0x0,0x118(%rax)
   11f5d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f61:	48 c7 80 20 01 00 00 	movq   $0x2,0x120(%rax)
   11f68:	02 00 00 00 
   11f6c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f70:	48 05 28 01 00 00    	add    $0x128,%rax
   11f76:	48 89 c7             	mov    %rax,%rdi
   11f79:	e8 fa 18 00 00       	call   13878 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1Ev>
   11f7e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f82:	48 05 68 01 00 00    	add    $0x168,%rax
   11f88:	48 89 c7             	mov    %rax,%rdi
   11f8b:	e8 ac 19 00 00       	call   1393c <_ZN9VulkanApp11SyncWrapperC1Ev>
  createWindow();
   11f90:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f94:	48 89 c7             	mov    %rax,%rdi
   11f97:	e8 86 c7 ff ff       	call   e722 <_ZN9VulkanApp12createWindowEv>
  createInstance();
   11f9c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11fa0:	48 89 c7             	mov    %rax,%rdi
   11fa3:	e8 e8 c7 ff ff       	call   e790 <_ZN9VulkanApp14createInstanceEv>
  createDebugMessenger();
   11fa8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11fac:	48 89 c7             	mov    %rax,%rdi
   11faf:	e8 c2 c9 ff ff       	call   e976 <_ZN9VulkanApp20createDebugMessengerEv>
  createSurface();
   11fb4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11fb8:	48 89 c7             	mov    %rax,%rdi
   11fbb:	e8 4a ca ff ff       	call   ea0a <_ZN9VulkanApp13createSurfaceEv>
  createDevice();
   11fc0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11fc4:	48 89 c7             	mov    %rax,%rdi
   11fc7:	e8 96 cc ff ff       	call   ec62 <_ZN9VulkanApp12createDeviceEv>
  createSwapchain();
   11fcc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11fd0:	48 89 c7             	mov    %rax,%rdi
   11fd3:	e8 a8 d8 ff ff       	call   f880 <_ZN9VulkanApp15createSwapchainEv>
  createImageViews();
   11fd8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11fdc:	48 89 c7             	mov    %rax,%rdi
   11fdf:	e8 e2 d8 ff ff       	call   f8c6 <_ZN9VulkanApp16createImageViewsEv>
  createGraphicsPipeline();
   11fe4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11fe8:	48 89 c7             	mov    %rax,%rdi
   11feb:	e8 82 da ff ff       	call   fa72 <_ZN9VulkanApp22createGraphicsPipelineEv>
  createFramebuffers();
   11ff0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11ff4:	48 89 c7             	mov    %rax,%rdi
   11ff7:	e8 ca e6 ff ff       	call   106c6 <_ZN9VulkanApp18createFramebuffersEv>
  createCommandPool();
   11ffc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12000:	48 89 c7             	mov    %rax,%rdi
   12003:	e8 30 eb ff ff       	call   10b38 <_ZN9VulkanApp17createCommandPoolEv>
  createVertexBuffer();
   12008:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1200c:	48 89 c7             	mov    %rax,%rdi
   1200f:	e8 a8 f2 ff ff       	call   112bc <_ZN9VulkanApp18createVertexBufferEv>
  createIndexBuffer();
   12014:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12018:	48 89 c7             	mov    %rax,%rdi
   1201b:	e8 ee f3 ff ff       	call   1140e <_ZN9VulkanApp17createIndexBufferEv>
  createCommandBuffers();
   12020:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12024:	48 89 c7             	mov    %rax,%rdi
   12027:	e8 70 eb ff ff       	call   10b9c <_ZN9VulkanApp20createCommandBuffersEv>
  createSynchronizationObjects();
   1202c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12030:	48 89 c7             	mov    %rax,%rdi
   12033:	e8 1a f5 ff ff       	call   11552 <_ZN9VulkanApp28createSynchronizationObjectsEv>
}
   12038:	e9 d9 00 00 00       	jmp    12116 <_ZN9VulkanAppC1Ev+0x348>
VulkanApp::VulkanApp() {
   1203d:	48 89 c3             	mov    %rax,%rbx
   12040:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
   12044:	48 89 c7             	mov    %rax,%rdi
   12047:	e8 68 79 ff ff       	call   99b4 <_ZNSaIPKcED1Ev>
   1204c:	48 89 d8             	mov    %rbx,%rax
   1204f:	48 89 c7             	mov    %rax,%rdi
   12052:	e8 a9 28 ff ff       	call   4900 <_Unwind_Resume@plt>
   12057:	48 89 c3             	mov    %rax,%rbx
   1205a:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
   1205e:	48 89 c7             	mov    %rax,%rdi
   12061:	e8 4e 79 ff ff       	call   99b4 <_ZNSaIPKcED1Ev>
   12066:	e9 90 00 00 00       	jmp    120fb <_ZN9VulkanAppC1Ev+0x32d>
   1206b:	48 89 c3             	mov    %rax,%rbx
   1206e:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   12072:	48 89 c7             	mov    %rax,%rdi
   12075:	e8 3a 79 ff ff       	call   99b4 <_ZNSaIPKcED1Ev>
   1207a:	eb 6f                	jmp    120eb <_ZN9VulkanAppC1Ev+0x31d>
}
   1207c:	48 89 c3             	mov    %rax,%rbx
   1207f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12083:	48 05 68 01 00 00    	add    $0x168,%rax
   12089:	48 89 c7             	mov    %rax,%rdi
   1208c:	e8 f3 18 00 00       	call   13984 <_ZN9VulkanApp11SyncWrapperD1Ev>
   12091:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12095:	48 05 28 01 00 00    	add    $0x128,%rax
   1209b:	48 89 c7             	mov    %rax,%rdi
   1209e:	e8 bf 46 ff ff       	call   6762 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
   120a3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   120a7:	48 05 00 01 00 00    	add    $0x100,%rax
   120ad:	48 89 c7             	mov    %rax,%rdi
   120b0:	e8 65 30 00 00       	call   1511a <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>
   120b5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   120b9:	48 05 c0 00 00 00    	add    $0xc0,%rax
   120bf:	48 89 c7             	mov    %rax,%rdi
   120c2:	e8 13 83 ff ff       	call   a3da <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   120c7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   120cb:	48 05 a8 00 00 00    	add    $0xa8,%rax
   120d1:	48 89 c7             	mov    %rax,%rdi
   120d4:	e8 61 28 00 00       	call   1493a <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
   120d9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   120dd:	48 05 90 00 00 00    	add    $0x90,%rax
   120e3:	48 89 c7             	mov    %rax,%rdi
   120e6:	e8 5d 19 00 00       	call   13a48 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::VulkanApp() {
   120eb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   120ef:	48 83 c0 28          	add    $0x28,%rax
}
   120f3:	48 89 c7             	mov    %rax,%rdi
   120f6:	e8 4d 19 00 00       	call   13a48 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   120fb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   120ff:	48 83 c0 10          	add    $0x10,%rax
   12103:	48 89 c7             	mov    %rax,%rdi
   12106:	e8 3d 19 00 00       	call   13a48 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   1210b:	48 89 d8             	mov    %rbx,%rax
   1210e:	48 89 c7             	mov    %rax,%rdi
   12111:	e8 ea 27 ff ff       	call   4900 <_Unwind_Resume@plt>
   12116:	48 83 c4 38          	add    $0x38,%rsp
   1211a:	5b                   	pop    %rbx
   1211b:	41 5c                	pop    %r12
   1211d:	41 5d                	pop    %r13
   1211f:	41 5e                	pop    %r14
   12121:	41 5f                	pop    %r15
   12123:	5d                   	pop    %rbp
   12124:	c3                   	ret
   12125:	90                   	nop

0000000000012126 <_ZN9VulkanAppD1Ev>:

VulkanApp::~VulkanApp() {
   12126:	55                   	push   %rbp
   12127:	48 89 e5             	mov    %rsp,%rbp
   1212a:	48 83 ec 20          	sub    $0x20,%rsp
   1212e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  cleanupSwapchain();
   12132:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12136:	48 89 c7             	mov    %rax,%rdi
   12139:	e8 2e e8 ff ff       	call   1096c <_ZN9VulkanApp16cleanupSwapchainEv>
  vkDestroyBuffer(device, indexBuffer, nullptr);
   1213e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12142:	48 8b 88 58 01 00 00 	mov    0x158(%rax),%rcx
   12149:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1214d:	48 8b 40 50          	mov    0x50(%rax),%rax
   12151:	ba 00 00 00 00       	mov    $0x0,%edx
   12156:	48 89 ce             	mov    %rcx,%rsi
   12159:	48 89 c7             	mov    %rax,%rdi
   1215c:	e8 6f 20 ff ff       	call   41d0 <vkDestroyBuffer@plt>
  vkFreeMemory(device, indexBufferMemory, nullptr);
   12161:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12165:	48 8b 88 60 01 00 00 	mov    0x160(%rax),%rcx
   1216c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12170:	48 8b 40 50          	mov    0x50(%rax),%rax
   12174:	ba 00 00 00 00       	mov    $0x0,%edx
   12179:	48 89 ce             	mov    %rcx,%rsi
   1217c:	48 89 c7             	mov    %rax,%rdi
   1217f:	e8 7c 22 ff ff       	call   4400 <vkFreeMemory@plt>
  vkDestroyBuffer(device, vertexBuffer, nullptr);
   12184:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12188:	48 8b 88 48 01 00 00 	mov    0x148(%rax),%rcx
   1218f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12193:	48 8b 40 50          	mov    0x50(%rax),%rax
   12197:	ba 00 00 00 00       	mov    $0x0,%edx
   1219c:	48 89 ce             	mov    %rcx,%rsi
   1219f:	48 89 c7             	mov    %rax,%rdi
   121a2:	e8 29 20 ff ff       	call   41d0 <vkDestroyBuffer@plt>
  vkFreeMemory(device, vertexBufferMemory, nullptr);
   121a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   121ab:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   121b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   121b6:	48 8b 40 50          	mov    0x50(%rax),%rax
   121ba:	ba 00 00 00 00       	mov    $0x0,%edx
   121bf:	48 89 ce             	mov    %rcx,%rsi
   121c2:	48 89 c7             	mov    %rax,%rdi
   121c5:	e8 36 22 ff ff       	call   4400 <vkFreeMemory@plt>
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   121ca:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   121d1:	00 
   121d2:	e9 a4 00 00 00       	jmp    1227b <_ZN9VulkanAppD1Ev+0x155>
    vkh::destroySemaphore(device, sync.imageAvailableSemaphore[i]);
   121d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   121db:	48 8d 90 68 01 00 00 	lea    0x168(%rax),%rdx
   121e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121e6:	48 89 c6             	mov    %rax,%rsi
   121e9:	48 89 d7             	mov    %rdx,%rdi
   121ec:	e8 25 2b 00 00       	call   14d16 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   121f1:	48 8b 08             	mov    (%rax),%rcx
   121f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   121f8:	48 8b 40 50          	mov    0x50(%rax),%rax
   121fc:	ba 00 00 00 00       	mov    $0x0,%edx
   12201:	48 89 ce             	mov    %rcx,%rsi
   12204:	48 89 c7             	mov    %rax,%rdi
   12207:	e8 f5 61 ff ff       	call   8401 <_ZN3vkh16destroySemaphoreEP10VkDevice_TP13VkSemaphore_TPK21VkAllocationCallbacks>
    vkh::destroySemaphore(device, sync.renderFinisedSemaphore[i]);
   1220c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12210:	48 8d 90 80 01 00 00 	lea    0x180(%rax),%rdx
   12217:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1221b:	48 89 c6             	mov    %rax,%rsi
   1221e:	48 89 d7             	mov    %rdx,%rdi
   12221:	e8 f0 2a 00 00       	call   14d16 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   12226:	48 8b 08             	mov    (%rax),%rcx
   12229:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1222d:	48 8b 40 50          	mov    0x50(%rax),%rax
   12231:	ba 00 00 00 00       	mov    $0x0,%edx
   12236:	48 89 ce             	mov    %rcx,%rsi
   12239:	48 89 c7             	mov    %rax,%rdi
   1223c:	e8 c0 61 ff ff       	call   8401 <_ZN3vkh16destroySemaphoreEP10VkDevice_TP13VkSemaphore_TPK21VkAllocationCallbacks>
    vkh::destroyFence(device, sync.inFlightFence[i]);
   12241:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12245:	48 8d 90 98 01 00 00 	lea    0x198(%rax),%rdx
   1224c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12250:	48 89 c6             	mov    %rax,%rsi
   12253:	48 89 d7             	mov    %rdx,%rdi
   12256:	e8 db 2a 00 00       	call   14d36 <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
   1225b:	48 8b 08             	mov    (%rax),%rcx
   1225e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12262:	48 8b 40 50          	mov    0x50(%rax),%rax
   12266:	ba 00 00 00 00       	mov    $0x0,%edx
   1226b:	48 89 ce             	mov    %rcx,%rsi
   1226e:	48 89 c7             	mov    %rax,%rdi
   12271:	e8 b9 61 ff ff       	call   842f <_ZN3vkh12destroyFenceEP10VkDevice_TP9VkFence_TPK21VkAllocationCallbacks>
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   12276:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
   1227b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1227f:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   12286:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   1228a:	0f 82 47 ff ff ff    	jb     121d7 <_ZN9VulkanAppD1Ev+0xb1>
  }
  vkh::destroyCommandPool(device, commandPool);
   12290:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12294:	48 8b 88 40 01 00 00 	mov    0x140(%rax),%rcx
   1229b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1229f:	48 8b 40 50          	mov    0x50(%rax),%rax
   122a3:	ba 00 00 00 00       	mov    $0x0,%edx
   122a8:	48 89 ce             	mov    %rcx,%rsi
   122ab:	48 89 c7             	mov    %rax,%rdi
   122ae:	e8 20 61 ff ff       	call   83d3 <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>
  vkh::destroyDevice(device);
   122b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   122b7:	48 8b 40 50          	mov    0x50(%rax),%rax
   122bb:	be 00 00 00 00       	mov    $0x0,%esi
   122c0:	48 89 c7             	mov    %rax,%rdi
   122c3:	e8 e6 5e ff ff       	call   81ae <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>
  vkh::destroyDebugUtilsMessengerEXT(instance, debugMessenger, nullptr);
   122c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   122cc:	48 8b 48 40          	mov    0x40(%rax),%rcx
   122d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   122d4:	48 8b 40 08          	mov    0x8(%rax),%rax
   122d8:	ba 00 00 00 00       	mov    $0x0,%edx
   122dd:	48 89 ce             	mov    %rcx,%rsi
   122e0:	48 89 c7             	mov    %rax,%rdi
   122e3:	e8 d1 bf ff ff       	call   e2b9 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
  vkh::destroySurface(instance, surface);
   122e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   122ec:	48 8b 48 48          	mov    0x48(%rax),%rcx
   122f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   122f4:	48 8b 40 08          	mov    0x8(%rax),%rax
   122f8:	ba 00 00 00 00       	mov    $0x0,%edx
   122fd:	48 89 ce             	mov    %rcx,%rsi
   12300:	48 89 c7             	mov    %rax,%rdi
   12303:	e8 cc 5e ff ff       	call   81d4 <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>
  vkh::destroyInstance(instance, nullptr);
   12308:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1230c:	48 8b 40 08          	mov    0x8(%rax),%rax
   12310:	be 00 00 00 00       	mov    $0x0,%esi
   12315:	48 89 c7             	mov    %rax,%rdi
   12318:	e8 6b 5e ff ff       	call   8188 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>
  vkh::destroyWindow(window);
   1231d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12321:	48 8b 00             	mov    (%rax),%rax
   12324:	48 89 c7             	mov    %rax,%rdi
   12327:	e8 41 5e ff ff       	call   816d <_ZN3vkh13destroyWindowEP10GLFWwindow>
  glfwTerminate();
   1232c:	e8 8f 21 ff ff       	call   44c0 <glfwTerminate@plt>
}
   12331:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12335:	48 05 68 01 00 00    	add    $0x168,%rax
   1233b:	48 89 c7             	mov    %rax,%rdi
   1233e:	e8 41 16 00 00       	call   13984 <_ZN9VulkanApp11SyncWrapperD1Ev>
   12343:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12347:	48 05 28 01 00 00    	add    $0x128,%rax
   1234d:	48 89 c7             	mov    %rax,%rdi
   12350:	e8 0d 44 ff ff       	call   6762 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
   12355:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12359:	48 05 00 01 00 00    	add    $0x100,%rax
   1235f:	48 89 c7             	mov    %rax,%rdi
   12362:	e8 b3 2d 00 00       	call   1511a <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>
   12367:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1236b:	48 05 c0 00 00 00    	add    $0xc0,%rax
   12371:	48 89 c7             	mov    %rax,%rdi
   12374:	e8 61 80 ff ff       	call   a3da <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   12379:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1237d:	48 05 a8 00 00 00    	add    $0xa8,%rax
   12383:	48 89 c7             	mov    %rax,%rdi
   12386:	e8 af 25 00 00       	call   1493a <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
   1238b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1238f:	48 05 90 00 00 00    	add    $0x90,%rax
   12395:	48 89 c7             	mov    %rax,%rdi
   12398:	e8 ab 16 00 00       	call   13a48 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::~VulkanApp() {
   1239d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   123a1:	48 83 c0 28          	add    $0x28,%rax
}
   123a5:	48 89 c7             	mov    %rax,%rdi
   123a8:	e8 9b 16 00 00       	call   13a48 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   123ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   123b1:	48 83 c0 10          	add    $0x10,%rax
   123b5:	48 89 c7             	mov    %rax,%rdi
   123b8:	e8 8b 16 00 00       	call   13a48 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   123bd:	90                   	nop
   123be:	c9                   	leave
   123bf:	c3                   	ret

00000000000123c0 <_ZN9VulkanApp3runEv>:

void VulkanApp::run() {
   123c0:	55                   	push   %rbp
   123c1:	48 89 e5             	mov    %rsp,%rbp
   123c4:	48 83 ec 10          	sub    $0x10,%rsp
   123c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  while (!glfwWindowShouldClose(window)) {
   123cc:	eb 11                	jmp    123df <_ZN9VulkanApp3runEv+0x1f>
    glfwPollEvents();
   123ce:	e8 6d 20 ff ff       	call   4440 <glfwPollEvents@plt>
    render();
   123d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123d7:	48 89 c7             	mov    %rax,%rdi
   123da:	e8 f5 f2 ff ff       	call   116d4 <_ZN9VulkanApp6renderEv>
  while (!glfwWindowShouldClose(window)) {
   123df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123e3:	48 8b 00             	mov    (%rax),%rax
   123e6:	48 89 c7             	mov    %rax,%rdi
   123e9:	e8 62 25 ff ff       	call   4950 <glfwWindowShouldClose@plt>
   123ee:	85 c0                	test   %eax,%eax
   123f0:	0f 94 c0             	sete   %al
   123f3:	84 c0                	test   %al,%al
   123f5:	75 d7                	jne    123ce <_ZN9VulkanApp3runEv+0xe>
  }
  vkDeviceWaitIdle(device);
   123f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123fb:	48 8b 40 50          	mov    0x50(%rax),%rax
   123ff:	48 89 c7             	mov    %rax,%rdi
   12402:	e8 b9 1c ff ff       	call   40c0 <vkDeviceWaitIdle@plt>
}
   12407:	90                   	nop
   12408:	c9                   	leave
   12409:	c3                   	ret

000000000001240a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void VulkanApp::writeInfo(std::string filePath) {
   1240a:	55                   	push   %rbp
   1240b:	48 89 e5             	mov    %rsp,%rbp
   1240e:	41 54                	push   %r12
   12410:	53                   	push   %rbx
   12411:	48 81 ec c0 0e 00 00 	sub    $0xec0,%rsp
   12418:	48 89 bd 38 f1 ff ff 	mov    %rdi,-0xec8(%rbp)
   1241f:	48 89 b5 30 f1 ff ff 	mov    %rsi,-0xed0(%rbp)
  std::fstream fs;
   12426:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1242d:	48 89 c7             	mov    %rax,%rdi
   12430:	e8 9b 21 ff ff       	call   45d0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>
  fs.open(filePath);
   12435:	be 10 00 00 00       	mov    $0x10,%esi
   1243a:	bf 08 00 00 00       	mov    $0x8,%edi
   1243f:	e8 19 54 ff ff       	call   785d <_ZStorSt13_Ios_OpenmodeS_>
   12444:	89 c2                	mov    %eax,%edx
   12446:	48 8b 8d 30 f1 ff ff 	mov    -0xed0(%rbp),%rcx
   1244d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12454:	48 89 ce             	mov    %rcx,%rsi
   12457:	48 89 c7             	mov    %rax,%rdi
   1245a:	e8 81 22 ff ff       	call   46e0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!fs.is_open()) {
   1245f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12466:	48 89 c7             	mov    %rax,%rdi
   12469:	e8 42 24 ff ff       	call   48b0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>
   1246e:	83 f0 01             	xor    $0x1,%eax
   12471:	84 c0                	test   %al,%al
   12473:	0f 84 97 00 00 00    	je     12510 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x106>
    throw std::runtime_error("Failed to open " + filePath + '\n');
   12479:	bf 10 00 00 00       	mov    $0x10,%edi
   1247e:	e8 3d 1d ff ff       	call   41c0 <__cxa_allocate_exception@plt>
   12483:	48 89 c3             	mov    %rax,%rbx
   12486:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   1248d:	48 8b 95 30 f1 ff ff 	mov    -0xed0(%rbp),%rdx
   12494:	48 8d 0d 1b eb 00 00 	lea    0xeb1b(%rip),%rcx        # 20fb6 <_ZZN9VulkanApp6renderEvE11submitCount+0x8a>
   1249b:	48 89 ce             	mov    %rcx,%rsi
   1249e:	48 89 c7             	mov    %rax,%rdi
   124a1:	e8 0e 54 ff ff       	call   78b4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
   124a6:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   124ad:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
   124b4:	ba 0a 00 00 00       	mov    $0xa,%edx
   124b9:	48 89 ce             	mov    %rcx,%rsi
   124bc:	48 89 c7             	mov    %rax,%rdi
   124bf:	e8 0e 2e 00 00       	call   152d2 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>
   124c4:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   124cb:	48 89 c6             	mov    %rax,%rsi
   124ce:	48 89 df             	mov    %rbx,%rdi
   124d1:	e8 6a 23 ff ff       	call   4840 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
   124d6:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   124dd:	48 89 c7             	mov    %rax,%rdi
   124e0:	e8 8b 1d ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   124e5:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   124ec:	48 89 c7             	mov    %rax,%rdi
   124ef:	e8 7c 1d ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   124f4:	48 8b 05 ad ea 01 00 	mov    0x1eaad(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   124fb:	48 89 c2             	mov    %rax,%rdx
   124fe:	48 8d 05 3b e8 01 00 	lea    0x1e83b(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   12505:	48 89 c6             	mov    %rax,%rsi
   12508:	48 89 df             	mov    %rbx,%rdi
   1250b:	e8 80 23 ff ff       	call   4890 <__cxa_throw@plt>
  }

  fs << "1. Instance extensions:\n";
   12510:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12517:	48 83 c0 10          	add    $0x10,%rax
   1251b:	48 8d 15 a4 ea 00 00 	lea    0xeaa4(%rip),%rdx        # 20fc6 <_ZZN9VulkanApp6renderEvE11submitCount+0x9a>
   12522:	48 89 d6             	mov    %rdx,%rsi
   12525:	48 89 c7             	mov    %rax,%rdi
   12528:	e8 43 1f ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t1.1 Available:\n";
   1252d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12534:	48 83 c0 10          	add    $0x10,%rax
   12538:	48 8d 15 a0 ea 00 00 	lea    0xeaa0(%rip),%rdx        # 20fdf <_ZZN9VulkanApp6renderEvE11submitCount+0xb3>
   1253f:	48 89 d6             	mov    %rdx,%rsi
   12542:	48 89 c7             	mov    %rax,%rdi
   12545:	e8 26 1f ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceExtensions = vkh::getAvailableInstanceExtensionList();
   1254a:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   12551:	be 00 00 00 00       	mov    $0x0,%esi
   12556:	48 89 c7             	mov    %rax,%rdi
   12559:	e8 94 60 ff ff       	call   85f2 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>
  for (const auto &extension : availableInstanceExtensions) {
   1255e:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   12565:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   12569:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1256d:	48 89 c7             	mov    %rax,%rdi
   12570:	e8 b9 19 00 00       	call   13f2e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
   12575:	48 89 85 68 f9 ff ff 	mov    %rax,-0x698(%rbp)
   1257c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12580:	48 89 c7             	mov    %rax,%rdi
   12583:	e8 cc 19 00 00       	call   13f54 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
   12588:	48 89 85 60 f9 ff ff 	mov    %rax,-0x6a0(%rbp)
   1258f:	eb 64                	jmp    125f5 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1eb>
   12591:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
   12598:	48 89 c7             	mov    %rax,%rdi
   1259b:	e8 3c 1a 00 00       	call   13fdc <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
   125a0:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    fs << "\t\t" << extension.extensionName << '\n';
   125a7:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   125ae:	48 83 c0 10          	add    $0x10,%rax
   125b2:	48 8d 15 37 ea 00 00 	lea    0xea37(%rip),%rdx        # 20ff0 <_ZZN9VulkanApp6renderEvE11submitCount+0xc4>
   125b9:	48 89 d6             	mov    %rdx,%rsi
   125bc:	48 89 c7             	mov    %rax,%rdi
   125bf:	e8 ac 1e ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   125c4:	48 89 c2             	mov    %rax,%rdx
   125c7:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   125ce:	48 89 c6             	mov    %rax,%rsi
   125d1:	48 89 d7             	mov    %rdx,%rdi
   125d4:	e8 97 1e ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   125d9:	be 0a 00 00 00       	mov    $0xa,%esi
   125de:	48 89 c7             	mov    %rax,%rdi
   125e1:	e8 ba 1f ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extension : availableInstanceExtensions) {
   125e6:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
   125ed:	48 89 c7             	mov    %rax,%rdi
   125f0:	e8 c3 19 00 00       	call   13fb8 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
   125f5:	48 8d 95 60 f9 ff ff 	lea    -0x6a0(%rbp),%rdx
   125fc:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
   12603:	48 89 d6             	mov    %rdx,%rsi
   12606:	48 89 c7             	mov    %rax,%rdi
   12609:	e8 6f 19 00 00       	call   13f7d <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   1260e:	84 c0                	test   %al,%al
   12610:	0f 85 7b ff ff ff    	jne    12591 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x187>
  }
  fs << "\t1.2 Required:\n";
   12616:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1261d:	48 83 c0 10          	add    $0x10,%rax
   12621:	48 8d 15 cb e9 00 00 	lea    0xe9cb(%rip),%rdx        # 20ff3 <_ZZN9VulkanApp6renderEvE11submitCount+0xc7>
   12628:	48 89 d6             	mov    %rdx,%rsi
   1262b:	48 89 c7             	mov    %rax,%rdi
   1262e:	e8 3d 1e ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &extensionName : instanceExtensions) {
   12633:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   1263a:	48 83 c0 10          	add    $0x10,%rax
   1263e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   12642:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12646:	48 89 c7             	mov    %rax,%rdi
   12649:	e8 3e 14 00 00       	call   13a8c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   1264e:	48 89 85 58 f9 ff ff 	mov    %rax,-0x6a8(%rbp)
   12655:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12659:	48 89 c7             	mov    %rax,%rdi
   1265c:	e8 51 14 00 00       	call   13ab2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   12661:	48 89 85 50 f9 ff ff 	mov    %rax,-0x6b0(%rbp)
   12668:	eb 67                	jmp    126d1 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c7>
   1266a:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
   12671:	48 89 c7             	mov    %rax,%rdi
   12674:	e8 bd 14 00 00       	call   13b36 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
   12679:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    fs << "\t\t" << extensionName << '\n';
   12680:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12687:	48 83 c0 10          	add    $0x10,%rax
   1268b:	48 8d 15 5e e9 00 00 	lea    0xe95e(%rip),%rdx        # 20ff0 <_ZZN9VulkanApp6renderEvE11submitCount+0xc4>
   12692:	48 89 d6             	mov    %rdx,%rsi
   12695:	48 89 c7             	mov    %rax,%rdi
   12698:	e8 d3 1d ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   1269d:	48 89 c2             	mov    %rax,%rdx
   126a0:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   126a7:	48 8b 00             	mov    (%rax),%rax
   126aa:	48 89 c6             	mov    %rax,%rsi
   126ad:	48 89 d7             	mov    %rdx,%rdi
   126b0:	e8 bb 1d ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   126b5:	be 0a 00 00 00       	mov    $0xa,%esi
   126ba:	48 89 c7             	mov    %rax,%rdi
   126bd:	e8 de 1e ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extensionName : instanceExtensions) {
   126c2:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
   126c9:	48 89 c7             	mov    %rax,%rdi
   126cc:	e8 45 14 00 00       	call   13b16 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
   126d1:	48 8d 95 50 f9 ff ff 	lea    -0x6b0(%rbp),%rdx
   126d8:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
   126df:	48 89 d6             	mov    %rdx,%rsi
   126e2:	48 89 c7             	mov    %rax,%rdi
   126e5:	e8 f1 13 00 00       	call   13adb <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   126ea:	84 c0                	test   %al,%al
   126ec:	0f 85 78 ff ff ff    	jne    1266a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x260>
  }
  fs << '\n';
   126f2:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   126f9:	48 83 c0 10          	add    $0x10,%rax
   126fd:	be 0a 00 00 00       	mov    $0xa,%esi
   12702:	48 89 c7             	mov    %rax,%rdi
   12705:	e8 96 1e ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "2. Instance layers:\n";
   1270a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12711:	48 83 c0 10          	add    $0x10,%rax
   12715:	48 8d 15 e7 e8 00 00 	lea    0xe8e7(%rip),%rdx        # 21003 <_ZZN9VulkanApp6renderEvE11submitCount+0xd7>
   1271c:	48 89 d6             	mov    %rdx,%rsi
   1271f:	48 89 c7             	mov    %rax,%rdi
   12722:	e8 49 1d ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t2.1 Available:\n";
   12727:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1272e:	48 83 c0 10          	add    $0x10,%rax
   12732:	48 8d 15 df e8 00 00 	lea    0xe8df(%rip),%rdx        # 21018 <_ZZN9VulkanApp6renderEvE11submitCount+0xec>
   12739:	48 89 d6             	mov    %rdx,%rsi
   1273c:	48 89 c7             	mov    %rax,%rdi
   1273f:	e8 2c 1d ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceLayers = vkh::getAvailableInstanceLayerList();
   12744:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   1274b:	48 89 c7             	mov    %rax,%rdi
   1274e:	e8 39 62 ff ff       	call   898c <_ZN3vkh29getAvailableInstanceLayerListEv>
  for (const auto &layer : availableInstanceLayers) {
   12753:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   1275a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1275e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12762:	48 89 c7             	mov    %rax,%rdi
   12765:	e8 1c bd ff ff       	call   e486 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
   1276a:	48 89 85 48 f9 ff ff 	mov    %rax,-0x6b8(%rbp)
   12771:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12775:	48 89 c7             	mov    %rax,%rdi
   12778:	e8 2f bd ff ff       	call   e4ac <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
   1277d:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
   12784:	eb 5e                	jmp    127e4 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3da>
   12786:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
   1278d:	48 89 c7             	mov    %rax,%rdi
   12790:	e8 9f bd ff ff       	call   e534 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
   12795:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    fs << "\t\t" << layer.layerName << '\n';
   12799:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   127a0:	48 83 c0 10          	add    $0x10,%rax
   127a4:	48 8d 15 45 e8 00 00 	lea    0xe845(%rip),%rdx        # 20ff0 <_ZZN9VulkanApp6renderEvE11submitCount+0xc4>
   127ab:	48 89 d6             	mov    %rdx,%rsi
   127ae:	48 89 c7             	mov    %rax,%rdi
   127b1:	e8 ba 1c ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   127b6:	48 89 c2             	mov    %rax,%rdx
   127b9:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   127bd:	48 89 c6             	mov    %rax,%rsi
   127c0:	48 89 d7             	mov    %rdx,%rdi
   127c3:	e8 a8 1c ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   127c8:	be 0a 00 00 00       	mov    $0xa,%esi
   127cd:	48 89 c7             	mov    %rax,%rdi
   127d0:	e8 cb 1d ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : availableInstanceLayers) {
   127d5:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
   127dc:	48 89 c7             	mov    %rax,%rdi
   127df:	e8 2c bd ff ff       	call   e510 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
   127e4:	48 8d 95 40 f9 ff ff 	lea    -0x6c0(%rbp),%rdx
   127eb:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
   127f2:	48 89 d6             	mov    %rdx,%rsi
   127f5:	48 89 c7             	mov    %rax,%rdi
   127f8:	e8 d8 bc ff ff       	call   e4d5 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   127fd:	84 c0                	test   %al,%al
   127ff:	75 85                	jne    12786 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x37c>
  }
  fs << "\t2.2 Required:\n";
   12801:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12808:	48 83 c0 10          	add    $0x10,%rax
   1280c:	48 8d 15 16 e8 00 00 	lea    0xe816(%rip),%rdx        # 21029 <_ZZN9VulkanApp6renderEvE11submitCount+0xfd>
   12813:	48 89 d6             	mov    %rdx,%rsi
   12816:	48 89 c7             	mov    %rax,%rdi
   12819:	e8 52 1c ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &layer : instanceLayers) {
   1281e:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   12825:	48 83 c0 28          	add    $0x28,%rax
   12829:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1282d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   12831:	48 89 c7             	mov    %rax,%rdi
   12834:	e8 e3 2a 00 00       	call   1531c <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
   12839:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
   12840:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   12844:	48 89 c7             	mov    %rax,%rdi
   12847:	e8 f6 2a 00 00       	call   15342 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
   1284c:	48 89 85 30 f9 ff ff 	mov    %rax,-0x6d0(%rbp)
   12853:	eb 61                	jmp    128b6 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4ac>
   12855:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
   1285c:	48 89 c7             	mov    %rax,%rdi
   1285f:	e8 62 2b 00 00       	call   153c6 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
   12864:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    fs << "\t\t" << layer << '\n';
   12868:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1286f:	48 83 c0 10          	add    $0x10,%rax
   12873:	48 8d 15 76 e7 00 00 	lea    0xe776(%rip),%rdx        # 20ff0 <_ZZN9VulkanApp6renderEvE11submitCount+0xc4>
   1287a:	48 89 d6             	mov    %rdx,%rsi
   1287d:	48 89 c7             	mov    %rax,%rdi
   12880:	e8 eb 1b ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12885:	48 89 c2             	mov    %rax,%rdx
   12888:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1288c:	48 8b 00             	mov    (%rax),%rax
   1288f:	48 89 c6             	mov    %rax,%rsi
   12892:	48 89 d7             	mov    %rdx,%rdi
   12895:	e8 d6 1b ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   1289a:	be 0a 00 00 00       	mov    $0xa,%esi
   1289f:	48 89 c7             	mov    %rax,%rdi
   128a2:	e8 f9 1c ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : instanceLayers) {
   128a7:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
   128ae:	48 89 c7             	mov    %rax,%rdi
   128b1:	e8 f0 2a 00 00       	call   153a6 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
   128b6:	48 8d 95 30 f9 ff ff 	lea    -0x6d0(%rbp),%rdx
   128bd:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
   128c4:	48 89 d6             	mov    %rdx,%rsi
   128c7:	48 89 c7             	mov    %rax,%rdi
   128ca:	e8 9c 2a 00 00       	call   1536b <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
   128cf:	84 c0                	test   %al,%al
   128d1:	75 82                	jne    12855 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x44b>
  }
  fs << '\n';
   128d3:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   128da:	48 83 c0 10          	add    $0x10,%rax
   128de:	be 0a 00 00 00       	mov    $0xa,%esi
   128e3:	48 89 c7             	mov    %rax,%rdi
   128e6:	e8 b5 1c ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "3. Physical devices:\n";
   128eb:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   128f2:	48 83 c0 10          	add    $0x10,%rax
   128f6:	48 8d 15 3c e7 00 00 	lea    0xe73c(%rip),%rdx        # 21039 <_ZZN9VulkanApp6renderEvE11submitCount+0x10d>
   128fd:	48 89 d6             	mov    %rdx,%rsi
   12900:	48 89 c7             	mov    %rax,%rdi
   12903:	e8 68 1b ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
   12908:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   1290f:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12913:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   1291a:	48 89 d6             	mov    %rdx,%rsi
   1291d:	48 89 c7             	mov    %rax,%rdi
   12920:	e8 13 61 ff ff       	call   8a38 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  auto selectedDeviceProperties =
      vkh::getPhysicalDevicePropertyList(physicalDevice);
   12925:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   1292c:	48 8b 50 58          	mov    0x58(%rax),%rdx
   12930:	48 8d 85 70 f9 ff ff 	lea    -0x690(%rbp),%rax
   12937:	48 89 d6             	mov    %rdx,%rsi
   1293a:	48 89 c7             	mov    %rax,%rdi
   1293d:	e8 65 62 ff ff       	call   8ba7 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  size_t index = 1;
   12942:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
   12949:	00 
  size_t selectedDeviceIndex = 0;
   1294a:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   12951:	00 
  for (const auto &physDev : physicalDeviceList) {
   12952:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   12959:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1295d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12961:	48 89 c7             	mov    %rax,%rdi
   12964:	e8 f3 13 00 00       	call   13d5c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
   12969:	48 89 85 28 f9 ff ff 	mov    %rax,-0x6d8(%rbp)
   12970:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12974:	48 89 c7             	mov    %rax,%rdi
   12977:	e8 06 14 00 00       	call   13d82 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
   1297c:	48 89 85 20 f9 ff ff 	mov    %rax,-0x6e0(%rbp)
   12983:	e9 c7 06 00 00       	jmp    1304f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc45>
   12988:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
   1298f:	48 89 c7             	mov    %rax,%rdi
   12992:	e8 6f 14 00 00       	call   13e06 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
   12997:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    std::string selectStr = "";
   1299b:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   129a2:	48 89 c7             	mov    %rax,%rdi
   129a5:	e8 66 1f ff ff       	call   4910 <_ZNSaIcEC1Ev@plt>
   129aa:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
   129b1:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   129b8:	48 8d 0d 90 e6 00 00 	lea    0xe690(%rip),%rcx        # 2104f <_ZZN9VulkanApp6renderEvE11submitCount+0x123>
   129bf:	48 89 ce             	mov    %rcx,%rsi
   129c2:	48 89 c7             	mov    %rax,%rdi
   129c5:	e8 84 27 ff ff       	call   514e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
   129ca:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   129d1:	48 89 c7             	mov    %rax,%rdi
   129d4:	e8 57 1b ff ff       	call   4530 <_ZNSaIcED1Ev@plt>

    VkPhysicalDeviceVulkan11Properties vk11Props{};
   129d9:	48 8d 95 60 f1 ff ff 	lea    -0xea0(%rbp),%rdx
   129e0:	b8 00 00 00 00       	mov    $0x0,%eax
   129e5:	b9 0e 00 00 00       	mov    $0xe,%ecx
   129ea:	48 89 d7             	mov    %rdx,%rdi
   129ed:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk11Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES;
   129f0:	c7 85 60 f1 ff ff 32 	movl   $0x32,-0xea0(%rbp)
   129f7:	00 00 00 
    vk11Props.pNext = nullptr;
   129fa:	48 c7 85 68 f1 ff ff 	movq   $0x0,-0xe98(%rbp)
   12a01:	00 00 00 00 

    VkPhysicalDeviceVulkan12Properties vk12Props{};
   12a05:	48 8d 95 b0 f2 ff ff 	lea    -0xd50(%rbp),%rdx
   12a0c:	b8 00 00 00 00       	mov    $0x0,%eax
   12a11:	b9 5c 00 00 00       	mov    $0x5c,%ecx
   12a16:	48 89 d7             	mov    %rdx,%rdi
   12a19:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk12Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES;
   12a1c:	c7 85 b0 f2 ff ff 34 	movl   $0x34,-0xd50(%rbp)
   12a23:	00 00 00 
    vk12Props.pNext = &vk11Props;
   12a26:	48 8d 85 60 f1 ff ff 	lea    -0xea0(%rbp),%rax
   12a2d:	48 89 85 b8 f2 ff ff 	mov    %rax,-0xd48(%rbp)

    VkPhysicalDeviceVulkan13Properties vk13Props{};
   12a34:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
   12a3b:	b8 00 00 00 00       	mov    $0x0,%eax
   12a40:	b9 1b 00 00 00       	mov    $0x1b,%ecx
   12a45:	48 89 d7             	mov    %rdx,%rdi
   12a48:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk13Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES;
   12a4b:	c7 85 d0 f1 ff ff 36 	movl   $0x36,-0xe30(%rbp)
   12a52:	00 00 00 
    vk13Props.pNext = &vk12Props;
   12a55:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
   12a5c:	48 89 85 d8 f1 ff ff 	mov    %rax,-0xe28(%rbp)

    auto deviceProperties =
        vkh::getPhysicalDevicePropertyList(physDev, &vk13Props);
   12a63:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   12a67:	48 8b 08             	mov    (%rax),%rcx
   12a6a:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
   12a71:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
   12a78:	48 89 ce             	mov    %rcx,%rsi
   12a7b:	48 89 c7             	mov    %rax,%rdi
   12a7e:	e8 4e 61 ff ff       	call   8bd1 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>

    if (deviceProperties.properties.deviceID ==
   12a83:	8b 95 ac f5 ff ff    	mov    -0xa54(%rbp),%edx
        selectedDeviceProperties.deviceID) {
   12a89:	8b 85 7c f9 ff ff    	mov    -0x684(%rbp),%eax
    if (deviceProperties.properties.deviceID ==
   12a8f:	39 c2                	cmp    %eax,%edx
   12a91:	75 08                	jne    12a9b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x691>
      selectedDeviceIndex = index;
   12a93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12a97:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    }
    if (selectedDeviceIndex == index) {
   12a9b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12a9f:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   12aa3:	75 19                	jne    12abe <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6b4>
      selectStr = " (selected)";
   12aa5:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   12aac:	48 8d 15 9d e5 00 00 	lea    0xe59d(%rip),%rdx        # 21050 <_ZZN9VulkanApp6renderEvE11submitCount+0x124>
   12ab3:	48 89 d6             	mov    %rdx,%rsi
   12ab6:	48 89 c7             	mov    %rax,%rdi
   12ab9:	e8 12 1c ff ff       	call   46d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    }
    fs << "\t3." << index << " Device " << index << selectStr << ":\n";
   12abe:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12ac5:	48 83 c0 10          	add    $0x10,%rax
   12ac9:	48 8d 15 8c e5 00 00 	lea    0xe58c(%rip),%rdx        # 2105c <_ZZN9VulkanApp6renderEvE11submitCount+0x130>
   12ad0:	48 89 d6             	mov    %rdx,%rsi
   12ad3:	48 89 c7             	mov    %rax,%rdi
   12ad6:	e8 95 19 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12adb:	48 89 c2             	mov    %rax,%rdx
   12ade:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12ae2:	48 89 c6             	mov    %rax,%rsi
   12ae5:	48 89 d7             	mov    %rdx,%rdi
   12ae8:	e8 c3 15 ff ff       	call   40b0 <_ZNSolsEm@plt>
   12aed:	48 89 c2             	mov    %rax,%rdx
   12af0:	48 8d 05 69 e5 00 00 	lea    0xe569(%rip),%rax        # 21060 <_ZZN9VulkanApp6renderEvE11submitCount+0x134>
   12af7:	48 89 c6             	mov    %rax,%rsi
   12afa:	48 89 d7             	mov    %rdx,%rdi
   12afd:	e8 6e 19 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12b02:	48 89 c2             	mov    %rax,%rdx
   12b05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b09:	48 89 c6             	mov    %rax,%rsi
   12b0c:	48 89 d7             	mov    %rdx,%rdi
   12b0f:	e8 9c 15 ff ff       	call   40b0 <_ZNSolsEm@plt>
   12b14:	48 89 c2             	mov    %rax,%rdx
   12b17:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   12b1e:	48 89 c6             	mov    %rax,%rsi
   12b21:	48 89 d7             	mov    %rdx,%rdi
   12b24:	e8 b7 18 ff ff       	call   43e0 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>
   12b29:	48 89 c2             	mov    %rax,%rdx
   12b2c:	48 8d 05 36 e5 00 00 	lea    0xe536(%rip),%rax        # 21069 <_ZZN9VulkanApp6renderEvE11submitCount+0x13d>
   12b33:	48 89 c6             	mov    %rax,%rsi
   12b36:	48 89 d7             	mov    %rdx,%rdi
   12b39:	e8 32 19 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t3." << index << ".1 Device properties:\n";
   12b3e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12b45:	48 83 c0 10          	add    $0x10,%rax
   12b49:	48 8d 15 1c e5 00 00 	lea    0xe51c(%rip),%rdx        # 2106c <_ZZN9VulkanApp6renderEvE11submitCount+0x140>
   12b50:	48 89 d6             	mov    %rdx,%rsi
   12b53:	48 89 c7             	mov    %rax,%rdi
   12b56:	e8 15 19 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12b5b:	48 89 c2             	mov    %rax,%rdx
   12b5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b62:	48 89 c6             	mov    %rax,%rsi
   12b65:	48 89 d7             	mov    %rdx,%rdi
   12b68:	e8 43 15 ff ff       	call   40b0 <_ZNSolsEm@plt>
   12b6d:	48 89 c2             	mov    %rax,%rdx
   12b70:	48 8d 05 fa e4 00 00 	lea    0xe4fa(%rip),%rax        # 21071 <_ZZN9VulkanApp6renderEvE11submitCount+0x145>
   12b77:	48 89 c6             	mov    %rax,%rsi
   12b7a:	48 89 d7             	mov    %rdx,%rdi
   12b7d:	e8 ee 18 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t\tDevice ID: " << deviceProperties.properties.deviceID << '\n';
   12b82:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12b89:	48 83 c0 10          	add    $0x10,%rax
   12b8d:	48 8d 15 f4 e4 00 00 	lea    0xe4f4(%rip),%rdx        # 21088 <_ZZN9VulkanApp6renderEvE11submitCount+0x15c>
   12b94:	48 89 d6             	mov    %rdx,%rsi
   12b97:	48 89 c7             	mov    %rax,%rdi
   12b9a:	e8 d1 18 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12b9f:	48 89 c2             	mov    %rax,%rdx
   12ba2:	8b 85 ac f5 ff ff    	mov    -0xa54(%rbp),%eax
   12ba8:	89 c6                	mov    %eax,%esi
   12baa:	48 89 d7             	mov    %rdx,%rdi
   12bad:	e8 ee 1a ff ff       	call   46a0 <_ZNSolsEj@plt>
   12bb2:	be 0a 00 00 00       	mov    $0xa,%esi
   12bb7:	48 89 c7             	mov    %rax,%rdi
   12bba:	e8 e1 19 ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice name: " << deviceProperties.properties.deviceName
       << '\n';
   12bbf:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12bc6:	48 83 c0 10          	add    $0x10,%rax
   12bca:	48 8d 15 c6 e4 00 00 	lea    0xe4c6(%rip),%rdx        # 21097 <_ZZN9VulkanApp6renderEvE11submitCount+0x16b>
   12bd1:	48 89 d6             	mov    %rdx,%rsi
   12bd4:	48 89 c7             	mov    %rax,%rdi
   12bd7:	e8 94 18 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12bdc:	48 89 c2             	mov    %rax,%rdx
   12bdf:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
   12be6:	48 83 c0 24          	add    $0x24,%rax
   12bea:	48 89 c6             	mov    %rax,%rsi
   12bed:	48 89 d7             	mov    %rdx,%rdi
   12bf0:	e8 7b 18 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12bf5:	be 0a 00 00 00       	mov    $0xa,%esi
   12bfa:	48 89 c7             	mov    %rax,%rdi
   12bfd:	e8 9e 19 ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice type: ";
   12c02:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12c09:	48 83 c0 10          	add    $0x10,%rax
   12c0d:	48 8d 15 94 e4 00 00 	lea    0xe494(%rip),%rdx        # 210a8 <_ZZN9VulkanApp6renderEvE11submitCount+0x17c>
   12c14:	48 89 d6             	mov    %rdx,%rsi
   12c17:	48 89 c7             	mov    %rax,%rdi
   12c1a:	e8 51 18 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    switch (deviceProperties.properties.deviceType) {
   12c1f:	8b 85 b0 f5 ff ff    	mov    -0xa50(%rbp),%eax
   12c25:	83 f8 04             	cmp    $0x4,%eax
   12c28:	0f 84 80 00 00 00    	je     12cae <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8a4>
   12c2e:	83 f8 04             	cmp    $0x4,%eax
   12c31:	0f 8f 96 00 00 00    	jg     12ccd <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
   12c37:	83 f8 03             	cmp    $0x3,%eax
   12c3a:	74 53                	je     12c8f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x885>
   12c3c:	83 f8 03             	cmp    $0x3,%eax
   12c3f:	0f 8f 88 00 00 00    	jg     12ccd <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
   12c45:	83 f8 01             	cmp    $0x1,%eax
   12c48:	74 07                	je     12c51 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x847>
   12c4a:	83 f8 02             	cmp    $0x2,%eax
   12c4d:	74 21                	je     12c70 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x866>
   12c4f:	eb 7c                	jmp    12ccd <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    case 1:
      fs << "Integrated GPU\n";
   12c51:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12c58:	48 83 c0 10          	add    $0x10,%rax
   12c5c:	48 8d 15 56 e4 00 00 	lea    0xe456(%rip),%rdx        # 210b9 <_ZZN9VulkanApp6renderEvE11submitCount+0x18d>
   12c63:	48 89 d6             	mov    %rdx,%rsi
   12c66:	48 89 c7             	mov    %rax,%rdi
   12c69:	e8 02 18 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   12c6e:	eb 7b                	jmp    12ceb <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 2:
      fs << "Discrete GPU\n";
   12c70:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12c77:	48 83 c0 10          	add    $0x10,%rax
   12c7b:	48 8d 15 47 e4 00 00 	lea    0xe447(%rip),%rdx        # 210c9 <_ZZN9VulkanApp6renderEvE11submitCount+0x19d>
   12c82:	48 89 d6             	mov    %rdx,%rsi
   12c85:	48 89 c7             	mov    %rax,%rdi
   12c88:	e8 e3 17 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   12c8d:	eb 5c                	jmp    12ceb <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 3:
      fs << "Virtual GPU\n";
   12c8f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12c96:	48 83 c0 10          	add    $0x10,%rax
   12c9a:	48 8d 15 36 e4 00 00 	lea    0xe436(%rip),%rdx        # 210d7 <_ZZN9VulkanApp6renderEvE11submitCount+0x1ab>
   12ca1:	48 89 d6             	mov    %rdx,%rsi
   12ca4:	48 89 c7             	mov    %rax,%rdi
   12ca7:	e8 c4 17 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   12cac:	eb 3d                	jmp    12ceb <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 4:
      fs << "CPU\n";
   12cae:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12cb5:	48 83 c0 10          	add    $0x10,%rax
   12cb9:	48 8d 15 24 e4 00 00 	lea    0xe424(%rip),%rdx        # 210e4 <_ZZN9VulkanApp6renderEvE11submitCount+0x1b8>
   12cc0:	48 89 d6             	mov    %rdx,%rsi
   12cc3:	48 89 c7             	mov    %rax,%rdi
   12cc6:	e8 a5 17 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   12ccb:	eb 1e                	jmp    12ceb <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    default:
      fs << "Other\n";
   12ccd:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12cd4:	48 83 c0 10          	add    $0x10,%rax
   12cd8:	48 8d 15 0a e4 00 00 	lea    0xe40a(%rip),%rdx        # 210e9 <_ZZN9VulkanApp6renderEvE11submitCount+0x1bd>
   12cdf:	48 89 d6             	mov    %rdx,%rsi
   12ce2:	48 89 c7             	mov    %rax,%rdi
   12ce5:	e8 86 17 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   12cea:	90                   	nop
    }
    fs << "\t\t\tDriver ID: " << vk12Props.driverID << '\n';
   12ceb:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12cf2:	48 83 c0 10          	add    $0x10,%rax
   12cf6:	48 8d 15 f3 e3 00 00 	lea    0xe3f3(%rip),%rdx        # 210f0 <_ZZN9VulkanApp6renderEvE11submitCount+0x1c4>
   12cfd:	48 89 d6             	mov    %rdx,%rsi
   12d00:	48 89 c7             	mov    %rax,%rdi
   12d03:	e8 68 17 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12d08:	8b 95 c0 f2 ff ff    	mov    -0xd40(%rbp),%edx
   12d0e:	89 d6                	mov    %edx,%esi
   12d10:	48 89 c7             	mov    %rax,%rdi
   12d13:	e8 a8 1b ff ff       	call   48c0 <_ZNSolsEi@plt>
   12d18:	be 0a 00 00 00       	mov    $0xa,%esi
   12d1d:	48 89 c7             	mov    %rax,%rdi
   12d20:	e8 7b 18 ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver name: " << vk12Props.driverName << '\n';
   12d25:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12d2c:	48 83 c0 10          	add    $0x10,%rax
   12d30:	48 8d 15 c8 e3 00 00 	lea    0xe3c8(%rip),%rdx        # 210ff <_ZZN9VulkanApp6renderEvE11submitCount+0x1d3>
   12d37:	48 89 d6             	mov    %rdx,%rsi
   12d3a:	48 89 c7             	mov    %rax,%rdi
   12d3d:	e8 2e 17 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12d42:	48 89 c2             	mov    %rax,%rdx
   12d45:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
   12d4c:	48 83 c0 14          	add    $0x14,%rax
   12d50:	48 89 c6             	mov    %rax,%rsi
   12d53:	48 89 d7             	mov    %rdx,%rdi
   12d56:	e8 15 17 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12d5b:	be 0a 00 00 00       	mov    $0xa,%esi
   12d60:	48 89 c7             	mov    %rax,%rdi
   12d63:	e8 38 18 ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver version: " << vk12Props.driverInfo << '\n';
   12d68:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12d6f:	48 83 c0 10          	add    $0x10,%rax
   12d73:	48 8d 15 96 e3 00 00 	lea    0xe396(%rip),%rdx        # 21110 <_ZZN9VulkanApp6renderEvE11submitCount+0x1e4>
   12d7a:	48 89 d6             	mov    %rdx,%rsi
   12d7d:	48 89 c7             	mov    %rax,%rdi
   12d80:	e8 eb 16 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12d85:	48 89 c2             	mov    %rax,%rdx
   12d88:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
   12d8f:	48 05 14 01 00 00    	add    $0x114,%rax
   12d95:	48 89 c6             	mov    %rax,%rsi
   12d98:	48 89 d7             	mov    %rdx,%rdi
   12d9b:	e8 d0 16 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12da0:	be 0a 00 00 00       	mov    $0xa,%esi
   12da5:	48 89 c7             	mov    %rax,%rdi
   12da8:	e8 f3 17 ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    // fs << "\t\t\tDriver version: " << vk13Props. << '\n';
    fs << "\t\t\tMaximum memory allocation size: "
   12dad:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12db4:	48 83 c0 10          	add    $0x10,%rax
   12db8:	48 8d 15 69 e3 00 00 	lea    0xe369(%rip),%rdx        # 21128 <_ZZN9VulkanApp6renderEvE11submitCount+0x1fc>
   12dbf:	48 89 d6             	mov    %rdx,%rsi
   12dc2:	48 89 c7             	mov    %rax,%rdi
   12dc5:	e8 a6 16 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12dca:	48 89 c2             	mov    %rax,%rdx
       << vk11Props.maxMemoryAllocationSize << '\n';
   12dcd:	48 8b 85 c8 f1 ff ff 	mov    -0xe38(%rbp),%rax
   12dd4:	48 89 c6             	mov    %rax,%rsi
   12dd7:	48 89 d7             	mov    %rdx,%rdi
   12dda:	e8 d1 12 ff ff       	call   40b0 <_ZNSolsEm@plt>
   12ddf:	be 0a 00 00 00       	mov    $0xa,%esi
   12de4:	48 89 c7             	mov    %rax,%rdi
   12de7:	e8 b4 17 ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t3." << index << ".2 Available device extensions:\n";
   12dec:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12df3:	48 83 c0 10          	add    $0x10,%rax
   12df7:	48 8d 15 6e e2 00 00 	lea    0xe26e(%rip),%rdx        # 2106c <_ZZN9VulkanApp6renderEvE11submitCount+0x140>
   12dfe:	48 89 d6             	mov    %rdx,%rsi
   12e01:	48 89 c7             	mov    %rax,%rdi
   12e04:	e8 67 16 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12e09:	48 89 c2             	mov    %rax,%rdx
   12e0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e10:	48 89 c6             	mov    %rax,%rsi
   12e13:	48 89 d7             	mov    %rdx,%rdi
   12e16:	e8 95 12 ff ff       	call   40b0 <_ZNSolsEm@plt>
   12e1b:	48 89 c2             	mov    %rax,%rdx
   12e1e:	48 8d 05 2b e3 00 00 	lea    0xe32b(%rip),%rax        # 21150 <_ZZN9VulkanApp6renderEvE11submitCount+0x224>
   12e25:	48 89 c6             	mov    %rax,%rsi
   12e28:	48 89 d7             	mov    %rdx,%rdi
   12e2b:	e8 40 16 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    auto availableDeviceExtensions =
        vkh::getAvailableDeviceExtensionList(physDev);
   12e30:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   12e34:	48 8b 08             	mov    (%rax),%rcx
   12e37:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   12e3e:	ba 00 00 00 00       	mov    $0x0,%edx
   12e43:	48 89 ce             	mov    %rcx,%rsi
   12e46:	48 89 c7             	mov    %rax,%rdi
   12e49:	e8 15 59 ff ff       	call   8763 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
    for (const auto &extension : availableDeviceExtensions) {
   12e4e:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   12e55:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   12e59:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12e5d:	48 89 c7             	mov    %rax,%rdi
   12e60:	e8 c9 10 00 00       	call   13f2e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
   12e65:	48 89 85 f8 f8 ff ff 	mov    %rax,-0x708(%rbp)
   12e6c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12e70:	48 89 c7             	mov    %rax,%rdi
   12e73:	e8 dc 10 00 00       	call   13f54 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
   12e78:	48 89 85 f0 f8 ff ff 	mov    %rax,-0x710(%rbp)
   12e7f:	eb 5e                	jmp    12edf <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xad5>
   12e81:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   12e88:	48 89 c7             	mov    %rax,%rdi
   12e8b:	e8 4c 11 00 00       	call   13fdc <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
   12e90:	48 89 45 90          	mov    %rax,-0x70(%rbp)
      fs << "\t\t\t" << extension.extensionName << '\n';
   12e94:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12e9b:	48 83 c0 10          	add    $0x10,%rax
   12e9f:	48 8d 15 cb e2 00 00 	lea    0xe2cb(%rip),%rdx        # 21171 <_ZZN9VulkanApp6renderEvE11submitCount+0x245>
   12ea6:	48 89 d6             	mov    %rdx,%rsi
   12ea9:	48 89 c7             	mov    %rax,%rdi
   12eac:	e8 bf 15 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12eb1:	48 89 c2             	mov    %rax,%rdx
   12eb4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   12eb8:	48 89 c6             	mov    %rax,%rsi
   12ebb:	48 89 d7             	mov    %rdx,%rdi
   12ebe:	e8 ad 15 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12ec3:	be 0a 00 00 00       	mov    $0xa,%esi
   12ec8:	48 89 c7             	mov    %rax,%rdi
   12ecb:	e8 d0 16 ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    for (const auto &extension : availableDeviceExtensions) {
   12ed0:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   12ed7:	48 89 c7             	mov    %rax,%rdi
   12eda:	e8 d9 10 00 00       	call   13fb8 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
   12edf:	48 8d 95 f0 f8 ff ff 	lea    -0x710(%rbp),%rdx
   12ee6:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   12eed:	48 89 d6             	mov    %rdx,%rsi
   12ef0:	48 89 c7             	mov    %rax,%rdi
   12ef3:	e8 85 10 00 00       	call   13f7d <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   12ef8:	84 c0                	test   %al,%al
   12efa:	75 85                	jne    12e81 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa77>
    }
    if (selectedDeviceIndex == index) {
   12efc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12f00:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   12f04:	0f 85 fb 00 00 00    	jne    13005 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbfb>
      fs << "\t\t3." << index << ".3 Required device extensions:\n";
   12f0a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12f11:	48 83 c0 10          	add    $0x10,%rax
   12f15:	48 8d 15 50 e1 00 00 	lea    0xe150(%rip),%rdx        # 2106c <_ZZN9VulkanApp6renderEvE11submitCount+0x140>
   12f1c:	48 89 d6             	mov    %rdx,%rsi
   12f1f:	48 89 c7             	mov    %rax,%rdi
   12f22:	e8 49 15 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12f27:	48 89 c2             	mov    %rax,%rdx
   12f2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12f2e:	48 89 c6             	mov    %rax,%rsi
   12f31:	48 89 d7             	mov    %rdx,%rdi
   12f34:	e8 77 11 ff ff       	call   40b0 <_ZNSolsEm@plt>
   12f39:	48 89 c2             	mov    %rax,%rdx
   12f3c:	48 8d 05 35 e2 00 00 	lea    0xe235(%rip),%rax        # 21178 <_ZZN9VulkanApp6renderEvE11submitCount+0x24c>
   12f43:	48 89 c6             	mov    %rax,%rsi
   12f46:	48 89 d7             	mov    %rdx,%rdi
   12f49:	e8 22 15 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      for (const auto &extension : deviceExtensions) {
   12f4e:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   12f55:	48 05 90 00 00 00    	add    $0x90,%rax
   12f5b:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   12f5f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   12f63:	48 89 c7             	mov    %rax,%rdi
   12f66:	e8 21 0b 00 00       	call   13a8c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   12f6b:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
   12f72:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   12f76:	48 89 c7             	mov    %rax,%rdi
   12f79:	e8 34 0b 00 00       	call   13ab2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   12f7e:	48 89 85 e0 f8 ff ff 	mov    %rax,-0x720(%rbp)
   12f85:	eb 61                	jmp    12fe8 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbde>
   12f87:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   12f8e:	48 89 c7             	mov    %rax,%rdi
   12f91:	e8 a0 0b 00 00       	call   13b36 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
   12f96:	48 89 45 98          	mov    %rax,-0x68(%rbp)
        fs << "\t\t\t" << extension << '\n';
   12f9a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12fa1:	48 83 c0 10          	add    $0x10,%rax
   12fa5:	48 8d 15 c5 e1 00 00 	lea    0xe1c5(%rip),%rdx        # 21171 <_ZZN9VulkanApp6renderEvE11submitCount+0x245>
   12fac:	48 89 d6             	mov    %rdx,%rsi
   12faf:	48 89 c7             	mov    %rax,%rdi
   12fb2:	e8 b9 14 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12fb7:	48 89 c2             	mov    %rax,%rdx
   12fba:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12fbe:	48 8b 00             	mov    (%rax),%rax
   12fc1:	48 89 c6             	mov    %rax,%rsi
   12fc4:	48 89 d7             	mov    %rdx,%rdi
   12fc7:	e8 a4 14 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12fcc:	be 0a 00 00 00       	mov    $0xa,%esi
   12fd1:	48 89 c7             	mov    %rax,%rdi
   12fd4:	e8 c7 15 ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
      for (const auto &extension : deviceExtensions) {
   12fd9:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   12fe0:	48 89 c7             	mov    %rax,%rdi
   12fe3:	e8 2e 0b 00 00       	call   13b16 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
   12fe8:	48 8d 95 e0 f8 ff ff 	lea    -0x720(%rbp),%rdx
   12fef:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   12ff6:	48 89 d6             	mov    %rdx,%rsi
   12ff9:	48 89 c7             	mov    %rax,%rdi
   12ffc:	e8 da 0a 00 00       	call   13adb <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   13001:	84 c0                	test   %al,%al
   13003:	75 82                	jne    12f87 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xb7d>
      }
    }
    fs << '\n';
   13005:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1300c:	48 83 c0 10          	add    $0x10,%rax
   13010:	be 0a 00 00 00       	mov    $0xa,%esi
   13015:	48 89 c7             	mov    %rax,%rdi
   13018:	e8 83 15 ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    ++index;
   1301d:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  }
   13022:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   13029:	48 89 c7             	mov    %rax,%rdi
   1302c:	e8 a7 68 ff ff       	call   98d8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   13031:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   13038:	48 89 c7             	mov    %rax,%rdi
   1303b:	e8 30 12 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
  for (const auto &physDev : physicalDeviceList) {
   13040:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
   13047:	48 89 c7             	mov    %rax,%rdi
   1304a:	e8 97 0d 00 00       	call   13de6 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
   1304f:	48 8d 95 20 f9 ff ff 	lea    -0x6e0(%rbp),%rdx
   13056:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
   1305d:	48 89 d6             	mov    %rdx,%rsi
   13060:	48 89 c7             	mov    %rax,%rdi
   13063:	e8 43 0d 00 00       	call   13dab <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   13068:	84 c0                	test   %al,%al
   1306a:	0f 85 18 f9 ff ff    	jne    12988 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x57e>
  fs << '\n';
   13070:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   13077:	48 83 c0 10          	add    $0x10,%rax
   1307b:	be 0a 00 00 00       	mov    $0xa,%esi
   13080:	48 89 c7             	mov    %rax,%rdi
   13083:	e8 18 15 ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
   13088:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   1308f:	48 89 c7             	mov    %rax,%rdi
   13092:	e8 cb 6a ff ff       	call   9b62 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
   13097:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   1309e:	48 89 c7             	mov    %rax,%rdi
   130a1:	e8 c4 66 ff ff       	call   976a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
   130a6:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   130ad:	48 89 c7             	mov    %rax,%rdi
   130b0:	e8 23 68 ff ff       	call   98d8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   130b5:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   130bc:	48 89 c7             	mov    %rax,%rdi
   130bf:	e8 dc 0f ff ff       	call   40a0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
   130c4:	e9 cd 00 00 00       	jmp    13196 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd8c>
    throw std::runtime_error("Failed to open " + filePath + '\n');
   130c9:	49 89 c4             	mov    %rax,%r12
   130cc:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   130d3:	48 89 c7             	mov    %rax,%rdi
   130d6:	e8 95 11 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   130db:	eb 03                	jmp    130e0 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcd6>
   130dd:	49 89 c4             	mov    %rax,%r12
   130e0:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   130e7:	48 89 c7             	mov    %rax,%rdi
   130ea:	e8 81 11 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   130ef:	eb 03                	jmp    130f4 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcea>
   130f1:	49 89 c4             	mov    %rax,%r12
   130f4:	48 89 df             	mov    %rbx,%rdi
   130f7:	e8 d4 11 ff ff       	call   42d0 <__cxa_free_exception@plt>
   130fc:	4c 89 e3             	mov    %r12,%rbx
   130ff:	eb 7b                	jmp    1317c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
    std::string selectStr = "";
   13101:	48 89 c3             	mov    %rax,%rbx
   13104:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   1310b:	48 89 c7             	mov    %rax,%rdi
   1310e:	e8 1d 14 ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
   13113:	eb 2b                	jmp    13140 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
  }
   13115:	48 89 c3             	mov    %rax,%rbx
   13118:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   1311f:	48 89 c7             	mov    %rax,%rdi
   13122:	e8 b1 67 ff ff       	call   98d8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   13127:	eb 03                	jmp    1312c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd22>
   13129:	48 89 c3             	mov    %rax,%rbx
   1312c:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   13133:	48 89 c7             	mov    %rax,%rdi
   13136:	e8 35 11 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   1313b:	eb 03                	jmp    13140 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
   1313d:	48 89 c3             	mov    %rax,%rbx
   13140:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   13147:	48 89 c7             	mov    %rax,%rdi
   1314a:	e8 13 6a ff ff       	call   9b62 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
   1314f:	eb 03                	jmp    13154 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd4a>
   13151:	48 89 c3             	mov    %rax,%rbx
   13154:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   1315b:	48 89 c7             	mov    %rax,%rdi
   1315e:	e8 07 66 ff ff       	call   976a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
   13163:	eb 03                	jmp    13168 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd5e>
   13165:	48 89 c3             	mov    %rax,%rbx
   13168:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   1316f:	48 89 c7             	mov    %rax,%rdi
   13172:	e8 61 67 ff ff       	call   98d8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   13177:	eb 03                	jmp    1317c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
   13179:	48 89 c3             	mov    %rax,%rbx
   1317c:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   13183:	48 89 c7             	mov    %rax,%rdi
   13186:	e8 15 0f ff ff       	call   40a0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
   1318b:	48 89 d8             	mov    %rbx,%rax
   1318e:	48 89 c7             	mov    %rax,%rdi
   13191:	e8 6a 17 ff ff       	call   4900 <_Unwind_Resume@plt>
   13196:	48 81 c4 c0 0e 00 00 	add    $0xec0,%rsp
   1319d:	5b                   	pop    %rbx
   1319e:	41 5c                	pop    %r12
   131a0:	5d                   	pop    %rbp
   131a1:	c3                   	ret

00000000000131a2 <_Z41__static_initialization_and_destruction_0ii>:
   131a2:	55                   	push   %rbp
   131a3:	48 89 e5             	mov    %rsp,%rbp
   131a6:	41 57                	push   %r15
   131a8:	41 56                	push   %r14
   131aa:	41 55                	push   %r13
   131ac:	41 54                	push   %r12
   131ae:	53                   	push   %rbx
   131af:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   131b6:	89 bd 5c ff ff ff    	mov    %edi,-0xa4(%rbp)
   131bc:	89 b5 58 ff ff ff    	mov    %esi,-0xa8(%rbp)
   131c2:	83 bd 5c ff ff ff 01 	cmpl   $0x1,-0xa4(%rbp)
   131c9:	0f 85 92 02 00 00    	jne    13461 <_Z41__static_initialization_and_destruction_0ii+0x2bf>
   131cf:	81 bd 58 ff ff ff ff 	cmpl   $0xffff,-0xa8(%rbp)
   131d6:	ff 00 00 
   131d9:	0f 85 82 02 00 00    	jne    13461 <_Z41__static_initialization_and_destruction_0ii+0x2bf>
   131df:	48 8d 05 6a e4 01 00 	lea    0x1e46a(%rip),%rax        # 31650 <_ZStL8__ioinit>
   131e6:	48 89 c7             	mov    %rax,%rdi
   131e9:	e8 b2 15 ff ff       	call   47a0 <_ZNSt8ios_base4InitC1Ev@plt>
   131ee:	48 8d 05 c3 e2 01 00 	lea    0x1e2c3(%rip),%rax        # 314b8 <__dso_handle>
   131f5:	48 89 c2             	mov    %rax,%rdx
   131f8:	48 8d 05 51 e4 01 00 	lea    0x1e451(%rip),%rax        # 31650 <_ZStL8__ioinit>
   131ff:	48 89 c6             	mov    %rax,%rsi
   13202:	48 8b 05 bf dd 01 00 	mov    0x1ddbf(%rip),%rax        # 30fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
   13209:	48 89 c7             	mov    %rax,%rdi
   1320c:	e8 bf 11 ff ff       	call   43d0 <__cxa_atexit@plt>
const std::vector<uint16_t> triangle_indices{0, 1, 2, 2, 3, 0};
   13211:	66 c7 85 62 ff ff ff 	movw   $0x0,-0x9e(%rbp)
   13218:	00 00 
   1321a:	66 c7 85 64 ff ff ff 	movw   $0x1,-0x9c(%rbp)
   13221:	01 00 
   13223:	66 c7 85 66 ff ff ff 	movw   $0x2,-0x9a(%rbp)
   1322a:	02 00 
   1322c:	66 c7 85 68 ff ff ff 	movw   $0x2,-0x98(%rbp)
   13233:	02 00 
   13235:	66 c7 85 6a ff ff ff 	movw   $0x3,-0x96(%rbp)
   1323c:	03 00 
   1323e:	66 c7 85 6c ff ff ff 	movw   $0x0,-0x94(%rbp)
   13245:	00 00 
   13247:	48 8d 85 62 ff ff ff 	lea    -0x9e(%rbp),%rax
   1324e:	49 89 c6             	mov    %rax,%r14
   13251:	41 bf 06 00 00 00    	mov    $0x6,%r15d
   13257:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   1325e:	48 89 c7             	mov    %rax,%rdi
   13261:	e8 68 1d ff ff       	call   4fce <_ZNSaItEC1Ev>
   13266:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   1326d:	4c 89 f6             	mov    %r14,%rsi
   13270:	4c 89 ff             	mov    %r15,%rdi
   13273:	4c 89 f1             	mov    %r14,%rcx
   13276:	4c 89 fb             	mov    %r15,%rbx
   13279:	48 89 da             	mov    %rbx,%rdx
   1327c:	48 89 c1             	mov    %rax,%rcx
   1327f:	48 8d 05 da e3 01 00 	lea    0x1e3da(%rip),%rax        # 31660 <_ZN6shaderL16triangle_indicesE>
   13286:	48 89 c7             	mov    %rax,%rdi
   13289:	e8 78 1d ff ff       	call   5006 <_ZNSt6vectorItSaItEEC1ESt16initializer_listItERKS0_>
   1328e:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   13295:	48 89 c7             	mov    %rax,%rdi
   13298:	e8 4d 1d ff ff       	call   4fea <_ZNSaItED1Ev>
   1329d:	48 8d 05 14 e2 01 00 	lea    0x1e214(%rip),%rax        # 314b8 <__dso_handle>
   132a4:	48 89 c2             	mov    %rax,%rdx
   132a7:	48 8d 05 b2 e3 01 00 	lea    0x1e3b2(%rip),%rax        # 31660 <_ZN6shaderL16triangle_indicesE>
   132ae:	48 89 c6             	mov    %rax,%rsi
   132b1:	48 8d 05 7e 2f ff ff 	lea    -0xd082(%rip),%rax        # 6236 <_ZNSt6vectorItSaItEED1Ev>
   132b8:	48 89 c7             	mov    %rax,%rdi
   132bb:	e8 10 11 ff ff       	call   43d0 <__cxa_atexit@plt>
    {{-0.5f, 0.5f}, {1.0f, 1.0f, 1.0f}}};
   132c0:	f3 0f 10 05 f4 df 00 	movss  0xdff4(%rip),%xmm0        # 212bc <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
   132c7:	00 
   132c8:	f3 0f 11 85 70 ff ff 	movss  %xmm0,-0x90(%rbp)
   132cf:	ff 
   132d0:	f3 0f 10 05 e4 df 00 	movss  0xdfe4(%rip),%xmm0        # 212bc <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
   132d7:	00 
   132d8:	f3 0f 11 85 74 ff ff 	movss  %xmm0,-0x8c(%rbp)
   132df:	ff 
   132e0:	f3 0f 10 05 d0 df 00 	movss  0xdfd0(%rip),%xmm0        # 212b8 <_ZZN9VulkanApp6renderEvE11submitCount+0x38c>
   132e7:	00 
   132e8:	f3 0f 11 85 78 ff ff 	movss  %xmm0,-0x88(%rbp)
   132ef:	ff 
   132f0:	66 0f ef c0          	pxor   %xmm0,%xmm0
   132f4:	f3 0f 11 85 7c ff ff 	movss  %xmm0,-0x84(%rbp)
   132fb:	ff 
   132fc:	66 0f ef c0          	pxor   %xmm0,%xmm0
   13300:	f3 0f 11 45 80       	movss  %xmm0,-0x80(%rbp)
   13305:	f3 0f 10 05 b3 df 00 	movss  0xdfb3(%rip),%xmm0        # 212c0 <_ZZN9VulkanApp6renderEvE11submitCount+0x394>
   1330c:	00 
   1330d:	f3 0f 11 45 84       	movss  %xmm0,-0x7c(%rbp)
   13312:	f3 0f 10 05 a2 df 00 	movss  0xdfa2(%rip),%xmm0        # 212bc <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
   13319:	00 
   1331a:	f3 0f 11 45 88       	movss  %xmm0,-0x78(%rbp)
   1331f:	66 0f ef c0          	pxor   %xmm0,%xmm0
   13323:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)
   13328:	f3 0f 10 05 88 df 00 	movss  0xdf88(%rip),%xmm0        # 212b8 <_ZZN9VulkanApp6renderEvE11submitCount+0x38c>
   1332f:	00 
   13330:	f3 0f 11 45 90       	movss  %xmm0,-0x70(%rbp)
   13335:	66 0f ef c0          	pxor   %xmm0,%xmm0
   13339:	f3 0f 11 45 94       	movss  %xmm0,-0x6c(%rbp)
   1333e:	f3 0f 10 05 7a df 00 	movss  0xdf7a(%rip),%xmm0        # 212c0 <_ZZN9VulkanApp6renderEvE11submitCount+0x394>
   13345:	00 
   13346:	f3 0f 11 45 98       	movss  %xmm0,-0x68(%rbp)
   1334b:	f3 0f 10 05 6d df 00 	movss  0xdf6d(%rip),%xmm0        # 212c0 <_ZZN9VulkanApp6renderEvE11submitCount+0x394>
   13352:	00 
   13353:	f3 0f 11 45 9c       	movss  %xmm0,-0x64(%rbp)
   13358:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1335c:	f3 0f 11 45 a0       	movss  %xmm0,-0x60(%rbp)
   13361:	66 0f ef c0          	pxor   %xmm0,%xmm0
   13365:	f3 0f 11 45 a4       	movss  %xmm0,-0x5c(%rbp)
   1336a:	f3 0f 10 05 46 df 00 	movss  0xdf46(%rip),%xmm0        # 212b8 <_ZZN9VulkanApp6renderEvE11submitCount+0x38c>
   13371:	00 
   13372:	f3 0f 11 45 a8       	movss  %xmm0,-0x58(%rbp)
   13377:	f3 0f 10 05 3d df 00 	movss  0xdf3d(%rip),%xmm0        # 212bc <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
   1337e:	00 
   1337f:	f3 0f 11 45 ac       	movss  %xmm0,-0x54(%rbp)
   13384:	f3 0f 10 05 34 df 00 	movss  0xdf34(%rip),%xmm0        # 212c0 <_ZZN9VulkanApp6renderEvE11submitCount+0x394>
   1338b:	00 
   1338c:	f3 0f 11 45 b0       	movss  %xmm0,-0x50(%rbp)
   13391:	f3 0f 10 05 1f df 00 	movss  0xdf1f(%rip),%xmm0        # 212b8 <_ZZN9VulkanApp6renderEvE11submitCount+0x38c>
   13398:	00 
   13399:	f3 0f 11 45 b4       	movss  %xmm0,-0x4c(%rbp)
   1339e:	f3 0f 10 05 12 df 00 	movss  0xdf12(%rip),%xmm0        # 212b8 <_ZZN9VulkanApp6renderEvE11submitCount+0x38c>
   133a5:	00 
   133a6:	f3 0f 11 45 b8       	movss  %xmm0,-0x48(%rbp)
   133ab:	f3 0f 10 05 05 df 00 	movss  0xdf05(%rip),%xmm0        # 212b8 <_ZZN9VulkanApp6renderEvE11submitCount+0x38c>
   133b2:	00 
   133b3:	f3 0f 11 45 bc       	movss  %xmm0,-0x44(%rbp)
   133b8:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   133bf:	49 89 c4             	mov    %rax,%r12
   133c2:	41 bd 04 00 00 00    	mov    $0x4,%r13d
   133c8:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   133cc:	48 89 c7             	mov    %rax,%rdi
   133cf:	e8 ba 1c ff ff       	call   508e <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1Ev>
   133d4:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   133d8:	4c 89 e6             	mov    %r12,%rsi
   133db:	4c 89 ef             	mov    %r13,%rdi
   133de:	4c 89 e1             	mov    %r12,%rcx
   133e1:	4c 89 eb             	mov    %r13,%rbx
   133e4:	48 89 da             	mov    %rbx,%rdx
   133e7:	48 89 c1             	mov    %rax,%rcx
   133ea:	48 8d 05 8f e2 01 00 	lea    0x1e28f(%rip),%rax        # 31680 <_ZN6shaderL19triangle_index_dataE>
   133f1:	48 89 c7             	mov    %rax,%rdi
   133f4:	e8 cd 1c ff ff       	call   50c6 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ESt16initializer_listIS4_ERKS5_>
   133f9:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   133fd:	48 89 c7             	mov    %rax,%rdi
   13400:	e8 a5 1c ff ff       	call   50aa <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
const std::vector<vkh::Vertex2D_RGB> triangle_index_data{
   13405:	48 8d 05 ac e0 01 00 	lea    0x1e0ac(%rip),%rax        # 314b8 <__dso_handle>
   1340c:	48 89 c2             	mov    %rax,%rdx
   1340f:	48 8d 05 6a e2 01 00 	lea    0x1e26a(%rip),%rax        # 31680 <_ZN6shaderL19triangle_index_dataE>
   13416:	48 89 c6             	mov    %rax,%rsi
   13419:	48 8d 05 5a 2e ff ff 	lea    -0xd1a6(%rip),%rax        # 627a <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>
   13420:	48 89 c7             	mov    %rax,%rdi
   13423:	e8 a8 0f ff ff       	call   43d0 <__cxa_atexit@plt>
   13428:	eb 37                	jmp    13461 <_Z41__static_initialization_and_destruction_0ii+0x2bf>
const std::vector<uint16_t> triangle_indices{0, 1, 2, 2, 3, 0};
   1342a:	48 89 c3             	mov    %rax,%rbx
   1342d:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   13434:	48 89 c7             	mov    %rax,%rdi
   13437:	e8 ae 1b ff ff       	call   4fea <_ZNSaItED1Ev>
   1343c:	48 89 d8             	mov    %rbx,%rax
   1343f:	48 89 c7             	mov    %rax,%rdi
   13442:	e8 b9 14 ff ff       	call   4900 <_Unwind_Resume@plt>
    {{-0.5f, 0.5f}, {1.0f, 1.0f, 1.0f}}};
   13447:	48 89 c3             	mov    %rax,%rbx
   1344a:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   1344e:	48 89 c7             	mov    %rax,%rdi
   13451:	e8 54 1c ff ff       	call   50aa <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
   13456:	48 89 d8             	mov    %rbx,%rax
   13459:	48 89 c7             	mov    %rax,%rdi
   1345c:	e8 9f 14 ff ff       	call   4900 <_Unwind_Resume@plt>
   13461:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   13468:	5b                   	pop    %rbx
   13469:	41 5c                	pop    %r12
   1346b:	41 5d                	pop    %r13
   1346d:	41 5e                	pop    %r14
   1346f:	41 5f                	pop    %r15
   13471:	5d                   	pop    %rbp
   13472:	c3                   	ret

0000000000013473 <_GLOBAL__sub_I__ZN9VulkanApp12createWindowEv>:
   13473:	55                   	push   %rbp
   13474:	48 89 e5             	mov    %rsp,%rbp
   13477:	be ff ff 00 00       	mov    $0xffff,%esi
   1347c:	bf 01 00 00 00       	mov    $0x1,%edi
   13481:	e8 1c fd ff ff       	call   131a2 <_Z41__static_initialization_and_destruction_0ii>
   13486:	5d                   	pop    %rbp
   13487:	c3                   	ret

0000000000013488 <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
   13488:	55                   	push   %rbp
   13489:	48 89 e5             	mov    %rsp,%rbp
   1348c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13490:	48 8d 15 79 d8 01 00 	lea    0x1d879(%rip),%rdx        # 30d10 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
   13497:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1349b:	48 89 10             	mov    %rdx,(%rax)
   1349e:	90                   	nop
   1349f:	5d                   	pop    %rbp
   134a0:	c3                   	ret

00000000000134a1 <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
   134a1:	55                   	push   %rbp
   134a2:	48 89 e5             	mov    %rsp,%rbp
   134a5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   134a9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   134ad:	90                   	nop
   134ae:	5d                   	pop    %rbp
   134af:	c3                   	ret

00000000000134b0 <_ZNKSt19bad_optional_access4whatEv>:
    const char* what() const noexcept override
   134b0:	55                   	push   %rbp
   134b1:	48 89 e5             	mov    %rsp,%rbp
   134b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
   134b8:	48 8d 05 81 d8 00 00 	lea    0xd881(%rip),%rax        # 20d40 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
   134bf:	5d                   	pop    %rbp
   134c0:	c3                   	ret
   134c1:	90                   	nop

00000000000134c2 <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
   134c2:	55                   	push   %rbp
   134c3:	48 89 e5             	mov    %rsp,%rbp
   134c6:	48 83 ec 10          	sub    $0x10,%rsp
   134ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   134ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134d2:	48 89 c7             	mov    %rax,%rdi
   134d5:	e8 ae ff ff ff       	call   13488 <_ZNSt9exceptionC1Ev>
   134da:	48 8d 15 df d7 01 00 	lea    0x1d7df(%rip),%rdx        # 30cc0 <_ZTVSt19bad_optional_access+0x10>
   134e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134e5:	48 89 10             	mov    %rdx,(%rax)
   134e8:	90                   	nop
   134e9:	c9                   	leave
   134ea:	c3                   	ret

00000000000134eb <_ZSt27__throw_bad_optional_accessv>:
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
   134eb:	55                   	push   %rbp
   134ec:	48 89 e5             	mov    %rsp,%rbp
   134ef:	53                   	push   %rbx
   134f0:	48 83 ec 08          	sub    $0x8,%rsp
   134f4:	bf 08 00 00 00       	mov    $0x8,%edi
   134f9:	e8 c2 0c ff ff       	call   41c0 <__cxa_allocate_exception@plt>
   134fe:	48 89 c3             	mov    %rax,%rbx
   13501:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   13508:	48 89 df             	mov    %rbx,%rdi
   1350b:	e8 b2 ff ff ff       	call   134c2 <_ZNSt19bad_optional_accessC1Ev>
   13510:	48 8d 05 a3 8b 00 00 	lea    0x8ba3(%rip),%rax        # 1c0ba <_ZNSt19bad_optional_accessD1Ev>
   13517:	48 89 c2             	mov    %rax,%rdx
   1351a:	48 8d 05 37 d8 01 00 	lea    0x1d837(%rip),%rax        # 30d58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   13521:	48 89 c6             	mov    %rax,%rsi
   13524:	48 89 df             	mov    %rbx,%rdi
   13527:	e8 64 13 ff ff       	call   4890 <__cxa_throw@plt>

000000000001352c <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
   1352c:	55                   	push   %rbp
   1352d:	48 89 e5             	mov    %rsp,%rbp
   13530:	48 83 ec 10          	sub    $0x10,%rsp
   13534:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
   13538:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1353c:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
   13542:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13546:	48 89 c7             	mov    %rax,%rdi
   13549:	e8 04 00 00 00       	call   13552 <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
   1354e:	90                   	nop
   1354f:	c9                   	leave
   13550:	c3                   	ret
   13551:	90                   	nop

0000000000013552 <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
   13552:	55                   	push   %rbp
   13553:	48 89 e5             	mov    %rsp,%rbp
   13556:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
   1355a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1355e:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   13565:	00 
      _M_header._M_left = &_M_header;
   13566:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1356a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1356e:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
   13572:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13576:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1357a:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
   1357e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13582:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   13589:	00 
    }
   1358a:	90                   	nop
   1358b:	5d                   	pop    %rbp
   1358c:	c3                   	ret
   1358d:	90                   	nop

000000000001358e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      _Optional_payload_base() = default;
   1358e:	55                   	push   %rbp
   1358f:	48 89 e5             	mov    %rsp,%rbp
   13592:	48 83 ec 10          	sub    $0x10,%rsp
   13596:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1359a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1359e:	48 89 c7             	mov    %rax,%rdi
   135a1:	e8 60 00 00 00       	call   13606 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>
   135a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135aa:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
   135ae:	90                   	nop
   135af:	c9                   	leave
   135b0:	c3                   	ret
   135b1:	90                   	nop

00000000000135b2 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>:
      _Optional_payload() = default;
   135b2:	55                   	push   %rbp
   135b3:	48 89 e5             	mov    %rsp,%rbp
   135b6:	48 83 ec 10          	sub    $0x10,%rsp
   135ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   135be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135c2:	48 89 c7             	mov    %rax,%rdi
   135c5:	e8 c4 ff ff ff       	call   1358e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
   135ca:	90                   	nop
   135cb:	c9                   	leave
   135cc:	c3                   	ret
   135cd:	90                   	nop

00000000000135ce <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
   135ce:	55                   	push   %rbp
   135cf:	48 89 e5             	mov    %rsp,%rbp
   135d2:	48 83 ec 10          	sub    $0x10,%rsp
   135d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   135da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135de:	48 89 c7             	mov    %rax,%rdi
   135e1:	e8 cc ff ff ff       	call   135b2 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>
   135e6:	90                   	nop
   135e7:	c9                   	leave
   135e8:	c3                   	ret
   135e9:	90                   	nop

00000000000135ea <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      constexpr optional() noexcept { }
   135ea:	55                   	push   %rbp
   135eb:	48 89 e5             	mov    %rsp,%rbp
   135ee:	48 83 ec 10          	sub    $0x10,%rsp
   135f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   135f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135fa:	48 89 c7             	mov    %rax,%rdi
   135fd:	e8 cc ff ff ff       	call   135ce <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>
   13602:	90                   	nop
   13603:	c9                   	leave
   13604:	c3                   	ret
   13605:	90                   	nop

0000000000013606 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
   13606:	55                   	push   %rbp
   13607:	48 89 e5             	mov    %rsp,%rbp
   1360a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1360e:	90                   	nop
   1360f:	5d                   	pop    %rbp
   13610:	c3                   	ret
   13611:	90                   	nop

0000000000013612 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>:
      _Optional_base& operator=(const _Optional_base&) = default;
   13612:	55                   	push   %rbp
   13613:	48 89 e5             	mov    %rsp,%rbp
   13616:	48 83 ec 10          	sub    $0x10,%rsp
   1361a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1361e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13622:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13626:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1362a:	48 89 d6             	mov    %rdx,%rsi
   1362d:	48 89 c7             	mov    %rax,%rdi
   13630:	e8 fd 07 00 00       	call   13e32 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>
   13635:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13639:	c9                   	leave
   1363a:	c3                   	ret
   1363b:	90                   	nop

000000000001363c <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>:
    class optional
   1363c:	55                   	push   %rbp
   1363d:	48 89 e5             	mov    %rsp,%rbp
   13640:	48 83 ec 10          	sub    $0x10,%rsp
   13644:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13648:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1364c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13650:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13654:	48 89 d6             	mov    %rdx,%rsi
   13657:	48 89 c7             	mov    %rax,%rdi
   1365a:	e8 b3 ff ff ff       	call   13612 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>
   1365f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13663:	c9                   	leave
   13664:	c3                   	ret
   13665:	90                   	nop

0000000000013666 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
   13666:	55                   	push   %rbp
   13667:	48 89 e5             	mov    %rsp,%rbp
   1366a:	48 83 ec 10          	sub    $0x10,%rsp
   1366e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
   13672:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13676:	48 89 c7             	mov    %rax,%rdi
   13679:	e8 1a 00 00 00       	call   13698 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   1367e:	84 c0                	test   %al,%al
   13680:	74 0e                	je     13690 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2a>
	  return this->_M_get();
   13682:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13686:	48 89 c7             	mov    %rax,%rdi
   13689:	e8 ce 07 00 00       	call   13e5c <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>
   1368e:	eb 05                	jmp    13695 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2f>
	__throw_bad_optional_access();
   13690:	e8 56 fe ff ff       	call   134eb <_ZSt27__throw_bad_optional_accessv>
      }
   13695:	c9                   	leave
   13696:	c3                   	ret
   13697:	90                   	nop

0000000000013698 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
   13698:	55                   	push   %rbp
   13699:	48 89 e5             	mov    %rsp,%rbp
   1369c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
   136a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136a4:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   136a8:	5d                   	pop    %rbp
   136a9:	c3                   	ret

00000000000136aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
   136aa:	55                   	push   %rbp
   136ab:	48 89 e5             	mov    %rsp,%rbp
   136ae:	48 83 ec 10          	sub    $0x10,%rsp
   136b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   136b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136ba:	48 89 c7             	mov    %rax,%rdi
   136bd:	e8 16 08 00 00       	call   13ed8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   136c2:	90                   	nop
   136c3:	c9                   	leave
   136c4:	c3                   	ret
   136c5:	90                   	nop

00000000000136c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
   136c6:	55                   	push   %rbp
   136c7:	48 89 e5             	mov    %rsp,%rbp
   136ca:	48 83 ec 10          	sub    $0x10,%rsp
   136ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   136d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136d6:	48 89 c7             	mov    %rax,%rdi
   136d9:	e8 c2 07 00 00       	call   13ea0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
   136de:	90                   	nop
   136df:	c9                   	leave
   136e0:	c3                   	ret
   136e1:	90                   	nop

00000000000136e2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
   136e2:	55                   	push   %rbp
   136e3:	48 89 e5             	mov    %rsp,%rbp
   136e6:	48 83 ec 10          	sub    $0x10,%rsp
   136ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   136ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136f2:	48 89 c7             	mov    %rax,%rdi
   136f5:	e8 cc ff ff ff       	call   136c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
   136fa:	90                   	nop
   136fb:	c9                   	leave
   136fc:	c3                   	ret
   136fd:	90                   	nop

00000000000136fe <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
   136fe:	55                   	push   %rbp
   136ff:	48 89 e5             	mov    %rsp,%rbp
   13702:	48 83 ec 10          	sub    $0x10,%rsp
   13706:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1370a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1370e:	48 89 c7             	mov    %rax,%rdi
   13711:	e8 de 07 00 00       	call   13ef4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
   13716:	90                   	nop
   13717:	c9                   	leave
   13718:	c3                   	ret
   13719:	90                   	nop

000000000001371a <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4dataEv>:
 	           : _AT_Type::_S_ref(_M_elems, 0);
      }

      [[__gnu__::__const__, __nodiscard__]]
      _GLIBCXX17_CONSTEXPR pointer
      data() noexcept
   1371a:	55                   	push   %rbp
   1371b:	48 89 e5             	mov    %rsp,%rbp
   1371e:	48 83 ec 10          	sub    $0x10,%rsp
   13722:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _AT_Type::_S_ptr(_M_elems); }
   13726:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1372a:	48 89 c7             	mov    %rax,%rdi
   1372d:	e8 02 00 00 00       	call   13734 <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_ptrERA2_KS0_>
   13732:	c9                   	leave
   13733:	c3                   	ret

0000000000013734 <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_ptrERA2_KS0_>:
      _S_ptr(const _Type& __t) noexcept
   13734:	55                   	push   %rbp
   13735:	48 89 e5             	mov    %rsp,%rbp
   13738:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return const_cast<_Tp*>(__t); }
   1373c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13740:	5d                   	pop    %rbp
   13741:	c3                   	ret

0000000000013742 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   13742:	55                   	push   %rbp
   13743:	48 89 e5             	mov    %rsp,%rbp
   13746:	48 83 ec 10          	sub    $0x10,%rsp
   1374a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1374e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13752:	48 89 c7             	mov    %rax,%rdi
   13755:	e8 3c 11 00 00       	call   14896 <_ZNSaIP13VkImageView_TED1Ev>
   1375a:	90                   	nop
   1375b:	c9                   	leave
   1375c:	c3                   	ret
   1375d:	90                   	nop

000000000001375e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   1375e:	55                   	push   %rbp
   1375f:	48 89 e5             	mov    %rsp,%rbp
   13762:	48 83 ec 10          	sub    $0x10,%rsp
   13766:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1376a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1376e:	48 89 c7             	mov    %rax,%rdi
   13771:	e8 74 18 00 00       	call   14fea <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>
   13776:	90                   	nop
   13777:	c9                   	leave
   13778:	c3                   	ret
   13779:	90                   	nop

000000000001377a <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>:
      vector() = default;
   1377a:	55                   	push   %rbp
   1377b:	48 89 e5             	mov    %rsp,%rbp
   1377e:	48 83 ec 10          	sub    $0x10,%rsp
   13782:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13786:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1378a:	48 89 c7             	mov    %rax,%rdi
   1378d:	e8 cc ff ff ff       	call   1375e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>
   13792:	90                   	nop
   13793:	c9                   	leave
   13794:	c3                   	ret
   13795:	90                   	nop

0000000000013796 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   13796:	55                   	push   %rbp
   13797:	48 89 e5             	mov    %rsp,%rbp
   1379a:	48 83 ec 10          	sub    $0x10,%rsp
   1379e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   137a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137a6:	48 89 c7             	mov    %rax,%rdi
   137a9:	e8 b2 18 00 00       	call   15060 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>
   137ae:	90                   	nop
   137af:	c9                   	leave
   137b0:	c3                   	ret
   137b1:	90                   	nop

00000000000137b2 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>:
      vector() = default;
   137b2:	55                   	push   %rbp
   137b3:	48 89 e5             	mov    %rsp,%rbp
   137b6:	48 83 ec 10          	sub    $0x10,%rsp
   137ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   137be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137c2:	48 89 c7             	mov    %rax,%rdi
   137c5:	e8 cc ff ff ff       	call   13796 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>
   137ca:	90                   	nop
   137cb:	c9                   	leave
   137cc:	c3                   	ret
   137cd:	90                   	nop

00000000000137ce <_ZN3vkh23GraphicsPipelineWrapperC1Ev>:
struct GraphicsPipelineWrapper {
   137ce:	55                   	push   %rbp
   137cf:	48 89 e5             	mov    %rsp,%rbp
   137d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   137d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137da:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   137e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137e5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   137ec:	00 
   137ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137f1:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   137f8:	00 
   137f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137fd:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   13804:	00 
   13805:	90                   	nop
   13806:	5d                   	pop    %rbp
   13807:	c3                   	ret

0000000000013808 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   13808:	55                   	push   %rbp
   13809:	48 89 e5             	mov    %rsp,%rbp
   1380c:	48 83 ec 10          	sub    $0x10,%rsp
   13810:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13814:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13818:	48 89 c7             	mov    %rax,%rdi
   1381b:	e8 90 18 00 00       	call   150b0 <_ZNSaIP15VkFramebuffer_TED1Ev>
   13820:	90                   	nop
   13821:	c9                   	leave
   13822:	c3                   	ret
   13823:	90                   	nop

0000000000013824 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   13824:	55                   	push   %rbp
   13825:	48 89 e5             	mov    %rsp,%rbp
   13828:	48 83 ec 10          	sub    $0x10,%rsp
   1382c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13830:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13834:	48 89 c7             	mov    %rax,%rdi
   13837:	e8 4c 18 00 00       	call   15088 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implC1Ev>
   1383c:	90                   	nop
   1383d:	c9                   	leave
   1383e:	c3                   	ret
   1383f:	90                   	nop

0000000000013840 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEC1Ev>:
      vector() = default;
   13840:	55                   	push   %rbp
   13841:	48 89 e5             	mov    %rsp,%rbp
   13844:	48 83 ec 10          	sub    $0x10,%rsp
   13848:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1384c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13850:	48 89 c7             	mov    %rax,%rdi
   13853:	e8 cc ff ff ff       	call   13824 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EEC1Ev>
   13858:	90                   	nop
   13859:	c9                   	leave
   1385a:	c3                   	ret
   1385b:	90                   	nop

000000000001385c <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   1385c:	55                   	push   %rbp
   1385d:	48 89 e5             	mov    %rsp,%rbp
   13860:	48 83 ec 10          	sub    $0x10,%rsp
   13864:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13868:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1386c:	48 89 c7             	mov    %rax,%rdi
   1386f:	e8 ea 18 00 00       	call   1515e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1Ev>
   13874:	90                   	nop
   13875:	c9                   	leave
   13876:	c3                   	ret
   13877:	90                   	nop

0000000000013878 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1Ev>:
      vector() = default;
   13878:	55                   	push   %rbp
   13879:	48 89 e5             	mov    %rsp,%rbp
   1387c:	48 83 ec 10          	sub    $0x10,%rsp
   13880:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13884:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13888:	48 89 c7             	mov    %rax,%rdi
   1388b:	e8 cc ff ff ff       	call   1385c <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1Ev>
   13890:	90                   	nop
   13891:	c9                   	leave
   13892:	c3                   	ret
   13893:	90                   	nop

0000000000013894 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   13894:	55                   	push   %rbp
   13895:	48 89 e5             	mov    %rsp,%rbp
   13898:	48 83 ec 10          	sub    $0x10,%rsp
   1389c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   138a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138a4:	48 89 c7             	mov    %rax,%rdi
   138a7:	e8 e6 14 00 00       	call   14d92 <_ZNSaIP13VkSemaphore_TED1Ev>
   138ac:	90                   	nop
   138ad:	c9                   	leave
   138ae:	c3                   	ret
   138af:	90                   	nop

00000000000138b0 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   138b0:	55                   	push   %rbp
   138b1:	48 89 e5             	mov    %rsp,%rbp
   138b4:	48 83 ec 10          	sub    $0x10,%rsp
   138b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   138bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138c0:	48 89 c7             	mov    %rax,%rdi
   138c3:	e8 be 18 00 00       	call   15186 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1Ev>
   138c8:	90                   	nop
   138c9:	c9                   	leave
   138ca:	c3                   	ret
   138cb:	90                   	nop

00000000000138cc <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1Ev>:
      vector() = default;
   138cc:	55                   	push   %rbp
   138cd:	48 89 e5             	mov    %rsp,%rbp
   138d0:	48 83 ec 10          	sub    $0x10,%rsp
   138d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   138d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138dc:	48 89 c7             	mov    %rax,%rdi
   138df:	e8 cc ff ff ff       	call   138b0 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1Ev>
   138e4:	90                   	nop
   138e5:	c9                   	leave
   138e6:	c3                   	ret
   138e7:	90                   	nop

00000000000138e8 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   138e8:	55                   	push   %rbp
   138e9:	48 89 e5             	mov    %rsp,%rbp
   138ec:	48 83 ec 10          	sub    $0x10,%rsp
   138f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   138f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138f8:	48 89 c7             	mov    %rax,%rdi
   138fb:	e8 24 19 00 00       	call   15224 <_ZNSaIP9VkFence_TED1Ev>
   13900:	90                   	nop
   13901:	c9                   	leave
   13902:	c3                   	ret
   13903:	90                   	nop

0000000000013904 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   13904:	55                   	push   %rbp
   13905:	48 89 e5             	mov    %rsp,%rbp
   13908:	48 83 ec 10          	sub    $0x10,%rsp
   1390c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13910:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13914:	48 89 c7             	mov    %rax,%rdi
   13917:	e8 e0 18 00 00       	call   151fc <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implC1Ev>
   1391c:	90                   	nop
   1391d:	c9                   	leave
   1391e:	c3                   	ret
   1391f:	90                   	nop

0000000000013920 <_ZNSt6vectorIP9VkFence_TSaIS1_EEC1Ev>:
      vector() = default;
   13920:	55                   	push   %rbp
   13921:	48 89 e5             	mov    %rsp,%rbp
   13924:	48 83 ec 10          	sub    $0x10,%rsp
   13928:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1392c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13930:	48 89 c7             	mov    %rax,%rdi
   13933:	e8 cc ff ff ff       	call   13904 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EEC1Ev>
   13938:	90                   	nop
   13939:	c9                   	leave
   1393a:	c3                   	ret
   1393b:	90                   	nop

000000000001393c <_ZN9VulkanApp11SyncWrapperC1Ev>:
  void createVertexBuffer();

  void createIndexBuffer();

  /* Step 12: Synchronization and cache control */
  struct SyncWrapper {
   1393c:	55                   	push   %rbp
   1393d:	48 89 e5             	mov    %rsp,%rbp
   13940:	48 83 ec 10          	sub    $0x10,%rsp
   13944:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13948:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1394c:	48 89 c7             	mov    %rax,%rdi
   1394f:	e8 78 ff ff ff       	call   138cc <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1Ev>
   13954:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13958:	48 83 c0 18          	add    $0x18,%rax
   1395c:	48 89 c7             	mov    %rax,%rdi
   1395f:	e8 68 ff ff ff       	call   138cc <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1Ev>
   13964:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13968:	48 83 c0 30          	add    $0x30,%rax
   1396c:	48 89 c7             	mov    %rax,%rdi
   1396f:	e8 ac ff ff ff       	call   13920 <_ZNSt6vectorIP9VkFence_TSaIS1_EEC1Ev>
   13974:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13978:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
   1397f:	00 
   13980:	90                   	nop
   13981:	c9                   	leave
   13982:	c3                   	ret
   13983:	90                   	nop

0000000000013984 <_ZN9VulkanApp11SyncWrapperD1Ev>:
   13984:	55                   	push   %rbp
   13985:	48 89 e5             	mov    %rsp,%rbp
   13988:	48 83 ec 10          	sub    $0x10,%rsp
   1398c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13990:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13994:	48 83 c0 30          	add    $0x30,%rax
   13998:	48 89 c7             	mov    %rax,%rdi
   1399b:	e8 ee 18 00 00       	call   1528e <_ZNSt6vectorIP9VkFence_TSaIS1_EED1Ev>
   139a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139a4:	48 83 c0 18          	add    $0x18,%rax
   139a8:	48 89 c7             	mov    %rax,%rdi
   139ab:	e8 86 14 00 00       	call   14e36 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   139b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139b4:	48 89 c7             	mov    %rax,%rdi
   139b7:	e8 7a 14 00 00       	call   14e36 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   139bc:	90                   	nop
   139bd:	c9                   	leave
   139be:	c3                   	ret
   139bf:	90                   	nop

00000000000139c0 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   139c0:	55                   	push   %rbp
   139c1:	48 89 e5             	mov    %rsp,%rbp
   139c4:	53                   	push   %rbx
   139c5:	48 83 ec 38          	sub    $0x38,%rsp
   139c9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   139cd:	48 89 f0             	mov    %rsi,%rax
   139d0:	48 89 d6             	mov    %rdx,%rsi
   139d3:	48 89 f2             	mov    %rsi,%rdx
   139d6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   139da:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   139de:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   139e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   139e6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   139ea:	48 89 d6             	mov    %rdx,%rsi
   139ed:	48 89 c7             	mov    %rax,%rdi
   139f0:	e8 f1 19 00 00       	call   153e6 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   139f5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   139f9:	48 89 c7             	mov    %rax,%rdi
   139fc:	e8 1d 1a 00 00       	call   1541e <_ZNKSt16initializer_listIPKcE3endEv>
   13a01:	48 89 c3             	mov    %rax,%rbx
   13a04:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13a08:	48 89 c7             	mov    %rax,%rdi
   13a0b:	e8 fc 19 00 00       	call   1540c <_ZNKSt16initializer_listIPKcE5beginEv>
   13a10:	48 89 c1             	mov    %rax,%rcx
   13a13:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13a17:	48 89 da             	mov    %rbx,%rdx
   13a1a:	48 89 ce             	mov    %rcx,%rsi
   13a1d:	48 89 c7             	mov    %rax,%rdi
   13a20:	e8 5f 1a 00 00       	call   15484 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   13a25:	eb 1a                	jmp    13a41 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   13a27:	48 89 c3             	mov    %rax,%rbx
   13a2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13a2e:	48 89 c7             	mov    %rax,%rdi
   13a31:	e8 30 60 ff ff       	call   9a66 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   13a36:	48 89 d8             	mov    %rbx,%rax
   13a39:	48 89 c7             	mov    %rax,%rdi
   13a3c:	e8 bf 0e ff ff       	call   4900 <_Unwind_Resume@plt>
   13a41:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13a45:	c9                   	leave
   13a46:	c3                   	ret
   13a47:	90                   	nop

0000000000013a48 <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   13a48:	55                   	push   %rbp
   13a49:	48 89 e5             	mov    %rsp,%rbp
   13a4c:	48 83 ec 10          	sub    $0x10,%rsp
   13a50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   13a54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a58:	48 89 c7             	mov    %rax,%rdi
   13a5b:	e8 be 6e ff ff       	call   a91e <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   13a60:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   13a63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a67:	48 8b 48 08          	mov    0x8(%rax),%rcx
   13a6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a6f:	48 8b 00             	mov    (%rax),%rax
   13a72:	48 89 ce             	mov    %rcx,%rsi
   13a75:	48 89 c7             	mov    %rax,%rdi
   13a78:	e8 b6 1a 00 00       	call   15533 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
   13a7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a81:	48 89 c7             	mov    %rax,%rdi
   13a84:	e8 dd 5f ff ff       	call   9a66 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   13a89:	90                   	nop
   13a8a:	c9                   	leave
   13a8b:	c3                   	ret

0000000000013a8c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   13a8c:	55                   	push   %rbp
   13a8d:	48 89 e5             	mov    %rsp,%rbp
   13a90:	48 83 ec 20          	sub    $0x20,%rsp
   13a94:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   13a98:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13a9c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13aa0:	48 89 d6             	mov    %rdx,%rsi
   13aa3:	48 89 c7             	mov    %rax,%rdi
   13aa6:	e8 b3 1a 00 00       	call   1555e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   13aab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13aaf:	c9                   	leave
   13ab0:	c3                   	ret
   13ab1:	90                   	nop

0000000000013ab2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   13ab2:	55                   	push   %rbp
   13ab3:	48 89 e5             	mov    %rsp,%rbp
   13ab6:	48 83 ec 20          	sub    $0x20,%rsp
   13aba:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   13abe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ac2:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13ac6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13aca:	48 89 d6             	mov    %rdx,%rsi
   13acd:	48 89 c7             	mov    %rax,%rdi
   13ad0:	e8 89 1a 00 00       	call   1555e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   13ad5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ad9:	c9                   	leave
   13ada:	c3                   	ret

0000000000013adb <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   13adb:	55                   	push   %rbp
   13adc:	48 89 e5             	mov    %rsp,%rbp
   13adf:	53                   	push   %rbx
   13ae0:	48 83 ec 18          	sub    $0x18,%rsp
   13ae4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13ae8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   13aec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13af0:	48 89 c7             	mov    %rax,%rdi
   13af3:	e8 84 1a 00 00       	call   1557c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   13af8:	48 8b 18             	mov    (%rax),%rbx
   13afb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13aff:	48 89 c7             	mov    %rax,%rdi
   13b02:	e8 75 1a 00 00       	call   1557c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   13b07:	48 8b 00             	mov    (%rax),%rax
   13b0a:	48 39 c3             	cmp    %rax,%rbx
   13b0d:	0f 95 c0             	setne  %al
   13b10:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13b14:	c9                   	leave
   13b15:	c3                   	ret

0000000000013b16 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   13b16:	55                   	push   %rbp
   13b17:	48 89 e5             	mov    %rsp,%rbp
   13b1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   13b1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b22:	48 8b 00             	mov    (%rax),%rax
   13b25:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13b29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b2d:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   13b30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   13b34:	5d                   	pop    %rbp
   13b35:	c3                   	ret

0000000000013b36 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   13b36:	55                   	push   %rbp
   13b37:	48 89 e5             	mov    %rsp,%rbp
   13b3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   13b3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b42:	48 8b 00             	mov    (%rax),%rax
   13b45:	5d                   	pop    %rbp
   13b46:	c3                   	ret
   13b47:	90                   	nop

0000000000013b48 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
   13b48:	55                   	push   %rbp
   13b49:	48 89 e5             	mov    %rsp,%rbp
   13b4c:	53                   	push   %rbx
   13b4d:	48 83 ec 18          	sub    $0x18,%rsp
   13b51:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13b55:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   13b59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b5d:	48 8b 50 08          	mov    0x8(%rax),%rdx
   13b61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b65:	48 8b 40 10          	mov    0x10(%rax),%rax
   13b69:	48 39 c2             	cmp    %rax,%rdx
   13b6c:	74 3c                	je     13baa <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
   13b6e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13b72:	48 89 c7             	mov    %rax,%rdi
   13b75:	e8 10 1a 00 00       	call   1558a <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   13b7a:	48 89 c2             	mov    %rax,%rdx
   13b7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b81:	48 8b 48 08          	mov    0x8(%rax),%rcx
   13b85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b89:	48 89 ce             	mov    %rcx,%rsi
   13b8c:	48 89 c7             	mov    %rax,%rdi
   13b8f:	e8 04 1a 00 00       	call   15598 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
   13b94:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b98:	48 8b 40 08          	mov    0x8(%rax),%rax
   13b9c:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13ba0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ba4:	48 89 50 08          	mov    %rdx,0x8(%rax)
   13ba8:	eb 30                	jmp    13bda <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
   13baa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13bae:	48 89 c7             	mov    %rax,%rdi
   13bb1:	e8 d4 19 00 00       	call   1558a <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   13bb6:	48 89 c3             	mov    %rax,%rbx
   13bb9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13bbd:	48 89 c7             	mov    %rax,%rdi
   13bc0:	e8 ed fe ff ff       	call   13ab2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   13bc5:	48 89 c1             	mov    %rax,%rcx
   13bc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13bcc:	48 89 da             	mov    %rbx,%rdx
   13bcf:	48 89 ce             	mov    %rcx,%rsi
   13bd2:	48 89 c7             	mov    %rax,%rdi
   13bd5:	e8 f8 19 00 00       	call   155d2 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
   13bda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13bde:	48 89 c7             	mov    %rax,%rdi
   13be1:	e8 7e 1b 00 00       	call   15764 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
   13be6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13bea:	c9                   	leave
   13beb:	c3                   	ret

0000000000013bec <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   13bec:	55                   	push   %rbp
   13bed:	48 89 e5             	mov    %rsp,%rbp
   13bf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   13bf4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13bf8:	48 8b 50 08          	mov    0x8(%rax),%rdx
   13bfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c00:	48 8b 00             	mov    (%rax),%rax
   13c03:	48 29 c2             	sub    %rax,%rdx
   13c06:	48 89 d0             	mov    %rdx,%rax
   13c09:	48 c1 f8 03          	sar    $0x3,%rax
   13c0d:	5d                   	pop    %rbp
   13c0e:	c3                   	ret
   13c0f:	90                   	nop

0000000000013c10 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   13c10:	55                   	push   %rbp
   13c11:	48 89 e5             	mov    %rsp,%rbp
   13c14:	48 83 ec 10          	sub    $0x10,%rsp
   13c18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   13c1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c20:	48 8b 10             	mov    (%rax),%rdx
   13c23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c27:	48 89 d6             	mov    %rdx,%rsi
   13c2a:	48 89 c7             	mov    %rax,%rdi
   13c2d:	e8 72 1b 00 00       	call   157a4 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   13c32:	c9                   	leave
   13c33:	c3                   	ret

0000000000013c34 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   13c34:	55                   	push   %rbp
   13c35:	48 89 e5             	mov    %rsp,%rbp
   13c38:	48 83 ec 10          	sub    $0x10,%rsp
   13c3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   13c40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c44:	48 8b 10             	mov    (%rax),%rdx
   13c47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c4b:	48 89 d6             	mov    %rdx,%rsi
   13c4e:	48 89 c7             	mov    %rax,%rdi
   13c51:	e8 4e 1b 00 00       	call   157a4 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   13c56:	c9                   	leave
   13c57:	c3                   	ret

0000000000013c58 <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   13c58:	55                   	push   %rbp
   13c59:	48 89 e5             	mov    %rsp,%rbp
   13c5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   13c60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c64:	48 8b 50 08          	mov    0x8(%rax),%rdx
   13c68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c6c:	48 8b 00             	mov    (%rax),%rax
   13c6f:	48 29 c2             	sub    %rax,%rdx
   13c72:	48 c1 fa 02          	sar    $0x2,%rdx
   13c76:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
   13c7d:	db b6 6d 
   13c80:	48 0f af c2          	imul   %rdx,%rax
   13c84:	5d                   	pop    %rbp
   13c85:	c3                   	ret

0000000000013c86 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>:
      constexpr bool has_value() const noexcept
   13c86:	55                   	push   %rbp
   13c87:	48 89 e5             	mov    %rsp,%rbp
   13c8a:	48 83 ec 10          	sub    $0x10,%rsp
   13c8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   13c92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c96:	48 89 c7             	mov    %rax,%rdi
   13c99:	e8 dc 71 ff ff       	call   ae7a <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   13c9e:	c9                   	leave
   13c9f:	c3                   	ret

0000000000013ca0 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>:
      value()&
   13ca0:	55                   	push   %rbp
   13ca1:	48 89 e5             	mov    %rsp,%rbp
   13ca4:	48 83 ec 10          	sub    $0x10,%rsp
   13ca8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_is_engaged())
   13cac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13cb0:	48 89 c7             	mov    %rax,%rdi
   13cb3:	e8 c2 71 ff ff       	call   ae7a <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   13cb8:	84 c0                	test   %al,%al
   13cba:	74 0e                	je     13cca <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2a>
	  return this->_M_get();
   13cbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13cc0:	48 89 c7             	mov    %rax,%rdi
   13cc3:	e8 c4 71 ff ff       	call   ae8c <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
   13cc8:	eb 05                	jmp    13ccf <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2f>
	__throw_bad_optional_access();
   13cca:	e8 1c f8 ff ff       	call   134eb <_ZSt27__throw_bad_optional_accessv>
      }
   13ccf:	c9                   	leave
   13cd0:	c3                   	ret
   13cd1:	90                   	nop

0000000000013cd2 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
   13cd2:	55                   	push   %rbp
   13cd3:	48 89 e5             	mov    %rsp,%rbp
   13cd6:	48 83 ec 20          	sub    $0x20,%rsp
   13cda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13cde:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13ce2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   13ce6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13cea:	48 89 c7             	mov    %rax,%rdi
   13ced:	e8 c4 1a 00 00       	call   157b6 <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>
   13cf2:	8b 10                	mov    (%rax),%edx
   13cf4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13cf8:	89 10                	mov    %edx,(%rax)
   13cfa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13cfe:	48 89 c7             	mov    %rax,%rdi
   13d01:	e8 be 1a 00 00       	call   157c4 <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>
   13d06:	48 89 c1             	mov    %rax,%rcx
   13d09:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   13d0d:	48 8b 01             	mov    (%rcx),%rax
   13d10:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   13d14:	48 89 46 04          	mov    %rax,0x4(%rsi)
   13d18:	48 89 56 0c          	mov    %rdx,0xc(%rsi)
   13d1c:	48 8b 41 10          	mov    0x10(%rcx),%rax
   13d20:	48 89 46 14          	mov    %rax,0x14(%rsi)
   13d24:	90                   	nop
   13d25:	c9                   	leave
   13d26:	c3                   	ret
   13d27:	90                   	nop

0000000000013d28 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>:
	optional(_Up&& __t)
   13d28:	55                   	push   %rbp
   13d29:	48 89 e5             	mov    %rsp,%rbp
   13d2c:	53                   	push   %rbx
   13d2d:	48 83 ec 18          	sub    $0x18,%rsp
   13d31:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13d35:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::in_place, std::forward<_Up>(__t)) { }
   13d39:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   13d3d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13d41:	48 89 c7             	mov    %rax,%rdi
   13d44:	e8 89 1a 00 00       	call   157d2 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   13d49:	48 89 c6             	mov    %rax,%rsi
   13d4c:	48 89 df             	mov    %rbx,%rdi
   13d4f:	e8 b2 1a 00 00       	call   15806 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>
   13d54:	90                   	nop
   13d55:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13d59:	c9                   	leave
   13d5a:	c3                   	ret
   13d5b:	90                   	nop

0000000000013d5c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   13d5c:	55                   	push   %rbp
   13d5d:	48 89 e5             	mov    %rsp,%rbp
   13d60:	48 83 ec 20          	sub    $0x20,%rsp
   13d64:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   13d68:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13d6c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13d70:	48 89 d6             	mov    %rdx,%rsi
   13d73:	48 89 c7             	mov    %rax,%rdi
   13d76:	e8 bf 1a 00 00       	call   1583a <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   13d7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d7f:	c9                   	leave
   13d80:	c3                   	ret
   13d81:	90                   	nop

0000000000013d82 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   13d82:	55                   	push   %rbp
   13d83:	48 89 e5             	mov    %rsp,%rbp
   13d86:	48 83 ec 20          	sub    $0x20,%rsp
   13d8a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   13d8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13d92:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13d96:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13d9a:	48 89 d6             	mov    %rdx,%rsi
   13d9d:	48 89 c7             	mov    %rax,%rdi
   13da0:	e8 95 1a 00 00       	call   1583a <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   13da5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13da9:	c9                   	leave
   13daa:	c3                   	ret

0000000000013dab <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   13dab:	55                   	push   %rbp
   13dac:	48 89 e5             	mov    %rsp,%rbp
   13daf:	53                   	push   %rbx
   13db0:	48 83 ec 18          	sub    $0x18,%rsp
   13db4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13db8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   13dbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13dc0:	48 89 c7             	mov    %rax,%rdi
   13dc3:	e8 90 1a 00 00       	call   15858 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   13dc8:	48 8b 18             	mov    (%rax),%rbx
   13dcb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13dcf:	48 89 c7             	mov    %rax,%rdi
   13dd2:	e8 81 1a 00 00       	call   15858 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   13dd7:	48 8b 00             	mov    (%rax),%rax
   13dda:	48 39 c3             	cmp    %rax,%rbx
   13ddd:	0f 95 c0             	setne  %al
   13de0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13de4:	c9                   	leave
   13de5:	c3                   	ret

0000000000013de6 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   13de6:	55                   	push   %rbp
   13de7:	48 89 e5             	mov    %rsp,%rbp
   13dea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   13dee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13df2:	48 8b 00             	mov    (%rax),%rax
   13df5:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13df9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13dfd:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   13e00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   13e04:	5d                   	pop    %rbp
   13e05:	c3                   	ret

0000000000013e06 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   13e06:	55                   	push   %rbp
   13e07:	48 89 e5             	mov    %rsp,%rbp
   13e0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   13e0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e12:	48 8b 00             	mov    (%rax),%rax
   13e15:	5d                   	pop    %rbp
   13e16:	c3                   	ret
   13e17:	90                   	nop

0000000000013e18 <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>:
      constexpr bool has_value() const noexcept
   13e18:	55                   	push   %rbp
   13e19:	48 89 e5             	mov    %rsp,%rbp
   13e1c:	48 83 ec 10          	sub    $0x10,%rsp
   13e20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   13e24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e28:	48 89 c7             	mov    %rax,%rdi
   13e2b:	e8 68 f8 ff ff       	call   13698 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   13e30:	c9                   	leave
   13e31:	c3                   	ret

0000000000013e32 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>:
      operator=(const _Optional_payload& __other)
   13e32:	55                   	push   %rbp
   13e33:	48 89 e5             	mov    %rsp,%rbp
   13e36:	48 83 ec 10          	sub    $0x10,%rsp
   13e3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13e3e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_copy_assign(__other);
   13e42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e46:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13e4a:	48 89 d6             	mov    %rdx,%rsi
   13e4d:	48 89 c7             	mov    %rax,%rdi
   13e50:	e8 11 1a 00 00       	call   15866 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>
	return *this;
   13e55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   13e59:	c9                   	leave
   13e5a:	c3                   	ret
   13e5b:	90                   	nop

0000000000013e5c <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
   13e5c:	55                   	push   %rbp
   13e5d:	48 89 e5             	mov    %rsp,%rbp
   13e60:	48 83 ec 10          	sub    $0x10,%rsp
   13e64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
   13e68:	e8 a0 10 ff ff       	call   4f0d <_ZSt23__is_constant_evaluatedv>
   13e6d:	84 c0                	test   %al,%al
   13e6f:	74 1a                	je     13e8b <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   13e71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e75:	48 89 c7             	mov    %rax,%rdi
   13e78:	e8 1b f8 ff ff       	call   13698 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   13e7d:	83 f0 01             	xor    $0x1,%eax
   13e80:	84 c0                	test   %al,%al
   13e82:	74 07                	je     13e8b <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   13e84:	b8 01 00 00 00       	mov    $0x1,%eax
   13e89:	eb 05                	jmp    13e90 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x34>
   13e8b:	b8 00 00 00 00       	mov    $0x0,%eax
   13e90:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
   13e92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e96:	48 89 c7             	mov    %rax,%rdi
   13e99:	e8 5a 1a 00 00       	call   158f8 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
      }
   13e9e:	c9                   	leave
   13e9f:	c3                   	ret

0000000000013ea0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
   13ea0:	55                   	push   %rbp
   13ea1:	48 89 e5             	mov    %rsp,%rbp
   13ea4:	48 83 ec 10          	sub    $0x10,%rsp
   13ea8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
   13eac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13eb0:	48 89 c7             	mov    %rax,%rdi
   13eb3:	e8 4e 1a 00 00       	call   15906 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   13eb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ebc:	48 89 c7             	mov    %rax,%rdi
   13ebf:	e8 5e 1a 00 00       	call   15922 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
   13ec4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ec8:	48 83 c0 08          	add    $0x8,%rax
   13ecc:	48 89 c7             	mov    %rax,%rdi
   13ecf:	e8 58 f6 ff ff       	call   1352c <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
   13ed4:	90                   	nop
   13ed5:	c9                   	leave
   13ed6:	c3                   	ret
   13ed7:	90                   	nop

0000000000013ed8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   13ed8:	55                   	push   %rbp
   13ed9:	48 89 e5             	mov    %rsp,%rbp
   13edc:	48 83 ec 10          	sub    $0x10,%rsp
   13ee0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13ee4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ee8:	48 89 c7             	mov    %rax,%rdi
   13eeb:	e8 3e 1a 00 00       	call   1592e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   13ef0:	90                   	nop
   13ef1:	c9                   	leave
   13ef2:	c3                   	ret
   13ef3:	90                   	nop

0000000000013ef4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
   13ef4:	55                   	push   %rbp
   13ef5:	48 89 e5             	mov    %rsp,%rbp
   13ef8:	48 83 ec 10          	sub    $0x10,%rsp
   13efc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
   13f00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f04:	48 89 c7             	mov    %rax,%rdi
   13f07:	e8 94 1a 00 00       	call   159a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   13f0c:	48 89 c2             	mov    %rax,%rdx
   13f0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f13:	48 89 d6             	mov    %rdx,%rsi
   13f16:	48 89 c7             	mov    %rax,%rdi
   13f19:	e8 1c 1a 00 00       	call   1593a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
   13f1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f22:	48 89 c7             	mov    %rax,%rdi
   13f25:	e8 80 f7 ff ff       	call   136aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
   13f2a:	90                   	nop
   13f2b:	c9                   	leave
   13f2c:	c3                   	ret
   13f2d:	90                   	nop

0000000000013f2e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   13f2e:	55                   	push   %rbp
   13f2f:	48 89 e5             	mov    %rsp,%rbp
   13f32:	48 83 ec 20          	sub    $0x20,%rsp
   13f36:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   13f3a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13f3e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13f42:	48 89 d6             	mov    %rdx,%rsi
   13f45:	48 89 c7             	mov    %rax,%rdi
   13f48:	e8 6d 1a 00 00       	call   159ba <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   13f4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f51:	c9                   	leave
   13f52:	c3                   	ret
   13f53:	90                   	nop

0000000000013f54 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   13f54:	55                   	push   %rbp
   13f55:	48 89 e5             	mov    %rsp,%rbp
   13f58:	48 83 ec 20          	sub    $0x20,%rsp
   13f5c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   13f60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f64:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13f68:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13f6c:	48 89 d6             	mov    %rdx,%rsi
   13f6f:	48 89 c7             	mov    %rax,%rdi
   13f72:	e8 43 1a 00 00       	call   159ba <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   13f77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f7b:	c9                   	leave
   13f7c:	c3                   	ret

0000000000013f7d <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   13f7d:	55                   	push   %rbp
   13f7e:	48 89 e5             	mov    %rsp,%rbp
   13f81:	53                   	push   %rbx
   13f82:	48 83 ec 18          	sub    $0x18,%rsp
   13f86:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13f8a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   13f8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f92:	48 89 c7             	mov    %rax,%rdi
   13f95:	e8 3e 1a 00 00       	call   159d8 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   13f9a:	48 8b 18             	mov    (%rax),%rbx
   13f9d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13fa1:	48 89 c7             	mov    %rax,%rdi
   13fa4:	e8 2f 1a 00 00       	call   159d8 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   13fa9:	48 8b 00             	mov    (%rax),%rax
   13fac:	48 39 c3             	cmp    %rax,%rbx
   13faf:	0f 95 c0             	setne  %al
   13fb2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13fb6:	c9                   	leave
   13fb7:	c3                   	ret

0000000000013fb8 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   13fb8:	55                   	push   %rbp
   13fb9:	48 89 e5             	mov    %rsp,%rbp
   13fbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   13fc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13fc4:	48 8b 00             	mov    (%rax),%rax
   13fc7:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
   13fce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13fd2:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   13fd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   13fd9:	5d                   	pop    %rbp
   13fda:	c3                   	ret
   13fdb:	90                   	nop

0000000000013fdc <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   13fdc:	55                   	push   %rbp
   13fdd:	48 89 e5             	mov    %rsp,%rbp
   13fe0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   13fe4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13fe8:	48 8b 00             	mov    (%rax),%rax
   13feb:	5d                   	pop    %rbp
   13fec:	c3                   	ret
   13fed:	90                   	nop

0000000000013fee <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
   13fee:	55                   	push   %rbp
   13fef:	48 89 e5             	mov    %rsp,%rbp
   13ff2:	53                   	push   %rbx
   13ff3:	48 83 ec 48          	sub    $0x48,%rsp
   13ff7:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   13ffb:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
   13fff:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   14003:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   14007:	48 89 d6             	mov    %rdx,%rsi
   1400a:	48 89 c7             	mov    %rax,%rdi
   1400d:	e8 d4 19 00 00       	call   159e6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
   14012:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
   14016:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1401a:	48 89 c7             	mov    %rax,%rdi
   1401d:	e8 ea 19 00 00       	call   15a0c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
   14022:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   14026:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1402a:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   1402e:	48 89 d6             	mov    %rdx,%rsi
   14031:	48 89 c7             	mov    %rax,%rdi
   14034:	e8 ed 19 00 00       	call   15a26 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   14039:	84 c0                	test   %al,%al
   1403b:	75 32                	jne    1406f <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
   1403d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   14041:	48 89 c7             	mov    %rax,%rdi
   14044:	e8 ff 19 00 00       	call   15a48 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
   14049:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   1404d:	48 89 c7             	mov    %rax,%rdi
   14050:	e8 0f 1a 00 00       	call   15a64 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   14055:	48 89 c2             	mov    %rax,%rdx
   14058:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   1405c:	48 8d 45 de          	lea    -0x22(%rbp),%rax
   14060:	48 89 ce             	mov    %rcx,%rsi
   14063:	48 89 c7             	mov    %rax,%rdi
   14066:	e8 17 1a 00 00       	call   15a82 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1406b:	84 c0                	test   %al,%al
   1406d:	74 07                	je     14076 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
   1406f:	b8 01 00 00 00       	mov    $0x1,%eax
   14074:	eb 05                	jmp    1407b <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
   14076:	b8 00 00 00 00       	mov    $0x0,%eax
   1407b:	84 c0                	test   %al,%al
   1407d:	74 5d                	je     140dc <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   1407f:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
   14083:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   14087:	48 89 c7             	mov    %rax,%rdi
   1408a:	e8 48 13 00 00       	call   153d7 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   1408f:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   14092:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   14096:	48 89 d6             	mov    %rdx,%rsi
   14099:	48 89 c7             	mov    %rax,%rdi
   1409c:	e8 0a 1a 00 00       	call   15aab <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
   140a1:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
   140a5:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   140a9:	48 89 d6             	mov    %rdx,%rsi
   140ac:	48 89 c7             	mov    %rax,%rdi
   140af:	e8 2c 1a 00 00       	call   15ae0 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
   140b4:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
   140b8:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   140bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   140c0:	49 89 c8             	mov    %rcx,%r8
   140c3:	48 89 d1             	mov    %rdx,%rcx
   140c6:	48 8d 15 3b c6 00 00 	lea    0xc63b(%rip),%rdx        # 20708 <_ZSt19piecewise_construct>
   140cd:	48 89 c6             	mov    %rax,%rsi
   140d0:	48 89 df             	mov    %rbx,%rdi
   140d3:	e8 26 1a 00 00       	call   15afe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
   140d8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
   140dc:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   140e0:	48 89 c7             	mov    %rax,%rdi
   140e3:	e8 7c 19 00 00       	call   15a64 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   140e8:	48 83 c0 20          	add    $0x20,%rax
      }
   140ec:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   140f0:	c9                   	leave
   140f1:	c3                   	ret

00000000000140f2 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
   140f2:	55                   	push   %rbp
   140f3:	48 89 e5             	mov    %rsp,%rbp
   140f6:	48 83 ec 20          	sub    $0x20,%rsp
   140fa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
   140fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14102:	48 89 c7             	mov    %rax,%rdi
   14105:	e8 16 1b 00 00       	call   15c20 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
   1410a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1410e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14112:	48 89 c7             	mov    %rax,%rdi
   14115:	e8 e0 1a 00 00       	call   15bfa <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
   1411a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1411e:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   14122:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14126:	48 89 d6             	mov    %rdx,%rsi
   14129:	48 89 c7             	mov    %rax,%rdi
   1412c:	e8 18 1b 00 00       	call   15c49 <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   14131:	c9                   	leave
   14132:	c3                   	ret
   14133:	90                   	nop

0000000000014134 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   14134:	55                   	push   %rbp
   14135:	48 89 e5             	mov    %rsp,%rbp
   14138:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1413c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   14140:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14144:	48 8b 00             	mov    (%rax),%rax
   14147:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1414b:	48 c1 e2 03          	shl    $0x3,%rdx
   1414f:	48 01 d0             	add    %rdx,%rax
      }
   14152:	5d                   	pop    %rbp
   14153:	c3                   	ret

0000000000014154 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   14154:	55                   	push   %rbp
   14155:	48 89 e5             	mov    %rsp,%rbp
   14158:	48 83 ec 20          	sub    $0x20,%rsp
   1415c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   14160:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14164:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14168:	48 89 d6             	mov    %rdx,%rsi
   1416b:	48 89 c7             	mov    %rax,%rdi
   1416e:	e8 11 1b 00 00       	call   15c84 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   14173:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14177:	c9                   	leave
   14178:	c3                   	ret
   14179:	90                   	nop

000000000001417a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   1417a:	55                   	push   %rbp
   1417b:	48 89 e5             	mov    %rsp,%rbp
   1417e:	48 83 ec 20          	sub    $0x20,%rsp
   14182:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   14186:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1418a:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1418e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14192:	48 89 d6             	mov    %rdx,%rsi
   14195:	48 89 c7             	mov    %rax,%rdi
   14198:	e8 e7 1a 00 00       	call   15c84 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   1419d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141a1:	c9                   	leave
   141a2:	c3                   	ret

00000000000141a3 <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   141a3:	55                   	push   %rbp
   141a4:	48 89 e5             	mov    %rsp,%rbp
   141a7:	53                   	push   %rbx
   141a8:	48 83 ec 18          	sub    $0x18,%rsp
   141ac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   141b0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   141b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   141b8:	48 89 c7             	mov    %rax,%rdi
   141bb:	e8 e2 1a 00 00       	call   15ca2 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   141c0:	48 8b 18             	mov    (%rax),%rbx
   141c3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   141c7:	48 89 c7             	mov    %rax,%rdi
   141ca:	e8 d3 1a 00 00       	call   15ca2 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   141cf:	48 8b 00             	mov    (%rax),%rax
   141d2:	48 39 c3             	cmp    %rax,%rbx
   141d5:	0f 95 c0             	setne  %al
   141d8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   141dc:	c9                   	leave
   141dd:	c3                   	ret

00000000000141de <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   141de:	55                   	push   %rbp
   141df:	48 89 e5             	mov    %rsp,%rbp
   141e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   141e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141ea:	48 8b 00             	mov    (%rax),%rax
   141ed:	48 8d 50 08          	lea    0x8(%rax),%rdx
   141f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141f5:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   141f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   141fc:	5d                   	pop    %rbp
   141fd:	c3                   	ret

00000000000141fe <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   141fe:	55                   	push   %rbp
   141ff:	48 89 e5             	mov    %rsp,%rbp
   14202:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   14206:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1420a:	48 8b 00             	mov    (%rax),%rax
   1420d:	5d                   	pop    %rbp
   1420e:	c3                   	ret
   1420f:	90                   	nop

0000000000014210 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   14210:	55                   	push   %rbp
   14211:	48 89 e5             	mov    %rsp,%rbp
   14214:	48 83 ec 20          	sub    $0x20,%rsp
   14218:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   1421c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14220:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14224:	48 89 d6             	mov    %rdx,%rsi
   14227:	48 89 c7             	mov    %rax,%rdi
   1422a:	e8 81 1a 00 00       	call   15cb0 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   1422f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14233:	c9                   	leave
   14234:	c3                   	ret
   14235:	90                   	nop

0000000000014236 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   14236:	55                   	push   %rbp
   14237:	48 89 e5             	mov    %rsp,%rbp
   1423a:	48 83 ec 20          	sub    $0x20,%rsp
   1423e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   14242:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14246:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1424a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1424e:	48 89 d6             	mov    %rdx,%rsi
   14251:	48 89 c7             	mov    %rax,%rdi
   14254:	e8 57 1a 00 00       	call   15cb0 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   14259:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1425d:	c9                   	leave
   1425e:	c3                   	ret

000000000001425f <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   1425f:	55                   	push   %rbp
   14260:	48 89 e5             	mov    %rsp,%rbp
   14263:	53                   	push   %rbx
   14264:	48 83 ec 18          	sub    $0x18,%rsp
   14268:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1426c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   14270:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14274:	48 89 c7             	mov    %rax,%rdi
   14277:	e8 52 1a 00 00       	call   15cce <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   1427c:	48 8b 18             	mov    (%rax),%rbx
   1427f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14283:	48 89 c7             	mov    %rax,%rdi
   14286:	e8 43 1a 00 00       	call   15cce <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   1428b:	48 8b 00             	mov    (%rax),%rax
   1428e:	48 39 c3             	cmp    %rax,%rbx
   14291:	0f 95 c0             	setne  %al
   14294:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14298:	c9                   	leave
   14299:	c3                   	ret

000000000001429a <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   1429a:	55                   	push   %rbp
   1429b:	48 89 e5             	mov    %rsp,%rbp
   1429e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   142a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142a6:	48 8b 00             	mov    (%rax),%rax
   142a9:	48 8d 50 04          	lea    0x4(%rax),%rdx
   142ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142b1:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   142b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   142b8:	5d                   	pop    %rbp
   142b9:	c3                   	ret

00000000000142ba <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   142ba:	55                   	push   %rbp
   142bb:	48 89 e5             	mov    %rsp,%rbp
   142be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   142c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142c6:	48 8b 00             	mov    (%rax),%rax
   142c9:	5d                   	pop    %rbp
   142ca:	c3                   	ret
   142cb:	90                   	nop

00000000000142cc <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
   142cc:	55                   	push   %rbp
   142cd:	48 89 e5             	mov    %rsp,%rbp
   142d0:	48 83 ec 20          	sub    $0x20,%rsp
   142d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   142d8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	constexpr bool __move_storage =
   142dc:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
   142e0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   142e4:	48 89 c7             	mov    %rax,%rdi
   142e7:	e8 f0 19 00 00       	call   15cdc <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>
   142ec:	48 89 c2             	mov    %rax,%rdx
   142ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   142f3:	48 89 d6             	mov    %rdx,%rsi
   142f6:	48 89 c7             	mov    %rax,%rdi
   142f9:	e8 ec 19 00 00       	call   15cea <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>
	return *this;
   142fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   14302:	c9                   	leave
   14303:	c3                   	ret

0000000000014304 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   14304:	55                   	push   %rbp
   14305:	48 89 e5             	mov    %rsp,%rbp
   14308:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   1430c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14310:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14314:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14318:	48 8b 00             	mov    (%rax),%rax
   1431b:	48 29 c2             	sub    %rax,%rdx
   1431e:	48 89 d0             	mov    %rdx,%rax
   14321:	48 c1 f8 03          	sar    $0x3,%rax
   14325:	5d                   	pop    %rbp
   14326:	c3                   	ret
   14327:	90                   	nop

0000000000014328 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   14328:	55                   	push   %rbp
   14329:	48 89 e5             	mov    %rsp,%rbp
   1432c:	48 83 ec 10          	sub    $0x10,%rsp
   14330:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14334:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   14338:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1433c:	48 89 c7             	mov    %rax,%rdi
   1433f:	e8 8c 04 00 00       	call   147d0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   14344:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   14348:	0f 92 c0             	setb   %al
   1434b:	84 c0                	test   %al,%al
   1434d:	74 24                	je     14373 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   1434f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14353:	48 89 c7             	mov    %rax,%rdi
   14356:	e8 75 04 00 00       	call   147d0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   1435b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1435f:	48 29 c2             	sub    %rax,%rdx
   14362:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14366:	48 89 d6             	mov    %rdx,%rsi
   14369:	48 89 c7             	mov    %rax,%rdi
   1436c:	e8 1b 1a 00 00       	call   15d8c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>
      }
   14371:	eb 38                	jmp    143ab <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   14373:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14377:	48 89 c7             	mov    %rax,%rdi
   1437a:	e8 51 04 00 00       	call   147d0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   1437f:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   14383:	0f 92 c0             	setb   %al
   14386:	84 c0                	test   %al,%al
   14388:	74 21                	je     143ab <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   1438a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1438e:	48 8b 00             	mov    (%rax),%rax
   14391:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14395:	48 c1 e2 03          	shl    $0x3,%rdx
   14399:	48 01 c2             	add    %rax,%rdx
   1439c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   143a0:	48 89 d6             	mov    %rdx,%rsi
   143a3:	48 89 c7             	mov    %rax,%rdi
   143a6:	e8 eb 1b 00 00       	call   15f96 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   143ab:	90                   	nop
   143ac:	c9                   	leave
   143ad:	c3                   	ret

00000000000143ae <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   143ae:	55                   	push   %rbp
   143af:	48 89 e5             	mov    %rsp,%rbp
   143b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   143b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   143ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   143be:	48 8b 00             	mov    (%rax),%rax
   143c1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   143c5:	48 c1 e2 03          	shl    $0x3,%rdx
   143c9:	48 01 d0             	add    %rdx,%rax
      }
   143cc:	5d                   	pop    %rbp
   143cd:	c3                   	ret

00000000000143ce <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   143ce:	55                   	push   %rbp
   143cf:	48 89 e5             	mov    %rsp,%rbp
   143d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   143d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   143da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   143de:	48 8b 00             	mov    (%rax),%rax
   143e1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   143e5:	48 c1 e2 03          	shl    $0x3,%rdx
   143e9:	48 01 d0             	add    %rdx,%rax
      }
   143ec:	5d                   	pop    %rbp
   143ed:	c3                   	ret

00000000000143ee <_ZN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EE21getBindingDescriptionEv>:
  PosVecType position;
  ColorVecType color;

  static constexpr size_t attributeCount = 2;

  static VkVertexInputBindingDescription getBindingDescription() {
   143ee:	55                   	push   %rbp
   143ef:	48 89 e5             	mov    %rsp,%rbp
    VkVertexInputBindingDescription bindingDescription{};
   143f2:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   143f9:	00 
   143fa:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    bindingDescription.binding = 0;
   14401:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    bindingDescription.stride = sizeof(Vertex);
   14408:	c7 45 ec 14 00 00 00 	movl   $0x14,-0x14(%rbp)
    bindingDescription.inputRate = VK_VERTEX_INPUT_RATE_VERTEX;
   1440f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    return bindingDescription;
   14416:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1441a:	48 89 45 f4          	mov    %rax,-0xc(%rbp)
   1441e:	8b 45 f0             	mov    -0x10(%rbp),%eax
   14421:	89 45 fc             	mov    %eax,-0x4(%rbp)
   14424:	48 8b 45 f4          	mov    -0xc(%rbp),%rax
   14428:	8b 4d fc             	mov    -0x4(%rbp),%ecx
   1442b:	48 89 ca             	mov    %rcx,%rdx
  }
   1442e:	5d                   	pop    %rbp
   1442f:	c3                   	ret

0000000000014430 <_ZN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EE24getAttributeDescriptionsEv>:

  static std::array<VkVertexInputAttributeDescription, attributeCount>
  getAttributeDescriptions() {
   14430:	55                   	push   %rbp
   14431:	48 89 e5             	mov    %rsp,%rbp
   14434:	48 83 ec 10          	sub    $0x10,%rsp
   14438:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    std::array<VkVertexInputAttributeDescription, attributeCount>
        attributeDescriptions{};
   1443c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14440:	66 0f ef c0          	pxor   %xmm0,%xmm0
   14444:	0f 11 00             	movups %xmm0,(%rax)
   14447:	0f 11 40 10          	movups %xmm0,0x10(%rax)

    attributeDescriptions[0].binding = 0;
   1444b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1444f:	be 00 00 00 00       	mov    $0x0,%esi
   14454:	48 89 c7             	mov    %rax,%rdi
   14457:	e8 9a 1b 00 00       	call   15ff6 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   1445c:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    attributeDescriptions[0].location = 0;
   14463:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14467:	be 00 00 00 00       	mov    $0x0,%esi
   1446c:	48 89 c7             	mov    %rax,%rdi
   1446f:	e8 82 1b 00 00       	call   15ff6 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   14474:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    attributeDescriptions[0].format = VK_FORMAT_R32G32_SFLOAT;
   1447a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1447e:	be 00 00 00 00       	mov    $0x0,%esi
   14483:	48 89 c7             	mov    %rax,%rdi
   14486:	e8 6b 1b 00 00       	call   15ff6 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   1448b:	c7 40 08 67 00 00 00 	movl   $0x67,0x8(%rax)
    attributeDescriptions[0].offset = offsetof(Vertex, position);
   14492:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14496:	be 00 00 00 00       	mov    $0x0,%esi
   1449b:	48 89 c7             	mov    %rax,%rdi
   1449e:	e8 53 1b 00 00       	call   15ff6 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   144a3:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)

    attributeDescriptions[1].binding = 0;
   144aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144ae:	be 01 00 00 00       	mov    $0x1,%esi
   144b3:	48 89 c7             	mov    %rax,%rdi
   144b6:	e8 3b 1b 00 00       	call   15ff6 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   144bb:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    attributeDescriptions[1].location = 1;
   144c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144c6:	be 01 00 00 00       	mov    $0x1,%esi
   144cb:	48 89 c7             	mov    %rax,%rdi
   144ce:	e8 23 1b 00 00       	call   15ff6 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   144d3:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    attributeDescriptions[1].format = VK_FORMAT_R32G32B32_SFLOAT;
   144d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144dd:	be 01 00 00 00       	mov    $0x1,%esi
   144e2:	48 89 c7             	mov    %rax,%rdi
   144e5:	e8 0c 1b 00 00       	call   15ff6 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   144ea:	c7 40 08 6a 00 00 00 	movl   $0x6a,0x8(%rax)
    attributeDescriptions[1].offset = offsetof(Vertex, color);
   144f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144f5:	be 01 00 00 00       	mov    $0x1,%esi
   144fa:	48 89 c7             	mov    %rax,%rdi
   144fd:	e8 f4 1a 00 00       	call   15ff6 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   14502:	c7 40 0c 08 00 00 00 	movl   $0x8,0xc(%rax)

    return attributeDescriptions;
   14509:	90                   	nop
  }
   1450a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1450e:	c9                   	leave
   1450f:	c3                   	ret

0000000000014510 <_ZNKSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4sizeEv>:
      size() const noexcept { return _Nm; }
   14510:	55                   	push   %rbp
   14511:	48 89 e5             	mov    %rsp,%rbp
   14514:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14518:	b8 02 00 00 00       	mov    $0x2,%eax
   1451d:	5d                   	pop    %rbp
   1451e:	c3                   	ret
   1451f:	90                   	nop

0000000000014520 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   14520:	55                   	push   %rbp
   14521:	48 89 e5             	mov    %rsp,%rbp
   14524:	48 83 ec 10          	sub    $0x10,%rsp
   14528:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1452c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14530:	48 89 c7             	mov    %rax,%rdi
   14533:	e8 e4 1a 00 00       	call   1601c <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1Ev>
   14538:	90                   	nop
   14539:	c9                   	leave
   1453a:	c3                   	ret
   1453b:	90                   	nop

000000000001453c <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   1453c:	55                   	push   %rbp
   1453d:	48 89 e5             	mov    %rsp,%rbp
   14540:	48 83 ec 10          	sub    $0x10,%rsp
   14544:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14548:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1454c:	48 89 c7             	mov    %rax,%rdi
   1454f:	e8 d4 1a 00 00       	call   16028 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoED1Ev>
   14554:	90                   	nop
   14555:	c9                   	leave
   14556:	c3                   	ret
   14557:	90                   	nop

0000000000014558 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>:
      vector(initializer_list<value_type> __l,
   14558:	55                   	push   %rbp
   14559:	48 89 e5             	mov    %rsp,%rbp
   1455c:	53                   	push   %rbx
   1455d:	48 83 ec 38          	sub    $0x38,%rsp
   14561:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14565:	48 89 f0             	mov    %rsi,%rax
   14568:	48 89 d6             	mov    %rdx,%rsi
   1456b:	48 89 f2             	mov    %rsi,%rdx
   1456e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   14572:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   14576:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   1457a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1457e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   14582:	48 89 d6             	mov    %rdx,%rsi
   14585:	48 89 c7             	mov    %rax,%rdi
   14588:	e8 c3 1a 00 00       	call   16050 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ERKS1_>
	_M_range_initialize(__l.begin(), __l.end(),
   1458d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14591:	48 89 c7             	mov    %rax,%rdi
   14594:	e8 47 1b 00 00       	call   160e0 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE3endEv>
   14599:	48 89 c3             	mov    %rax,%rbx
   1459c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   145a0:	48 89 c7             	mov    %rax,%rdi
   145a3:	e8 26 1b 00 00       	call   160ce <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>
   145a8:	48 89 c1             	mov    %rax,%rcx
   145ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   145af:	48 89 da             	mov    %rbx,%rdx
   145b2:	48 89 ce             	mov    %rcx,%rsi
   145b5:	48 89 c7             	mov    %rax,%rdi
   145b8:	e8 97 1b 00 00       	call   16154 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>
      }
   145bd:	eb 1a                	jmp    145d9 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_+0x81>
   145bf:	48 89 c3             	mov    %rax,%rbx
   145c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   145c6:	48 89 c7             	mov    %rax,%rdi
   145c9:	e8 a8 1a 00 00       	call   16076 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   145ce:	48 89 d8             	mov    %rbx,%rax
   145d1:	48 89 c7             	mov    %rax,%rdi
   145d4:	e8 27 03 ff ff       	call   4900 <_Unwind_Resume@plt>
   145d9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   145dd:	c9                   	leave
   145de:	c3                   	ret
   145df:	90                   	nop

00000000000145e0 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   145e0:	55                   	push   %rbp
   145e1:	48 89 e5             	mov    %rsp,%rbp
   145e4:	48 83 ec 10          	sub    $0x10,%rsp
   145e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   145ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145f0:	48 89 c7             	mov    %rax,%rdi
   145f3:	e8 16 1c 00 00       	call   1620e <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   145f8:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   145fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145ff:	48 8b 48 08          	mov    0x8(%rax),%rcx
   14603:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14607:	48 8b 00             	mov    (%rax),%rax
   1460a:	48 89 ce             	mov    %rcx,%rsi
   1460d:	48 89 c7             	mov    %rax,%rdi
   14610:	e8 07 1c 00 00       	call   1621c <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoS0_EvT_S2_RSaIT0_E>
      }
   14615:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14619:	48 89 c7             	mov    %rax,%rdi
   1461c:	e8 55 1a 00 00       	call   16076 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   14621:	90                   	nop
   14622:	c9                   	leave
   14623:	c3                   	ret

0000000000014624 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   14624:	55                   	push   %rbp
   14625:	48 89 e5             	mov    %rsp,%rbp
   14628:	48 83 ec 10          	sub    $0x10,%rsp
   1462c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14630:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14634:	48 89 c7             	mov    %rax,%rdi
   14637:	e8 54 1c 00 00       	call   16290 <_ZNSaIP12VkPipeline_TED1Ev>
   1463c:	90                   	nop
   1463d:	c9                   	leave
   1463e:	c3                   	ret

000000000001463f <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks>:
    pipelineType, VkComputePipelineCreateInfo, VkGraphicsPipelineCreateInfo,
    VkRayTracingPipelineCreateInfoKHR, VkRayTracingPipelineCreateInfoNV>;

template <PipelineType pipelineType = Graphics>
std::vector<VkPipeline>
createPipelines(VkDevice device, VkPipelineCache pipelineCache,
   1463f:	55                   	push   %rbp
   14640:	48 89 e5             	mov    %rsp,%rbp
   14643:	41 54                	push   %r12
   14645:	53                   	push   %rbx
   14646:	48 83 ec 40          	sub    $0x40,%rsp
   1464a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1464e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   14652:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   14656:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   1465a:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
                const std::vector<pipelineInfoType<pipelineType>> &createInfos,
                const VkAllocationCallbacks *pAllocator = nullptr) {
  uint32_t pipelineCount = static_cast<uint32_t>(createInfos.size());
   1465e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   14662:	48 89 c7             	mov    %rax,%rdi
   14665:	e8 dc 1b 00 00       	call   16246 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4sizeEv>
   1466a:	89 45 ec             	mov    %eax,-0x14(%rbp)
  std::vector<VkPipeline> pipelines{pipelineCount};
   1466d:	8b 5d ec             	mov    -0x14(%rbp),%ebx
   14670:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   14674:	48 89 c7             	mov    %rax,%rdi
   14677:	e8 f8 1b 00 00       	call   16274 <_ZNSaIP12VkPipeline_TEC1Ev>
   1467c:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
   14680:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14684:	48 89 de             	mov    %rbx,%rsi
   14687:	48 89 c7             	mov    %rax,%rdi
   1468a:	e8 1d 1c 00 00       	call   162ac <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_>
   1468f:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   14693:	48 89 c7             	mov    %rax,%rdi
   14696:	e8 f5 1b 00 00       	call   16290 <_ZNSaIP12VkPipeline_TED1Ev>
  if constexpr (pipelineType == Compute) {
    result = vkCreateComputePipelines(device, pipelineCache, pipelineCount,
                                      createInfos.data(), pAllocator,
                                      pipelines.data());
  } else if (pipelineType == Graphics) {
    result = vkCreateGraphicsPipelines(device, pipelineCache, pipelineCount,
   1469b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1469f:	48 89 c7             	mov    %rax,%rdi
   146a2:	e8 9f 1c 00 00       	call   16346 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4dataEv>
   146a7:	48 89 c3             	mov    %rax,%rbx
   146aa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   146ae:	48 89 c7             	mov    %rax,%rdi
   146b1:	e8 6c 1c 00 00       	call   16322 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4dataEv>
   146b6:	48 89 c1             	mov    %rax,%rcx
   146b9:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   146bd:	8b 55 ec             	mov    -0x14(%rbp),%edx
   146c0:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   146c4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   146c8:	49 89 d9             	mov    %rbx,%r9
   146cb:	49 89 f8             	mov    %rdi,%r8
   146ce:	48 89 c7             	mov    %rax,%rdi
   146d1:	e8 da fa fe ff       	call   41b0 <vkCreateGraphicsPipelines@plt>
   146d6:	89 45 e8             	mov    %eax,-0x18(%rbp)
                                       createInfos.data(), pAllocator,
                                       pipelines.data());
  } else {
    throw std::runtime_error("Unknown pipeline type.");
  }
  if (result != VK_SUCCESS) {
   146d9:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
   146dd:	74 7f                	je     1475e <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks+0x11f>
    throw std::runtime_error("Failed to create pipelines.");
   146df:	bf 10 00 00 00       	mov    $0x10,%edi
   146e4:	e8 d7 fa fe ff       	call   41c0 <__cxa_allocate_exception@plt>
   146e9:	48 89 c3             	mov    %rax,%rbx
   146ec:	48 8d 05 d7 ca 00 00 	lea    0xcad7(%rip),%rax        # 211ca <_ZZN9VulkanApp6renderEvE11submitCount+0x29e>
   146f3:	48 89 c6             	mov    %rax,%rsi
   146f6:	48 89 df             	mov    %rbx,%rdi
   146f9:	e8 32 fa fe ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
   146fe:	48 8b 05 a3 c8 01 00 	mov    0x1c8a3(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   14705:	48 89 c2             	mov    %rax,%rdx
   14708:	48 8d 05 31 c6 01 00 	lea    0x1c631(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   1470f:	48 89 c6             	mov    %rax,%rsi
   14712:	48 89 df             	mov    %rbx,%rdi
   14715:	e8 76 01 ff ff       	call   4890 <__cxa_throw@plt>
  std::vector<VkPipeline> pipelines{pipelineCount};
   1471a:	48 89 c3             	mov    %rax,%rbx
   1471d:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   14721:	48 89 c7             	mov    %rax,%rdi
   14724:	e8 67 1b 00 00       	call   16290 <_ZNSaIP12VkPipeline_TED1Ev>
   14729:	48 89 d8             	mov    %rbx,%rax
   1472c:	48 89 c7             	mov    %rax,%rdi
   1472f:	e8 cc 01 ff ff       	call   4900 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to create pipelines.");
   14734:	49 89 c4             	mov    %rax,%r12
   14737:	48 89 df             	mov    %rbx,%rdi
   1473a:	e8 91 fb fe ff       	call   42d0 <__cxa_free_exception@plt>
   1473f:	4c 89 e3             	mov    %r12,%rbx
   14742:	eb 03                	jmp    14747 <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks+0x108>
  }
  return pipelines;
}
   14744:	48 89 c3             	mov    %rax,%rbx
   14747:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1474b:	48 89 c7             	mov    %rax,%rdi
   1474e:	e8 19 00 00 00       	call   1476c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>
   14753:	48 89 d8             	mov    %rbx,%rax
   14756:	48 89 c7             	mov    %rax,%rdi
   14759:	e8 a2 01 ff ff       	call   4900 <_Unwind_Resume@plt>
  return pipelines;
   1475e:	90                   	nop
}
   1475f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14763:	48 83 c4 40          	add    $0x40,%rsp
   14767:	5b                   	pop    %rbx
   14768:	41 5c                	pop    %r12
   1476a:	5d                   	pop    %rbp
   1476b:	c3                   	ret

000000000001476c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   1476c:	55                   	push   %rbp
   1476d:	48 89 e5             	mov    %rsp,%rbp
   14770:	48 83 ec 10          	sub    $0x10,%rsp
   14774:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   14778:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1477c:	48 89 c7             	mov    %rax,%rdi
   1477f:	e8 34 1c 00 00       	call   163b8 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14784:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   14787:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1478b:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1478f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14793:	48 8b 00             	mov    (%rax),%rax
   14796:	48 89 ce             	mov    %rcx,%rsi
   14799:	48 89 c7             	mov    %rax,%rdi
   1479c:	e8 25 1c 00 00       	call   163c6 <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>
      }
   147a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147a5:	48 89 c7             	mov    %rax,%rdi
   147a8:	e8 bd 1b 00 00       	call   1636a <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>
   147ad:	90                   	nop
   147ae:	c9                   	leave
   147af:	c3                   	ret

00000000000147b0 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   147b0:	55                   	push   %rbp
   147b1:	48 89 e5             	mov    %rsp,%rbp
   147b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   147b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   147bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147c0:	48 8b 00             	mov    (%rax),%rax
   147c3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   147c7:	48 c1 e2 03          	shl    $0x3,%rdx
   147cb:	48 01 d0             	add    %rdx,%rax
      }
   147ce:	5d                   	pop    %rbp
   147cf:	c3                   	ret

00000000000147d0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   147d0:	55                   	push   %rbp
   147d1:	48 89 e5             	mov    %rsp,%rbp
   147d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   147d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147dc:	48 8b 50 08          	mov    0x8(%rax),%rdx
   147e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147e4:	48 8b 00             	mov    (%rax),%rax
   147e7:	48 29 c2             	sub    %rax,%rdx
   147ea:	48 89 d0             	mov    %rdx,%rax
   147ed:	48 c1 f8 03          	sar    $0x3,%rax
   147f1:	5d                   	pop    %rbp
   147f2:	c3                   	ret
   147f3:	90                   	nop

00000000000147f4 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   147f4:	55                   	push   %rbp
   147f5:	48 89 e5             	mov    %rsp,%rbp
   147f8:	48 83 ec 10          	sub    $0x10,%rsp
   147fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14800:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   14804:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14808:	48 89 c7             	mov    %rax,%rdi
   1480b:	e8 e0 1b 00 00       	call   163f0 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   14810:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   14814:	0f 92 c0             	setb   %al
   14817:	84 c0                	test   %al,%al
   14819:	74 24                	je     1483f <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   1481b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1481f:	48 89 c7             	mov    %rax,%rdi
   14822:	e8 c9 1b 00 00       	call   163f0 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   14827:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1482b:	48 29 c2             	sub    %rax,%rdx
   1482e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14832:	48 89 d6             	mov    %rdx,%rsi
   14835:	48 89 c7             	mov    %rax,%rdi
   14838:	e8 d7 1b 00 00       	call   16414 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>
      }
   1483d:	eb 38                	jmp    14877 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   1483f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14843:	48 89 c7             	mov    %rax,%rdi
   14846:	e8 a5 1b 00 00       	call   163f0 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   1484b:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1484f:	0f 92 c0             	setb   %al
   14852:	84 c0                	test   %al,%al
   14854:	74 21                	je     14877 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   14856:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1485a:	48 8b 00             	mov    (%rax),%rax
   1485d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14861:	48 c1 e2 03          	shl    $0x3,%rdx
   14865:	48 01 c2             	add    %rax,%rdx
   14868:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1486c:	48 89 d6             	mov    %rdx,%rsi
   1486f:	48 89 c7             	mov    %rax,%rdi
   14872:	e8 a7 1d 00 00       	call   1661e <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   14877:	90                   	nop
   14878:	c9                   	leave
   14879:	c3                   	ret

000000000001487a <_ZNSaIP13VkImageView_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   1487a:	55                   	push   %rbp
   1487b:	48 89 e5             	mov    %rsp,%rbp
   1487e:	48 83 ec 10          	sub    $0x10,%rsp
   14882:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14886:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1488a:	48 89 c7             	mov    %rax,%rdi
   1488d:	e8 ec 1d 00 00       	call   1667e <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>
   14892:	90                   	nop
   14893:	c9                   	leave
   14894:	c3                   	ret
   14895:	90                   	nop

0000000000014896 <_ZNSaIP13VkImageView_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   14896:	55                   	push   %rbp
   14897:	48 89 e5             	mov    %rsp,%rbp
   1489a:	48 83 ec 10          	sub    $0x10,%rsp
   1489e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   148a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   148a6:	48 89 c7             	mov    %rax,%rdi
   148a9:	e8 dc 1d 00 00       	call   1668a <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>
   148ae:	90                   	nop
   148af:	c9                   	leave
   148b0:	c3                   	ret
   148b1:	90                   	nop

00000000000148b2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   148b2:	55                   	push   %rbp
   148b3:	48 89 e5             	mov    %rsp,%rbp
   148b6:	53                   	push   %rbx
   148b7:	48 83 ec 38          	sub    $0x38,%rsp
   148bb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   148bf:	48 89 f0             	mov    %rsi,%rax
   148c2:	48 89 d6             	mov    %rdx,%rsi
   148c5:	48 89 f2             	mov    %rsi,%rdx
   148c8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   148cc:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   148d0:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   148d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   148d8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   148dc:	48 89 d6             	mov    %rdx,%rsi
   148df:	48 89 c7             	mov    %rax,%rdi
   148e2:	e8 af 1d 00 00       	call   16696 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   148e7:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   148eb:	48 89 c7             	mov    %rax,%rdi
   148ee:	e8 db 1d 00 00       	call   166ce <_ZNKSt16initializer_listIP13VkImageView_TE3endEv>
   148f3:	48 89 c3             	mov    %rax,%rbx
   148f6:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   148fa:	48 89 c7             	mov    %rax,%rdi
   148fd:	e8 ba 1d 00 00       	call   166bc <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>
   14902:	48 89 c1             	mov    %rax,%rcx
   14905:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14909:	48 89 da             	mov    %rbx,%rdx
   1490c:	48 89 ce             	mov    %rcx,%rsi
   1490f:	48 89 c7             	mov    %rax,%rdi
   14912:	e8 1d 1e 00 00       	call   16734 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   14917:	eb 1a                	jmp    14933 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   14919:	48 89 c3             	mov    %rax,%rbx
   1491c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14920:	48 89 c7             	mov    %rax,%rdi
   14923:	e8 ea 06 00 00       	call   15012 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
   14928:	48 89 d8             	mov    %rbx,%rax
   1492b:	48 89 c7             	mov    %rax,%rdi
   1492e:	e8 cd ff fe ff       	call   4900 <_Unwind_Resume@plt>
   14933:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14937:	c9                   	leave
   14938:	c3                   	ret
   14939:	90                   	nop

000000000001493a <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   1493a:	55                   	push   %rbp
   1493b:	48 89 e5             	mov    %rsp,%rbp
   1493e:	48 83 ec 10          	sub    $0x10,%rsp
   14942:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   14946:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1494a:	48 89 c7             	mov    %rax,%rdi
   1494d:	e8 92 1e 00 00       	call   167e4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14952:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   14955:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14959:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1495d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14961:	48 8b 00             	mov    (%rax),%rax
   14964:	48 89 ce             	mov    %rcx,%rsi
   14967:	48 89 c7             	mov    %rax,%rdi
   1496a:	e8 83 1e 00 00       	call   167f2 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
      }
   1496f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14973:	48 89 c7             	mov    %rax,%rdi
   14976:	e8 97 06 00 00       	call   15012 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
   1497b:	90                   	nop
   1497c:	c9                   	leave
   1497d:	c3                   	ret

000000000001497e <_ZNSt6vectorIP13VkImageView_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   1497e:	55                   	push   %rbp
   1497f:	48 89 e5             	mov    %rsp,%rbp
   14982:	48 83 ec 10          	sub    $0x10,%rsp
   14986:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   1498a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1498e:	48 8b 10             	mov    (%rax),%rdx
   14991:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14995:	48 89 d6             	mov    %rdx,%rsi
   14998:	48 89 c7             	mov    %rax,%rdi
   1499b:	e8 7c 1e 00 00       	call   1681c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   149a0:	c9                   	leave
   149a1:	c3                   	ret

00000000000149a2 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   149a2:	55                   	push   %rbp
   149a3:	48 89 e5             	mov    %rsp,%rbp
   149a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   149aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   149ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149b2:	48 8b 00             	mov    (%rax),%rax
   149b5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   149b9:	48 c1 e2 03          	shl    $0x3,%rdx
   149bd:	48 01 d0             	add    %rdx,%rax
      }
   149c0:	5d                   	pop    %rbp
   149c1:	c3                   	ret

00000000000149c2 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   149c2:	55                   	push   %rbp
   149c3:	48 89 e5             	mov    %rsp,%rbp
   149c6:	48 83 ec 20          	sub    $0x20,%rsp
   149ca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   149ce:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   149d2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   149d6:	48 89 d6             	mov    %rdx,%rsi
   149d9:	48 89 c7             	mov    %rax,%rdi
   149dc:	e8 4d 1e 00 00       	call   1682e <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   149e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149e5:	c9                   	leave
   149e6:	c3                   	ret
   149e7:	90                   	nop

00000000000149e8 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   149e8:	55                   	push   %rbp
   149e9:	48 89 e5             	mov    %rsp,%rbp
   149ec:	48 83 ec 20          	sub    $0x20,%rsp
   149f0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   149f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   149f8:	48 8d 50 08          	lea    0x8(%rax),%rdx
   149fc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14a00:	48 89 d6             	mov    %rdx,%rsi
   14a03:	48 89 c7             	mov    %rax,%rdi
   14a06:	e8 23 1e 00 00       	call   1682e <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   14a0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a0f:	c9                   	leave
   14a10:	c3                   	ret

0000000000014a11 <_ZN9__gnu_cxxneIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   14a11:	55                   	push   %rbp
   14a12:	48 89 e5             	mov    %rsp,%rbp
   14a15:	53                   	push   %rbx
   14a16:	48 83 ec 18          	sub    $0x18,%rsp
   14a1a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14a1e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   14a22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14a26:	48 89 c7             	mov    %rax,%rdi
   14a29:	e8 1e 1e 00 00       	call   1684c <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>
   14a2e:	48 8b 18             	mov    (%rax),%rbx
   14a31:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14a35:	48 89 c7             	mov    %rax,%rdi
   14a38:	e8 0f 1e 00 00       	call   1684c <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>
   14a3d:	48 8b 00             	mov    (%rax),%rax
   14a40:	48 39 c3             	cmp    %rax,%rbx
   14a43:	0f 95 c0             	setne  %al
   14a46:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14a4a:	c9                   	leave
   14a4b:	c3                   	ret

0000000000014a4c <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   14a4c:	55                   	push   %rbp
   14a4d:	48 89 e5             	mov    %rsp,%rbp
   14a50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   14a54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a58:	48 8b 00             	mov    (%rax),%rax
   14a5b:	48 8d 50 08          	lea    0x8(%rax),%rdx
   14a5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a63:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   14a66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   14a6a:	5d                   	pop    %rbp
   14a6b:	c3                   	ret

0000000000014a6c <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   14a6c:	55                   	push   %rbp
   14a6d:	48 89 e5             	mov    %rsp,%rbp
   14a70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   14a74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a78:	48 8b 00             	mov    (%rax),%rax
   14a7b:	5d                   	pop    %rbp
   14a7c:	c3                   	ret
   14a7d:	90                   	nop

0000000000014a7e <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   14a7e:	55                   	push   %rbp
   14a7f:	48 89 e5             	mov    %rsp,%rbp
   14a82:	48 83 ec 20          	sub    $0x20,%rsp
   14a86:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   14a8a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14a8e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14a92:	48 89 d6             	mov    %rdx,%rsi
   14a95:	48 89 c7             	mov    %rax,%rdi
   14a98:	e8 bd 1d 00 00       	call   1685a <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   14a9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14aa1:	c9                   	leave
   14aa2:	c3                   	ret
   14aa3:	90                   	nop

0000000000014aa4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   14aa4:	55                   	push   %rbp
   14aa5:	48 89 e5             	mov    %rsp,%rbp
   14aa8:	48 83 ec 20          	sub    $0x20,%rsp
   14aac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   14ab0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14ab4:	48 8d 50 08          	lea    0x8(%rax),%rdx
   14ab8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14abc:	48 89 d6             	mov    %rdx,%rsi
   14abf:	48 89 c7             	mov    %rax,%rdi
   14ac2:	e8 93 1d 00 00       	call   1685a <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   14ac7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14acb:	c9                   	leave
   14acc:	c3                   	ret

0000000000014acd <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   14acd:	55                   	push   %rbp
   14ace:	48 89 e5             	mov    %rsp,%rbp
   14ad1:	53                   	push   %rbx
   14ad2:	48 83 ec 18          	sub    $0x18,%rsp
   14ad6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14ada:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   14ade:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14ae2:	48 89 c7             	mov    %rax,%rdi
   14ae5:	e8 8e 1d 00 00       	call   16878 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   14aea:	48 8b 18             	mov    (%rax),%rbx
   14aed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14af1:	48 89 c7             	mov    %rax,%rdi
   14af4:	e8 7f 1d 00 00       	call   16878 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   14af9:	48 8b 00             	mov    (%rax),%rax
   14afc:	48 39 c3             	cmp    %rax,%rbx
   14aff:	0f 95 c0             	setne  %al
   14b02:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14b06:	c9                   	leave
   14b07:	c3                   	ret

0000000000014b08 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   14b08:	55                   	push   %rbp
   14b09:	48 89 e5             	mov    %rsp,%rbp
   14b0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   14b10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b14:	48 8b 00             	mov    (%rax),%rax
   14b17:	48 8d 50 08          	lea    0x8(%rax),%rdx
   14b1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b1f:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   14b22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   14b26:	5d                   	pop    %rbp
   14b27:	c3                   	ret

0000000000014b28 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   14b28:	55                   	push   %rbp
   14b29:	48 89 e5             	mov    %rsp,%rbp
   14b2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   14b30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b34:	48 8b 00             	mov    (%rax),%rax
   14b37:	5d                   	pop    %rbp
   14b38:	c3                   	ret
   14b39:	90                   	nop

0000000000014b3a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEaSEOS3_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
   14b3a:	55                   	push   %rbp
   14b3b:	48 89 e5             	mov    %rsp,%rbp
   14b3e:	48 83 ec 20          	sub    $0x20,%rsp
   14b42:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14b46:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	constexpr bool __move_storage =
   14b4a:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
   14b4e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14b52:	48 89 c7             	mov    %rax,%rdi
   14b55:	e8 2c 1d 00 00       	call   16886 <_ZSt4moveIRSt6vectorIP17VkCommandBuffer_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>
   14b5a:	48 89 c2             	mov    %rax,%rdx
   14b5d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14b61:	48 89 d6             	mov    %rdx,%rsi
   14b64:	48 89 c7             	mov    %rax,%rdi
   14b67:	e8 28 1d 00 00       	call   16894 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>
	return *this;
   14b6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   14b70:	c9                   	leave
   14b71:	c3                   	ret

0000000000014b72 <_ZNKSt6vectorItSaItEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   14b72:	55                   	push   %rbp
   14b73:	48 89 e5             	mov    %rsp,%rbp
   14b76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   14b7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b7e:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14b82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b86:	48 8b 00             	mov    (%rax),%rax
   14b89:	48 29 c2             	sub    %rax,%rdx
   14b8c:	48 89 d0             	mov    %rdx,%rax
   14b8f:	48 d1 f8             	sar    %rax
   14b92:	5d                   	pop    %rbp
   14b93:	c3                   	ret

0000000000014b94 <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   14b94:	55                   	push   %rbp
   14b95:	48 89 e5             	mov    %rsp,%rbp
   14b98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   14b9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ba0:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14ba4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ba8:	48 8b 00             	mov    (%rax),%rax
   14bab:	48 29 c2             	sub    %rax,%rdx
   14bae:	48 c1 fa 02          	sar    $0x2,%rdx
   14bb2:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
   14bb9:	cc cc cc 
   14bbc:	48 0f af c2          	imul   %rdx,%rax
   14bc0:	5d                   	pop    %rbp
   14bc1:	c3                   	ret

0000000000014bc2 <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   14bc2:	55                   	push   %rbp
   14bc3:	48 89 e5             	mov    %rsp,%rbp
   14bc6:	48 83 ec 10          	sub    $0x10,%rsp
   14bca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   14bce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14bd2:	48 8b 10             	mov    (%rax),%rdx
   14bd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14bd9:	48 89 d6             	mov    %rdx,%rsi
   14bdc:	48 89 c7             	mov    %rax,%rdi
   14bdf:	e8 52 1d 00 00       	call   16936 <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_data_ptrIS4_EEPT_S9_>
   14be4:	c9                   	leave
   14be5:	c3                   	ret

0000000000014be6 <_ZNKSt6vectorItSaItEE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   14be6:	55                   	push   %rbp
   14be7:	48 89 e5             	mov    %rsp,%rbp
   14bea:	48 83 ec 10          	sub    $0x10,%rsp
   14bee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   14bf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14bf6:	48 8b 10             	mov    (%rax),%rdx
   14bf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14bfd:	48 89 d6             	mov    %rdx,%rsi
   14c00:	48 89 c7             	mov    %rax,%rdi
   14c03:	e8 40 1d 00 00       	call   16948 <_ZNKSt6vectorItSaItEE11_M_data_ptrItEEPT_S4_>
   14c08:	c9                   	leave
   14c09:	c3                   	ret

0000000000014c0a <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   14c0a:	55                   	push   %rbp
   14c0b:	48 89 e5             	mov    %rsp,%rbp
   14c0e:	48 83 ec 10          	sub    $0x10,%rsp
   14c12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14c16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   14c1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c1e:	48 89 c7             	mov    %rax,%rdi
   14c21:	e8 58 03 00 00       	call   14f7e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   14c26:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   14c2a:	0f 92 c0             	setb   %al
   14c2d:	84 c0                	test   %al,%al
   14c2f:	74 24                	je     14c55 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   14c31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c35:	48 89 c7             	mov    %rax,%rdi
   14c38:	e8 41 03 00 00       	call   14f7e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   14c3d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14c41:	48 29 c2             	sub    %rax,%rdx
   14c44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c48:	48 89 d6             	mov    %rdx,%rsi
   14c4b:	48 89 c7             	mov    %rax,%rdi
   14c4e:	e8 07 1d 00 00       	call   1695a <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm>
      }
   14c53:	eb 38                	jmp    14c8d <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   14c55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c59:	48 89 c7             	mov    %rax,%rdi
   14c5c:	e8 1d 03 00 00       	call   14f7e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   14c61:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   14c65:	0f 92 c0             	setb   %al
   14c68:	84 c0                	test   %al,%al
   14c6a:	74 21                	je     14c8d <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   14c6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c70:	48 8b 00             	mov    (%rax),%rax
   14c73:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14c77:	48 c1 e2 03          	shl    $0x3,%rdx
   14c7b:	48 01 c2             	add    %rax,%rdx
   14c7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c82:	48 89 d6             	mov    %rdx,%rsi
   14c85:	48 89 c7             	mov    %rax,%rdi
   14c88:	e8 d7 1e 00 00       	call   16b64 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   14c8d:	90                   	nop
   14c8e:	c9                   	leave
   14c8f:	c3                   	ret

0000000000014c90 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   14c90:	55                   	push   %rbp
   14c91:	48 89 e5             	mov    %rsp,%rbp
   14c94:	48 83 ec 10          	sub    $0x10,%rsp
   14c98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14c9c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   14ca0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ca4:	48 89 c7             	mov    %rax,%rdi
   14ca7:	e8 18 1f 00 00       	call   16bc4 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   14cac:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   14cb0:	0f 92 c0             	setb   %al
   14cb3:	84 c0                	test   %al,%al
   14cb5:	74 24                	je     14cdb <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   14cb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14cbb:	48 89 c7             	mov    %rax,%rdi
   14cbe:	e8 01 1f 00 00       	call   16bc4 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   14cc3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14cc7:	48 29 c2             	sub    %rax,%rdx
   14cca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14cce:	48 89 d6             	mov    %rdx,%rsi
   14cd1:	48 89 c7             	mov    %rax,%rdi
   14cd4:	e8 0f 1f 00 00       	call   16be8 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm>
      }
   14cd9:	eb 38                	jmp    14d13 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   14cdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14cdf:	48 89 c7             	mov    %rax,%rdi
   14ce2:	e8 dd 1e 00 00       	call   16bc4 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   14ce7:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   14ceb:	0f 92 c0             	setb   %al
   14cee:	84 c0                	test   %al,%al
   14cf0:	74 21                	je     14d13 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   14cf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14cf6:	48 8b 00             	mov    (%rax),%rax
   14cf9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14cfd:	48 c1 e2 03          	shl    $0x3,%rdx
   14d01:	48 01 c2             	add    %rax,%rdx
   14d04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d08:	48 89 d6             	mov    %rdx,%rsi
   14d0b:	48 89 c7             	mov    %rax,%rdi
   14d0e:	e8 df 20 00 00       	call   16df2 <_ZNSt6vectorIP9VkFence_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   14d13:	90                   	nop
   14d14:	c9                   	leave
   14d15:	c3                   	ret

0000000000014d16 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   14d16:	55                   	push   %rbp
   14d17:	48 89 e5             	mov    %rsp,%rbp
   14d1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14d1e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   14d22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d26:	48 8b 00             	mov    (%rax),%rax
   14d29:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14d2d:	48 c1 e2 03          	shl    $0x3,%rdx
   14d31:	48 01 d0             	add    %rdx,%rax
      }
   14d34:	5d                   	pop    %rbp
   14d35:	c3                   	ret

0000000000014d36 <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   14d36:	55                   	push   %rbp
   14d37:	48 89 e5             	mov    %rsp,%rbp
   14d3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14d3e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   14d42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d46:	48 8b 00             	mov    (%rax),%rax
   14d49:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14d4d:	48 c1 e2 03          	shl    $0x3,%rdx
   14d51:	48 01 d0             	add    %rdx,%rax
      }
   14d54:	5d                   	pop    %rbp
   14d55:	c3                   	ret

0000000000014d56 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   14d56:	55                   	push   %rbp
   14d57:	48 89 e5             	mov    %rsp,%rbp
   14d5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14d5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   14d62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d66:	48 8b 00             	mov    (%rax),%rax
   14d69:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14d6d:	48 c1 e2 03          	shl    $0x3,%rdx
   14d71:	48 01 d0             	add    %rdx,%rax
      }
   14d74:	5d                   	pop    %rbp
   14d75:	c3                   	ret

0000000000014d76 <_ZNSaIP13VkSemaphore_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   14d76:	55                   	push   %rbp
   14d77:	48 89 e5             	mov    %rsp,%rbp
   14d7a:	48 83 ec 10          	sub    $0x10,%rsp
   14d7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14d82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d86:	48 89 c7             	mov    %rax,%rdi
   14d89:	e8 c4 20 00 00       	call   16e52 <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1Ev>
   14d8e:	90                   	nop
   14d8f:	c9                   	leave
   14d90:	c3                   	ret
   14d91:	90                   	nop

0000000000014d92 <_ZNSaIP13VkSemaphore_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   14d92:	55                   	push   %rbp
   14d93:	48 89 e5             	mov    %rsp,%rbp
   14d96:	48 83 ec 10          	sub    $0x10,%rsp
   14d9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14d9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14da2:	48 89 c7             	mov    %rax,%rdi
   14da5:	e8 b4 20 00 00       	call   16e5e <_ZNSt15__new_allocatorIP13VkSemaphore_TED1Ev>
   14daa:	90                   	nop
   14dab:	c9                   	leave
   14dac:	c3                   	ret
   14dad:	90                   	nop

0000000000014dae <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   14dae:	55                   	push   %rbp
   14daf:	48 89 e5             	mov    %rsp,%rbp
   14db2:	53                   	push   %rbx
   14db3:	48 83 ec 38          	sub    $0x38,%rsp
   14db7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14dbb:	48 89 f0             	mov    %rsi,%rax
   14dbe:	48 89 d6             	mov    %rdx,%rsi
   14dc1:	48 89 f2             	mov    %rsi,%rdx
   14dc4:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   14dc8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   14dcc:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   14dd0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14dd4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   14dd8:	48 89 d6             	mov    %rdx,%rsi
   14ddb:	48 89 c7             	mov    %rax,%rdi
   14dde:	e8 87 20 00 00       	call   16e6a <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   14de3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14de7:	48 89 c7             	mov    %rax,%rdi
   14dea:	e8 b3 20 00 00       	call   16ea2 <_ZNKSt16initializer_listIP13VkSemaphore_TE3endEv>
   14def:	48 89 c3             	mov    %rax,%rbx
   14df2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14df6:	48 89 c7             	mov    %rax,%rdi
   14df9:	e8 92 20 00 00       	call   16e90 <_ZNKSt16initializer_listIP13VkSemaphore_TE5beginEv>
   14dfe:	48 89 c1             	mov    %rax,%rcx
   14e01:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14e05:	48 89 da             	mov    %rbx,%rdx
   14e08:	48 89 ce             	mov    %rcx,%rsi
   14e0b:	48 89 c7             	mov    %rax,%rdi
   14e0e:	e8 f5 20 00 00       	call   16f08 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   14e13:	eb 1a                	jmp    14e2f <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   14e15:	48 89 c3             	mov    %rax,%rbx
   14e18:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14e1c:	48 89 c7             	mov    %rax,%rdi
   14e1f:	e8 8a 03 00 00       	call   151ae <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EED1Ev>
   14e24:	48 89 d8             	mov    %rbx,%rax
   14e27:	48 89 c7             	mov    %rax,%rdi
   14e2a:	e8 d1 fa fe ff       	call   4900 <_Unwind_Resume@plt>
   14e2f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14e33:	c9                   	leave
   14e34:	c3                   	ret
   14e35:	90                   	nop

0000000000014e36 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   14e36:	55                   	push   %rbp
   14e37:	48 89 e5             	mov    %rsp,%rbp
   14e3a:	48 83 ec 10          	sub    $0x10,%rsp
   14e3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   14e42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e46:	48 89 c7             	mov    %rax,%rdi
   14e49:	e8 6a 21 00 00       	call   16fb8 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14e4e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   14e51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e55:	48 8b 48 08          	mov    0x8(%rax),%rcx
   14e59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e5d:	48 8b 00             	mov    (%rax),%rax
   14e60:	48 89 ce             	mov    %rcx,%rsi
   14e63:	48 89 c7             	mov    %rax,%rdi
   14e66:	e8 5b 21 00 00       	call   16fc6 <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>
      }
   14e6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e6f:	48 89 c7             	mov    %rax,%rdi
   14e72:	e8 37 03 00 00       	call   151ae <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EED1Ev>
   14e77:	90                   	nop
   14e78:	c9                   	leave
   14e79:	c3                   	ret

0000000000014e7a <_ZNSaIjEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   14e7a:	55                   	push   %rbp
   14e7b:	48 89 e5             	mov    %rsp,%rbp
   14e7e:	48 83 ec 10          	sub    $0x10,%rsp
   14e82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14e86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e8a:	48 89 c7             	mov    %rax,%rdi
   14e8d:	e8 5e 21 00 00       	call   16ff0 <_ZNSt15__new_allocatorIjEC1Ev>
   14e92:	90                   	nop
   14e93:	c9                   	leave
   14e94:	c3                   	ret
   14e95:	90                   	nop

0000000000014e96 <_ZNSaIjED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   14e96:	55                   	push   %rbp
   14e97:	48 89 e5             	mov    %rsp,%rbp
   14e9a:	48 83 ec 10          	sub    $0x10,%rsp
   14e9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14ea2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ea6:	48 89 c7             	mov    %rax,%rdi
   14ea9:	e8 4e 21 00 00       	call   16ffc <_ZNSt15__new_allocatorIjED1Ev>
   14eae:	90                   	nop
   14eaf:	c9                   	leave
   14eb0:	c3                   	ret
   14eb1:	90                   	nop

0000000000014eb2 <_ZNSt6vectorIjSaIjEEC1ESt16initializer_listIjERKS0_>:
      vector(initializer_list<value_type> __l,
   14eb2:	55                   	push   %rbp
   14eb3:	48 89 e5             	mov    %rsp,%rbp
   14eb6:	53                   	push   %rbx
   14eb7:	48 83 ec 38          	sub    $0x38,%rsp
   14ebb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14ebf:	48 89 f0             	mov    %rsi,%rax
   14ec2:	48 89 d6             	mov    %rdx,%rsi
   14ec5:	48 89 f2             	mov    %rsi,%rdx
   14ec8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   14ecc:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   14ed0:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   14ed4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14ed8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   14edc:	48 89 d6             	mov    %rdx,%rsi
   14edf:	48 89 c7             	mov    %rax,%rdi
   14ee2:	e8 3d 21 00 00       	call   17024 <_ZNSt12_Vector_baseIjSaIjEEC1ERKS0_>
	_M_range_initialize(__l.begin(), __l.end(),
   14ee7:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14eeb:	48 89 c7             	mov    %rax,%rdi
   14eee:	e8 b7 21 00 00       	call   170aa <_ZNKSt16initializer_listIjE3endEv>
   14ef3:	48 89 c3             	mov    %rax,%rbx
   14ef6:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14efa:	48 89 c7             	mov    %rax,%rdi
   14efd:	e8 96 21 00 00       	call   17098 <_ZNKSt16initializer_listIjE5beginEv>
   14f02:	48 89 c1             	mov    %rax,%rcx
   14f05:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14f09:	48 89 da             	mov    %rbx,%rdx
   14f0c:	48 89 ce             	mov    %rcx,%rsi
   14f0f:	48 89 c7             	mov    %rax,%rdi
   14f12:	e8 f9 21 00 00       	call   17110 <_ZNSt6vectorIjSaIjEE19_M_range_initializeIPKjEEvT_S5_St20forward_iterator_tag>
      }
   14f17:	eb 1a                	jmp    14f33 <_ZNSt6vectorIjSaIjEEC1ESt16initializer_listIjERKS0_+0x81>
   14f19:	48 89 c3             	mov    %rax,%rbx
   14f1c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14f20:	48 89 c7             	mov    %rax,%rdi
   14f23:	e8 22 21 00 00       	call   1704a <_ZNSt12_Vector_baseIjSaIjEED1Ev>
   14f28:	48 89 d8             	mov    %rbx,%rax
   14f2b:	48 89 c7             	mov    %rax,%rdi
   14f2e:	e8 cd f9 fe ff       	call   4900 <_Unwind_Resume@plt>
   14f33:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14f37:	c9                   	leave
   14f38:	c3                   	ret
   14f39:	90                   	nop

0000000000014f3a <_ZNSt6vectorIjSaIjEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   14f3a:	55                   	push   %rbp
   14f3b:	48 89 e5             	mov    %rsp,%rbp
   14f3e:	48 83 ec 10          	sub    $0x10,%rsp
   14f42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   14f46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f4a:	48 89 c7             	mov    %rax,%rdi
   14f4d:	e8 6e 22 00 00       	call   171c0 <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>
   14f52:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   14f55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f59:	48 8b 48 08          	mov    0x8(%rax),%rcx
   14f5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f61:	48 8b 00             	mov    (%rax),%rax
   14f64:	48 89 ce             	mov    %rcx,%rsi
   14f67:	48 89 c7             	mov    %rax,%rdi
   14f6a:	e8 5f 22 00 00       	call   171ce <_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E>
      }
   14f6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f73:	48 89 c7             	mov    %rax,%rdi
   14f76:	e8 cf 20 00 00       	call   1704a <_ZNSt12_Vector_baseIjSaIjEED1Ev>
   14f7b:	90                   	nop
   14f7c:	c9                   	leave
   14f7d:	c3                   	ret

0000000000014f7e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   14f7e:	55                   	push   %rbp
   14f7f:	48 89 e5             	mov    %rsp,%rbp
   14f82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   14f86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f8a:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14f8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f92:	48 8b 00             	mov    (%rax),%rax
   14f95:	48 29 c2             	sub    %rax,%rdx
   14f98:	48 89 d0             	mov    %rdx,%rax
   14f9b:	48 c1 f8 03          	sar    $0x3,%rax
   14f9f:	5d                   	pop    %rbp
   14fa0:	c3                   	ret
   14fa1:	90                   	nop

0000000000014fa2 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   14fa2:	55                   	push   %rbp
   14fa3:	48 89 e5             	mov    %rsp,%rbp
   14fa6:	48 83 ec 10          	sub    $0x10,%rsp
   14faa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   14fae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fb2:	48 8b 10             	mov    (%rax),%rdx
   14fb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fb9:	48 89 d6             	mov    %rdx,%rsi
   14fbc:	48 89 c7             	mov    %rax,%rdi
   14fbf:	e8 34 22 00 00       	call   171f8 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   14fc4:	c9                   	leave
   14fc5:	c3                   	ret

0000000000014fc6 <_ZNSt6vectorIjSaIjEE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   14fc6:	55                   	push   %rbp
   14fc7:	48 89 e5             	mov    %rsp,%rbp
   14fca:	48 83 ec 10          	sub    $0x10,%rsp
   14fce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   14fd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fd6:	48 8b 10             	mov    (%rax),%rdx
   14fd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fdd:	48 89 d6             	mov    %rdx,%rsi
   14fe0:	48 89 c7             	mov    %rax,%rdi
   14fe3:	e8 22 22 00 00       	call   1720a <_ZNKSt6vectorIjSaIjEE11_M_data_ptrIjEEPT_S4_>
   14fe8:	c9                   	leave
   14fe9:	c3                   	ret

0000000000014fea <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   14fea:	55                   	push   %rbp
   14feb:	48 89 e5             	mov    %rsp,%rbp
   14fee:	48 83 ec 10          	sub    $0x10,%rsp
   14ff2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   14ff6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ffa:	48 89 c7             	mov    %rax,%rdi
   14ffd:	e8 78 f8 ff ff       	call   1487a <_ZNSaIP13VkImageView_TEC1Ev>
   15002:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15006:	48 89 c7             	mov    %rax,%rdi
   15009:	e8 0e 22 00 00       	call   1721c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   1500e:	90                   	nop
   1500f:	c9                   	leave
   15010:	c3                   	ret
   15011:	90                   	nop

0000000000015012 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   15012:	55                   	push   %rbp
   15013:	48 89 e5             	mov    %rsp,%rbp
   15016:	48 83 ec 10          	sub    $0x10,%rsp
   1501a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   1501e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15022:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15026:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1502a:	48 8b 00             	mov    (%rax),%rax
   1502d:	48 29 c2             	sub    %rax,%rdx
   15030:	48 89 d0             	mov    %rdx,%rax
   15033:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   15037:	48 89 c2             	mov    %rax,%rdx
   1503a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1503e:	48 8b 08             	mov    (%rax),%rcx
   15041:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15045:	48 89 ce             	mov    %rcx,%rsi
   15048:	48 89 c7             	mov    %rax,%rdi
   1504b:	e8 fa 21 00 00       	call   1724a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   15050:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15054:	48 89 c7             	mov    %rax,%rdi
   15057:	e8 e6 e6 ff ff       	call   13742 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>
   1505c:	90                   	nop
   1505d:	c9                   	leave
   1505e:	c3                   	ret
   1505f:	90                   	nop

0000000000015060 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   15060:	55                   	push   %rbp
   15061:	48 89 e5             	mov    %rsp,%rbp
   15064:	48 83 ec 10          	sub    $0x10,%rsp
   15068:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   1506c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15070:	48 89 c7             	mov    %rax,%rdi
   15073:	e8 b4 52 ff ff       	call   a32c <_ZNSaIP9VkImage_TEC1Ev>
   15078:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1507c:	48 89 c7             	mov    %rax,%rdi
   1507f:	e8 44 78 ff ff       	call   c8c8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   15084:	90                   	nop
   15085:	c9                   	leave
   15086:	c3                   	ret
   15087:	90                   	nop

0000000000015088 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   15088:	55                   	push   %rbp
   15089:	48 89 e5             	mov    %rsp,%rbp
   1508c:	48 83 ec 10          	sub    $0x10,%rsp
   15090:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   15094:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15098:	48 89 c7             	mov    %rax,%rdi
   1509b:	e8 e0 21 00 00       	call   17280 <_ZNSaIP15VkFramebuffer_TEC1Ev>
   150a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150a4:	48 89 c7             	mov    %rax,%rdi
   150a7:	e8 f0 21 00 00       	call   1729c <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   150ac:	90                   	nop
   150ad:	c9                   	leave
   150ae:	c3                   	ret
   150af:	90                   	nop

00000000000150b0 <_ZNSaIP15VkFramebuffer_TED1Ev>:
   150b0:	55                   	push   %rbp
   150b1:	48 89 e5             	mov    %rsp,%rbp
   150b4:	48 83 ec 10          	sub    $0x10,%rsp
   150b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   150bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150c0:	48 89 c7             	mov    %rax,%rdi
   150c3:	e8 02 22 00 00       	call   172ca <_ZNSt15__new_allocatorIP15VkFramebuffer_TED1Ev>
   150c8:	90                   	nop
   150c9:	c9                   	leave
   150ca:	c3                   	ret
   150cb:	90                   	nop

00000000000150cc <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   150cc:	55                   	push   %rbp
   150cd:	48 89 e5             	mov    %rsp,%rbp
   150d0:	48 83 ec 10          	sub    $0x10,%rsp
   150d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   150d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150dc:	48 8b 50 10          	mov    0x10(%rax),%rdx
   150e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150e4:	48 8b 00             	mov    (%rax),%rax
   150e7:	48 29 c2             	sub    %rax,%rdx
   150ea:	48 89 d0             	mov    %rdx,%rax
   150ed:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   150f1:	48 89 c2             	mov    %rax,%rdx
   150f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150f8:	48 8b 08             	mov    (%rax),%rcx
   150fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150ff:	48 89 ce             	mov    %rcx,%rsi
   15102:	48 89 c7             	mov    %rax,%rdi
   15105:	e8 cc 21 00 00       	call   172d6 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   1510a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1510e:	48 89 c7             	mov    %rax,%rdi
   15111:	e8 f2 e6 ff ff       	call   13808 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implD1Ev>
   15116:	90                   	nop
   15117:	c9                   	leave
   15118:	c3                   	ret
   15119:	90                   	nop

000000000001511a <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   1511a:	55                   	push   %rbp
   1511b:	48 89 e5             	mov    %rsp,%rbp
   1511e:	48 83 ec 10          	sub    $0x10,%rsp
   15122:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   15126:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1512a:	48 89 c7             	mov    %rax,%rdi
   1512d:	e8 da 21 00 00       	call   1730c <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15132:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   15135:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15139:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1513d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15141:	48 8b 00             	mov    (%rax),%rax
   15144:	48 89 ce             	mov    %rcx,%rsi
   15147:	48 89 c7             	mov    %rax,%rdi
   1514a:	e8 cb 21 00 00       	call   1731a <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>
      }
   1514f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15153:	48 89 c7             	mov    %rax,%rdi
   15156:	e8 71 ff ff ff       	call   150cc <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EED1Ev>
   1515b:	90                   	nop
   1515c:	c9                   	leave
   1515d:	c3                   	ret

000000000001515e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   1515e:	55                   	push   %rbp
   1515f:	48 89 e5             	mov    %rsp,%rbp
   15162:	48 83 ec 10          	sub    $0x10,%rsp
   15166:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   1516a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1516e:	48 89 c7             	mov    %rax,%rdi
   15171:	e8 3e 15 ff ff       	call   66b4 <_ZNSaIP17VkCommandBuffer_TEC1Ev>
   15176:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1517a:	48 89 c7             	mov    %rax,%rdi
   1517d:	e8 c4 19 ff ff       	call   6b46 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   15182:	90                   	nop
   15183:	c9                   	leave
   15184:	c3                   	ret
   15185:	90                   	nop

0000000000015186 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   15186:	55                   	push   %rbp
   15187:	48 89 e5             	mov    %rsp,%rbp
   1518a:	48 83 ec 10          	sub    $0x10,%rsp
   1518e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   15192:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15196:	48 89 c7             	mov    %rax,%rdi
   15199:	e8 d8 fb ff ff       	call   14d76 <_ZNSaIP13VkSemaphore_TEC1Ev>
   1519e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151a2:	48 89 c7             	mov    %rax,%rdi
   151a5:	e8 9a 21 00 00       	call   17344 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   151aa:	90                   	nop
   151ab:	c9                   	leave
   151ac:	c3                   	ret
   151ad:	90                   	nop

00000000000151ae <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   151ae:	55                   	push   %rbp
   151af:	48 89 e5             	mov    %rsp,%rbp
   151b2:	48 83 ec 10          	sub    $0x10,%rsp
   151b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   151ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151be:	48 8b 50 10          	mov    0x10(%rax),%rdx
   151c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151c6:	48 8b 00             	mov    (%rax),%rax
   151c9:	48 29 c2             	sub    %rax,%rdx
   151cc:	48 89 d0             	mov    %rdx,%rax
   151cf:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   151d3:	48 89 c2             	mov    %rax,%rdx
   151d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151da:	48 8b 08             	mov    (%rax),%rcx
   151dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151e1:	48 89 ce             	mov    %rcx,%rsi
   151e4:	48 89 c7             	mov    %rax,%rdi
   151e7:	e8 86 21 00 00       	call   17372 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   151ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151f0:	48 89 c7             	mov    %rax,%rdi
   151f3:	e8 9c e6 ff ff       	call   13894 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implD1Ev>
   151f8:	90                   	nop
   151f9:	c9                   	leave
   151fa:	c3                   	ret
   151fb:	90                   	nop

00000000000151fc <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   151fc:	55                   	push   %rbp
   151fd:	48 89 e5             	mov    %rsp,%rbp
   15200:	48 83 ec 10          	sub    $0x10,%rsp
   15204:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   15208:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1520c:	48 89 c7             	mov    %rax,%rdi
   1520f:	e8 94 21 00 00       	call   173a8 <_ZNSaIP9VkFence_TEC1Ev>
   15214:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15218:	48 89 c7             	mov    %rax,%rdi
   1521b:	e8 a4 21 00 00       	call   173c4 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   15220:	90                   	nop
   15221:	c9                   	leave
   15222:	c3                   	ret
   15223:	90                   	nop

0000000000015224 <_ZNSaIP9VkFence_TED1Ev>:
   15224:	55                   	push   %rbp
   15225:	48 89 e5             	mov    %rsp,%rbp
   15228:	48 83 ec 10          	sub    $0x10,%rsp
   1522c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15230:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15234:	48 89 c7             	mov    %rax,%rdi
   15237:	e8 b6 21 00 00       	call   173f2 <_ZNSt15__new_allocatorIP9VkFence_TED1Ev>
   1523c:	90                   	nop
   1523d:	c9                   	leave
   1523e:	c3                   	ret
   1523f:	90                   	nop

0000000000015240 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   15240:	55                   	push   %rbp
   15241:	48 89 e5             	mov    %rsp,%rbp
   15244:	48 83 ec 10          	sub    $0x10,%rsp
   15248:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   1524c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15250:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15254:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15258:	48 8b 00             	mov    (%rax),%rax
   1525b:	48 29 c2             	sub    %rax,%rdx
   1525e:	48 89 d0             	mov    %rdx,%rax
   15261:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   15265:	48 89 c2             	mov    %rax,%rdx
   15268:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1526c:	48 8b 08             	mov    (%rax),%rcx
   1526f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15273:	48 89 ce             	mov    %rcx,%rsi
   15276:	48 89 c7             	mov    %rax,%rdi
   15279:	e8 80 21 00 00       	call   173fe <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   1527e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15282:	48 89 c7             	mov    %rax,%rdi
   15285:	e8 5e e6 ff ff       	call   138e8 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implD1Ev>
   1528a:	90                   	nop
   1528b:	c9                   	leave
   1528c:	c3                   	ret
   1528d:	90                   	nop

000000000001528e <_ZNSt6vectorIP9VkFence_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   1528e:	55                   	push   %rbp
   1528f:	48 89 e5             	mov    %rsp,%rbp
   15292:	48 83 ec 10          	sub    $0x10,%rsp
   15296:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   1529a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1529e:	48 89 c7             	mov    %rax,%rdi
   152a1:	e8 8e 21 00 00       	call   17434 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   152a6:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   152a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152ad:	48 8b 48 08          	mov    0x8(%rax),%rcx
   152b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152b5:	48 8b 00             	mov    (%rax),%rax
   152b8:	48 89 ce             	mov    %rcx,%rsi
   152bb:	48 89 c7             	mov    %rax,%rdi
   152be:	e8 7f 21 00 00       	call   17442 <_ZSt8_DestroyIPP9VkFence_TS1_EvT_S3_RSaIT0_E>
      }
   152c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152c7:	48 89 c7             	mov    %rax,%rdi
   152ca:	e8 71 ff ff ff       	call   15240 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EED1Ev>
   152cf:	90                   	nop
   152d0:	c9                   	leave
   152d1:	c3                   	ret

00000000000152d2 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>:
    { return std::move(__lhs.append(__rhs)); }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
   152d2:	55                   	push   %rbp
   152d3:	48 89 e5             	mov    %rsp,%rbp
   152d6:	48 83 ec 20          	sub    $0x20,%rsp
   152da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   152de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   152e2:	89 d0                	mov    %edx,%eax
   152e4:	88 45 ec             	mov    %al,-0x14(%rbp)
	      _CharT __rhs)
    { return std::move(__lhs.append(1, __rhs)); }
   152e7:	0f be 55 ec          	movsbl -0x14(%rbp),%edx
   152eb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   152ef:	be 01 00 00 00       	mov    $0x1,%esi
   152f4:	48 89 c7             	mov    %rax,%rdi
   152f7:	e8 24 f2 fe ff       	call   4520 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>
   152fc:	48 89 c7             	mov    %rax,%rdi
   152ff:	e8 d3 00 00 00       	call   153d7 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   15304:	48 89 c2             	mov    %rax,%rdx
   15307:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1530b:	48 89 d6             	mov    %rdx,%rsi
   1530e:	48 89 c7             	mov    %rax,%rdi
   15311:	e8 4a ef fe ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
   15316:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1531a:	c9                   	leave
   1531b:	c3                   	ret

000000000001531c <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   1531c:	55                   	push   %rbp
   1531d:	48 89 e5             	mov    %rsp,%rbp
   15320:	48 83 ec 20          	sub    $0x20,%rsp
   15324:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   15328:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1532c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15330:	48 89 d6             	mov    %rdx,%rsi
   15333:	48 89 c7             	mov    %rax,%rdi
   15336:	e8 31 21 00 00       	call   1746c <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   1533b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1533f:	c9                   	leave
   15340:	c3                   	ret
   15341:	90                   	nop

0000000000015342 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   15342:	55                   	push   %rbp
   15343:	48 89 e5             	mov    %rsp,%rbp
   15346:	48 83 ec 20          	sub    $0x20,%rsp
   1534a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   1534e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15352:	48 8d 50 08          	lea    0x8(%rax),%rdx
   15356:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1535a:	48 89 d6             	mov    %rdx,%rsi
   1535d:	48 89 c7             	mov    %rax,%rdi
   15360:	e8 07 21 00 00       	call   1746c <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   15365:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15369:	c9                   	leave
   1536a:	c3                   	ret

000000000001536b <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   1536b:	55                   	push   %rbp
   1536c:	48 89 e5             	mov    %rsp,%rbp
   1536f:	53                   	push   %rbx
   15370:	48 83 ec 18          	sub    $0x18,%rsp
   15374:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15378:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   1537c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15380:	48 89 c7             	mov    %rax,%rdi
   15383:	e8 02 21 00 00       	call   1748a <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   15388:	48 8b 18             	mov    (%rax),%rbx
   1538b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1538f:	48 89 c7             	mov    %rax,%rdi
   15392:	e8 f3 20 00 00       	call   1748a <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   15397:	48 8b 00             	mov    (%rax),%rax
   1539a:	48 39 c3             	cmp    %rax,%rbx
   1539d:	0f 95 c0             	setne  %al
   153a0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   153a4:	c9                   	leave
   153a5:	c3                   	ret

00000000000153a6 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   153a6:	55                   	push   %rbp
   153a7:	48 89 e5             	mov    %rsp,%rbp
   153aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   153ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153b2:	48 8b 00             	mov    (%rax),%rax
   153b5:	48 8d 50 08          	lea    0x8(%rax),%rdx
   153b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153bd:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   153c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   153c4:	5d                   	pop    %rbp
   153c5:	c3                   	ret

00000000000153c6 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   153c6:	55                   	push   %rbp
   153c7:	48 89 e5             	mov    %rsp,%rbp
   153ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   153ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153d2:	48 8b 00             	mov    (%rax),%rax
   153d5:	5d                   	pop    %rbp
   153d6:	c3                   	ret

00000000000153d7 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
   153d7:	55                   	push   %rbp
   153d8:	48 89 e5             	mov    %rsp,%rbp
   153db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   153df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153e3:	5d                   	pop    %rbp
   153e4:	c3                   	ret
   153e5:	90                   	nop

00000000000153e6 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   153e6:	55                   	push   %rbp
   153e7:	48 89 e5             	mov    %rsp,%rbp
   153ea:	48 83 ec 10          	sub    $0x10,%rsp
   153ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   153f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   153f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153fa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   153fe:	48 89 d6             	mov    %rdx,%rsi
   15401:	48 89 c7             	mov    %rax,%rdi
   15404:	e8 9f 63 ff ff       	call   b7a8 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
   15409:	90                   	nop
   1540a:	c9                   	leave
   1540b:	c3                   	ret

000000000001540c <_ZNKSt16initializer_listIPKcE5beginEv>:
      begin() const noexcept { return _M_array; }
   1540c:	55                   	push   %rbp
   1540d:	48 89 e5             	mov    %rsp,%rbp
   15410:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15414:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15418:	48 8b 00             	mov    (%rax),%rax
   1541b:	5d                   	pop    %rbp
   1541c:	c3                   	ret
   1541d:	90                   	nop

000000000001541e <_ZNKSt16initializer_listIPKcE3endEv>:
      end() const noexcept { return begin() + size(); }
   1541e:	55                   	push   %rbp
   1541f:	48 89 e5             	mov    %rsp,%rbp
   15422:	53                   	push   %rbx
   15423:	48 83 ec 18          	sub    $0x18,%rsp
   15427:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1542b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1542f:	48 89 c7             	mov    %rax,%rdi
   15432:	e8 d5 ff ff ff       	call   1540c <_ZNKSt16initializer_listIPKcE5beginEv>
   15437:	48 89 c3             	mov    %rax,%rbx
   1543a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1543e:	48 89 c7             	mov    %rax,%rdi
   15441:	e8 52 20 00 00       	call   17498 <_ZNKSt16initializer_listIPKcE4sizeEv>
   15446:	48 c1 e0 03          	shl    $0x3,%rax
   1544a:	48 01 d8             	add    %rbx,%rax
   1544d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15451:	c9                   	leave
   15452:	c3                   	ret

0000000000015453 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   15453:	55                   	push   %rbp
   15454:	48 89 e5             	mov    %rsp,%rbp
   15457:	48 83 ec 10          	sub    $0x10,%rsp
   1545b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1545f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   15463:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15467:	48 89 c7             	mov    %rax,%rdi
   1546a:	e8 3b 20 00 00       	call   174aa <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   1546f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15473:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15477:	48 89 d6             	mov    %rdx,%rsi
   1547a:	48 89 c7             	mov    %rax,%rdi
   1547d:	e8 33 20 00 00       	call   174b5 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   15482:	c9                   	leave
   15483:	c3                   	ret

0000000000015484 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   15484:	55                   	push   %rbp
   15485:	48 89 e5             	mov    %rsp,%rbp
   15488:	53                   	push   %rbx
   15489:	48 83 ec 38          	sub    $0x38,%rsp
   1548d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15491:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   15495:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   15499:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1549d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   154a1:	48 89 d6             	mov    %rdx,%rsi
   154a4:	48 89 c7             	mov    %rax,%rdi
   154a7:	e8 a7 ff ff ff       	call   15453 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   154ac:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   154b0:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   154b4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   154b8:	48 89 c7             	mov    %rax,%rdi
   154bb:	e8 5e 54 ff ff       	call   a91e <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   154c0:	48 89 c2             	mov    %rax,%rdx
   154c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   154c7:	48 89 d6             	mov    %rdx,%rsi
   154ca:	48 89 c7             	mov    %rax,%rdi
   154cd:	e8 4d 53 ff ff       	call   a81f <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
   154d2:	48 89 c6             	mov    %rax,%rsi
   154d5:	48 89 df             	mov    %rbx,%rdi
   154d8:	e8 57 6e ff ff       	call   c334 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   154dd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   154e1:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   154e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   154e8:	48 8b 00             	mov    (%rax),%rax
   154eb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   154ef:	48 c1 e2 03          	shl    $0x3,%rdx
   154f3:	48 01 c2             	add    %rax,%rdx
   154f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   154fa:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   154fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15502:	48 89 c7             	mov    %rax,%rdi
   15505:	e8 14 54 ff ff       	call   a91e <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   1550a:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   1550d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15511:	48 8b 10             	mov    (%rax),%rdx
   15514:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   15518:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1551c:	48 89 c7             	mov    %rax,%rdi
   1551f:	e8 ab 1f 00 00       	call   174cf <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   15524:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15528:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   1552c:	90                   	nop
   1552d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15531:	c9                   	leave
   15532:	c3                   	ret

0000000000015533 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   15533:	55                   	push   %rbp
   15534:	48 89 e5             	mov    %rsp,%rbp
   15537:	48 83 ec 20          	sub    $0x20,%rsp
   1553b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1553f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15543:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   15547:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1554b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1554f:	48 89 d6             	mov    %rdx,%rsi
   15552:	48 89 c7             	mov    %rax,%rdi
   15555:	e8 a6 1f 00 00       	call   17500 <_ZSt8_DestroyIPPKcEvT_S3_>
    }
   1555a:	90                   	nop
   1555b:	c9                   	leave
   1555c:	c3                   	ret
   1555d:	90                   	nop

000000000001555e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1555e:	55                   	push   %rbp
   1555f:	48 89 e5             	mov    %rsp,%rbp
   15562:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15566:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   1556a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1556e:	48 8b 10             	mov    (%rax),%rdx
   15571:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15575:	48 89 10             	mov    %rdx,(%rax)
   15578:	90                   	nop
   15579:	5d                   	pop    %rbp
   1557a:	c3                   	ret
   1557b:	90                   	nop

000000000001557c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1557c:	55                   	push   %rbp
   1557d:	48 89 e5             	mov    %rsp,%rbp
   15580:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   15584:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15588:	5d                   	pop    %rbp
   15589:	c3                   	ret

000000000001558a <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1558a:	55                   	push   %rbp
   1558b:	48 89 e5             	mov    %rsp,%rbp
   1558e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   15592:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15596:	5d                   	pop    %rbp
   15597:	c3                   	ret

0000000000015598 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   15598:	55                   	push   %rbp
   15599:	48 89 e5             	mov    %rsp,%rbp
   1559c:	48 83 ec 20          	sub    $0x20,%rsp
   155a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   155a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   155a8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   155ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   155b0:	48 89 c7             	mov    %rax,%rdi
   155b3:	e8 d2 ff ff ff       	call   1558a <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   155b8:	48 89 c2             	mov    %rax,%rdx
   155bb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   155bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   155c3:	48 89 ce             	mov    %rcx,%rsi
   155c6:	48 89 c7             	mov    %rax,%rdi
   155c9:	e8 58 1f 00 00       	call   17526 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>
	}
   155ce:	90                   	nop
   155cf:	c9                   	leave
   155d0:	c3                   	ret
   155d1:	90                   	nop

00000000000155d2 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
   155d2:	55                   	push   %rbp
   155d3:	48 89 e5             	mov    %rsp,%rbp
   155d6:	53                   	push   %rbx
   155d7:	48 83 ec 68          	sub    $0x68,%rsp
   155db:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   155df:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   155e3:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   155e7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   155eb:	48 8d 15 f4 bb 00 00 	lea    0xbbf4(%rip),%rdx        # 211e6 <_ZZN9VulkanApp6renderEvE11submitCount+0x2ba>
   155f2:	be 01 00 00 00       	mov    $0x1,%esi
   155f7:	48 89 c7             	mov    %rax,%rdi
   155fa:	e8 69 1f 00 00       	call   17568 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
   155ff:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   15603:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15607:	48 8b 00             	mov    (%rax),%rax
   1560a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   1560e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15612:	48 8b 40 08          	mov    0x8(%rax),%rax
   15616:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   1561a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1561e:	48 89 c7             	mov    %rax,%rdi
   15621:	e8 66 e4 ff ff       	call   13a8c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   15626:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1562a:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   1562e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   15632:	48 89 d6             	mov    %rdx,%rsi
   15635:	48 89 c7             	mov    %rax,%rdi
   15638:	e8 f3 1f 00 00       	call   17630 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   1563d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   15641:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15645:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15649:	48 89 d6             	mov    %rdx,%rsi
   1564c:	48 89 c7             	mov    %rax,%rdi
   1564f:	e8 e0 6c ff ff       	call   c334 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   15654:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   15658:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1565c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
   15660:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   15664:	48 89 c7             	mov    %rax,%rdi
   15667:	e8 1e ff ff ff       	call   1558a <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   1566c:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   1566f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15673:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   1567a:	00 
	  _Alloc_traits::construct(this->_M_impl,
   1567b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1567f:	48 01 c1             	add    %rax,%rcx
   15682:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15686:	48 89 ce             	mov    %rcx,%rsi
   15689:	48 89 c7             	mov    %rax,%rdi
   1568c:	e8 07 ff ff ff       	call   15598 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
   15691:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   15698:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
   15699:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1569d:	48 89 c7             	mov    %rax,%rdi
   156a0:	e8 79 52 ff ff       	call   a91e <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   156a5:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   156a8:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   156ac:	48 89 c7             	mov    %rax,%rdi
   156af:	e8 c8 fe ff ff       	call   1557c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   156b4:	48 8b 30             	mov    (%rax),%rsi
   156b7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   156bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   156bf:	48 89 d9             	mov    %rbx,%rcx
   156c2:	48 89 c7             	mov    %rax,%rdi
   156c5:	e8 a8 1f 00 00       	call   17672 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   156ca:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
   156ce:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
   156d3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   156d7:	48 89 c7             	mov    %rax,%rdi
   156da:	e8 3f 52 ff ff       	call   a91e <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   156df:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   156e2:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   156e6:	48 89 c7             	mov    %rax,%rdi
   156e9:	e8 8e fe ff ff       	call   1557c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   156ee:	48 8b 00             	mov    (%rax),%rax
   156f1:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   156f5:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   156f9:	48 89 d9             	mov    %rbx,%rcx
   156fc:	48 89 c7             	mov    %rax,%rdi
   156ff:	e8 6e 1f 00 00       	call   17672 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   15704:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
   15708:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   1570c:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   15710:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   15714:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   15718:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   1571c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   15720:	48 89 ce             	mov    %rcx,%rsi
   15723:	48 89 c7             	mov    %rax,%rdi
   15726:	e8 27 52 ff ff       	call   a952 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   1572b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1572f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15733:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   15736:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1573a:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1573e:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   15742:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15746:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1574d:	00 
   1574e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15752:	48 01 c2             	add    %rax,%rdx
   15755:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15759:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   1575d:	90                   	nop
   1575e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15762:	c9                   	leave
   15763:	c3                   	ret

0000000000015764 <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
   15764:	55                   	push   %rbp
   15765:	48 89 e5             	mov    %rsp,%rbp
   15768:	48 83 ec 20          	sub    $0x20,%rsp
   1576c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
   15770:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15774:	48 89 c7             	mov    %rax,%rdi
   15777:	e8 36 e3 ff ff       	call   13ab2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   1577c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15780:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15784:	be 01 00 00 00       	mov    $0x1,%esi
   15789:	48 89 c7             	mov    %rax,%rdi
   1578c:	e8 13 1f 00 00       	call   176a4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
   15791:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15795:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   15799:	48 89 c7             	mov    %rax,%rdi
   1579c:	e8 95 e3 ff ff       	call   13b36 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
   157a1:	c9                   	leave
   157a2:	c3                   	ret
   157a3:	90                   	nop

00000000000157a4 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   157a4:	55                   	push   %rbp
   157a5:	48 89 e5             	mov    %rsp,%rbp
   157a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   157ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   157b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   157b4:	5d                   	pop    %rbp
   157b5:	c3                   	ret

00000000000157b6 <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   157b6:	55                   	push   %rbp
   157b7:	48 89 e5             	mov    %rsp,%rbp
   157ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   157be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157c2:	5d                   	pop    %rbp
   157c3:	c3                   	ret

00000000000157c4 <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   157c4:	55                   	push   %rbp
   157c5:	48 89 e5             	mov    %rsp,%rbp
   157c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   157cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157d0:	5d                   	pop    %rbp
   157d1:	c3                   	ret

00000000000157d2 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   157d2:	55                   	push   %rbp
   157d3:	48 89 e5             	mov    %rsp,%rbp
   157d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   157da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157de:	5d                   	pop    %rbp
   157df:	c3                   	ret

00000000000157e0 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>:
      using _Optional_payload_base<_Tp>::_Optional_payload_base;
   157e0:	55                   	push   %rbp
   157e1:	48 89 e5             	mov    %rsp,%rbp
   157e4:	48 83 ec 20          	sub    $0x20,%rsp
   157e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   157ec:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
   157f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157f4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   157f8:	48 89 d6             	mov    %rdx,%rsi
   157fb:	48 89 c7             	mov    %rax,%rdi
   157fe:	e8 e3 1e 00 00       	call   176e6 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>
   15803:	90                   	nop
   15804:	c9                   	leave
   15805:	c3                   	ret

0000000000015806 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>:
	_Optional_base(in_place_t, _Args&&... __args)
   15806:	55                   	push   %rbp
   15807:	48 89 e5             	mov    %rsp,%rbp
   1580a:	53                   	push   %rbx
   1580b:	48 83 ec 18          	sub    $0x18,%rsp
   1580f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15813:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _M_payload(in_place, std::forward<_Args>(__args)...)
   15817:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1581b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1581f:	48 89 c7             	mov    %rax,%rdi
   15822:	e8 ab ff ff ff       	call   157d2 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   15827:	48 89 c6             	mov    %rax,%rsi
   1582a:	48 89 df             	mov    %rbx,%rdi
   1582d:	e8 ae ff ff ff       	call   157e0 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>
	{ }
   15832:	90                   	nop
   15833:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15837:	c9                   	leave
   15838:	c3                   	ret
   15839:	90                   	nop

000000000001583a <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1583a:	55                   	push   %rbp
   1583b:	48 89 e5             	mov    %rsp,%rbp
   1583e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15842:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   15846:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1584a:	48 8b 10             	mov    (%rax),%rdx
   1584d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15851:	48 89 10             	mov    %rdx,(%rax)
   15854:	90                   	nop
   15855:	5d                   	pop    %rbp
   15856:	c3                   	ret
   15857:	90                   	nop

0000000000015858 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   15858:	55                   	push   %rbp
   15859:	48 89 e5             	mov    %rsp,%rbp
   1585c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   15860:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15864:	5d                   	pop    %rbp
   15865:	c3                   	ret

0000000000015866 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>:
      _M_copy_assign(const _Optional_payload_base& __other)
   15866:	55                   	push   %rbp
   15867:	48 89 e5             	mov    %rsp,%rbp
   1586a:	53                   	push   %rbx
   1586b:	48 83 ec 18          	sub    $0x18,%rsp
   1586f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15873:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_engaged && __other._M_engaged)
   15877:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1587b:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   1587f:	84 c0                	test   %al,%al
   15881:	74 35                	je     158b8 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
   15883:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15887:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   1588b:	84 c0                	test   %al,%al
   1588d:	74 29                	je     158b8 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
	  this->_M_get() = __other._M_get();
   1588f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15893:	48 89 c7             	mov    %rax,%rdi
   15896:	e8 87 1e 00 00       	call   17722 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   1589b:	48 89 c3             	mov    %rax,%rbx
   1589e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   158a2:	48 89 c7             	mov    %rax,%rdi
   158a5:	e8 4e 00 00 00       	call   158f8 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   158aa:	48 89 de             	mov    %rbx,%rsi
   158ad:	48 89 c7             	mov    %rax,%rdi
   158b0:	e8 7b 1e 00 00       	call   17730 <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>
   158b5:	90                   	nop
      }
   158b6:	eb 38                	jmp    158f0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	    if (__other._M_engaged)
   158b8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   158bc:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   158c0:	84 c0                	test   %al,%al
   158c2:	74 20                	je     158e4 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x7e>
	      this->_M_construct(__other._M_get());
   158c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   158c8:	48 89 c7             	mov    %rax,%rdi
   158cb:	e8 52 1e 00 00       	call   17722 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   158d0:	48 89 c2             	mov    %rax,%rdx
   158d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   158d7:	48 89 d6             	mov    %rdx,%rsi
   158da:	48 89 c7             	mov    %rax,%rdi
   158dd:	e8 8c 1e 00 00       	call   1776e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>
      }
   158e2:	eb 0c                	jmp    158f0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	      this->_M_reset();
   158e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   158e8:	48 89 c7             	mov    %rax,%rdi
   158eb:	e8 c4 1e 00 00       	call   177b4 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>
      }
   158f0:	90                   	nop
   158f1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   158f5:	c9                   	leave
   158f6:	c3                   	ret
   158f7:	90                   	nop

00000000000158f8 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() noexcept
   158f8:	55                   	push   %rbp
   158f9:	48 89 e5             	mov    %rsp,%rbp
   158fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   15900:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15904:	5d                   	pop    %rbp
   15905:	c3                   	ret

0000000000015906 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   15906:	55                   	push   %rbp
   15907:	48 89 e5             	mov    %rsp,%rbp
   1590a:	48 83 ec 10          	sub    $0x10,%rsp
   1590e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15912:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15916:	48 89 c7             	mov    %rax,%rdi
   15919:	e8 be 1e 00 00       	call   177dc <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   1591e:	90                   	nop
   1591f:	c9                   	leave
   15920:	c3                   	ret
   15921:	90                   	nop

0000000000015922 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
   15922:	55                   	push   %rbp
   15923:	48 89 e5             	mov    %rsp,%rbp
   15926:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
   1592a:	90                   	nop
   1592b:	5d                   	pop    %rbp
   1592c:	c3                   	ret
   1592d:	90                   	nop

000000000001592e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1592e:	55                   	push   %rbp
   1592f:	48 89 e5             	mov    %rsp,%rbp
   15932:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15936:	90                   	nop
   15937:	5d                   	pop    %rbp
   15938:	c3                   	ret
   15939:	90                   	nop

000000000001593a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1593a:	55                   	push   %rbp
   1593b:	48 89 e5             	mov    %rsp,%rbp
   1593e:	48 83 ec 20          	sub    $0x20,%rsp
   15942:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15946:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
   1594a:	eb 49                	jmp    15995 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	{
	  _M_erase(_S_right(__x));
   1594c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15950:	48 89 c7             	mov    %rax,%rdi
   15953:	e8 8f 1e 00 00       	call   177e7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   15958:	48 89 c2             	mov    %rax,%rdx
   1595b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1595f:	48 89 d6             	mov    %rdx,%rsi
   15962:	48 89 c7             	mov    %rax,%rdi
   15965:	e8 d0 ff ff ff       	call   1593a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
   1596a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1596e:	48 89 c7             	mov    %rax,%rdi
   15971:	e8 83 1e 00 00       	call   177f9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   15976:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
   1597a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1597e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15982:	48 89 d6             	mov    %rdx,%rsi
   15985:	48 89 c7             	mov    %rax,%rdi
   15988:	e8 7f 1e 00 00       	call   1780c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
   1598d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15991:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
   15995:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1599a:	75 b0                	jne    1594c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
	}
    }
   1599c:	90                   	nop
   1599d:	90                   	nop
   1599e:	c9                   	leave
   1599f:	c3                   	ret

00000000000159a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
   159a0:	55                   	push   %rbp
   159a1:	48 89 e5             	mov    %rsp,%rbp
   159a4:	48 83 ec 10          	sub    $0x10,%rsp
   159a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
   159ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159b0:	48 89 c7             	mov    %rax,%rdi
   159b3:	e8 8e 1e 00 00       	call   17846 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
   159b8:	c9                   	leave
   159b9:	c3                   	ret

00000000000159ba <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   159ba:	55                   	push   %rbp
   159bb:	48 89 e5             	mov    %rsp,%rbp
   159be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   159c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   159c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   159ca:	48 8b 10             	mov    (%rax),%rdx
   159cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159d1:	48 89 10             	mov    %rdx,(%rax)
   159d4:	90                   	nop
   159d5:	5d                   	pop    %rbp
   159d6:	c3                   	ret
   159d7:	90                   	nop

00000000000159d8 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   159d8:	55                   	push   %rbp
   159d9:	48 89 e5             	mov    %rsp,%rbp
   159dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   159e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159e4:	5d                   	pop    %rbp
   159e5:	c3                   	ret

00000000000159e6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
   159e6:	55                   	push   %rbp
   159e7:	48 89 e5             	mov    %rsp,%rbp
   159ea:	48 83 ec 10          	sub    $0x10,%rsp
   159ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   159f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
   159f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159fa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   159fe:	48 89 d6             	mov    %rdx,%rsi
   15a01:	48 89 c7             	mov    %rax,%rdi
   15a04:	e8 4f 1e 00 00       	call   17858 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
   15a09:	c9                   	leave
   15a0a:	c3                   	ret
   15a0b:	90                   	nop

0000000000015a0c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   15a0c:	55                   	push   %rbp
   15a0d:	48 89 e5             	mov    %rsp,%rbp
   15a10:	48 83 ec 10          	sub    $0x10,%rsp
   15a14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
   15a18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a1c:	48 89 c7             	mov    %rax,%rdi
   15a1f:	e8 80 1e 00 00       	call   178a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
   15a24:	c9                   	leave
   15a25:	c3                   	ret

0000000000015a26 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
   15a26:	55                   	push   %rbp
   15a27:	48 89 e5             	mov    %rsp,%rbp
   15a2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15a2e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
   15a32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a36:	48 8b 10             	mov    (%rax),%rdx
   15a39:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15a3d:	48 8b 00             	mov    (%rax),%rax
   15a40:	48 39 c2             	cmp    %rax,%rdx
   15a43:	0f 94 c0             	sete   %al
   15a46:	5d                   	pop    %rbp
   15a47:	c3                   	ret

0000000000015a48 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
   15a48:	55                   	push   %rbp
   15a49:	48 89 e5             	mov    %rsp,%rbp
   15a4c:	48 83 ec 10          	sub    $0x10,%rsp
   15a50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
   15a54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a58:	48 89 c7             	mov    %rax,%rdi
   15a5b:	e8 6e 1e 00 00       	call   178ce <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
   15a60:	90                   	nop
   15a61:	c9                   	leave
   15a62:	c3                   	ret
   15a63:	90                   	nop

0000000000015a64 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   15a64:	55                   	push   %rbp
   15a65:	48 89 e5             	mov    %rsp,%rbp
   15a68:	48 83 ec 10          	sub    $0x10,%rsp
   15a6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
   15a70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a74:	48 8b 00             	mov    (%rax),%rax
   15a77:	48 89 c7             	mov    %rax,%rdi
   15a7a:	e8 5b 1e 00 00       	call   178da <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   15a7f:	c9                   	leave
   15a80:	c3                   	ret
   15a81:	90                   	nop

0000000000015a82 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
   15a82:	55                   	push   %rbp
   15a83:	48 89 e5             	mov    %rsp,%rbp
   15a86:	48 83 ec 20          	sub    $0x20,%rsp
   15a8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15a8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15a92:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
   15a96:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15a9a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15a9e:	48 89 d6             	mov    %rdx,%rsi
   15aa1:	48 89 c7             	mov    %rax,%rdi
   15aa4:	e8 4f 1e 00 00       	call   178f8 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
   15aa9:	c9                   	leave
   15aaa:	c3                   	ret

0000000000015aab <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
   15aab:	55                   	push   %rbp
   15aac:	48 89 e5             	mov    %rsp,%rbp
   15aaf:	48 83 ec 10          	sub    $0x10,%rsp
   15ab3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15ab7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
   15abb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15abf:	48 89 c7             	mov    %rax,%rdi
   15ac2:	e8 59 1e 00 00       	call   17920 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   15ac7:	48 89 c2             	mov    %rax,%rdx
   15aca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ace:	48 89 d6             	mov    %rdx,%rsi
   15ad1:	48 89 c7             	mov    %rax,%rdi
   15ad4:	e8 55 1e 00 00       	call   1792e <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
   15ad9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15add:	c9                   	leave
   15ade:	c3                   	ret
   15adf:	90                   	nop

0000000000015ae0 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
   15ae0:	55                   	push   %rbp
   15ae1:	48 89 e5             	mov    %rsp,%rbp
   15ae4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15ae8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
   15aec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15af0:	48 8b 10             	mov    (%rax),%rdx
   15af3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15af7:	48 89 10             	mov    %rdx,(%rax)
   15afa:	90                   	nop
   15afb:	5d                   	pop    %rbp
   15afc:	c3                   	ret
   15afd:	90                   	nop

0000000000015afe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   15afe:	55                   	push   %rbp
   15aff:	48 89 e5             	mov    %rsp,%rbp
   15b02:	41 54                	push   %r12
   15b04:	53                   	push   %rbx
   15b05:	48 83 ec 60          	sub    $0x60,%rsp
   15b09:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   15b0d:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   15b11:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   15b15:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   15b19:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
   15b1d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   15b21:	48 89 c7             	mov    %rax,%rdi
   15b24:	e8 54 1e 00 00       	call   1797d <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   15b29:	49 89 c4             	mov    %rax,%r12
   15b2c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   15b30:	48 89 c7             	mov    %rax,%rdi
   15b33:	e8 37 1e 00 00       	call   1796f <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   15b38:	48 89 c3             	mov    %rax,%rbx
   15b3b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15b3f:	48 89 c7             	mov    %rax,%rdi
   15b42:	e8 1a 1e 00 00       	call   17961 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   15b47:	48 89 c2             	mov    %rax,%rdx
   15b4a:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   15b4e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   15b52:	4d 89 e0             	mov    %r12,%r8
   15b55:	48 89 d9             	mov    %rbx,%rcx
   15b58:	48 89 c7             	mov    %rax,%rdi
   15b5b:	e8 2c 1e 00 00       	call   1798c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
   15b60:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   15b64:	48 89 c7             	mov    %rax,%rdi
   15b67:	e8 20 23 00 00       	call   17e8c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
   15b6c:	48 89 c2             	mov    %rax,%rdx
   15b6f:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   15b73:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   15b77:	48 89 ce             	mov    %rcx,%rsi
   15b7a:	48 89 c7             	mov    %rax,%rdi
   15b7d:	e8 bc 1e 00 00       	call   17a3e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
   15b82:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   15b86:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
   15b8a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15b8e:	48 85 c0             	test   %rax,%rax
   15b91:	74 1c                	je     15baf <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
   15b93:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   15b97:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15b9b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   15b9f:	48 89 ce             	mov    %rcx,%rsi
   15ba2:	48 89 c7             	mov    %rax,%rdi
   15ba5:	e8 00 23 00 00       	call   17eaa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
   15baa:	48 89 c3             	mov    %rax,%rbx
   15bad:	eb 17                	jmp    15bc6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
   15baf:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   15bb3:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   15bb7:	48 89 d6             	mov    %rdx,%rsi
   15bba:	48 89 c7             	mov    %rax,%rdi
   15bbd:	e8 3e 23 00 00       	call   17f00 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   15bc2:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
   15bc6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   15bca:	48 89 c7             	mov    %rax,%rdi
   15bcd:	e8 36 1e 00 00       	call   17a08 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   15bd2:	48 89 d8             	mov    %rbx,%rax
   15bd5:	eb 1a                	jmp    15bf1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
   15bd7:	48 89 c3             	mov    %rax,%rbx
   15bda:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   15bde:	48 89 c7             	mov    %rax,%rdi
   15be1:	e8 22 1e 00 00       	call   17a08 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   15be6:	48 89 d8             	mov    %rbx,%rax
   15be9:	48 89 c7             	mov    %rax,%rdi
   15bec:	e8 0f ed fe ff       	call   4900 <_Unwind_Resume@plt>
   15bf1:	48 83 c4 60          	add    $0x60,%rsp
   15bf5:	5b                   	pop    %rbx
   15bf6:	41 5c                	pop    %r12
   15bf8:	5d                   	pop    %rbp
   15bf9:	c3                   	ret

0000000000015bfa <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   15bfa:	55                   	push   %rbp
   15bfb:	48 89 e5             	mov    %rsp,%rbp
   15bfe:	48 83 ec 20          	sub    $0x20,%rsp
   15c02:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   15c06:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15c0a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15c0e:	48 89 d6             	mov    %rdx,%rsi
   15c11:	48 89 c7             	mov    %rax,%rdi
   15c14:	e8 01 23 00 00       	call   17f1a <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   15c19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c1d:	c9                   	leave
   15c1e:	c3                   	ret
   15c1f:	90                   	nop

0000000000015c20 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   15c20:	55                   	push   %rbp
   15c21:	48 89 e5             	mov    %rsp,%rbp
   15c24:	48 83 ec 20          	sub    $0x20,%rsp
   15c28:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   15c2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15c30:	48 8d 50 08          	lea    0x8(%rax),%rdx
   15c34:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15c38:	48 89 d6             	mov    %rdx,%rsi
   15c3b:	48 89 c7             	mov    %rax,%rdi
   15c3e:	e8 d7 22 00 00       	call   17f1a <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   15c43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c47:	c9                   	leave
   15c48:	c3                   	ret

0000000000015c49 <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
   15c49:	55                   	push   %rbp
   15c4a:	48 89 e5             	mov    %rsp,%rbp
   15c4d:	53                   	push   %rbx
   15c4e:	48 83 ec 18          	sub    $0x18,%rsp
   15c52:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15c56:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
   15c5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15c5e:	48 89 c7             	mov    %rax,%rdi
   15c61:	e8 d2 22 00 00       	call   17f38 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   15c66:	48 8b 18             	mov    (%rax),%rbx
   15c69:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15c6d:	48 89 c7             	mov    %rax,%rdi
   15c70:	e8 c3 22 00 00       	call   17f38 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   15c75:	48 8b 00             	mov    (%rax),%rax
   15c78:	48 39 c3             	cmp    %rax,%rbx
   15c7b:	0f 94 c0             	sete   %al
   15c7e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15c82:	c9                   	leave
   15c83:	c3                   	ret

0000000000015c84 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   15c84:	55                   	push   %rbp
   15c85:	48 89 e5             	mov    %rsp,%rbp
   15c88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15c8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   15c90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15c94:	48 8b 10             	mov    (%rax),%rdx
   15c97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c9b:	48 89 10             	mov    %rdx,(%rax)
   15c9e:	90                   	nop
   15c9f:	5d                   	pop    %rbp
   15ca0:	c3                   	ret
   15ca1:	90                   	nop

0000000000015ca2 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   15ca2:	55                   	push   %rbp
   15ca3:	48 89 e5             	mov    %rsp,%rbp
   15ca6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   15caa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15cae:	5d                   	pop    %rbp
   15caf:	c3                   	ret

0000000000015cb0 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   15cb0:	55                   	push   %rbp
   15cb1:	48 89 e5             	mov    %rsp,%rbp
   15cb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15cb8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   15cbc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15cc0:	48 8b 10             	mov    (%rax),%rdx
   15cc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15cc7:	48 89 10             	mov    %rdx,(%rax)
   15cca:	90                   	nop
   15ccb:	5d                   	pop    %rbp
   15ccc:	c3                   	ret
   15ccd:	90                   	nop

0000000000015cce <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   15cce:	55                   	push   %rbp
   15ccf:	48 89 e5             	mov    %rsp,%rbp
   15cd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   15cd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15cda:	5d                   	pop    %rbp
   15cdb:	c3                   	ret

0000000000015cdc <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
   15cdc:	55                   	push   %rbp
   15cdd:	48 89 e5             	mov    %rsp,%rbp
   15ce0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   15ce4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ce8:	5d                   	pop    %rbp
   15ce9:	c3                   	ret

0000000000015cea <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>:
      _M_move_assign(vector&& __x, true_type) noexcept
   15cea:	55                   	push   %rbp
   15ceb:	48 89 e5             	mov    %rsp,%rbp
   15cee:	53                   	push   %rbx
   15cef:	48 83 ec 38          	sub    $0x38,%rsp
   15cf3:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   15cf7:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	vector __tmp(get_allocator());
   15cfb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15cff:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   15d03:	48 89 d6             	mov    %rdx,%rsi
   15d06:	48 89 c7             	mov    %rax,%rdi
   15d09:	e8 38 22 00 00       	call   17f46 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>
   15d0e:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   15d12:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   15d16:	48 89 d6             	mov    %rdx,%rsi
   15d19:	48 89 c7             	mov    %rax,%rdi
   15d1c:	e8 59 22 00 00       	call   17f7a <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>
   15d21:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   15d25:	48 89 c7             	mov    %rax,%rdi
   15d28:	e8 1b 46 ff ff       	call   a348 <_ZNSaIP9VkImage_TED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
   15d2d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15d31:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   15d35:	48 89 d6             	mov    %rdx,%rsi
   15d38:	48 89 c7             	mov    %rax,%rdi
   15d3b:	e8 60 22 00 00       	call   17fa0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
   15d40:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   15d44:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   15d48:	48 89 d6             	mov    %rdx,%rsi
   15d4b:	48 89 c7             	mov    %rax,%rdi
   15d4e:	e8 4d 22 00 00       	call   17fa0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
   15d53:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15d57:	48 89 c7             	mov    %rax,%rdi
   15d5a:	e8 9d 56 ff ff       	call   b3fc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15d5f:	48 89 c3             	mov    %rax,%rbx
   15d62:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15d66:	48 89 c7             	mov    %rax,%rdi
   15d69:	e8 8e 56 ff ff       	call   b3fc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15d6e:	48 89 de             	mov    %rbx,%rsi
   15d71:	48 89 c7             	mov    %rax,%rdi
   15d74:	e8 7f 22 00 00       	call   17ff8 <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>
      }
   15d79:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   15d7d:	48 89 c7             	mov    %rax,%rdi
   15d80:	e8 55 46 ff ff       	call   a3da <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   15d85:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15d89:	c9                   	leave
   15d8a:	c3                   	ret
   15d8b:	90                   	nop

0000000000015d8c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
   15d8c:	55                   	push   %rbp
   15d8d:	48 89 e5             	mov    %rsp,%rbp
   15d90:	53                   	push   %rbx
   15d91:	48 83 ec 38          	sub    $0x38,%rsp
   15d95:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   15d99:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    _M_default_append(size_type __n)
    {
      if (__n != 0)
   15d9d:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   15da2:	0f 84 e7 01 00 00    	je     15f8f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
	{
	  const size_type __size = size();
   15da8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15dac:	48 89 c7             	mov    %rax,%rdi
   15daf:	e8 1c ea ff ff       	call   147d0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   15db4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   15db8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15dbc:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   15dc0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15dc4:	48 8b 40 08          	mov    0x8(%rax),%rax
   15dc8:	48 29 c2             	sub    %rax,%rdx
   15dcb:	48 89 d0             	mov    %rdx,%rax
   15dce:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   15dd2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

	  if (__size > max_size() || __navail > max_size() - __size)
   15dd6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15dda:	48 89 c7             	mov    %rax,%rdi
   15ddd:	e8 36 22 00 00       	call   18018 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   15de2:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   15de6:	72 16                	jb     15dfe <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x72>
   15de8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15dec:	48 89 c7             	mov    %rax,%rdi
   15def:	e8 24 22 00 00       	call   18018 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   15df4:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   15df8:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   15dfc:	73 07                	jae    15e05 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x79>
   15dfe:	b8 01 00 00 00       	mov    $0x1,%eax
   15e03:	eb 05                	jmp    15e0a <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x7e>
   15e05:	b8 00 00 00 00       	mov    $0x0,%eax
   15e0a:	84 c0                	test   %al,%al
	    __builtin_unreachable();

	  if (__navail >= __n)
   15e0c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15e10:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   15e14:	72 33                	jb     15e49 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0xbd>
	    {
	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
	      this->_M_impl._M_finish =
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
						 __n, _M_get_Tp_allocator());
   15e16:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15e1a:	48 89 c7             	mov    %rax,%rdi
   15e1d:	e8 c2 09 00 00       	call   167e4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15e22:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   15e25:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15e29:	48 8b 40 08          	mov    0x8(%rax),%rax
   15e2d:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   15e31:	48 89 ce             	mov    %rcx,%rsi
   15e34:	48 89 c7             	mov    %rax,%rdi
   15e37:	e8 fe 21 00 00       	call   1803a <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   15e3c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15e40:	48 89 42 08          	mov    %rax,0x8(%rdx)
	      this->_M_impl._M_start = __new_start;
	      this->_M_impl._M_finish = __new_start + __size + __n;
	      this->_M_impl._M_end_of_storage = __new_start + __len;
	    }
	}
    }
   15e44:	e9 46 01 00 00       	jmp    15f8f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   15e49:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   15e4d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15e51:	48 8d 15 a8 b3 00 00 	lea    0xb3a8(%rip),%rdx        # 21200 <_ZZN9VulkanApp6renderEvE11submitCount+0x2d4>
   15e58:	48 89 ce             	mov    %rcx,%rsi
   15e5b:	48 89 c7             	mov    %rax,%rdi
   15e5e:	e8 01 22 00 00       	call   18064 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>
   15e63:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   15e67:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15e6b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15e6f:	48 89 d6             	mov    %rdx,%rsi
   15e72:	48 89 c7             	mov    %rax,%rdi
   15e75:	e8 b2 22 00 00       	call   1812c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
   15e7a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   15e7e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15e82:	48 89 c7             	mov    %rax,%rdi
   15e85:	e8 5a 09 00 00       	call   167e4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15e8a:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   15e8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15e91:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   15e98:	00 
   15e99:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15e9d:	48 01 c1             	add    %rax,%rcx
   15ea0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15ea4:	48 89 c6             	mov    %rax,%rsi
   15ea7:	48 89 cf             	mov    %rcx,%rdi
   15eaa:	e8 8b 21 00 00       	call   1803a <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   15eaf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15eb3:	48 89 c7             	mov    %rax,%rdi
   15eb6:	e8 29 09 00 00       	call   167e4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15ebb:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   15ebe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15ec2:	48 8b 70 08          	mov    0x8(%rax),%rsi
   15ec6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15eca:	48 8b 00             	mov    (%rax),%rax
   15ecd:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   15ed1:	48 89 c7             	mov    %rax,%rdi
   15ed4:	e8 86 22 00 00       	call   1815f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   15ed9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   15edd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15ee1:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   15ee5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15ee9:	48 8b 12             	mov    (%rdx),%rdx
   15eec:	48 29 d1             	sub    %rdx,%rcx
   15eef:	48 c1 f9 03          	sar    $0x3,%rcx
   15ef3:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   15ef6:	48 89 d6             	mov    %rdx,%rsi
   15ef9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15efd:	48 8b 0a             	mov    (%rdx),%rcx
   15f00:	48 89 f2             	mov    %rsi,%rdx
   15f03:	48 89 ce             	mov    %rcx,%rsi
   15f06:	48 89 c7             	mov    %rax,%rdi
   15f09:	e8 3c 13 00 00       	call   1724a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   15f0e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15f12:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   15f16:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   15f19:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15f1d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15f21:	48 01 d0             	add    %rdx,%rax
   15f24:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15f2b:	00 
   15f2c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15f30:	48 01 c2             	add    %rax,%rdx
   15f33:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15f37:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   15f3b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15f3f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15f46:	00 
   15f47:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15f4b:	48 01 c2             	add    %rax,%rdx
   15f4e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15f52:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   15f56:	eb 37                	jmp    15f8f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   15f58:	48 89 c7             	mov    %rax,%rdi
   15f5b:	e8 00 e2 fe ff       	call   4160 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   15f60:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15f64:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15f68:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   15f6c:	48 89 ce             	mov    %rcx,%rsi
   15f6f:	48 89 c7             	mov    %rax,%rdi
   15f72:	e8 d3 12 00 00       	call   1724a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   15f77:	e8 f4 e7 fe ff       	call   4770 <__cxa_rethrow@plt>
		  __catch(...)
   15f7c:	48 89 c3             	mov    %rax,%rbx
   15f7f:	e8 dc e8 fe ff       	call   4860 <__cxa_end_catch@plt>
   15f84:	48 89 d8             	mov    %rbx,%rax
   15f87:	48 89 c7             	mov    %rax,%rdi
   15f8a:	e8 71 e9 fe ff       	call   4900 <_Unwind_Resume@plt>
    }
   15f8f:	90                   	nop
   15f90:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15f94:	c9                   	leave
   15f95:	c3                   	ret

0000000000015f96 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   15f96:	55                   	push   %rbp
   15f97:	48 89 e5             	mov    %rsp,%rbp
   15f9a:	48 83 ec 20          	sub    $0x20,%rsp
   15f9e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15fa2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   15fa6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15faa:	48 8b 40 08          	mov    0x8(%rax),%rax
   15fae:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   15fb2:	48 c1 f8 03          	sar    $0x3,%rax
   15fb6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15fba:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   15fbf:	74 32                	je     15ff3 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   15fc1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15fc5:	48 89 c7             	mov    %rax,%rdi
   15fc8:	e8 17 08 00 00       	call   167e4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15fcd:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   15fd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15fd4:	48 8b 48 08          	mov    0x8(%rax),%rcx
   15fd8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15fdc:	48 89 ce             	mov    %rcx,%rsi
   15fdf:	48 89 c7             	mov    %rax,%rdi
   15fe2:	e8 0b 08 00 00       	call   167f2 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   15fe7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15feb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   15fef:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   15ff3:	90                   	nop
   15ff4:	c9                   	leave
   15ff5:	c3                   	ret

0000000000015ff6 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>:
      operator[](size_type __n) noexcept
   15ff6:	55                   	push   %rbp
   15ff7:	48 89 e5             	mov    %rsp,%rbp
   15ffa:	48 83 ec 10          	sub    $0x10,%rsp
   15ffe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16002:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return _AT_Type::_S_ref(_M_elems, __n);
   16006:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1600a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1600e:	48 89 d6             	mov    %rdx,%rsi
   16011:	48 89 c7             	mov    %rax,%rdi
   16014:	e8 78 21 00 00       	call   18191 <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_refERA2_KS0_m>
      }
   16019:	c9                   	leave
   1601a:	c3                   	ret
   1601b:	90                   	nop

000000000001601c <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1601c:	55                   	push   %rbp
   1601d:	48 89 e5             	mov    %rsp,%rbp
   16020:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16024:	90                   	nop
   16025:	5d                   	pop    %rbp
   16026:	c3                   	ret
   16027:	90                   	nop

0000000000016028 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   16028:	55                   	push   %rbp
   16029:	48 89 e5             	mov    %rsp,%rbp
   1602c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16030:	90                   	nop
   16031:	5d                   	pop    %rbp
   16032:	c3                   	ret
   16033:	90                   	nop

0000000000016034 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   16034:	55                   	push   %rbp
   16035:	48 89 e5             	mov    %rsp,%rbp
   16038:	48 83 ec 10          	sub    $0x10,%rsp
   1603c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16040:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16044:	48 89 c7             	mov    %rax,%rdi
   16047:	e8 f0 e4 ff ff       	call   1453c <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
   1604c:	90                   	nop
   1604d:	c9                   	leave
   1604e:	c3                   	ret
   1604f:	90                   	nop

0000000000016050 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ERKS1_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   16050:	55                   	push   %rbp
   16051:	48 89 e5             	mov    %rsp,%rbp
   16054:	48 83 ec 10          	sub    $0x10,%rsp
   16058:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1605c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   16060:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16064:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16068:	48 89 d6             	mov    %rdx,%rsi
   1606b:	48 89 c7             	mov    %rax,%rdi
   1606e:	e8 3f 21 00 00       	call   181b2 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implC1ERKS1_>
   16073:	90                   	nop
   16074:	c9                   	leave
   16075:	c3                   	ret

0000000000016076 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   16076:	55                   	push   %rbp
   16077:	48 89 e5             	mov    %rsp,%rbp
   1607a:	48 83 ec 10          	sub    $0x10,%rsp
   1607e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   16082:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16086:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1608a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1608e:	48 8b 00             	mov    (%rax),%rax
   16091:	48 29 c2             	sub    %rax,%rdx
   16094:	48 c1 fa 04          	sar    $0x4,%rdx
   16098:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   1609f:	e3 38 8e 
   160a2:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
   160a6:	48 89 c2             	mov    %rax,%rdx
   160a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   160ad:	48 8b 08             	mov    (%rax),%rcx
   160b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   160b4:	48 89 ce             	mov    %rcx,%rsi
   160b7:	48 89 c7             	mov    %rax,%rdi
   160ba:	e8 25 21 00 00       	call   181e4 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m>
      }
   160bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   160c3:	48 89 c7             	mov    %rax,%rdi
   160c6:	e8 69 ff ff ff       	call   16034 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implD1Ev>
   160cb:	90                   	nop
   160cc:	c9                   	leave
   160cd:	c3                   	ret

00000000000160ce <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>:
      begin() const noexcept { return _M_array; }
   160ce:	55                   	push   %rbp
   160cf:	48 89 e5             	mov    %rsp,%rbp
   160d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   160d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   160da:	48 8b 00             	mov    (%rax),%rax
   160dd:	5d                   	pop    %rbp
   160de:	c3                   	ret
   160df:	90                   	nop

00000000000160e0 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE3endEv>:
      end() const noexcept { return begin() + size(); }
   160e0:	55                   	push   %rbp
   160e1:	48 89 e5             	mov    %rsp,%rbp
   160e4:	53                   	push   %rbx
   160e5:	48 83 ec 18          	sub    $0x18,%rsp
   160e9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   160ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   160f1:	48 89 c7             	mov    %rax,%rdi
   160f4:	e8 d5 ff ff ff       	call   160ce <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>
   160f9:	48 89 c3             	mov    %rax,%rbx
   160fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16100:	48 89 c7             	mov    %rax,%rdi
   16103:	e8 12 21 00 00       	call   1821a <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE4sizeEv>
   16108:	48 89 c2             	mov    %rax,%rdx
   1610b:	48 89 d0             	mov    %rdx,%rax
   1610e:	48 c1 e0 03          	shl    $0x3,%rax
   16112:	48 01 d0             	add    %rdx,%rax
   16115:	48 c1 e0 04          	shl    $0x4,%rax
   16119:	48 01 d8             	add    %rbx,%rax
   1611c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16120:	c9                   	leave
   16121:	c3                   	ret

0000000000016122 <_ZSt8distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_>:
    distance(_InputIterator __first, _InputIterator __last)
   16122:	55                   	push   %rbp
   16123:	48 89 e5             	mov    %rsp,%rbp
   16126:	48 83 ec 10          	sub    $0x10,%rsp
   1612a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1612e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   16132:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   16136:	48 89 c7             	mov    %rax,%rdi
   16139:	e8 ee 20 00 00       	call   1822c <_ZSt19__iterator_categoryIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__distance(__first, __last,
   1613e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16142:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16146:	48 89 d6             	mov    %rdx,%rsi
   16149:	48 89 c7             	mov    %rax,%rdi
   1614c:	e8 e6 20 00 00       	call   18237 <_ZSt10__distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>
    }
   16151:	c9                   	leave
   16152:	c3                   	ret
   16153:	90                   	nop

0000000000016154 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   16154:	55                   	push   %rbp
   16155:	48 89 e5             	mov    %rsp,%rbp
   16158:	53                   	push   %rbx
   16159:	48 83 ec 38          	sub    $0x38,%rsp
   1615d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   16161:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   16165:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   16169:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1616d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16171:	48 89 d6             	mov    %rdx,%rsi
   16174:	48 89 c7             	mov    %rax,%rdi
   16177:	e8 a6 ff ff ff       	call   16122 <_ZSt8distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_>
   1617c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   16180:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   16184:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16188:	48 89 c7             	mov    %rax,%rdi
   1618b:	e8 7e 00 00 00       	call   1620e <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   16190:	48 89 c2             	mov    %rax,%rdx
   16193:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16197:	48 89 d6             	mov    %rdx,%rsi
   1619a:	48 89 c7             	mov    %rax,%rdi
   1619d:	e8 c0 20 00 00       	call   18262 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_>
   161a2:	48 89 c6             	mov    %rax,%rsi
   161a5:	48 89 df             	mov    %rbx,%rdi
   161a8:	e8 15 21 00 00       	call   182c2 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm>
   161ad:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   161b1:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   161b4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   161b8:	48 8b 08             	mov    (%rax),%rcx
   161bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   161bf:	48 89 d0             	mov    %rdx,%rax
   161c2:	48 c1 e0 03          	shl    $0x3,%rax
   161c6:	48 01 d0             	add    %rdx,%rax
   161c9:	48 c1 e0 04          	shl    $0x4,%rax
   161cd:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   161d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   161d5:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   161d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   161dd:	48 89 c7             	mov    %rax,%rdi
   161e0:	e8 29 00 00 00       	call   1620e <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   161e5:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   161e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   161ec:	48 8b 10             	mov    (%rax),%rdx
   161ef:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   161f3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   161f7:	48 89 c7             	mov    %rax,%rdi
   161fa:	e8 f6 20 00 00       	call   182f5 <_ZSt22__uninitialized_copy_aIPK28VkGraphicsPipelineCreateInfoPS0_S0_ET0_T_S5_S4_RSaIT1_E>
	  this->_M_impl._M_finish =
   161ff:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16203:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   16207:	90                   	nop
   16208:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1620c:	c9                   	leave
   1620d:	c3                   	ret

000000000001620e <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1620e:	55                   	push   %rbp
   1620f:	48 89 e5             	mov    %rsp,%rbp
   16212:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   16216:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1621a:	5d                   	pop    %rbp
   1621b:	c3                   	ret

000000000001621c <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1621c:	55                   	push   %rbp
   1621d:	48 89 e5             	mov    %rsp,%rbp
   16220:	48 83 ec 20          	sub    $0x20,%rsp
   16224:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16228:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1622c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   16230:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16234:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16238:	48 89 d6             	mov    %rdx,%rsi
   1623b:	48 89 c7             	mov    %rax,%rdi
   1623e:	e8 e3 20 00 00       	call   18326 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoEvT_S2_>
    }
   16243:	90                   	nop
   16244:	c9                   	leave
   16245:	c3                   	ret

0000000000016246 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   16246:	55                   	push   %rbp
   16247:	48 89 e5             	mov    %rsp,%rbp
   1624a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   1624e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16252:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16256:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1625a:	48 8b 00             	mov    (%rax),%rax
   1625d:	48 29 c2             	sub    %rax,%rdx
   16260:	48 c1 fa 04          	sar    $0x4,%rdx
   16264:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   1626b:	e3 38 8e 
   1626e:	48 0f af c2          	imul   %rdx,%rax
   16272:	5d                   	pop    %rbp
   16273:	c3                   	ret

0000000000016274 <_ZNSaIP12VkPipeline_TEC1Ev>:
   16274:	55                   	push   %rbp
   16275:	48 89 e5             	mov    %rsp,%rbp
   16278:	48 83 ec 10          	sub    $0x10,%rsp
   1627c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16280:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16284:	48 89 c7             	mov    %rax,%rdi
   16287:	e8 c0 20 00 00       	call   1834c <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>
   1628c:	90                   	nop
   1628d:	c9                   	leave
   1628e:	c3                   	ret
   1628f:	90                   	nop

0000000000016290 <_ZNSaIP12VkPipeline_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   16290:	55                   	push   %rbp
   16291:	48 89 e5             	mov    %rsp,%rbp
   16294:	48 83 ec 10          	sub    $0x10,%rsp
   16298:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1629c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   162a0:	48 89 c7             	mov    %rax,%rdi
   162a3:	e8 b0 20 00 00       	call   18358 <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>
   162a8:	90                   	nop
   162a9:	c9                   	leave
   162aa:	c3                   	ret
   162ab:	90                   	nop

00000000000162ac <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
   162ac:	55                   	push   %rbp
   162ad:	48 89 e5             	mov    %rsp,%rbp
   162b0:	53                   	push   %rbx
   162b1:	48 83 ec 28          	sub    $0x28,%rsp
   162b5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   162b9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   162bd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
   162c1:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   162c5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   162c9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   162cd:	48 89 d6             	mov    %rdx,%rsi
   162d0:	48 89 c7             	mov    %rax,%rdi
   162d3:	e8 8b 20 00 00       	call   18363 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   162d8:	48 89 c1             	mov    %rax,%rcx
   162db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   162df:	48 89 c2             	mov    %rax,%rdx
   162e2:	48 89 ce             	mov    %rcx,%rsi
   162e5:	48 89 df             	mov    %rbx,%rdi
   162e8:	e8 d7 20 00 00       	call   183c4 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
   162ed:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   162f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   162f5:	48 89 d6             	mov    %rdx,%rsi
   162f8:	48 89 c7             	mov    %rax,%rdi
   162fb:	e8 22 21 00 00       	call   18422 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE21_M_default_initializeEm>
   16300:	eb 1a                	jmp    1631c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_+0x70>
   16302:	48 89 c3             	mov    %rax,%rbx
   16305:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16309:	48 89 c7             	mov    %rax,%rdi
   1630c:	e8 59 00 00 00       	call   1636a <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>
   16311:	48 89 d8             	mov    %rbx,%rax
   16314:	48 89 c7             	mov    %rax,%rdi
   16317:	e8 e4 e5 fe ff       	call   4900 <_Unwind_Resume@plt>
   1631c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16320:	c9                   	leave
   16321:	c3                   	ret

0000000000016322 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   16322:	55                   	push   %rbp
   16323:	48 89 e5             	mov    %rsp,%rbp
   16326:	48 83 ec 10          	sub    $0x10,%rsp
   1632a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   1632e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16332:	48 8b 10             	mov    (%rax),%rdx
   16335:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16339:	48 89 d6             	mov    %rdx,%rsi
   1633c:	48 89 c7             	mov    %rax,%rdi
   1633f:	e8 1e 21 00 00       	call   18462 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
   16344:	c9                   	leave
   16345:	c3                   	ret

0000000000016346 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   16346:	55                   	push   %rbp
   16347:	48 89 e5             	mov    %rsp,%rbp
   1634a:	48 83 ec 10          	sub    $0x10,%rsp
   1634e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   16352:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16356:	48 8b 10             	mov    (%rax),%rdx
   16359:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1635d:	48 89 d6             	mov    %rdx,%rsi
   16360:	48 89 c7             	mov    %rax,%rdi
   16363:	e8 0c 21 00 00       	call   18474 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   16368:	c9                   	leave
   16369:	c3                   	ret

000000000001636a <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   1636a:	55                   	push   %rbp
   1636b:	48 89 e5             	mov    %rsp,%rbp
   1636e:	48 83 ec 10          	sub    $0x10,%rsp
   16372:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   16376:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1637a:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1637e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16382:	48 8b 00             	mov    (%rax),%rax
   16385:	48 29 c2             	sub    %rax,%rdx
   16388:	48 89 d0             	mov    %rdx,%rax
   1638b:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   1638f:	48 89 c2             	mov    %rax,%rdx
   16392:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16396:	48 8b 08             	mov    (%rax),%rcx
   16399:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1639d:	48 89 ce             	mov    %rcx,%rsi
   163a0:	48 89 c7             	mov    %rax,%rdi
   163a3:	e8 04 21 00 00       	call   184ac <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   163a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   163ac:	48 89 c7             	mov    %rax,%rdi
   163af:	e8 70 e2 ff ff       	call   14624 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>
   163b4:	90                   	nop
   163b5:	c9                   	leave
   163b6:	c3                   	ret
   163b7:	90                   	nop

00000000000163b8 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   163b8:	55                   	push   %rbp
   163b9:	48 89 e5             	mov    %rsp,%rbp
   163bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   163c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   163c4:	5d                   	pop    %rbp
   163c5:	c3                   	ret

00000000000163c6 <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   163c6:	55                   	push   %rbp
   163c7:	48 89 e5             	mov    %rsp,%rbp
   163ca:	48 83 ec 20          	sub    $0x20,%rsp
   163ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   163d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   163d6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   163da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   163de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   163e2:	48 89 d6             	mov    %rdx,%rsi
   163e5:	48 89 c7             	mov    %rax,%rdi
   163e8:	e8 f4 20 00 00       	call   184e1 <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>
    }
   163ed:	90                   	nop
   163ee:	c9                   	leave
   163ef:	c3                   	ret

00000000000163f0 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   163f0:	55                   	push   %rbp
   163f1:	48 89 e5             	mov    %rsp,%rbp
   163f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   163f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   163fc:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16400:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16404:	48 8b 00             	mov    (%rax),%rax
   16407:	48 29 c2             	sub    %rax,%rdx
   1640a:	48 89 d0             	mov    %rdx,%rax
   1640d:	48 c1 f8 03          	sar    $0x3,%rax
   16411:	5d                   	pop    %rbp
   16412:	c3                   	ret
   16413:	90                   	nop

0000000000016414 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   16414:	55                   	push   %rbp
   16415:	48 89 e5             	mov    %rsp,%rbp
   16418:	53                   	push   %rbx
   16419:	48 83 ec 38          	sub    $0x38,%rsp
   1641d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   16421:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   16425:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   1642a:	0f 84 e7 01 00 00    	je     16617 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   16430:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16434:	48 89 c7             	mov    %rax,%rdi
   16437:	e8 b4 ff ff ff       	call   163f0 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   1643c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   16440:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16444:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   16448:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1644c:	48 8b 40 08          	mov    0x8(%rax),%rax
   16450:	48 29 c2             	sub    %rax,%rdx
   16453:	48 89 d0             	mov    %rdx,%rax
   16456:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1645a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   1645e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16462:	48 89 c7             	mov    %rax,%rdi
   16465:	e8 9e 20 00 00       	call   18508 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   1646a:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1646e:	72 16                	jb     16486 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x72>
   16470:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16474:	48 89 c7             	mov    %rax,%rdi
   16477:	e8 8c 20 00 00       	call   18508 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   1647c:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   16480:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   16484:	73 07                	jae    1648d <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x79>
   16486:	b8 01 00 00 00       	mov    $0x1,%eax
   1648b:	eb 05                	jmp    16492 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x7e>
   1648d:	b8 00 00 00 00       	mov    $0x0,%eax
   16492:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   16494:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16498:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   1649c:	72 33                	jb     164d1 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   1649e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   164a2:	48 89 c7             	mov    %rax,%rdi
   164a5:	e8 62 0e 00 00       	call   1730c <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   164aa:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   164ad:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   164b1:	48 8b 40 08          	mov    0x8(%rax),%rax
   164b5:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   164b9:	48 89 ce             	mov    %rcx,%rsi
   164bc:	48 89 c7             	mov    %rax,%rdi
   164bf:	e8 66 20 00 00       	call   1852a <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   164c4:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   164c8:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   164cc:	e9 46 01 00 00       	jmp    16617 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   164d1:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   164d5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   164d9:	48 8d 15 20 ad 00 00 	lea    0xad20(%rip),%rdx        # 21200 <_ZZN9VulkanApp6renderEvE11submitCount+0x2d4>
   164e0:	48 89 ce             	mov    %rcx,%rsi
   164e3:	48 89 c7             	mov    %rax,%rdi
   164e6:	e8 69 20 00 00       	call   18554 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc>
   164eb:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   164ef:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   164f3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   164f7:	48 89 d6             	mov    %rdx,%rsi
   164fa:	48 89 c7             	mov    %rax,%rdi
   164fd:	e8 1a 21 00 00       	call   1861c <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm>
   16502:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   16506:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1650a:	48 89 c7             	mov    %rax,%rdi
   1650d:	e8 fa 0d 00 00       	call   1730c <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16512:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   16515:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16519:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   16520:	00 
   16521:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16525:	48 01 c1             	add    %rax,%rcx
   16528:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1652c:	48 89 c6             	mov    %rax,%rsi
   1652f:	48 89 cf             	mov    %rcx,%rdi
   16532:	e8 f3 1f 00 00       	call   1852a <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   16537:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1653b:	48 89 c7             	mov    %rax,%rdi
   1653e:	e8 c9 0d 00 00       	call   1730c <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16543:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   16546:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1654a:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1654e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16552:	48 8b 00             	mov    (%rax),%rax
   16555:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   16559:	48 89 c7             	mov    %rax,%rdi
   1655c:	e8 ee 20 00 00       	call   1864f <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   16561:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   16565:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16569:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   1656d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16571:	48 8b 12             	mov    (%rdx),%rdx
   16574:	48 29 d1             	sub    %rdx,%rcx
   16577:	48 c1 f9 03          	sar    $0x3,%rcx
   1657b:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   1657e:	48 89 d6             	mov    %rdx,%rsi
   16581:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16585:	48 8b 0a             	mov    (%rdx),%rcx
   16588:	48 89 f2             	mov    %rsi,%rdx
   1658b:	48 89 ce             	mov    %rcx,%rsi
   1658e:	48 89 c7             	mov    %rax,%rdi
   16591:	e8 40 0d 00 00       	call   172d6 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   16596:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1659a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1659e:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   165a1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   165a5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   165a9:	48 01 d0             	add    %rdx,%rax
   165ac:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   165b3:	00 
   165b4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   165b8:	48 01 c2             	add    %rax,%rdx
   165bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   165bf:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   165c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   165c7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   165ce:	00 
   165cf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   165d3:	48 01 c2             	add    %rax,%rdx
   165d6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   165da:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   165de:	eb 37                	jmp    16617 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   165e0:	48 89 c7             	mov    %rax,%rdi
   165e3:	e8 78 db fe ff       	call   4160 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   165e8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   165ec:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   165f0:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   165f4:	48 89 ce             	mov    %rcx,%rsi
   165f7:	48 89 c7             	mov    %rax,%rdi
   165fa:	e8 d7 0c 00 00       	call   172d6 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   165ff:	e8 6c e1 fe ff       	call   4770 <__cxa_rethrow@plt>
		  __catch(...)
   16604:	48 89 c3             	mov    %rax,%rbx
   16607:	e8 54 e2 fe ff       	call   4860 <__cxa_end_catch@plt>
   1660c:	48 89 d8             	mov    %rbx,%rax
   1660f:	48 89 c7             	mov    %rax,%rdi
   16612:	e8 e9 e2 fe ff       	call   4900 <_Unwind_Resume@plt>
    }
   16617:	90                   	nop
   16618:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1661c:	c9                   	leave
   1661d:	c3                   	ret

000000000001661e <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   1661e:	55                   	push   %rbp
   1661f:	48 89 e5             	mov    %rsp,%rbp
   16622:	48 83 ec 20          	sub    $0x20,%rsp
   16626:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1662a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   1662e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16632:	48 8b 40 08          	mov    0x8(%rax),%rax
   16636:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   1663a:	48 c1 f8 03          	sar    $0x3,%rax
   1663e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16642:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   16647:	74 32                	je     1667b <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   16649:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1664d:	48 89 c7             	mov    %rax,%rdi
   16650:	e8 b7 0c 00 00       	call   1730c <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16655:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   16658:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1665c:	48 8b 48 08          	mov    0x8(%rax),%rcx
   16660:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16664:	48 89 ce             	mov    %rcx,%rsi
   16667:	48 89 c7             	mov    %rax,%rdi
   1666a:	e8 ab 0c 00 00       	call   1731a <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   1666f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16673:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   16677:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   1667b:	90                   	nop
   1667c:	c9                   	leave
   1667d:	c3                   	ret

000000000001667e <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1667e:	55                   	push   %rbp
   1667f:	48 89 e5             	mov    %rsp,%rbp
   16682:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16686:	90                   	nop
   16687:	5d                   	pop    %rbp
   16688:	c3                   	ret
   16689:	90                   	nop

000000000001668a <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1668a:	55                   	push   %rbp
   1668b:	48 89 e5             	mov    %rsp,%rbp
   1668e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16692:	90                   	nop
   16693:	5d                   	pop    %rbp
   16694:	c3                   	ret
   16695:	90                   	nop

0000000000016696 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   16696:	55                   	push   %rbp
   16697:	48 89 e5             	mov    %rsp,%rbp
   1669a:	48 83 ec 10          	sub    $0x10,%rsp
   1669e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   166a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   166a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   166aa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   166ae:	48 89 d6             	mov    %rdx,%rsi
   166b1:	48 89 c7             	mov    %rax,%rdi
   166b4:	e8 c9 1f 00 00       	call   18682 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1ERKS2_>
   166b9:	90                   	nop
   166ba:	c9                   	leave
   166bb:	c3                   	ret

00000000000166bc <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>:
      begin() const noexcept { return _M_array; }
   166bc:	55                   	push   %rbp
   166bd:	48 89 e5             	mov    %rsp,%rbp
   166c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   166c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   166c8:	48 8b 00             	mov    (%rax),%rax
   166cb:	5d                   	pop    %rbp
   166cc:	c3                   	ret
   166cd:	90                   	nop

00000000000166ce <_ZNKSt16initializer_listIP13VkImageView_TE3endEv>:
      end() const noexcept { return begin() + size(); }
   166ce:	55                   	push   %rbp
   166cf:	48 89 e5             	mov    %rsp,%rbp
   166d2:	53                   	push   %rbx
   166d3:	48 83 ec 18          	sub    $0x18,%rsp
   166d7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   166db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   166df:	48 89 c7             	mov    %rax,%rdi
   166e2:	e8 d5 ff ff ff       	call   166bc <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>
   166e7:	48 89 c3             	mov    %rax,%rbx
   166ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   166ee:	48 89 c7             	mov    %rax,%rdi
   166f1:	e8 be 1f 00 00       	call   186b4 <_ZNKSt16initializer_listIP13VkImageView_TE4sizeEv>
   166f6:	48 c1 e0 03          	shl    $0x3,%rax
   166fa:	48 01 d8             	add    %rbx,%rax
   166fd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16701:	c9                   	leave
   16702:	c3                   	ret

0000000000016703 <_ZSt8distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   16703:	55                   	push   %rbp
   16704:	48 89 e5             	mov    %rsp,%rbp
   16707:	48 83 ec 10          	sub    $0x10,%rsp
   1670b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1670f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   16713:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   16717:	48 89 c7             	mov    %rax,%rdi
   1671a:	e8 a7 1f 00 00       	call   186c6 <_ZSt19__iterator_categoryIPKP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   1671f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16723:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16727:	48 89 d6             	mov    %rdx,%rsi
   1672a:	48 89 c7             	mov    %rax,%rdi
   1672d:	e8 9f 1f 00 00       	call   186d1 <_ZSt10__distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   16732:	c9                   	leave
   16733:	c3                   	ret

0000000000016734 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   16734:	55                   	push   %rbp
   16735:	48 89 e5             	mov    %rsp,%rbp
   16738:	53                   	push   %rbx
   16739:	48 83 ec 38          	sub    $0x38,%rsp
   1673d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   16741:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   16745:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   16749:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1674d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16751:	48 89 d6             	mov    %rdx,%rsi
   16754:	48 89 c7             	mov    %rax,%rdi
   16757:	e8 a7 ff ff ff       	call   16703 <_ZSt8distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   1675c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   16760:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   16764:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16768:	48 89 c7             	mov    %rax,%rdi
   1676b:	e8 74 00 00 00       	call   167e4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16770:	48 89 c2             	mov    %rax,%rdx
   16773:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16777:	48 89 d6             	mov    %rdx,%rsi
   1677a:	48 89 c7             	mov    %rax,%rdi
   1677d:	e8 69 1f 00 00       	call   186eb <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   16782:	48 89 c6             	mov    %rax,%rsi
   16785:	48 89 df             	mov    %rbx,%rdi
   16788:	e8 9f 19 00 00       	call   1812c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
   1678d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16791:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   16794:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16798:	48 8b 00             	mov    (%rax),%rax
   1679b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1679f:	48 c1 e2 03          	shl    $0x3,%rdx
   167a3:	48 01 c2             	add    %rax,%rdx
   167a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   167aa:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   167ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   167b2:	48 89 c7             	mov    %rax,%rdi
   167b5:	e8 2a 00 00 00       	call   167e4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   167ba:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   167bd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   167c1:	48 8b 10             	mov    (%rax),%rdx
   167c4:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   167c8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   167cc:	48 89 c7             	mov    %rax,%rdi
   167cf:	e8 77 1f 00 00       	call   1874b <_ZSt22__uninitialized_copy_aIPKP13VkImageView_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   167d4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   167d8:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   167dc:	90                   	nop
   167dd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   167e1:	c9                   	leave
   167e2:	c3                   	ret
   167e3:	90                   	nop

00000000000167e4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   167e4:	55                   	push   %rbp
   167e5:	48 89 e5             	mov    %rsp,%rbp
   167e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   167ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   167f0:	5d                   	pop    %rbp
   167f1:	c3                   	ret

00000000000167f2 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   167f2:	55                   	push   %rbp
   167f3:	48 89 e5             	mov    %rsp,%rbp
   167f6:	48 83 ec 20          	sub    $0x20,%rsp
   167fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   167fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16802:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   16806:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1680a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1680e:	48 89 d6             	mov    %rdx,%rsi
   16811:	48 89 c7             	mov    %rax,%rdi
   16814:	e8 63 1f 00 00       	call   1877c <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>
    }
   16819:	90                   	nop
   1681a:	c9                   	leave
   1681b:	c3                   	ret

000000000001681c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1681c:	55                   	push   %rbp
   1681d:	48 89 e5             	mov    %rsp,%rbp
   16820:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16824:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   16828:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1682c:	5d                   	pop    %rbp
   1682d:	c3                   	ret

000000000001682e <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1682e:	55                   	push   %rbp
   1682f:	48 89 e5             	mov    %rsp,%rbp
   16832:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16836:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   1683a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1683e:	48 8b 10             	mov    (%rax),%rdx
   16841:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16845:	48 89 10             	mov    %rdx,(%rax)
   16848:	90                   	nop
   16849:	5d                   	pop    %rbp
   1684a:	c3                   	ret
   1684b:	90                   	nop

000000000001684c <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1684c:	55                   	push   %rbp
   1684d:	48 89 e5             	mov    %rsp,%rbp
   16850:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   16854:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16858:	5d                   	pop    %rbp
   16859:	c3                   	ret

000000000001685a <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1685a:	55                   	push   %rbp
   1685b:	48 89 e5             	mov    %rsp,%rbp
   1685e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16862:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   16866:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1686a:	48 8b 10             	mov    (%rax),%rdx
   1686d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16871:	48 89 10             	mov    %rdx,(%rax)
   16874:	90                   	nop
   16875:	5d                   	pop    %rbp
   16876:	c3                   	ret
   16877:	90                   	nop

0000000000016878 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   16878:	55                   	push   %rbp
   16879:	48 89 e5             	mov    %rsp,%rbp
   1687c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   16880:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16884:	5d                   	pop    %rbp
   16885:	c3                   	ret

0000000000016886 <_ZSt4moveIRSt6vectorIP17VkCommandBuffer_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
   16886:	55                   	push   %rbp
   16887:	48 89 e5             	mov    %rsp,%rbp
   1688a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   1688e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16892:	5d                   	pop    %rbp
   16893:	c3                   	ret

0000000000016894 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>:
      _M_move_assign(vector&& __x, true_type) noexcept
   16894:	55                   	push   %rbp
   16895:	48 89 e5             	mov    %rsp,%rbp
   16898:	53                   	push   %rbx
   16899:	48 83 ec 38          	sub    $0x38,%rsp
   1689d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   168a1:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	vector __tmp(get_allocator());
   168a5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   168a9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   168ad:	48 89 d6             	mov    %rdx,%rsi
   168b0:	48 89 c7             	mov    %rax,%rdi
   168b3:	e8 ea 1e 00 00       	call   187a2 <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13get_allocatorEv>
   168b8:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   168bc:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   168c0:	48 89 d6             	mov    %rdx,%rsi
   168c3:	48 89 c7             	mov    %rax,%rdi
   168c6:	e8 0b 1f 00 00       	call   187d6 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1ERKS2_>
   168cb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   168cf:	48 89 c7             	mov    %rax,%rdi
   168d2:	e8 f9 fd fe ff       	call   66d0 <_ZNSaIP17VkCommandBuffer_TED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
   168d7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   168db:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   168df:	48 89 d6             	mov    %rdx,%rsi
   168e2:	48 89 c7             	mov    %rax,%rdi
   168e5:	e8 12 1f 00 00       	call   187fc <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
   168ea:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   168ee:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   168f2:	48 89 d6             	mov    %rdx,%rsi
   168f5:	48 89 c7             	mov    %rax,%rdi
   168f8:	e8 ff 1e 00 00       	call   187fc <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
   168fd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16901:	48 89 c7             	mov    %rax,%rdi
   16904:	e8 25 00 ff ff       	call   692e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16909:	48 89 c3             	mov    %rax,%rbx
   1690c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16910:	48 89 c7             	mov    %rax,%rdi
   16913:	e8 16 00 ff ff       	call   692e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16918:	48 89 de             	mov    %rbx,%rsi
   1691b:	48 89 c7             	mov    %rax,%rdi
   1691e:	e8 31 1f 00 00       	call   18854 <_ZSt15__alloc_on_moveISaIP17VkCommandBuffer_TEEvRT_S4_>
      }
   16923:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   16927:	48 89 c7             	mov    %rax,%rdi
   1692a:	e8 33 fe fe ff       	call   6762 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
   1692f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16933:	c9                   	leave
   16934:	c3                   	ret
   16935:	90                   	nop

0000000000016936 <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_data_ptrIS4_EEPT_S9_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   16936:	55                   	push   %rbp
   16937:	48 89 e5             	mov    %rsp,%rbp
   1693a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1693e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   16942:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16946:	5d                   	pop    %rbp
   16947:	c3                   	ret

0000000000016948 <_ZNKSt6vectorItSaItEE11_M_data_ptrItEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   16948:	55                   	push   %rbp
   16949:	48 89 e5             	mov    %rsp,%rbp
   1694c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16950:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   16954:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16958:	5d                   	pop    %rbp
   16959:	c3                   	ret

000000000001695a <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   1695a:	55                   	push   %rbp
   1695b:	48 89 e5             	mov    %rsp,%rbp
   1695e:	53                   	push   %rbx
   1695f:	48 83 ec 38          	sub    $0x38,%rsp
   16963:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   16967:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   1696b:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   16970:	0f 84 e7 01 00 00    	je     16b5d <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   16976:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1697a:	48 89 c7             	mov    %rax,%rdi
   1697d:	e8 fc e5 ff ff       	call   14f7e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   16982:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   16986:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1698a:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   1698e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16992:	48 8b 40 08          	mov    0x8(%rax),%rax
   16996:	48 29 c2             	sub    %rax,%rdx
   16999:	48 89 d0             	mov    %rdx,%rax
   1699c:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   169a0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   169a4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   169a8:	48 89 c7             	mov    %rax,%rdi
   169ab:	e8 c4 1e 00 00       	call   18874 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   169b0:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   169b4:	72 16                	jb     169cc <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x72>
   169b6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   169ba:	48 89 c7             	mov    %rax,%rdi
   169bd:	e8 b2 1e 00 00       	call   18874 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   169c2:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   169c6:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   169ca:	73 07                	jae    169d3 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x79>
   169cc:	b8 01 00 00 00       	mov    $0x1,%eax
   169d1:	eb 05                	jmp    169d8 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x7e>
   169d3:	b8 00 00 00 00       	mov    $0x0,%eax
   169d8:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   169da:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   169de:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   169e2:	72 33                	jb     16a17 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   169e4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   169e8:	48 89 c7             	mov    %rax,%rdi
   169eb:	e8 c8 05 00 00       	call   16fb8 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   169f0:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   169f3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   169f7:	48 8b 40 08          	mov    0x8(%rax),%rax
   169fb:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   169ff:	48 89 ce             	mov    %rcx,%rsi
   16a02:	48 89 c7             	mov    %rax,%rdi
   16a05:	e8 8c 1e 00 00       	call   18896 <_ZSt27__uninitialized_default_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   16a0a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16a0e:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   16a12:	e9 46 01 00 00       	jmp    16b5d <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   16a17:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   16a1b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16a1f:	48 8d 15 da a7 00 00 	lea    0xa7da(%rip),%rdx        # 21200 <_ZZN9VulkanApp6renderEvE11submitCount+0x2d4>
   16a26:	48 89 ce             	mov    %rcx,%rsi
   16a29:	48 89 c7             	mov    %rax,%rdi
   16a2c:	e8 8f 1e 00 00       	call   188c0 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc>
   16a31:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   16a35:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16a39:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16a3d:	48 89 d6             	mov    %rdx,%rsi
   16a40:	48 89 c7             	mov    %rax,%rdi
   16a43:	e8 40 1f 00 00       	call   18988 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm>
   16a48:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   16a4c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16a50:	48 89 c7             	mov    %rax,%rdi
   16a53:	e8 60 05 00 00       	call   16fb8 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16a58:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   16a5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16a5f:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   16a66:	00 
   16a67:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16a6b:	48 01 c1             	add    %rax,%rcx
   16a6e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16a72:	48 89 c6             	mov    %rax,%rsi
   16a75:	48 89 cf             	mov    %rcx,%rdi
   16a78:	e8 19 1e 00 00       	call   18896 <_ZSt27__uninitialized_default_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   16a7d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16a81:	48 89 c7             	mov    %rax,%rdi
   16a84:	e8 2f 05 00 00       	call   16fb8 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16a89:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   16a8c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16a90:	48 8b 70 08          	mov    0x8(%rax),%rsi
   16a94:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16a98:	48 8b 00             	mov    (%rax),%rax
   16a9b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   16a9f:	48 89 c7             	mov    %rax,%rdi
   16aa2:	e8 14 1f 00 00       	call   189bb <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   16aa7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   16aab:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16aaf:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   16ab3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16ab7:	48 8b 12             	mov    (%rdx),%rdx
   16aba:	48 29 d1             	sub    %rdx,%rcx
   16abd:	48 c1 f9 03          	sar    $0x3,%rcx
   16ac1:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   16ac4:	48 89 d6             	mov    %rdx,%rsi
   16ac7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16acb:	48 8b 0a             	mov    (%rdx),%rcx
   16ace:	48 89 f2             	mov    %rsi,%rdx
   16ad1:	48 89 ce             	mov    %rcx,%rsi
   16ad4:	48 89 c7             	mov    %rax,%rdi
   16ad7:	e8 96 08 00 00       	call   17372 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   16adc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16ae0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   16ae4:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   16ae7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16aeb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16aef:	48 01 d0             	add    %rdx,%rax
   16af2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16af9:	00 
   16afa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16afe:	48 01 c2             	add    %rax,%rdx
   16b01:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16b05:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   16b09:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16b0d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16b14:	00 
   16b15:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16b19:	48 01 c2             	add    %rax,%rdx
   16b1c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16b20:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   16b24:	eb 37                	jmp    16b5d <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   16b26:	48 89 c7             	mov    %rax,%rdi
   16b29:	e8 32 d6 fe ff       	call   4160 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   16b2e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16b32:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16b36:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   16b3a:	48 89 ce             	mov    %rcx,%rsi
   16b3d:	48 89 c7             	mov    %rax,%rdi
   16b40:	e8 2d 08 00 00       	call   17372 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   16b45:	e8 26 dc fe ff       	call   4770 <__cxa_rethrow@plt>
		  __catch(...)
   16b4a:	48 89 c3             	mov    %rax,%rbx
   16b4d:	e8 0e dd fe ff       	call   4860 <__cxa_end_catch@plt>
   16b52:	48 89 d8             	mov    %rbx,%rax
   16b55:	48 89 c7             	mov    %rax,%rdi
   16b58:	e8 a3 dd fe ff       	call   4900 <_Unwind_Resume@plt>
    }
   16b5d:	90                   	nop
   16b5e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16b62:	c9                   	leave
   16b63:	c3                   	ret

0000000000016b64 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   16b64:	55                   	push   %rbp
   16b65:	48 89 e5             	mov    %rsp,%rbp
   16b68:	48 83 ec 20          	sub    $0x20,%rsp
   16b6c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16b70:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   16b74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16b78:	48 8b 40 08          	mov    0x8(%rax),%rax
   16b7c:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   16b80:	48 c1 f8 03          	sar    $0x3,%rax
   16b84:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16b88:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   16b8d:	74 32                	je     16bc1 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   16b8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16b93:	48 89 c7             	mov    %rax,%rdi
   16b96:	e8 1d 04 00 00       	call   16fb8 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16b9b:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   16b9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16ba2:	48 8b 48 08          	mov    0x8(%rax),%rcx
   16ba6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16baa:	48 89 ce             	mov    %rcx,%rsi
   16bad:	48 89 c7             	mov    %rax,%rdi
   16bb0:	e8 11 04 00 00       	call   16fc6 <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   16bb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16bb9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   16bbd:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   16bc1:	90                   	nop
   16bc2:	c9                   	leave
   16bc3:	c3                   	ret

0000000000016bc4 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   16bc4:	55                   	push   %rbp
   16bc5:	48 89 e5             	mov    %rsp,%rbp
   16bc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   16bcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16bd0:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16bd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16bd8:	48 8b 00             	mov    (%rax),%rax
   16bdb:	48 29 c2             	sub    %rax,%rdx
   16bde:	48 89 d0             	mov    %rdx,%rax
   16be1:	48 c1 f8 03          	sar    $0x3,%rax
   16be5:	5d                   	pop    %rbp
   16be6:	c3                   	ret
   16be7:	90                   	nop

0000000000016be8 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   16be8:	55                   	push   %rbp
   16be9:	48 89 e5             	mov    %rsp,%rbp
   16bec:	53                   	push   %rbx
   16bed:	48 83 ec 38          	sub    $0x38,%rsp
   16bf1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   16bf5:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   16bf9:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   16bfe:	0f 84 e7 01 00 00    	je     16deb <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   16c04:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16c08:	48 89 c7             	mov    %rax,%rdi
   16c0b:	e8 b4 ff ff ff       	call   16bc4 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   16c10:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   16c14:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16c18:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   16c1c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16c20:	48 8b 40 08          	mov    0x8(%rax),%rax
   16c24:	48 29 c2             	sub    %rax,%rdx
   16c27:	48 89 d0             	mov    %rdx,%rax
   16c2a:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   16c2e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   16c32:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16c36:	48 89 c7             	mov    %rax,%rdi
   16c39:	e8 b0 1d 00 00       	call   189ee <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   16c3e:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   16c42:	72 16                	jb     16c5a <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x72>
   16c44:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16c48:	48 89 c7             	mov    %rax,%rdi
   16c4b:	e8 9e 1d 00 00       	call   189ee <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   16c50:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   16c54:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   16c58:	73 07                	jae    16c61 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x79>
   16c5a:	b8 01 00 00 00       	mov    $0x1,%eax
   16c5f:	eb 05                	jmp    16c66 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x7e>
   16c61:	b8 00 00 00 00       	mov    $0x0,%eax
   16c66:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   16c68:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16c6c:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   16c70:	72 33                	jb     16ca5 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   16c72:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16c76:	48 89 c7             	mov    %rax,%rdi
   16c79:	e8 b6 07 00 00       	call   17434 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16c7e:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   16c81:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16c85:	48 8b 40 08          	mov    0x8(%rax),%rax
   16c89:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   16c8d:	48 89 ce             	mov    %rcx,%rsi
   16c90:	48 89 c7             	mov    %rax,%rdi
   16c93:	e8 78 1d 00 00       	call   18a10 <_ZSt27__uninitialized_default_n_aIPP9VkFence_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   16c98:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16c9c:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   16ca0:	e9 46 01 00 00       	jmp    16deb <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   16ca5:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   16ca9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16cad:	48 8d 15 4c a5 00 00 	lea    0xa54c(%rip),%rdx        # 21200 <_ZZN9VulkanApp6renderEvE11submitCount+0x2d4>
   16cb4:	48 89 ce             	mov    %rcx,%rsi
   16cb7:	48 89 c7             	mov    %rax,%rdi
   16cba:	e8 7b 1d 00 00       	call   18a3a <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc>
   16cbf:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   16cc3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16cc7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16ccb:	48 89 d6             	mov    %rdx,%rsi
   16cce:	48 89 c7             	mov    %rax,%rdi
   16cd1:	e8 2c 1e 00 00       	call   18b02 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm>
   16cd6:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   16cda:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16cde:	48 89 c7             	mov    %rax,%rdi
   16ce1:	e8 4e 07 00 00       	call   17434 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16ce6:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   16ce9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16ced:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   16cf4:	00 
   16cf5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16cf9:	48 01 c1             	add    %rax,%rcx
   16cfc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16d00:	48 89 c6             	mov    %rax,%rsi
   16d03:	48 89 cf             	mov    %rcx,%rdi
   16d06:	e8 05 1d 00 00       	call   18a10 <_ZSt27__uninitialized_default_n_aIPP9VkFence_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   16d0b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16d0f:	48 89 c7             	mov    %rax,%rdi
   16d12:	e8 1d 07 00 00       	call   17434 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16d17:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   16d1a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16d1e:	48 8b 70 08          	mov    0x8(%rax),%rsi
   16d22:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16d26:	48 8b 00             	mov    (%rax),%rax
   16d29:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   16d2d:	48 89 c7             	mov    %rax,%rdi
   16d30:	e8 00 1e 00 00       	call   18b35 <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   16d35:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   16d39:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16d3d:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   16d41:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16d45:	48 8b 12             	mov    (%rdx),%rdx
   16d48:	48 29 d1             	sub    %rdx,%rcx
   16d4b:	48 c1 f9 03          	sar    $0x3,%rcx
   16d4f:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   16d52:	48 89 d6             	mov    %rdx,%rsi
   16d55:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16d59:	48 8b 0a             	mov    (%rdx),%rcx
   16d5c:	48 89 f2             	mov    %rsi,%rdx
   16d5f:	48 89 ce             	mov    %rcx,%rsi
   16d62:	48 89 c7             	mov    %rax,%rdi
   16d65:	e8 94 06 00 00       	call   173fe <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   16d6a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16d6e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   16d72:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   16d75:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16d79:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16d7d:	48 01 d0             	add    %rdx,%rax
   16d80:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16d87:	00 
   16d88:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16d8c:	48 01 c2             	add    %rax,%rdx
   16d8f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16d93:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   16d97:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16d9b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16da2:	00 
   16da3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16da7:	48 01 c2             	add    %rax,%rdx
   16daa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16dae:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   16db2:	eb 37                	jmp    16deb <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   16db4:	48 89 c7             	mov    %rax,%rdi
   16db7:	e8 a4 d3 fe ff       	call   4160 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   16dbc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16dc0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16dc4:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   16dc8:	48 89 ce             	mov    %rcx,%rsi
   16dcb:	48 89 c7             	mov    %rax,%rdi
   16dce:	e8 2b 06 00 00       	call   173fe <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   16dd3:	e8 98 d9 fe ff       	call   4770 <__cxa_rethrow@plt>
		  __catch(...)
   16dd8:	48 89 c3             	mov    %rax,%rbx
   16ddb:	e8 80 da fe ff       	call   4860 <__cxa_end_catch@plt>
   16de0:	48 89 d8             	mov    %rbx,%rax
   16de3:	48 89 c7             	mov    %rax,%rdi
   16de6:	e8 15 db fe ff       	call   4900 <_Unwind_Resume@plt>
    }
   16deb:	90                   	nop
   16dec:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16df0:	c9                   	leave
   16df1:	c3                   	ret

0000000000016df2 <_ZNSt6vectorIP9VkFence_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   16df2:	55                   	push   %rbp
   16df3:	48 89 e5             	mov    %rsp,%rbp
   16df6:	48 83 ec 20          	sub    $0x20,%rsp
   16dfa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16dfe:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   16e02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16e06:	48 8b 40 08          	mov    0x8(%rax),%rax
   16e0a:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   16e0e:	48 c1 f8 03          	sar    $0x3,%rax
   16e12:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16e16:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   16e1b:	74 32                	je     16e4f <_ZNSt6vectorIP9VkFence_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   16e1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16e21:	48 89 c7             	mov    %rax,%rdi
   16e24:	e8 0b 06 00 00       	call   17434 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16e29:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   16e2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16e30:	48 8b 48 08          	mov    0x8(%rax),%rcx
   16e34:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16e38:	48 89 ce             	mov    %rcx,%rsi
   16e3b:	48 89 c7             	mov    %rax,%rdi
   16e3e:	e8 ff 05 00 00       	call   17442 <_ZSt8_DestroyIPP9VkFence_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   16e43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16e47:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   16e4b:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   16e4f:	90                   	nop
   16e50:	c9                   	leave
   16e51:	c3                   	ret

0000000000016e52 <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   16e52:	55                   	push   %rbp
   16e53:	48 89 e5             	mov    %rsp,%rbp
   16e56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16e5a:	90                   	nop
   16e5b:	5d                   	pop    %rbp
   16e5c:	c3                   	ret
   16e5d:	90                   	nop

0000000000016e5e <_ZNSt15__new_allocatorIP13VkSemaphore_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   16e5e:	55                   	push   %rbp
   16e5f:	48 89 e5             	mov    %rsp,%rbp
   16e62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16e66:	90                   	nop
   16e67:	5d                   	pop    %rbp
   16e68:	c3                   	ret
   16e69:	90                   	nop

0000000000016e6a <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   16e6a:	55                   	push   %rbp
   16e6b:	48 89 e5             	mov    %rsp,%rbp
   16e6e:	48 83 ec 10          	sub    $0x10,%rsp
   16e72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16e76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   16e7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e7e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16e82:	48 89 d6             	mov    %rdx,%rsi
   16e85:	48 89 c7             	mov    %rax,%rdi
   16e88:	e8 db 1c 00 00       	call   18b68 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1ERKS2_>
   16e8d:	90                   	nop
   16e8e:	c9                   	leave
   16e8f:	c3                   	ret

0000000000016e90 <_ZNKSt16initializer_listIP13VkSemaphore_TE5beginEv>:
      begin() const noexcept { return _M_array; }
   16e90:	55                   	push   %rbp
   16e91:	48 89 e5             	mov    %rsp,%rbp
   16e94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16e98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e9c:	48 8b 00             	mov    (%rax),%rax
   16e9f:	5d                   	pop    %rbp
   16ea0:	c3                   	ret
   16ea1:	90                   	nop

0000000000016ea2 <_ZNKSt16initializer_listIP13VkSemaphore_TE3endEv>:
      end() const noexcept { return begin() + size(); }
   16ea2:	55                   	push   %rbp
   16ea3:	48 89 e5             	mov    %rsp,%rbp
   16ea6:	53                   	push   %rbx
   16ea7:	48 83 ec 18          	sub    $0x18,%rsp
   16eab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16eaf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16eb3:	48 89 c7             	mov    %rax,%rdi
   16eb6:	e8 d5 ff ff ff       	call   16e90 <_ZNKSt16initializer_listIP13VkSemaphore_TE5beginEv>
   16ebb:	48 89 c3             	mov    %rax,%rbx
   16ebe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16ec2:	48 89 c7             	mov    %rax,%rdi
   16ec5:	e8 d0 1c 00 00       	call   18b9a <_ZNKSt16initializer_listIP13VkSemaphore_TE4sizeEv>
   16eca:	48 c1 e0 03          	shl    $0x3,%rax
   16ece:	48 01 d8             	add    %rbx,%rax
   16ed1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16ed5:	c9                   	leave
   16ed6:	c3                   	ret

0000000000016ed7 <_ZSt8distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   16ed7:	55                   	push   %rbp
   16ed8:	48 89 e5             	mov    %rsp,%rbp
   16edb:	48 83 ec 10          	sub    $0x10,%rsp
   16edf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16ee3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   16ee7:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   16eeb:	48 89 c7             	mov    %rax,%rdi
   16eee:	e8 b9 1c 00 00       	call   18bac <_ZSt19__iterator_categoryIPKP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   16ef3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ef7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16efb:	48 89 d6             	mov    %rdx,%rsi
   16efe:	48 89 c7             	mov    %rax,%rdi
   16f01:	e8 b1 1c 00 00       	call   18bb7 <_ZSt10__distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   16f06:	c9                   	leave
   16f07:	c3                   	ret

0000000000016f08 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   16f08:	55                   	push   %rbp
   16f09:	48 89 e5             	mov    %rsp,%rbp
   16f0c:	53                   	push   %rbx
   16f0d:	48 83 ec 38          	sub    $0x38,%rsp
   16f11:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   16f15:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   16f19:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   16f1d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16f21:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16f25:	48 89 d6             	mov    %rdx,%rsi
   16f28:	48 89 c7             	mov    %rax,%rdi
   16f2b:	e8 a7 ff ff ff       	call   16ed7 <_ZSt8distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   16f30:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   16f34:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   16f38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16f3c:	48 89 c7             	mov    %rax,%rdi
   16f3f:	e8 74 00 00 00       	call   16fb8 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16f44:	48 89 c2             	mov    %rax,%rdx
   16f47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16f4b:	48 89 d6             	mov    %rdx,%rsi
   16f4e:	48 89 c7             	mov    %rax,%rdi
   16f51:	e8 7b 1c 00 00       	call   18bd1 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   16f56:	48 89 c6             	mov    %rax,%rsi
   16f59:	48 89 df             	mov    %rbx,%rdi
   16f5c:	e8 27 1a 00 00       	call   18988 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm>
   16f61:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16f65:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   16f68:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16f6c:	48 8b 00             	mov    (%rax),%rax
   16f6f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16f73:	48 c1 e2 03          	shl    $0x3,%rdx
   16f77:	48 01 c2             	add    %rax,%rdx
   16f7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16f7e:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   16f82:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16f86:	48 89 c7             	mov    %rax,%rdi
   16f89:	e8 2a 00 00 00       	call   16fb8 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16f8e:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   16f91:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16f95:	48 8b 10             	mov    (%rax),%rdx
   16f98:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   16f9c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16fa0:	48 89 c7             	mov    %rax,%rdi
   16fa3:	e8 89 1c 00 00       	call   18c31 <_ZSt22__uninitialized_copy_aIPKP13VkSemaphore_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   16fa8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16fac:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   16fb0:	90                   	nop
   16fb1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16fb5:	c9                   	leave
   16fb6:	c3                   	ret
   16fb7:	90                   	nop

0000000000016fb8 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   16fb8:	55                   	push   %rbp
   16fb9:	48 89 e5             	mov    %rsp,%rbp
   16fbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   16fc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16fc4:	5d                   	pop    %rbp
   16fc5:	c3                   	ret

0000000000016fc6 <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   16fc6:	55                   	push   %rbp
   16fc7:	48 89 e5             	mov    %rsp,%rbp
   16fca:	48 83 ec 20          	sub    $0x20,%rsp
   16fce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16fd2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16fd6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   16fda:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16fde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16fe2:	48 89 d6             	mov    %rdx,%rsi
   16fe5:	48 89 c7             	mov    %rax,%rdi
   16fe8:	e8 75 1c 00 00       	call   18c62 <_ZSt8_DestroyIPP13VkSemaphore_TEvT_S3_>
    }
   16fed:	90                   	nop
   16fee:	c9                   	leave
   16fef:	c3                   	ret

0000000000016ff0 <_ZNSt15__new_allocatorIjEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   16ff0:	55                   	push   %rbp
   16ff1:	48 89 e5             	mov    %rsp,%rbp
   16ff4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16ff8:	90                   	nop
   16ff9:	5d                   	pop    %rbp
   16ffa:	c3                   	ret
   16ffb:	90                   	nop

0000000000016ffc <_ZNSt15__new_allocatorIjED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   16ffc:	55                   	push   %rbp
   16ffd:	48 89 e5             	mov    %rsp,%rbp
   17000:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17004:	90                   	nop
   17005:	5d                   	pop    %rbp
   17006:	c3                   	ret
   17007:	90                   	nop

0000000000017008 <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD1Ev>:
      struct _Vector_impl
   17008:	55                   	push   %rbp
   17009:	48 89 e5             	mov    %rsp,%rbp
   1700c:	48 83 ec 10          	sub    $0x10,%rsp
   17010:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17014:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17018:	48 89 c7             	mov    %rax,%rdi
   1701b:	e8 76 de ff ff       	call   14e96 <_ZNSaIjED1Ev>
   17020:	90                   	nop
   17021:	c9                   	leave
   17022:	c3                   	ret
   17023:	90                   	nop

0000000000017024 <_ZNSt12_Vector_baseIjSaIjEEC1ERKS0_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   17024:	55                   	push   %rbp
   17025:	48 89 e5             	mov    %rsp,%rbp
   17028:	48 83 ec 10          	sub    $0x10,%rsp
   1702c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17030:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   17034:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17038:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1703c:	48 89 d6             	mov    %rdx,%rsi
   1703f:	48 89 c7             	mov    %rax,%rdi
   17042:	e8 41 1c 00 00       	call   18c88 <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC1ERKS0_>
   17047:	90                   	nop
   17048:	c9                   	leave
   17049:	c3                   	ret

000000000001704a <_ZNSt12_Vector_baseIjSaIjEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   1704a:	55                   	push   %rbp
   1704b:	48 89 e5             	mov    %rsp,%rbp
   1704e:	48 83 ec 10          	sub    $0x10,%rsp
   17052:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   17056:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1705a:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1705e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17062:	48 8b 00             	mov    (%rax),%rax
   17065:	48 29 c2             	sub    %rax,%rdx
   17068:	48 89 d0             	mov    %rdx,%rax
   1706b:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
   1706f:	48 89 c2             	mov    %rax,%rdx
   17072:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17076:	48 8b 08             	mov    (%rax),%rcx
   17079:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1707d:	48 89 ce             	mov    %rcx,%rsi
   17080:	48 89 c7             	mov    %rax,%rdi
   17083:	e8 32 1c 00 00       	call   18cba <_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm>
      }
   17088:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1708c:	48 89 c7             	mov    %rax,%rdi
   1708f:	e8 74 ff ff ff       	call   17008 <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD1Ev>
   17094:	90                   	nop
   17095:	c9                   	leave
   17096:	c3                   	ret
   17097:	90                   	nop

0000000000017098 <_ZNKSt16initializer_listIjE5beginEv>:
      begin() const noexcept { return _M_array; }
   17098:	55                   	push   %rbp
   17099:	48 89 e5             	mov    %rsp,%rbp
   1709c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   170a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   170a4:	48 8b 00             	mov    (%rax),%rax
   170a7:	5d                   	pop    %rbp
   170a8:	c3                   	ret
   170a9:	90                   	nop

00000000000170aa <_ZNKSt16initializer_listIjE3endEv>:
      end() const noexcept { return begin() + size(); }
   170aa:	55                   	push   %rbp
   170ab:	48 89 e5             	mov    %rsp,%rbp
   170ae:	53                   	push   %rbx
   170af:	48 83 ec 18          	sub    $0x18,%rsp
   170b3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   170b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   170bb:	48 89 c7             	mov    %rax,%rdi
   170be:	e8 d5 ff ff ff       	call   17098 <_ZNKSt16initializer_listIjE5beginEv>
   170c3:	48 89 c3             	mov    %rax,%rbx
   170c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   170ca:	48 89 c7             	mov    %rax,%rdi
   170cd:	e8 1e 1c 00 00       	call   18cf0 <_ZNKSt16initializer_listIjE4sizeEv>
   170d2:	48 c1 e0 02          	shl    $0x2,%rax
   170d6:	48 01 d8             	add    %rbx,%rax
   170d9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   170dd:	c9                   	leave
   170de:	c3                   	ret

00000000000170df <_ZSt8distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
    distance(_InputIterator __first, _InputIterator __last)
   170df:	55                   	push   %rbp
   170e0:	48 89 e5             	mov    %rsp,%rbp
   170e3:	48 83 ec 10          	sub    $0x10,%rsp
   170e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   170eb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   170ef:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   170f3:	48 89 c7             	mov    %rax,%rdi
   170f6:	e8 07 1c 00 00       	call   18d02 <_ZSt19__iterator_categoryIPKjENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
   170fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   170ff:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17103:	48 89 d6             	mov    %rdx,%rsi
   17106:	48 89 c7             	mov    %rax,%rdi
   17109:	e8 ff 1b 00 00       	call   18d0d <_ZSt10__distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
   1710e:	c9                   	leave
   1710f:	c3                   	ret

0000000000017110 <_ZNSt6vectorIjSaIjEE19_M_range_initializeIPKjEEvT_S5_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   17110:	55                   	push   %rbp
   17111:	48 89 e5             	mov    %rsp,%rbp
   17114:	53                   	push   %rbx
   17115:	48 83 ec 38          	sub    $0x38,%rsp
   17119:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1711d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   17121:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   17125:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   17129:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1712d:	48 89 d6             	mov    %rdx,%rsi
   17130:	48 89 c7             	mov    %rax,%rdi
   17133:	e8 a7 ff ff ff       	call   170df <_ZSt8distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_>
   17138:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   1713c:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   17140:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17144:	48 89 c7             	mov    %rax,%rdi
   17147:	e8 74 00 00 00       	call   171c0 <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>
   1714c:	48 89 c2             	mov    %rax,%rdx
   1714f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17153:	48 89 d6             	mov    %rdx,%rsi
   17156:	48 89 c7             	mov    %rax,%rdi
   17159:	e8 c9 1b 00 00       	call   18d27 <_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_>
   1715e:	48 89 c6             	mov    %rax,%rsi
   17161:	48 89 df             	mov    %rbx,%rdi
   17164:	e8 1f 1c 00 00       	call   18d88 <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm>
   17169:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1716d:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   17170:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17174:	48 8b 00             	mov    (%rax),%rax
   17177:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1717b:	48 c1 e2 02          	shl    $0x2,%rdx
   1717f:	48 01 c2             	add    %rax,%rdx
   17182:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17186:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   1718a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1718e:	48 89 c7             	mov    %rax,%rdi
   17191:	e8 2a 00 00 00       	call   171c0 <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>
   17196:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   17199:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1719d:	48 8b 10             	mov    (%rax),%rdx
   171a0:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   171a4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   171a8:	48 89 c7             	mov    %rax,%rdi
   171ab:	e8 0b 1c 00 00       	call   18dbb <_ZSt22__uninitialized_copy_aIPKjPjjET0_T_S4_S3_RSaIT1_E>
	  this->_M_impl._M_finish =
   171b0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   171b4:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   171b8:	90                   	nop
   171b9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   171bd:	c9                   	leave
   171be:	c3                   	ret
   171bf:	90                   	nop

00000000000171c0 <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   171c0:	55                   	push   %rbp
   171c1:	48 89 e5             	mov    %rsp,%rbp
   171c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   171c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   171cc:	5d                   	pop    %rbp
   171cd:	c3                   	ret

00000000000171ce <_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   171ce:	55                   	push   %rbp
   171cf:	48 89 e5             	mov    %rsp,%rbp
   171d2:	48 83 ec 20          	sub    $0x20,%rsp
   171d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   171da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   171de:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   171e2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   171e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   171ea:	48 89 d6             	mov    %rdx,%rsi
   171ed:	48 89 c7             	mov    %rax,%rdi
   171f0:	e8 f7 1b 00 00       	call   18dec <_ZSt8_DestroyIPjEvT_S1_>
    }
   171f5:	90                   	nop
   171f6:	c9                   	leave
   171f7:	c3                   	ret

00000000000171f8 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   171f8:	55                   	push   %rbp
   171f9:	48 89 e5             	mov    %rsp,%rbp
   171fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17200:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   17204:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17208:	5d                   	pop    %rbp
   17209:	c3                   	ret

000000000001720a <_ZNKSt6vectorIjSaIjEE11_M_data_ptrIjEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1720a:	55                   	push   %rbp
   1720b:	48 89 e5             	mov    %rsp,%rbp
   1720e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17212:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   17216:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1721a:	5d                   	pop    %rbp
   1721b:	c3                   	ret

000000000001721c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   1721c:	55                   	push   %rbp
   1721d:	48 89 e5             	mov    %rsp,%rbp
   17220:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   17224:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17228:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1722f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17233:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1723a:	00 
   1723b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1723f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   17246:	00 
	{ }
   17247:	90                   	nop
   17248:	5d                   	pop    %rbp
   17249:	c3                   	ret

000000000001724a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   1724a:	55                   	push   %rbp
   1724b:	48 89 e5             	mov    %rsp,%rbp
   1724e:	48 83 ec 20          	sub    $0x20,%rsp
   17252:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17256:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1725a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1725e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17263:	74 17                	je     1727c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   17265:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17269:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1726d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17271:	48 89 ce             	mov    %rcx,%rsi
   17274:	48 89 c7             	mov    %rax,%rdi
   17277:	e8 96 1b 00 00       	call   18e12 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>
      }
   1727c:	90                   	nop
   1727d:	c9                   	leave
   1727e:	c3                   	ret
   1727f:	90                   	nop

0000000000017280 <_ZNSaIP15VkFramebuffer_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   17280:	55                   	push   %rbp
   17281:	48 89 e5             	mov    %rsp,%rbp
   17284:	48 83 ec 10          	sub    $0x10,%rsp
   17288:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1728c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17290:	48 89 c7             	mov    %rax,%rdi
   17293:	e8 a8 1b 00 00       	call   18e40 <_ZNSt15__new_allocatorIP15VkFramebuffer_TEC1Ev>
   17298:	90                   	nop
   17299:	c9                   	leave
   1729a:	c3                   	ret
   1729b:	90                   	nop

000000000001729c <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   1729c:	55                   	push   %rbp
   1729d:	48 89 e5             	mov    %rsp,%rbp
   172a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   172a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   172a8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   172af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   172b3:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   172ba:	00 
   172bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   172bf:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   172c6:	00 
	{ }
   172c7:	90                   	nop
   172c8:	5d                   	pop    %rbp
   172c9:	c3                   	ret

00000000000172ca <_ZNSt15__new_allocatorIP15VkFramebuffer_TED1Ev>:
   172ca:	55                   	push   %rbp
   172cb:	48 89 e5             	mov    %rsp,%rbp
   172ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   172d2:	90                   	nop
   172d3:	5d                   	pop    %rbp
   172d4:	c3                   	ret
   172d5:	90                   	nop

00000000000172d6 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   172d6:	55                   	push   %rbp
   172d7:	48 89 e5             	mov    %rsp,%rbp
   172da:	48 83 ec 20          	sub    $0x20,%rsp
   172de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   172e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   172e6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   172ea:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   172ef:	74 17                	je     17308 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   172f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   172f5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   172f9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   172fd:	48 89 ce             	mov    %rcx,%rsi
   17300:	48 89 c7             	mov    %rax,%rdi
   17303:	e8 43 1b 00 00       	call   18e4b <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE10deallocateERS2_PS1_m>
      }
   17308:	90                   	nop
   17309:	c9                   	leave
   1730a:	c3                   	ret
   1730b:	90                   	nop

000000000001730c <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1730c:	55                   	push   %rbp
   1730d:	48 89 e5             	mov    %rsp,%rbp
   17310:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   17314:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17318:	5d                   	pop    %rbp
   17319:	c3                   	ret

000000000001731a <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1731a:	55                   	push   %rbp
   1731b:	48 89 e5             	mov    %rsp,%rbp
   1731e:	48 83 ec 20          	sub    $0x20,%rsp
   17322:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17326:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1732a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1732e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17332:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17336:	48 89 d6             	mov    %rdx,%rsi
   17339:	48 89 c7             	mov    %rax,%rdi
   1733c:	e8 38 1b 00 00       	call   18e79 <_ZSt8_DestroyIPP15VkFramebuffer_TEvT_S3_>
    }
   17341:	90                   	nop
   17342:	c9                   	leave
   17343:	c3                   	ret

0000000000017344 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   17344:	55                   	push   %rbp
   17345:	48 89 e5             	mov    %rsp,%rbp
   17348:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1734c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17350:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   17357:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1735b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   17362:	00 
   17363:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17367:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1736e:	00 
	{ }
   1736f:	90                   	nop
   17370:	5d                   	pop    %rbp
   17371:	c3                   	ret

0000000000017372 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   17372:	55                   	push   %rbp
   17373:	48 89 e5             	mov    %rsp,%rbp
   17376:	48 83 ec 20          	sub    $0x20,%rsp
   1737a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1737e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17382:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   17386:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1738b:	74 17                	je     173a4 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1738d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17391:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17395:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17399:	48 89 ce             	mov    %rcx,%rsi
   1739c:	48 89 c7             	mov    %rax,%rdi
   1739f:	e8 fb 1a 00 00       	call   18e9f <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE10deallocateERS2_PS1_m>
      }
   173a4:	90                   	nop
   173a5:	c9                   	leave
   173a6:	c3                   	ret
   173a7:	90                   	nop

00000000000173a8 <_ZNSaIP9VkFence_TEC1Ev>:
   173a8:	55                   	push   %rbp
   173a9:	48 89 e5             	mov    %rsp,%rbp
   173ac:	48 83 ec 10          	sub    $0x10,%rsp
   173b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   173b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   173b8:	48 89 c7             	mov    %rax,%rdi
   173bb:	e8 0e 1b 00 00       	call   18ece <_ZNSt15__new_allocatorIP9VkFence_TEC1Ev>
   173c0:	90                   	nop
   173c1:	c9                   	leave
   173c2:	c3                   	ret
   173c3:	90                   	nop

00000000000173c4 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   173c4:	55                   	push   %rbp
   173c5:	48 89 e5             	mov    %rsp,%rbp
   173c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   173cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   173d0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   173d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   173db:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   173e2:	00 
   173e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   173e7:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   173ee:	00 
	{ }
   173ef:	90                   	nop
   173f0:	5d                   	pop    %rbp
   173f1:	c3                   	ret

00000000000173f2 <_ZNSt15__new_allocatorIP9VkFence_TED1Ev>:
   173f2:	55                   	push   %rbp
   173f3:	48 89 e5             	mov    %rsp,%rbp
   173f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   173fa:	90                   	nop
   173fb:	5d                   	pop    %rbp
   173fc:	c3                   	ret
   173fd:	90                   	nop

00000000000173fe <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   173fe:	55                   	push   %rbp
   173ff:	48 89 e5             	mov    %rsp,%rbp
   17402:	48 83 ec 20          	sub    $0x20,%rsp
   17406:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1740a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1740e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   17412:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17417:	74 17                	je     17430 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   17419:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1741d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17421:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17425:	48 89 ce             	mov    %rcx,%rsi
   17428:	48 89 c7             	mov    %rax,%rdi
   1742b:	e8 a9 1a 00 00       	call   18ed9 <_ZNSt16allocator_traitsISaIP9VkFence_TEE10deallocateERS2_PS1_m>
      }
   17430:	90                   	nop
   17431:	c9                   	leave
   17432:	c3                   	ret
   17433:	90                   	nop

0000000000017434 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   17434:	55                   	push   %rbp
   17435:	48 89 e5             	mov    %rsp,%rbp
   17438:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1743c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17440:	5d                   	pop    %rbp
   17441:	c3                   	ret

0000000000017442 <_ZSt8_DestroyIPP9VkFence_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   17442:	55                   	push   %rbp
   17443:	48 89 e5             	mov    %rsp,%rbp
   17446:	48 83 ec 20          	sub    $0x20,%rsp
   1744a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1744e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17452:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   17456:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1745a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1745e:	48 89 d6             	mov    %rdx,%rsi
   17461:	48 89 c7             	mov    %rax,%rdi
   17464:	e8 9e 1a 00 00       	call   18f07 <_ZSt8_DestroyIPP9VkFence_TEvT_S3_>
    }
   17469:	90                   	nop
   1746a:	c9                   	leave
   1746b:	c3                   	ret

000000000001746c <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1746c:	55                   	push   %rbp
   1746d:	48 89 e5             	mov    %rsp,%rbp
   17470:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17474:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   17478:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1747c:	48 8b 10             	mov    (%rax),%rdx
   1747f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17483:	48 89 10             	mov    %rdx,(%rax)
   17486:	90                   	nop
   17487:	5d                   	pop    %rbp
   17488:	c3                   	ret
   17489:	90                   	nop

000000000001748a <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1748a:	55                   	push   %rbp
   1748b:	48 89 e5             	mov    %rsp,%rbp
   1748e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   17492:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17496:	5d                   	pop    %rbp
   17497:	c3                   	ret

0000000000017498 <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
   17498:	55                   	push   %rbp
   17499:	48 89 e5             	mov    %rsp,%rbp
   1749c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   174a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   174a4:	48 8b 40 08          	mov    0x8(%rax),%rax
   174a8:	5d                   	pop    %rbp
   174a9:	c3                   	ret

00000000000174aa <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   174aa:	55                   	push   %rbp
   174ab:	48 89 e5             	mov    %rsp,%rbp
   174ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   174b2:	90                   	nop
   174b3:	5d                   	pop    %rbp
   174b4:	c3                   	ret

00000000000174b5 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   174b5:	55                   	push   %rbp
   174b6:	48 89 e5             	mov    %rsp,%rbp
   174b9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   174bd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   174c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   174c5:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   174c9:	48 c1 f8 03          	sar    $0x3,%rax
    }
   174cd:	5d                   	pop    %rbp
   174ce:	c3                   	ret

00000000000174cf <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   174cf:	55                   	push   %rbp
   174d0:	48 89 e5             	mov    %rsp,%rbp
   174d3:	48 83 ec 20          	sub    $0x20,%rsp
   174d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   174db:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   174df:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   174e3:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   174e7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   174eb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   174ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   174f3:	48 89 ce             	mov    %rcx,%rsi
   174f6:	48 89 c7             	mov    %rax,%rdi
   174f9:	e8 2f 1a 00 00       	call   18f2d <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
   174fe:	c9                   	leave
   174ff:	c3                   	ret

0000000000017500 <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   17500:	55                   	push   %rbp
   17501:	48 89 e5             	mov    %rsp,%rbp
   17504:	48 83 ec 10          	sub    $0x10,%rsp
   17508:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1750c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   17510:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17514:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17518:	48 89 d6             	mov    %rdx,%rsi
   1751b:	48 89 c7             	mov    %rax,%rdi
   1751e:	e8 3f 1a 00 00       	call   18f62 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
   17523:	90                   	nop
   17524:	c9                   	leave
   17525:	c3                   	ret

0000000000017526 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   17526:	55                   	push   %rbp
   17527:	48 89 e5             	mov    %rsp,%rbp
   1752a:	53                   	push   %rbx
   1752b:	48 83 ec 28          	sub    $0x28,%rsp
   1752f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17533:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17537:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   1753b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1753f:	48 89 c6             	mov    %rax,%rsi
   17542:	bf 08 00 00 00       	mov    $0x8,%edi
   17547:	e8 2c f1 fe ff       	call   6678 <_ZnwmPv>
   1754c:	48 89 c3             	mov    %rax,%rbx
   1754f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17553:	48 89 c7             	mov    %rax,%rdi
   17556:	e8 2f e0 ff ff       	call   1558a <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   1755b:	48 8b 00             	mov    (%rax),%rax
   1755e:	48 89 03             	mov    %rax,(%rbx)
   17561:	90                   	nop
   17562:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17566:	c9                   	leave
   17567:	c3                   	ret

0000000000017568 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
   17568:	55                   	push   %rbp
   17569:	48 89 e5             	mov    %rsp,%rbp
   1756c:	53                   	push   %rbx
   1756d:	48 83 ec 38          	sub    $0x38,%rsp
   17571:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   17575:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   17579:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   1757d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17581:	48 89 c7             	mov    %rax,%rdi
   17584:	e8 e9 19 00 00       	call   18f72 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   17589:	48 89 c3             	mov    %rax,%rbx
   1758c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17590:	48 89 c7             	mov    %rax,%rdi
   17593:	e8 54 c6 ff ff       	call   13bec <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   17598:	48 29 c3             	sub    %rax,%rbx
   1759b:	48 89 da             	mov    %rbx,%rdx
   1759e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   175a2:	48 39 c2             	cmp    %rax,%rdx
   175a5:	0f 92 c0             	setb   %al
   175a8:	84 c0                	test   %al,%al
   175aa:	74 0c                	je     175b8 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
   175ac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   175b0:	48 89 c7             	mov    %rax,%rdi
   175b3:	e8 38 cc fe ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   175b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   175bc:	48 89 c7             	mov    %rax,%rdi
   175bf:	e8 28 c6 ff ff       	call   13bec <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   175c4:	48 89 c3             	mov    %rax,%rbx
   175c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   175cb:	48 89 c7             	mov    %rax,%rdi
   175ce:	e8 19 c6 ff ff       	call   13bec <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   175d3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   175d7:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   175db:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   175df:	48 89 d6             	mov    %rdx,%rsi
   175e2:	48 89 c7             	mov    %rax,%rdi
   175e5:	e8 aa 19 00 00       	call   18f94 <_ZSt3maxImERKT_S2_S2_>
   175ea:	48 8b 00             	mov    (%rax),%rax
   175ed:	48 01 d8             	add    %rbx,%rax
   175f0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   175f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   175f8:	48 89 c7             	mov    %rax,%rdi
   175fb:	e8 ec c5 ff ff       	call   13bec <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   17600:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   17604:	72 12                	jb     17618 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
   17606:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1760a:	48 89 c7             	mov    %rax,%rdi
   1760d:	e8 60 19 00 00       	call   18f72 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   17612:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   17616:	73 0e                	jae    17626 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
   17618:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1761c:	48 89 c7             	mov    %rax,%rdi
   1761f:	e8 4e 19 00 00       	call   18f72 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   17624:	eb 04                	jmp    1762a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
   17626:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1762a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1762e:	c9                   	leave
   1762f:	c3                   	ret

0000000000017630 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   17630:	55                   	push   %rbp
   17631:	48 89 e5             	mov    %rsp,%rbp
   17634:	53                   	push   %rbx
   17635:	48 83 ec 18          	sub    $0x18,%rsp
   17639:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1763d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
   17641:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17645:	48 89 c7             	mov    %rax,%rdi
   17648:	e8 2f df ff ff       	call   1557c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1764d:	48 8b 18             	mov    (%rax),%rbx
   17650:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17654:	48 89 c7             	mov    %rax,%rdi
   17657:	e8 20 df ff ff       	call   1557c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1765c:	48 8b 00             	mov    (%rax),%rax
   1765f:	48 89 da             	mov    %rbx,%rdx
   17662:	48 29 c2             	sub    %rax,%rdx
   17665:	48 89 d0             	mov    %rdx,%rax
   17668:	48 c1 f8 03          	sar    $0x3,%rax
   1766c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17670:	c9                   	leave
   17671:	c3                   	ret

0000000000017672 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   17672:	55                   	push   %rbp
   17673:	48 89 e5             	mov    %rsp,%rbp
   17676:	48 83 ec 20          	sub    $0x20,%rsp
   1767a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1767e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17682:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   17686:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   1768a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1768e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17692:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   17696:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1769a:	48 89 c7             	mov    %rax,%rdi
   1769d:	e8 1d 19 00 00       	call   18fbf <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   176a2:	c9                   	leave
   176a3:	c3                   	ret

00000000000176a4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
   176a4:	55                   	push   %rbp
   176a5:	48 89 e5             	mov    %rsp,%rbp
   176a8:	48 83 ec 20          	sub    $0x20,%rsp
   176ac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   176b0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
   176b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   176b8:	48 8b 00             	mov    (%rax),%rax
   176bb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   176bf:	48 c1 e2 03          	shl    $0x3,%rdx
   176c3:	48 f7 da             	neg    %rdx
   176c6:	48 01 d0             	add    %rdx,%rax
   176c9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   176cd:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   176d1:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   176d5:	48 89 d6             	mov    %rdx,%rsi
   176d8:	48 89 c7             	mov    %rax,%rdi
   176db:	e8 7e de ff ff       	call   1555e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   176e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   176e4:	c9                   	leave
   176e5:	c3                   	ret

00000000000176e6 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>:
	_Optional_payload_base(in_place_t __tag, _Args&&... __args)
   176e6:	55                   	push   %rbp
   176e7:	48 89 e5             	mov    %rsp,%rbp
   176ea:	53                   	push   %rbx
   176eb:	48 83 ec 28          	sub    $0x28,%rsp
   176ef:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   176f3:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
	: _M_payload(__tag, std::forward<_Args>(__args)...),
   176f7:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   176fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   176ff:	48 89 c7             	mov    %rax,%rdi
   17702:	e8 cb e0 ff ff       	call   157d2 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   17707:	48 89 c6             	mov    %rax,%rsi
   1770a:	48 89 df             	mov    %rbx,%rdi
   1770d:	e8 10 19 00 00       	call   19022 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>
	  _M_engaged(true)
   17712:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17716:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	{ }
   1771a:	90                   	nop
   1771b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1771f:	c9                   	leave
   17720:	c3                   	ret
   17721:	90                   	nop

0000000000017722 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() const noexcept
   17722:	55                   	push   %rbp
   17723:	48 89 e5             	mov    %rsp,%rbp
   17726:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   1772a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1772e:	5d                   	pop    %rbp
   1772f:	c3                   	ret

0000000000017730 <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>:
	explicit constexpr pair(pair<_U1, _U2>&& __p)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }

      pair&
      operator=(__conditional_t<__and_<is_copy_assignable<_T1>,
   17730:	55                   	push   %rbp
   17731:	48 89 e5             	mov    %rsp,%rbp
   17734:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17738:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
				       is_copy_assignable<_T2>>::value,
				const pair&, const __nonesuch&> __p)
      {
	first = __p.first;
   1773c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17740:	8b 10                	mov    (%rax),%edx
   17742:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17746:	89 10                	mov    %edx,(%rax)
	second = __p.second;
   17748:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   1774c:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   17750:	48 8b 46 04          	mov    0x4(%rsi),%rax
   17754:	48 8b 56 0c          	mov    0xc(%rsi),%rdx
   17758:	48 89 41 04          	mov    %rax,0x4(%rcx)
   1775c:	48 89 51 0c          	mov    %rdx,0xc(%rcx)
   17760:	48 8b 46 14          	mov    0x14(%rsi),%rax
   17764:	48 89 41 14          	mov    %rax,0x14(%rcx)
	return *this;
   17768:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1776c:	5d                   	pop    %rbp
   1776d:	c3                   	ret

000000000001776e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
   1776e:	55                   	push   %rbp
   1776f:	48 89 e5             	mov    %rsp,%rbp
   17772:	53                   	push   %rbx
   17773:	48 83 ec 18          	sub    $0x18,%rsp
   17777:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1777b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
   1777f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17783:	48 89 c7             	mov    %rax,%rdi
   17786:	e8 e9 18 00 00       	call   19074 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   1778b:	48 89 c3             	mov    %rax,%rbx
   1778e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17792:	48 89 c7             	mov    %rax,%rdi
   17795:	e8 cc 18 00 00       	call   19066 <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>
   1779a:	48 89 de             	mov    %rbx,%rsi
   1779d:	48 89 c7             	mov    %rax,%rdi
   177a0:	e8 dd 18 00 00       	call   19082 <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>
	  this->_M_engaged = true;
   177a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   177a9:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	}
   177ad:	90                   	nop
   177ae:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   177b2:	c9                   	leave
   177b3:	c3                   	ret

00000000000177b4 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>:
      _M_reset() noexcept
   177b4:	55                   	push   %rbp
   177b5:	48 89 e5             	mov    %rsp,%rbp
   177b8:	48 83 ec 10          	sub    $0x10,%rsp
   177bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_engaged)
   177c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   177c4:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   177c8:	84 c0                	test   %al,%al
   177ca:	74 0c                	je     177d8 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv+0x24>
	  _M_destroy();
   177cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   177d0:	48 89 c7             	mov    %rax,%rdi
   177d3:	e8 04 19 00 00       	call   190dc <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>
      }
   177d8:	90                   	nop
   177d9:	c9                   	leave
   177da:	c3                   	ret
   177db:	90                   	nop

00000000000177dc <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   177dc:	55                   	push   %rbp
   177dd:	48 89 e5             	mov    %rsp,%rbp
   177e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   177e4:	90                   	nop
   177e5:	5d                   	pop    %rbp
   177e6:	c3                   	ret

00000000000177e7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   177e7:	55                   	push   %rbp
   177e8:	48 89 e5             	mov    %rsp,%rbp
   177eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
   177ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   177f3:	48 8b 40 18          	mov    0x18(%rax),%rax
   177f7:	5d                   	pop    %rbp
   177f8:	c3                   	ret

00000000000177f9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   177f9:	55                   	push   %rbp
   177fa:	48 89 e5             	mov    %rsp,%rbp
   177fd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
   17801:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17805:	48 8b 40 10          	mov    0x10(%rax),%rax
   17809:	5d                   	pop    %rbp
   1780a:	c3                   	ret
   1780b:	90                   	nop

000000000001780c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   1780c:	55                   	push   %rbp
   1780d:	48 89 e5             	mov    %rsp,%rbp
   17810:	48 83 ec 10          	sub    $0x10,%rsp
   17814:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17818:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
   1781c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17820:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17824:	48 89 d6             	mov    %rdx,%rsi
   17827:	48 89 c7             	mov    %rax,%rdi
   1782a:	e8 c1 18 00 00       	call   190f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
   1782f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17833:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17837:	48 89 d6             	mov    %rdx,%rsi
   1783a:	48 89 c7             	mov    %rax,%rdi
   1783d:	e8 ec 18 00 00       	call   1912e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
   17842:	90                   	nop
   17843:	c9                   	leave
   17844:	c3                   	ret
   17845:	90                   	nop

0000000000017846 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
   17846:	55                   	push   %rbp
   17847:	48 89 e5             	mov    %rsp,%rbp
   1784a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
   1784e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17852:	48 8b 40 10          	mov    0x10(%rax),%rax
   17856:	5d                   	pop    %rbp
   17857:	c3                   	ret

0000000000017858 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
   17858:	55                   	push   %rbp
   17859:	48 89 e5             	mov    %rsp,%rbp
   1785c:	53                   	push   %rbx
   1785d:	48 83 ec 18          	sub    $0x18,%rsp
   17861:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17865:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
   17869:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1786d:	48 89 c7             	mov    %rax,%rdi
   17870:	e8 ef 18 00 00       	call   19164 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   17875:	48 89 c3             	mov    %rax,%rbx
   17878:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1787c:	48 89 c7             	mov    %rax,%rdi
   1787f:	e8 1c e1 ff ff       	call   159a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   17884:	48 89 c6             	mov    %rax,%rsi
   17887:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1788b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1788f:	48 89 d1             	mov    %rdx,%rcx
   17892:	48 89 da             	mov    %rbx,%rdx
   17895:	48 89 c7             	mov    %rax,%rdi
   17898:	e8 d9 18 00 00       	call   19176 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
   1789d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   178a1:	c9                   	leave
   178a2:	c3                   	ret
   178a3:	90                   	nop

00000000000178a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   178a4:	55                   	push   %rbp
   178a5:	48 89 e5             	mov    %rsp,%rbp
   178a8:	48 83 ec 20          	sub    $0x20,%rsp
   178ac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
   178b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   178b4:	48 8d 50 08          	lea    0x8(%rax),%rdx
   178b8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   178bc:	48 89 d6             	mov    %rdx,%rsi
   178bf:	48 89 c7             	mov    %rax,%rdi
   178c2:	e8 39 06 00 00       	call   17f00 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   178c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   178cb:	c9                   	leave
   178cc:	c3                   	ret
   178cd:	90                   	nop

00000000000178ce <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
   178ce:	55                   	push   %rbp
   178cf:	48 89 e5             	mov    %rsp,%rbp
   178d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
   178d6:	90                   	nop
   178d7:	5d                   	pop    %rbp
   178d8:	c3                   	ret
   178d9:	90                   	nop

00000000000178da <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
   178da:	55                   	push   %rbp
   178db:	48 89 e5             	mov    %rsp,%rbp
   178de:	48 83 ec 10          	sub    $0x10,%rsp
   178e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   178e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   178ea:	48 83 c0 20          	add    $0x20,%rax
   178ee:	48 89 c7             	mov    %rax,%rdi
   178f1:	e8 16 19 00 00       	call   1920c <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   178f6:	c9                   	leave
   178f7:	c3                   	ret

00000000000178f8 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
   178f8:	55                   	push   %rbp
   178f9:	48 89 e5             	mov    %rsp,%rbp
   178fc:	48 83 ec 10          	sub    $0x10,%rsp
   17900:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17904:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
   17908:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1790c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17910:	48 89 d6             	mov    %rdx,%rsi
   17913:	48 89 c7             	mov    %rax,%rdi
   17916:	e8 15 c7 fe ff       	call   4030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
   1791b:	c1 e8 1f             	shr    $0x1f,%eax
   1791e:	c9                   	leave
   1791f:	c3                   	ret

0000000000017920 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   17920:	55                   	push   %rbp
   17921:	48 89 e5             	mov    %rsp,%rbp
   17924:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   17928:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1792c:	5d                   	pop    %rbp
   1792d:	c3                   	ret

000000000001792e <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
   1792e:	55                   	push   %rbp
   1792f:	48 89 e5             	mov    %rsp,%rbp
   17932:	53                   	push   %rbx
   17933:	48 83 ec 18          	sub    $0x18,%rsp
   17937:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1793b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
   1793f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   17943:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17947:	48 89 c7             	mov    %rax,%rdi
   1794a:	e8 d1 ff ff ff       	call   17920 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   1794f:	48 89 c6             	mov    %rax,%rsi
   17952:	48 89 df             	mov    %rbx,%rdi
   17955:	e8 cc 18 00 00       	call   19226 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
   1795a:	90                   	nop
   1795b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1795f:	c9                   	leave
   17960:	c3                   	ret

0000000000017961 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   17961:	55                   	push   %rbp
   17962:	48 89 e5             	mov    %rsp,%rbp
   17965:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   17969:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1796d:	5d                   	pop    %rbp
   1796e:	c3                   	ret

000000000001796f <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1796f:	55                   	push   %rbp
   17970:	48 89 e5             	mov    %rsp,%rbp
   17973:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   17977:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1797b:	5d                   	pop    %rbp
   1797c:	c3                   	ret

000000000001797d <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1797d:	55                   	push   %rbp
   1797e:	48 89 e5             	mov    %rsp,%rbp
   17981:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   17985:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17989:	5d                   	pop    %rbp
   1798a:	c3                   	ret
   1798b:	90                   	nop

000000000001798c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
   1798c:	55                   	push   %rbp
   1798d:	48 89 e5             	mov    %rsp,%rbp
   17990:	41 54                	push   %r12
   17992:	53                   	push   %rbx
   17993:	48 83 ec 30          	sub    $0x30,%rsp
   17997:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1799b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1799f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   179a3:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   179a7:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
   179ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   179af:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   179b3:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
   179b6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   179ba:	48 89 c7             	mov    %rax,%rdi
   179bd:	e8 bb ff ff ff       	call   1797d <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   179c2:	49 89 c4             	mov    %rax,%r12
   179c5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   179c9:	48 89 c7             	mov    %rax,%rdi
   179cc:	e8 9e ff ff ff       	call   1796f <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   179d1:	48 89 c3             	mov    %rax,%rbx
   179d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   179d8:	48 89 c7             	mov    %rax,%rdi
   179db:	e8 81 ff ff ff       	call   17961 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   179e0:	48 89 c6             	mov    %rax,%rsi
   179e3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   179e7:	4c 89 e1             	mov    %r12,%rcx
   179ea:	48 89 da             	mov    %rbx,%rdx
   179ed:	48 89 c7             	mov    %rax,%rdi
   179f0:	e8 65 18 00 00       	call   1925a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
   179f5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   179f9:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
   179fd:	90                   	nop
   179fe:	48 83 c4 30          	add    $0x30,%rsp
   17a02:	5b                   	pop    %rbx
   17a03:	41 5c                	pop    %r12
   17a05:	5d                   	pop    %rbp
   17a06:	c3                   	ret
   17a07:	90                   	nop

0000000000017a08 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
   17a08:	55                   	push   %rbp
   17a09:	48 89 e5             	mov    %rsp,%rbp
   17a0c:	48 83 ec 10          	sub    $0x10,%rsp
   17a10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
   17a14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a18:	48 8b 40 08          	mov    0x8(%rax),%rax
   17a1c:	48 85 c0             	test   %rax,%rax
   17a1f:	74 1a                	je     17a3b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
   17a21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a25:	48 8b 00             	mov    (%rax),%rax
   17a28:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17a2c:	48 8b 52 08          	mov    0x8(%rdx),%rdx
   17a30:	48 89 d6             	mov    %rdx,%rsi
   17a33:	48 89 c7             	mov    %rax,%rdi
   17a36:	e8 d1 fd ff ff       	call   1780c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
   17a3b:	90                   	nop
   17a3c:	c9                   	leave
   17a3d:	c3                   	ret

0000000000017a3e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   17a3e:	55                   	push   %rbp
   17a3f:	48 89 e5             	mov    %rsp,%rbp
   17a42:	53                   	push   %rbx
   17a43:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   17a4a:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
   17a51:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
   17a58:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
   17a5f:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   17a66:	48 89 c7             	mov    %rax,%rdi
   17a69:	e8 68 18 00 00       	call   192d6 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
   17a6e:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
   17a75:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   17a7c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   17a83:	48 89 c7             	mov    %rax,%rdi
   17a86:	e8 d9 16 00 00       	call   19164 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   17a8b:	48 39 c3             	cmp    %rax,%rbx
   17a8e:	0f 94 c0             	sete   %al
   17a91:	84 c0                	test   %al,%al
   17a93:	0f 84 c8 00 00 00    	je     17b61 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
   17a99:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   17aa0:	48 89 c7             	mov    %rax,%rdi
   17aa3:	e8 56 18 00 00       	call   192fe <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
   17aa8:	48 85 c0             	test   %rax,%rax
   17aab:	74 44                	je     17af1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   17aad:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   17ab4:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   17abb:	48 89 c7             	mov    %rax,%rdi
   17abe:	e8 4d 18 00 00       	call   19310 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   17ac3:	48 8b 00             	mov    (%rax),%rax
   17ac6:	48 89 c7             	mov    %rax,%rdi
   17ac9:	e8 54 18 00 00       	call   19322 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   17ace:	48 89 c1             	mov    %rax,%rcx
   17ad1:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   17ad8:	48 89 c2             	mov    %rax,%rdx
   17adb:	48 89 ce             	mov    %rcx,%rsi
   17ade:	48 89 df             	mov    %rbx,%rdi
   17ae1:	e8 9c df ff ff       	call   15a82 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   17ae6:	84 c0                	test   %al,%al
   17ae8:	74 07                	je     17af1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   17aea:	b8 01 00 00 00       	mov    $0x1,%eax
   17aef:	eb 05                	jmp    17af6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
   17af1:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
   17af6:	84 c0                	test   %al,%al
   17af8:	74 49                	je     17b43 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
   17afa:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   17b01:	48 89 c7             	mov    %rax,%rdi
   17b04:	e8 07 18 00 00       	call   19310 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   17b09:	48 89 c2             	mov    %rax,%rdx
   17b0c:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
   17b13:	00 00 00 00 
   17b17:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
   17b1e:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   17b25:	48 89 ce             	mov    %rcx,%rsi
   17b28:	48 89 c7             	mov    %rax,%rdi
   17b2b:	e8 0c 18 00 00       	call   1933c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   17b30:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   17b37:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   17b3e:	e9 43 03 00 00       	jmp    17e86 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   17b43:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   17b4a:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   17b51:	48 89 d6             	mov    %rdx,%rsi
   17b54:	48 89 c7             	mov    %rax,%rdi
   17b57:	e8 10 18 00 00       	call   1936c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   17b5c:	e9 25 03 00 00       	jmp    17e86 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
   17b61:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   17b68:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17b6f:	48 89 c7             	mov    %rax,%rdi
   17b72:	e8 ab 17 00 00       	call   19322 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   17b77:	48 89 c2             	mov    %rax,%rdx
   17b7a:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   17b81:	48 89 c6             	mov    %rax,%rsi
   17b84:	48 89 df             	mov    %rbx,%rdi
   17b87:	e8 f6 de ff ff       	call   15a82 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   17b8c:	84 c0                	test   %al,%al
   17b8e:	0f 84 66 01 00 00    	je     17cfa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
   17b94:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17b9b:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
   17ba2:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   17ba9:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   17bb0:	48 89 c7             	mov    %rax,%rdi
   17bb3:	e8 2a 19 00 00       	call   194e2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   17bb8:	48 8b 00             	mov    (%rax),%rax
   17bbb:	48 39 c3             	cmp    %rax,%rbx
   17bbe:	0f 94 c0             	sete   %al
   17bc1:	84 c0                	test   %al,%al
   17bc3:	74 4c                	je     17c11 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
   17bc5:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   17bcc:	48 89 c7             	mov    %rax,%rdi
   17bcf:	e8 0e 19 00 00       	call   194e2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   17bd4:	48 89 c3             	mov    %rax,%rbx
   17bd7:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   17bde:	48 89 c7             	mov    %rax,%rdi
   17be1:	e8 fc 18 00 00       	call   194e2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   17be6:	48 89 c1             	mov    %rax,%rcx
   17be9:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   17bf0:	48 89 da             	mov    %rbx,%rdx
   17bf3:	48 89 ce             	mov    %rcx,%rsi
   17bf6:	48 89 c7             	mov    %rax,%rdi
   17bf9:	e8 f6 18 00 00       	call   194f4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   17bfe:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   17c05:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   17c0c:	e9 75 02 00 00       	jmp    17e86 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
   17c11:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   17c18:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
   17c1f:	48 89 c7             	mov    %rax,%rdi
   17c22:	e8 11 19 00 00       	call   19538 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
   17c27:	48 8b 00             	mov    (%rax),%rax
   17c2a:	48 89 c7             	mov    %rax,%rdi
   17c2d:	e8 f0 16 00 00       	call   19322 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   17c32:	48 89 c1             	mov    %rax,%rcx
   17c35:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   17c3c:	48 89 c2             	mov    %rax,%rdx
   17c3f:	48 89 ce             	mov    %rcx,%rsi
   17c42:	48 89 df             	mov    %rbx,%rdi
   17c45:	e8 38 de ff ff       	call   15a82 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   17c4a:	84 c0                	test   %al,%al
   17c4c:	0f 84 8a 00 00 00    	je     17cdc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
   17c52:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   17c59:	48 89 c7             	mov    %rax,%rdi
   17c5c:	e8 86 fb ff ff       	call   177e7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   17c61:	48 85 c0             	test   %rax,%rax
   17c64:	0f 94 c0             	sete   %al
   17c67:	84 c0                	test   %al,%al
   17c69:	74 3e                	je     17ca9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
   17c6b:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
   17c72:	00 00 00 00 
   17c76:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
   17c7d:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
   17c84:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   17c8b:	48 89 ce             	mov    %rcx,%rsi
   17c8e:	48 89 c7             	mov    %rax,%rdi
   17c91:	e8 a6 16 00 00       	call   1933c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   17c96:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   17c9d:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   17ca4:	e9 dd 01 00 00       	jmp    17e86 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
   17ca9:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   17cb0:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   17cb7:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   17cbe:	48 89 ce             	mov    %rcx,%rsi
   17cc1:	48 89 c7             	mov    %rax,%rdi
   17cc4:	e8 2b 18 00 00       	call   194f4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   17cc9:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   17cd0:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   17cd7:	e9 aa 01 00 00       	jmp    17e86 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   17cdc:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   17ce3:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   17cea:	48 89 d6             	mov    %rdx,%rsi
   17ced:	48 89 c7             	mov    %rax,%rdi
   17cf0:	e8 77 16 00 00       	call   1936c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   17cf5:	e9 8c 01 00 00       	jmp    17e86 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
   17cfa:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   17d01:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17d08:	48 89 c7             	mov    %rax,%rdi
   17d0b:	e8 12 16 00 00       	call   19322 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   17d10:	48 89 c1             	mov    %rax,%rcx
   17d13:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   17d1a:	48 89 c2             	mov    %rax,%rdx
   17d1d:	48 89 ce             	mov    %rcx,%rsi
   17d20:	48 89 df             	mov    %rbx,%rdi
   17d23:	e8 5a dd ff ff       	call   15a82 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   17d28:	84 c0                	test   %al,%al
   17d2a:	0f 84 2c 01 00 00    	je     17e5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
   17d30:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17d37:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
   17d3e:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   17d45:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   17d4c:	48 89 c7             	mov    %rax,%rdi
   17d4f:	e8 bc 15 00 00       	call   19310 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   17d54:	48 8b 00             	mov    (%rax),%rax
   17d57:	48 39 c3             	cmp    %rax,%rbx
   17d5a:	0f 94 c0             	sete   %al
   17d5d:	84 c0                	test   %al,%al
   17d5f:	74 3a                	je     17d9b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
   17d61:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   17d68:	48 89 c7             	mov    %rax,%rdi
   17d6b:	e8 a0 15 00 00       	call   19310 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   17d70:	48 89 c2             	mov    %rax,%rdx
   17d73:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   17d7a:	00 
   17d7b:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
   17d7f:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   17d83:	48 89 ce             	mov    %rcx,%rsi
   17d86:	48 89 c7             	mov    %rax,%rdi
   17d89:	e8 ae 15 00 00       	call   1933c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   17d8e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   17d92:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   17d96:	e9 eb 00 00 00       	jmp    17e86 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
   17d9b:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   17da2:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
   17da9:	48 89 c7             	mov    %rax,%rdi
   17dac:	e8 af 17 00 00       	call   19560 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
   17db1:	48 8b 00             	mov    (%rax),%rax
   17db4:	48 89 c7             	mov    %rax,%rdi
   17db7:	e8 66 15 00 00       	call   19322 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   17dbc:	48 89 c2             	mov    %rax,%rdx
   17dbf:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   17dc6:	48 89 c6             	mov    %rax,%rsi
   17dc9:	48 89 df             	mov    %rbx,%rdi
   17dcc:	e8 b1 dc ff ff       	call   15a82 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   17dd1:	84 c0                	test   %al,%al
   17dd3:	74 6c                	je     17e41 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
   17dd5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17ddc:	48 89 c7             	mov    %rax,%rdi
   17ddf:	e8 03 fa ff ff       	call   177e7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   17de4:	48 85 c0             	test   %rax,%rax
   17de7:	0f 94 c0             	sete   %al
   17dea:	84 c0                	test   %al,%al
   17dec:	74 2c                	je     17e1a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
   17dee:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   17df5:	00 
   17df6:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   17dfd:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   17e01:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   17e05:	48 89 ce             	mov    %rcx,%rsi
   17e08:	48 89 c7             	mov    %rax,%rdi
   17e0b:	e8 2c 15 00 00       	call   1933c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   17e10:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   17e14:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   17e18:	eb 6c                	jmp    17e86 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
   17e1a:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
   17e21:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
   17e28:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   17e2c:	48 89 ce             	mov    %rcx,%rsi
   17e2f:	48 89 c7             	mov    %rax,%rdi
   17e32:	e8 bd 16 00 00       	call   194f4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   17e37:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   17e3b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   17e3f:	eb 45                	jmp    17e86 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   17e41:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   17e48:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   17e4f:	48 89 d6             	mov    %rdx,%rsi
   17e52:	48 89 c7             	mov    %rax,%rdi
   17e55:	e8 12 15 00 00       	call   1936c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   17e5a:	eb 2a                	jmp    17e86 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
   17e5c:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   17e63:	00 
   17e64:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   17e68:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   17e6f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   17e73:	48 89 ce             	mov    %rcx,%rsi
   17e76:	48 89 c7             	mov    %rax,%rdi
   17e79:	e8 be 14 00 00       	call   1933c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   17e7e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17e82:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   17e86:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17e8a:	c9                   	leave
   17e8b:	c3                   	ret

0000000000017e8c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
   17e8c:	55                   	push   %rbp
   17e8d:	48 89 e5             	mov    %rsp,%rbp
   17e90:	48 83 ec 10          	sub    $0x10,%rsp
   17e94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
   17e98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e9c:	48 8b 40 08          	mov    0x8(%rax),%rax
   17ea0:	48 89 c7             	mov    %rax,%rdi
   17ea3:	e8 e0 16 00 00       	call   19588 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   17ea8:	c9                   	leave
   17ea9:	c3                   	ret

0000000000017eaa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
   17eaa:	55                   	push   %rbp
   17eab:	48 89 e5             	mov    %rsp,%rbp
   17eae:	48 83 ec 30          	sub    $0x30,%rsp
   17eb2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17eb6:	48 89 d1             	mov    %rdx,%rcx
   17eb9:	48 89 f0             	mov    %rsi,%rax
   17ebc:	48 89 fa             	mov    %rdi,%rdx
   17ebf:	48 89 ca             	mov    %rcx,%rdx
   17ec2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   17ec6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
   17eca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17ece:	48 8b 00             	mov    (%rax),%rax
   17ed1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17ed5:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   17ed9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   17edd:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   17ee1:	48 89 c7             	mov    %rax,%rdi
   17ee4:	e8 cb 16 00 00       	call   195b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
   17ee9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
   17eed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17ef1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   17ef8:	00 
	  return __it;
   17ef9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   17efd:	c9                   	leave
   17efe:	c3                   	ret
   17eff:	90                   	nop

0000000000017f00 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   17f00:	55                   	push   %rbp
   17f01:	48 89 e5             	mov    %rsp,%rbp
   17f04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17f08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   17f0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17f14:	48 89 10             	mov    %rdx,(%rax)
   17f17:	90                   	nop
   17f18:	5d                   	pop    %rbp
   17f19:	c3                   	ret

0000000000017f1a <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   17f1a:	55                   	push   %rbp
   17f1b:	48 89 e5             	mov    %rsp,%rbp
   17f1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17f22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   17f26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17f2a:	48 8b 10             	mov    (%rax),%rdx
   17f2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f31:	48 89 10             	mov    %rdx,(%rax)
   17f34:	90                   	nop
   17f35:	5d                   	pop    %rbp
   17f36:	c3                   	ret
   17f37:	90                   	nop

0000000000017f38 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   17f38:	55                   	push   %rbp
   17f39:	48 89 e5             	mov    %rsp,%rbp
   17f3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   17f40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f44:	5d                   	pop    %rbp
   17f45:	c3                   	ret

0000000000017f46 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
   17f46:	55                   	push   %rbp
   17f47:	48 89 e5             	mov    %rsp,%rbp
   17f4a:	48 83 ec 10          	sub    $0x10,%rsp
   17f4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17f52:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return allocator_type(_M_get_Tp_allocator()); }
   17f56:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17f5a:	48 89 c7             	mov    %rax,%rdi
   17f5d:	e8 16 17 00 00       	call   19678 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   17f62:	48 89 c2             	mov    %rax,%rdx
   17f65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f69:	48 89 d6             	mov    %rdx,%rsi
   17f6c:	48 89 c7             	mov    %rax,%rdi
   17f6f:	e8 d2 34 ff ff       	call   b446 <_ZNSaIP9VkImage_TEC1ERKS1_>
   17f74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f78:	c9                   	leave
   17f79:	c3                   	ret

0000000000017f7a <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   17f7a:	55                   	push   %rbp
   17f7b:	48 89 e5             	mov    %rsp,%rbp
   17f7e:	48 83 ec 10          	sub    $0x10,%rsp
   17f82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17f86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(__a) { }
   17f8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f8e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17f92:	48 89 d6             	mov    %rdx,%rsi
   17f95:	48 89 c7             	mov    %rax,%rdi
   17f98:	e8 e9 16 00 00       	call   19686 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>
   17f9d:	90                   	nop
   17f9e:	c9                   	leave
   17f9f:	c3                   	ret

0000000000017fa0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
   17fa0:	55                   	push   %rbp
   17fa1:	48 89 e5             	mov    %rsp,%rbp
   17fa4:	48 83 ec 30          	sub    $0x30,%rsp
   17fa8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   17fac:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	  _Vector_impl_data __tmp;
   17fb0:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   17fb4:	48 89 c7             	mov    %rax,%rdi
   17fb7:	e8 0c 49 ff ff       	call   c8c8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
   17fbc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   17fc0:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   17fc4:	48 89 d6             	mov    %rdx,%rsi
   17fc7:	48 89 c7             	mov    %rax,%rdi
   17fca:	e8 dd 16 00 00       	call   196ac <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  _M_copy_data(__x);
   17fcf:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   17fd3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17fd7:	48 89 d6             	mov    %rdx,%rsi
   17fda:	48 89 c7             	mov    %rax,%rdi
   17fdd:	e8 ca 16 00 00       	call   196ac <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  __x._M_copy_data(__tmp);
   17fe2:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   17fe6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17fea:	48 89 d6             	mov    %rdx,%rsi
   17fed:	48 89 c7             	mov    %rax,%rdi
   17ff0:	e8 b7 16 00 00       	call   196ac <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	}
   17ff5:	90                   	nop
   17ff6:	c9                   	leave
   17ff7:	c3                   	ret

0000000000017ff8 <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>:
    __alloc_on_move(_Alloc& __one, _Alloc& __two)
   17ff8:	55                   	push   %rbp
   17ff9:	48 89 e5             	mov    %rsp,%rbp
   17ffc:	48 83 ec 10          	sub    $0x10,%rsp
   18000:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18004:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__one = std::move(__two);
   18008:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1800c:	48 89 c7             	mov    %rax,%rdi
   1800f:	e8 d5 16 00 00       	call   196e9 <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>
    }
   18014:	90                   	nop
   18015:	c9                   	leave
   18016:	c3                   	ret
   18017:	90                   	nop

0000000000018018 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   18018:	55                   	push   %rbp
   18019:	48 89 e5             	mov    %rsp,%rbp
   1801c:	48 83 ec 10          	sub    $0x10,%rsp
   18020:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   18024:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18028:	48 89 c7             	mov    %rax,%rdi
   1802b:	e8 0a 17 00 00       	call   1973a <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   18030:	48 89 c7             	mov    %rax,%rdi
   18033:	e8 bf 16 00 00       	call   196f7 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   18038:	c9                   	leave
   18039:	c3                   	ret

000000000001803a <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1803a:	55                   	push   %rbp
   1803b:	48 89 e5             	mov    %rsp,%rbp
   1803e:	48 83 ec 20          	sub    $0x20,%rsp
   18042:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18046:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1804a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1804e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18052:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18056:	48 89 d6             	mov    %rdx,%rsi
   18059:	48 89 c7             	mov    %rax,%rdi
   1805c:	e8 e7 16 00 00       	call   19748 <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>
   18061:	c9                   	leave
   18062:	c3                   	ret
   18063:	90                   	nop

0000000000018064 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   18064:	55                   	push   %rbp
   18065:	48 89 e5             	mov    %rsp,%rbp
   18068:	53                   	push   %rbx
   18069:	48 83 ec 38          	sub    $0x38,%rsp
   1806d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   18071:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   18075:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   18079:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1807d:	48 89 c7             	mov    %rax,%rdi
   18080:	e8 93 ff ff ff       	call   18018 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   18085:	48 89 c3             	mov    %rax,%rbx
   18088:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1808c:	48 89 c7             	mov    %rax,%rdi
   1808f:	e8 3c c7 ff ff       	call   147d0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   18094:	48 29 c3             	sub    %rax,%rbx
   18097:	48 89 da             	mov    %rbx,%rdx
   1809a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1809e:	48 39 c2             	cmp    %rax,%rdx
   180a1:	0f 92 c0             	setb   %al
   180a4:	84 c0                	test   %al,%al
   180a6:	74 0c                	je     180b4 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   180a8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   180ac:	48 89 c7             	mov    %rax,%rdi
   180af:	e8 3c c1 fe ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   180b4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   180b8:	48 89 c7             	mov    %rax,%rdi
   180bb:	e8 10 c7 ff ff       	call   147d0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   180c0:	48 89 c3             	mov    %rax,%rbx
   180c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   180c7:	48 89 c7             	mov    %rax,%rdi
   180ca:	e8 01 c7 ff ff       	call   147d0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   180cf:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   180d3:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   180d7:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   180db:	48 89 d6             	mov    %rdx,%rsi
   180de:	48 89 c7             	mov    %rax,%rdi
   180e1:	e8 ae 0e 00 00       	call   18f94 <_ZSt3maxImERKT_S2_S2_>
   180e6:	48 8b 00             	mov    (%rax),%rax
   180e9:	48 01 d8             	add    %rbx,%rax
   180ec:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   180f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   180f4:	48 89 c7             	mov    %rax,%rdi
   180f7:	e8 d4 c6 ff ff       	call   147d0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   180fc:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   18100:	72 12                	jb     18114 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   18102:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18106:	48 89 c7             	mov    %rax,%rdi
   18109:	e8 0a ff ff ff       	call   18018 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   1810e:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   18112:	73 0e                	jae    18122 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   18114:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18118:	48 89 c7             	mov    %rax,%rdi
   1811b:	e8 f8 fe ff ff       	call   18018 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   18120:	eb 04                	jmp    18126 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   18122:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   18126:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1812a:	c9                   	leave
   1812b:	c3                   	ret

000000000001812c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1812c:	55                   	push   %rbp
   1812d:	48 89 e5             	mov    %rsp,%rbp
   18130:	48 83 ec 10          	sub    $0x10,%rsp
   18134:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18138:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1813c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   18141:	74 15                	je     18158 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x2c>
   18143:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18147:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1814b:	48 89 d6             	mov    %rdx,%rsi
   1814e:	48 89 c7             	mov    %rax,%rdi
   18151:	e8 1b 16 00 00       	call   19771 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>
   18156:	eb 05                	jmp    1815d <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x31>
   18158:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1815d:	c9                   	leave
   1815e:	c3                   	ret

000000000001815f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1815f:	55                   	push   %rbp
   18160:	48 89 e5             	mov    %rsp,%rbp
   18163:	48 83 ec 20          	sub    $0x20,%rsp
   18167:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1816b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1816f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   18173:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   18177:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1817b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1817f:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   18183:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18187:	48 89 c7             	mov    %rax,%rdi
   1818a:	e8 0c 16 00 00       	call   1979b <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   1818f:	c9                   	leave
   18190:	c3                   	ret

0000000000018191 <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_refERA2_KS0_m>:
      _S_ref(const _Type& __t, std::size_t __n) noexcept
   18191:	55                   	push   %rbp
   18192:	48 89 e5             	mov    %rsp,%rbp
   18195:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18199:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return const_cast<_Tp&>(__t[__n]); }
   1819d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   181a1:	48 c1 e0 04          	shl    $0x4,%rax
   181a5:	48 89 c2             	mov    %rax,%rdx
   181a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   181ac:	48 01 d0             	add    %rdx,%rax
   181af:	5d                   	pop    %rbp
   181b0:	c3                   	ret
   181b1:	90                   	nop

00000000000181b2 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   181b2:	55                   	push   %rbp
   181b3:	48 89 e5             	mov    %rsp,%rbp
   181b6:	48 83 ec 10          	sub    $0x10,%rsp
   181ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   181be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   181c2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   181c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   181ca:	48 89 d6             	mov    %rdx,%rsi
   181cd:	48 89 c7             	mov    %rax,%rdi
   181d0:	e8 29 16 00 00       	call   197fe <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>
   181d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   181d9:	48 89 c7             	mov    %rax,%rdi
   181dc:	e8 43 16 00 00       	call   19824 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
   181e1:	90                   	nop
   181e2:	c9                   	leave
   181e3:	c3                   	ret

00000000000181e4 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
   181e4:	55                   	push   %rbp
   181e5:	48 89 e5             	mov    %rsp,%rbp
   181e8:	48 83 ec 20          	sub    $0x20,%rsp
   181ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   181f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   181f4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   181f8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   181fd:	74 17                	je     18216 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   181ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18203:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18207:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1820b:	48 89 ce             	mov    %rcx,%rsi
   1820e:	48 89 c7             	mov    %rax,%rdi
   18211:	e8 3c 16 00 00       	call   19852 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE10deallocateERS1_PS0_m>
      }
   18216:	90                   	nop
   18217:	c9                   	leave
   18218:	c3                   	ret
   18219:	90                   	nop

000000000001821a <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE4sizeEv>:
   1821a:	55                   	push   %rbp
   1821b:	48 89 e5             	mov    %rsp,%rbp
   1821e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18222:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18226:	48 8b 40 08          	mov    0x8(%rax),%rax
   1822a:	5d                   	pop    %rbp
   1822b:	c3                   	ret

000000000001822c <_ZSt19__iterator_categoryIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1822c:	55                   	push   %rbp
   1822d:	48 89 e5             	mov    %rsp,%rbp
   18230:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   18234:	90                   	nop
   18235:	5d                   	pop    %rbp
   18236:	c3                   	ret

0000000000018237 <_ZSt10__distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   18237:	55                   	push   %rbp
   18238:	48 89 e5             	mov    %rsp,%rbp
   1823b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1823f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   18243:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18247:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   1824b:	48 c1 f8 04          	sar    $0x4,%rax
   1824f:	48 89 c2             	mov    %rax,%rdx
   18252:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   18259:	e3 38 8e 
   1825c:	48 0f af c2          	imul   %rdx,%rax
    }
   18260:	5d                   	pop    %rbp
   18261:	c3                   	ret

0000000000018262 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   18262:	55                   	push   %rbp
   18263:	48 89 e5             	mov    %rsp,%rbp
   18266:	53                   	push   %rbx
   18267:	48 83 ec 28          	sub    $0x28,%rsp
   1826b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1826f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   18273:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   18277:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1827b:	48 89 d6             	mov    %rdx,%rsi
   1827e:	48 89 c7             	mov    %rax,%rdi
   18281:	e8 78 15 00 00       	call   197fe <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>
   18286:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1828a:	48 89 c7             	mov    %rax,%rdi
   1828d:	e8 ee 15 00 00       	call   19880 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_S_max_sizeERKS1_>
   18292:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   18296:	0f 92 c3             	setb   %bl
   18299:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1829d:	48 89 c7             	mov    %rax,%rdi
   182a0:	e8 97 c2 ff ff       	call   1453c <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
   182a5:	84 db                	test   %bl,%bl
   182a7:	74 0f                	je     182b8 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
   182a9:	48 8d 05 70 8f 00 00 	lea    0x8f70(%rip),%rax        # 21220 <_ZZN9VulkanApp6renderEvE11submitCount+0x2f4>
   182b0:	48 89 c7             	mov    %rax,%rdi
   182b3:	e8 38 bf fe ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   182b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   182bc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   182c0:	c9                   	leave
   182c1:	c3                   	ret

00000000000182c2 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   182c2:	55                   	push   %rbp
   182c3:	48 89 e5             	mov    %rsp,%rbp
   182c6:	48 83 ec 10          	sub    $0x10,%rsp
   182ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   182ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   182d2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   182d7:	74 15                	je     182ee <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm+0x2c>
   182d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   182dd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   182e1:	48 89 d6             	mov    %rdx,%rsi
   182e4:	48 89 c7             	mov    %rax,%rdi
   182e7:	e8 d6 15 00 00       	call   198c2 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8allocateERS1_m>
   182ec:	eb 05                	jmp    182f3 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm+0x31>
   182ee:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   182f3:	c9                   	leave
   182f4:	c3                   	ret

00000000000182f5 <_ZSt22__uninitialized_copy_aIPK28VkGraphicsPipelineCreateInfoPS0_S0_ET0_T_S5_S4_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   182f5:	55                   	push   %rbp
   182f6:	48 89 e5             	mov    %rsp,%rbp
   182f9:	48 83 ec 20          	sub    $0x20,%rsp
   182fd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18301:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18305:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   18309:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   1830d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18311:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18315:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18319:	48 89 ce             	mov    %rcx,%rsi
   1831c:	48 89 c7             	mov    %rax,%rdi
   1831f:	e8 c8 15 00 00       	call   198ec <_ZSt18uninitialized_copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>
    }
   18324:	c9                   	leave
   18325:	c3                   	ret

0000000000018326 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   18326:	55                   	push   %rbp
   18327:	48 89 e5             	mov    %rsp,%rbp
   1832a:	48 83 ec 10          	sub    $0x10,%rsp
   1832e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18332:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   18336:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1833a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1833e:	48 89 d6             	mov    %rdx,%rsi
   18341:	48 89 c7             	mov    %rax,%rdi
   18344:	e8 d8 15 00 00       	call   19921 <_ZNSt12_Destroy_auxILb1EE9__destroyIP28VkGraphicsPipelineCreateInfoEEvT_S4_>
    }
   18349:	90                   	nop
   1834a:	c9                   	leave
   1834b:	c3                   	ret

000000000001834c <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>:
   1834c:	55                   	push   %rbp
   1834d:	48 89 e5             	mov    %rsp,%rbp
   18350:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18354:	90                   	nop
   18355:	5d                   	pop    %rbp
   18356:	c3                   	ret
   18357:	90                   	nop

0000000000018358 <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   18358:	55                   	push   %rbp
   18359:	48 89 e5             	mov    %rsp,%rbp
   1835c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18360:	90                   	nop
   18361:	5d                   	pop    %rbp
   18362:	c3                   	ret

0000000000018363 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   18363:	55                   	push   %rbp
   18364:	48 89 e5             	mov    %rsp,%rbp
   18367:	53                   	push   %rbx
   18368:	48 83 ec 28          	sub    $0x28,%rsp
   1836c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   18370:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   18374:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   18378:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1837c:	48 89 d6             	mov    %rdx,%rsi
   1837f:	48 89 c7             	mov    %rax,%rdi
   18382:	e8 ff 00 00 00       	call   18486 <_ZNSaIP12VkPipeline_TEC1ERKS1_>
   18387:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1838b:	48 89 c7             	mov    %rax,%rdi
   1838e:	e8 9d 15 00 00       	call   19930 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>
   18393:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   18397:	0f 92 c3             	setb   %bl
   1839a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1839e:	48 89 c7             	mov    %rax,%rdi
   183a1:	e8 ea de ff ff       	call   16290 <_ZNSaIP12VkPipeline_TED1Ev>
   183a6:	84 db                	test   %bl,%bl
   183a8:	74 0f                	je     183b9 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   183aa:	48 8d 05 6f 8e 00 00 	lea    0x8e6f(%rip),%rax        # 21220 <_ZZN9VulkanApp6renderEvE11submitCount+0x2f4>
   183b1:	48 89 c7             	mov    %rax,%rdi
   183b4:	e8 37 be fe ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   183b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   183bd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   183c1:	c9                   	leave
   183c2:	c3                   	ret
   183c3:	90                   	nop

00000000000183c4 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
   183c4:	55                   	push   %rbp
   183c5:	48 89 e5             	mov    %rsp,%rbp
   183c8:	53                   	push   %rbx
   183c9:	48 83 ec 28          	sub    $0x28,%rsp
   183cd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   183d1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   183d5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
   183d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   183dd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   183e1:	48 89 d6             	mov    %rdx,%rsi
   183e4:	48 89 c7             	mov    %rax,%rdi
   183e7:	e8 86 15 00 00       	call   19972 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
   183ec:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   183f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   183f4:	48 89 d6             	mov    %rdx,%rsi
   183f7:	48 89 c7             	mov    %rax,%rdi
   183fa:	e8 a5 15 00 00       	call   199a4 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_M_create_storageEm>
   183ff:	eb 1a                	jmp    1841b <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_+0x57>
   18401:	48 89 c3             	mov    %rax,%rbx
   18404:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18408:	48 89 c7             	mov    %rax,%rdi
   1840b:	e8 14 c2 ff ff       	call   14624 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>
   18410:	48 89 d8             	mov    %rbx,%rax
   18413:	48 89 c7             	mov    %rax,%rdi
   18416:	e8 e5 c4 fe ff       	call   4900 <_Unwind_Resume@plt>
   1841b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1841f:	c9                   	leave
   18420:	c3                   	ret
   18421:	90                   	nop

0000000000018422 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
   18422:	55                   	push   %rbp
   18423:	48 89 e5             	mov    %rsp,%rbp
   18426:	48 83 ec 10          	sub    $0x10,%rsp
   1842a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1842e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
   18432:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18436:	48 89 c7             	mov    %rax,%rdi
   18439:	e8 7a df ff ff       	call   163b8 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1843e:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
   18441:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18445:	48 8b 00             	mov    (%rax),%rax
   18448:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1844c:	48 89 ce             	mov    %rcx,%rsi
   1844f:	48 89 c7             	mov    %rax,%rdi
   18452:	e8 a3 15 00 00       	call   199fa <_ZSt27__uninitialized_default_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
   18457:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1845b:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
   1845f:	90                   	nop
   18460:	c9                   	leave
   18461:	c3                   	ret

0000000000018462 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   18462:	55                   	push   %rbp
   18463:	48 89 e5             	mov    %rsp,%rbp
   18466:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1846a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1846e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18472:	5d                   	pop    %rbp
   18473:	c3                   	ret

0000000000018474 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   18474:	55                   	push   %rbp
   18475:	48 89 e5             	mov    %rsp,%rbp
   18478:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1847c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   18480:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18484:	5d                   	pop    %rbp
   18485:	c3                   	ret

0000000000018486 <_ZNSaIP12VkPipeline_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   18486:	55                   	push   %rbp
   18487:	48 89 e5             	mov    %rsp,%rbp
   1848a:	48 83 ec 10          	sub    $0x10,%rsp
   1848e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18492:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   18496:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1849a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1849e:	48 89 d6             	mov    %rdx,%rsi
   184a1:	48 89 c7             	mov    %rax,%rdi
   184a4:	e8 7b 15 00 00       	call   19a24 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1ERKS2_>
   184a9:	90                   	nop
   184aa:	c9                   	leave
   184ab:	c3                   	ret

00000000000184ac <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   184ac:	55                   	push   %rbp
   184ad:	48 89 e5             	mov    %rsp,%rbp
   184b0:	48 83 ec 20          	sub    $0x20,%rsp
   184b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   184b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   184bc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   184c0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   184c5:	74 17                	je     184de <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   184c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   184cb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   184cf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   184d3:	48 89 ce             	mov    %rcx,%rsi
   184d6:	48 89 c7             	mov    %rax,%rdi
   184d9:	e8 55 15 00 00       	call   19a33 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>
      }
   184de:	90                   	nop
   184df:	c9                   	leave
   184e0:	c3                   	ret

00000000000184e1 <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   184e1:	55                   	push   %rbp
   184e2:	48 89 e5             	mov    %rsp,%rbp
   184e5:	48 83 ec 10          	sub    $0x10,%rsp
   184e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   184ed:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   184f1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   184f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   184f9:	48 89 d6             	mov    %rdx,%rsi
   184fc:	48 89 c7             	mov    %rax,%rdi
   184ff:	e8 5d 15 00 00       	call   19a61 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>
    }
   18504:	90                   	nop
   18505:	c9                   	leave
   18506:	c3                   	ret
   18507:	90                   	nop

0000000000018508 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   18508:	55                   	push   %rbp
   18509:	48 89 e5             	mov    %rsp,%rbp
   1850c:	48 83 ec 10          	sub    $0x10,%rsp
   18510:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   18514:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18518:	48 89 c7             	mov    %rax,%rdi
   1851b:	e8 92 15 00 00       	call   19ab2 <_ZNKSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   18520:	48 89 c7             	mov    %rax,%rdi
   18523:	e8 48 15 00 00       	call   19a70 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_max_sizeERKS2_>
   18528:	c9                   	leave
   18529:	c3                   	ret

000000000001852a <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1852a:	55                   	push   %rbp
   1852b:	48 89 e5             	mov    %rsp,%rbp
   1852e:	48 83 ec 20          	sub    $0x20,%rsp
   18532:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18536:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1853a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1853e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18542:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18546:	48 89 d6             	mov    %rdx,%rsi
   18549:	48 89 c7             	mov    %rax,%rdi
   1854c:	e8 6f 15 00 00       	call   19ac0 <_ZSt25__uninitialized_default_nIPP15VkFramebuffer_TmET_S3_T0_>
   18551:	c9                   	leave
   18552:	c3                   	ret
   18553:	90                   	nop

0000000000018554 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   18554:	55                   	push   %rbp
   18555:	48 89 e5             	mov    %rsp,%rbp
   18558:	53                   	push   %rbx
   18559:	48 83 ec 38          	sub    $0x38,%rsp
   1855d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   18561:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   18565:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   18569:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1856d:	48 89 c7             	mov    %rax,%rdi
   18570:	e8 93 ff ff ff       	call   18508 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   18575:	48 89 c3             	mov    %rax,%rbx
   18578:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1857c:	48 89 c7             	mov    %rax,%rdi
   1857f:	e8 6c de ff ff       	call   163f0 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   18584:	48 29 c3             	sub    %rax,%rbx
   18587:	48 89 da             	mov    %rbx,%rdx
   1858a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1858e:	48 39 c2             	cmp    %rax,%rdx
   18591:	0f 92 c0             	setb   %al
   18594:	84 c0                	test   %al,%al
   18596:	74 0c                	je     185a4 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   18598:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1859c:	48 89 c7             	mov    %rax,%rdi
   1859f:	e8 4c bc fe ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   185a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   185a8:	48 89 c7             	mov    %rax,%rdi
   185ab:	e8 40 de ff ff       	call   163f0 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   185b0:	48 89 c3             	mov    %rax,%rbx
   185b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   185b7:	48 89 c7             	mov    %rax,%rdi
   185ba:	e8 31 de ff ff       	call   163f0 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   185bf:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   185c3:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   185c7:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   185cb:	48 89 d6             	mov    %rdx,%rsi
   185ce:	48 89 c7             	mov    %rax,%rdi
   185d1:	e8 be 09 00 00       	call   18f94 <_ZSt3maxImERKT_S2_S2_>
   185d6:	48 8b 00             	mov    (%rax),%rax
   185d9:	48 01 d8             	add    %rbx,%rax
   185dc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   185e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   185e4:	48 89 c7             	mov    %rax,%rdi
   185e7:	e8 04 de ff ff       	call   163f0 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   185ec:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   185f0:	72 12                	jb     18604 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   185f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   185f6:	48 89 c7             	mov    %rax,%rdi
   185f9:	e8 0a ff ff ff       	call   18508 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   185fe:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   18602:	73 0e                	jae    18612 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   18604:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18608:	48 89 c7             	mov    %rax,%rdi
   1860b:	e8 f8 fe ff ff       	call   18508 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   18610:	eb 04                	jmp    18616 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   18612:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   18616:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1861a:	c9                   	leave
   1861b:	c3                   	ret

000000000001861c <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1861c:	55                   	push   %rbp
   1861d:	48 89 e5             	mov    %rsp,%rbp
   18620:	48 83 ec 10          	sub    $0x10,%rsp
   18624:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18628:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1862c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   18631:	74 15                	je     18648 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm+0x2c>
   18633:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18637:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1863b:	48 89 d6             	mov    %rdx,%rsi
   1863e:	48 89 c7             	mov    %rax,%rdi
   18641:	e8 a3 14 00 00       	call   19ae9 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8allocateERS2_m>
   18646:	eb 05                	jmp    1864d <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm+0x31>
   18648:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1864d:	c9                   	leave
   1864e:	c3                   	ret

000000000001864f <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1864f:	55                   	push   %rbp
   18650:	48 89 e5             	mov    %rsp,%rbp
   18653:	48 83 ec 20          	sub    $0x20,%rsp
   18657:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1865b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1865f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   18663:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   18667:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1866b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1866f:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   18673:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18677:	48 89 c7             	mov    %rax,%rdi
   1867a:	e8 94 14 00 00       	call   19b13 <_ZSt12__relocate_aIPP15VkFramebuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   1867f:	c9                   	leave
   18680:	c3                   	ret
   18681:	90                   	nop

0000000000018682 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   18682:	55                   	push   %rbp
   18683:	48 89 e5             	mov    %rsp,%rbp
   18686:	48 83 ec 10          	sub    $0x10,%rsp
   1868a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1868e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   18692:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18696:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1869a:	48 89 d6             	mov    %rdx,%rsi
   1869d:	48 89 c7             	mov    %rax,%rdi
   186a0:	e8 d1 14 00 00       	call   19b76 <_ZNSaIP13VkImageView_TEC1ERKS1_>
   186a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   186a9:	48 89 c7             	mov    %rax,%rdi
   186ac:	e8 6b eb ff ff       	call   1721c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   186b1:	90                   	nop
   186b2:	c9                   	leave
   186b3:	c3                   	ret

00000000000186b4 <_ZNKSt16initializer_listIP13VkImageView_TE4sizeEv>:
   186b4:	55                   	push   %rbp
   186b5:	48 89 e5             	mov    %rsp,%rbp
   186b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   186bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   186c0:	48 8b 40 08          	mov    0x8(%rax),%rax
   186c4:	5d                   	pop    %rbp
   186c5:	c3                   	ret

00000000000186c6 <_ZSt19__iterator_categoryIPKP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   186c6:	55                   	push   %rbp
   186c7:	48 89 e5             	mov    %rsp,%rbp
   186ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   186ce:	90                   	nop
   186cf:	5d                   	pop    %rbp
   186d0:	c3                   	ret

00000000000186d1 <_ZSt10__distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   186d1:	55                   	push   %rbp
   186d2:	48 89 e5             	mov    %rsp,%rbp
   186d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   186d9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   186dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   186e1:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   186e5:	48 c1 f8 03          	sar    $0x3,%rax
    }
   186e9:	5d                   	pop    %rbp
   186ea:	c3                   	ret

00000000000186eb <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   186eb:	55                   	push   %rbp
   186ec:	48 89 e5             	mov    %rsp,%rbp
   186ef:	53                   	push   %rbx
   186f0:	48 83 ec 28          	sub    $0x28,%rsp
   186f4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   186f8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   186fc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   18700:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   18704:	48 89 d6             	mov    %rdx,%rsi
   18707:	48 89 c7             	mov    %rax,%rdi
   1870a:	e8 67 14 00 00       	call   19b76 <_ZNSaIP13VkImageView_TEC1ERKS1_>
   1870f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   18713:	48 89 c7             	mov    %rax,%rdi
   18716:	e8 dc 0f 00 00       	call   196f7 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   1871b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   1871f:	0f 92 c3             	setb   %bl
   18722:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   18726:	48 89 c7             	mov    %rax,%rdi
   18729:	e8 68 c1 ff ff       	call   14896 <_ZNSaIP13VkImageView_TED1Ev>
   1872e:	84 db                	test   %bl,%bl
   18730:	74 0f                	je     18741 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   18732:	48 8d 05 e7 8a 00 00 	lea    0x8ae7(%rip),%rax        # 21220 <_ZZN9VulkanApp6renderEvE11submitCount+0x2f4>
   18739:	48 89 c7             	mov    %rax,%rdi
   1873c:	e8 af ba fe ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   18741:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   18745:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   18749:	c9                   	leave
   1874a:	c3                   	ret

000000000001874b <_ZSt22__uninitialized_copy_aIPKP13VkImageView_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   1874b:	55                   	push   %rbp
   1874c:	48 89 e5             	mov    %rsp,%rbp
   1874f:	48 83 ec 20          	sub    $0x20,%rsp
   18753:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18757:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1875b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1875f:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   18763:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18767:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1876b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1876f:	48 89 ce             	mov    %rcx,%rsi
   18772:	48 89 c7             	mov    %rax,%rdi
   18775:	e8 22 14 00 00       	call   19b9c <_ZSt18uninitialized_copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>
    }
   1877a:	c9                   	leave
   1877b:	c3                   	ret

000000000001877c <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1877c:	55                   	push   %rbp
   1877d:	48 89 e5             	mov    %rsp,%rbp
   18780:	48 83 ec 10          	sub    $0x10,%rsp
   18784:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18788:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1878c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18790:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18794:	48 89 d6             	mov    %rdx,%rsi
   18797:	48 89 c7             	mov    %rax,%rdi
   1879a:	e8 32 14 00 00       	call   19bd1 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>
    }
   1879f:	90                   	nop
   187a0:	c9                   	leave
   187a1:	c3                   	ret

00000000000187a2 <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
   187a2:	55                   	push   %rbp
   187a3:	48 89 e5             	mov    %rsp,%rbp
   187a6:	48 83 ec 10          	sub    $0x10,%rsp
   187aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   187ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return allocator_type(_M_get_Tp_allocator()); }
   187b2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   187b6:	48 89 c7             	mov    %rax,%rdi
   187b9:	e8 22 14 00 00       	call   19be0 <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   187be:	48 89 c2             	mov    %rax,%rdx
   187c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187c5:	48 89 d6             	mov    %rdx,%rsi
   187c8:	48 89 c7             	mov    %rax,%rdi
   187cb:	e8 a8 e1 fe ff       	call   6978 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
   187d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187d4:	c9                   	leave
   187d5:	c3                   	ret

00000000000187d6 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1ERKS2_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   187d6:	55                   	push   %rbp
   187d7:	48 89 e5             	mov    %rsp,%rbp
   187da:	48 83 ec 10          	sub    $0x10,%rsp
   187de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   187e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(__a) { }
   187e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   187ee:	48 89 d6             	mov    %rdx,%rsi
   187f1:	48 89 c7             	mov    %rax,%rdi
   187f4:	e8 f5 13 00 00       	call   19bee <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1ERKS2_>
   187f9:	90                   	nop
   187fa:	c9                   	leave
   187fb:	c3                   	ret

00000000000187fc <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
   187fc:	55                   	push   %rbp
   187fd:	48 89 e5             	mov    %rsp,%rbp
   18800:	48 83 ec 30          	sub    $0x30,%rsp
   18804:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   18808:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	  _Vector_impl_data __tmp;
   1880c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   18810:	48 89 c7             	mov    %rax,%rdi
   18813:	e8 2e e3 fe ff       	call   6b46 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
   18818:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1881c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   18820:	48 89 d6             	mov    %rdx,%rsi
   18823:	48 89 c7             	mov    %rax,%rdi
   18826:	e8 e9 13 00 00       	call   19c14 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  _M_copy_data(__x);
   1882b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1882f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18833:	48 89 d6             	mov    %rdx,%rsi
   18836:	48 89 c7             	mov    %rax,%rdi
   18839:	e8 d6 13 00 00       	call   19c14 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  __x._M_copy_data(__tmp);
   1883e:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   18842:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18846:	48 89 d6             	mov    %rdx,%rsi
   18849:	48 89 c7             	mov    %rax,%rdi
   1884c:	e8 c3 13 00 00       	call   19c14 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	}
   18851:	90                   	nop
   18852:	c9                   	leave
   18853:	c3                   	ret

0000000000018854 <_ZSt15__alloc_on_moveISaIP17VkCommandBuffer_TEEvRT_S4_>:
    __alloc_on_move(_Alloc& __one, _Alloc& __two)
   18854:	55                   	push   %rbp
   18855:	48 89 e5             	mov    %rsp,%rbp
   18858:	48 83 ec 10          	sub    $0x10,%rsp
   1885c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18860:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__one = std::move(__two);
   18864:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18868:	48 89 c7             	mov    %rax,%rdi
   1886b:	e8 e1 13 00 00       	call   19c51 <_ZSt4moveIRSaIP17VkCommandBuffer_TEEONSt16remove_referenceIT_E4typeEOS5_>
    }
   18870:	90                   	nop
   18871:	c9                   	leave
   18872:	c3                   	ret
   18873:	90                   	nop

0000000000018874 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   18874:	55                   	push   %rbp
   18875:	48 89 e5             	mov    %rsp,%rbp
   18878:	48 83 ec 10          	sub    $0x10,%rsp
   1887c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   18880:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18884:	48 89 c7             	mov    %rax,%rdi
   18887:	e8 16 14 00 00       	call   19ca2 <_ZNKSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1888c:	48 89 c7             	mov    %rax,%rdi
   1888f:	e8 cb 13 00 00       	call   19c5f <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_max_sizeERKS2_>
   18894:	c9                   	leave
   18895:	c3                   	ret

0000000000018896 <_ZSt27__uninitialized_default_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   18896:	55                   	push   %rbp
   18897:	48 89 e5             	mov    %rsp,%rbp
   1889a:	48 83 ec 20          	sub    $0x20,%rsp
   1889e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   188a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   188a6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   188aa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   188ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   188b2:	48 89 d6             	mov    %rdx,%rsi
   188b5:	48 89 c7             	mov    %rax,%rdi
   188b8:	e8 f3 13 00 00       	call   19cb0 <_ZSt25__uninitialized_default_nIPP13VkSemaphore_TmET_S3_T0_>
   188bd:	c9                   	leave
   188be:	c3                   	ret
   188bf:	90                   	nop

00000000000188c0 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   188c0:	55                   	push   %rbp
   188c1:	48 89 e5             	mov    %rsp,%rbp
   188c4:	53                   	push   %rbx
   188c5:	48 83 ec 38          	sub    $0x38,%rsp
   188c9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   188cd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   188d1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   188d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   188d9:	48 89 c7             	mov    %rax,%rdi
   188dc:	e8 93 ff ff ff       	call   18874 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   188e1:	48 89 c3             	mov    %rax,%rbx
   188e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   188e8:	48 89 c7             	mov    %rax,%rdi
   188eb:	e8 8e c6 ff ff       	call   14f7e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   188f0:	48 29 c3             	sub    %rax,%rbx
   188f3:	48 89 da             	mov    %rbx,%rdx
   188f6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   188fa:	48 39 c2             	cmp    %rax,%rdx
   188fd:	0f 92 c0             	setb   %al
   18900:	84 c0                	test   %al,%al
   18902:	74 0c                	je     18910 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   18904:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18908:	48 89 c7             	mov    %rax,%rdi
   1890b:	e8 e0 b8 fe ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   18910:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18914:	48 89 c7             	mov    %rax,%rdi
   18917:	e8 62 c6 ff ff       	call   14f7e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   1891c:	48 89 c3             	mov    %rax,%rbx
   1891f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18923:	48 89 c7             	mov    %rax,%rdi
   18926:	e8 53 c6 ff ff       	call   14f7e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   1892b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1892f:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   18933:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   18937:	48 89 d6             	mov    %rdx,%rsi
   1893a:	48 89 c7             	mov    %rax,%rdi
   1893d:	e8 52 06 00 00       	call   18f94 <_ZSt3maxImERKT_S2_S2_>
   18942:	48 8b 00             	mov    (%rax),%rax
   18945:	48 01 d8             	add    %rbx,%rax
   18948:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   1894c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18950:	48 89 c7             	mov    %rax,%rdi
   18953:	e8 26 c6 ff ff       	call   14f7e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   18958:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1895c:	72 12                	jb     18970 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   1895e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18962:	48 89 c7             	mov    %rax,%rdi
   18965:	e8 0a ff ff ff       	call   18874 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   1896a:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1896e:	73 0e                	jae    1897e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   18970:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18974:	48 89 c7             	mov    %rax,%rdi
   18977:	e8 f8 fe ff ff       	call   18874 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   1897c:	eb 04                	jmp    18982 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   1897e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   18982:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   18986:	c9                   	leave
   18987:	c3                   	ret

0000000000018988 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   18988:	55                   	push   %rbp
   18989:	48 89 e5             	mov    %rsp,%rbp
   1898c:	48 83 ec 10          	sub    $0x10,%rsp
   18990:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18994:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   18998:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1899d:	74 15                	je     189b4 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm+0x2c>
   1899f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   189a3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   189a7:	48 89 d6             	mov    %rdx,%rsi
   189aa:	48 89 c7             	mov    %rax,%rdi
   189ad:	e8 27 13 00 00       	call   19cd9 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8allocateERS2_m>
   189b2:	eb 05                	jmp    189b9 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm+0x31>
   189b4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   189b9:	c9                   	leave
   189ba:	c3                   	ret

00000000000189bb <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   189bb:	55                   	push   %rbp
   189bc:	48 89 e5             	mov    %rsp,%rbp
   189bf:	48 83 ec 20          	sub    $0x20,%rsp
   189c3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   189c7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   189cb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   189cf:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   189d3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   189d7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   189db:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   189df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   189e3:	48 89 c7             	mov    %rax,%rdi
   189e6:	e8 18 13 00 00       	call   19d03 <_ZSt12__relocate_aIPP13VkSemaphore_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   189eb:	c9                   	leave
   189ec:	c3                   	ret
   189ed:	90                   	nop

00000000000189ee <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   189ee:	55                   	push   %rbp
   189ef:	48 89 e5             	mov    %rsp,%rbp
   189f2:	48 83 ec 10          	sub    $0x10,%rsp
   189f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   189fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   189fe:	48 89 c7             	mov    %rax,%rdi
   18a01:	e8 a2 13 00 00       	call   19da8 <_ZNKSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   18a06:	48 89 c7             	mov    %rax,%rdi
   18a09:	e8 58 13 00 00       	call   19d66 <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_max_sizeERKS2_>
   18a0e:	c9                   	leave
   18a0f:	c3                   	ret

0000000000018a10 <_ZSt27__uninitialized_default_n_aIPP9VkFence_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   18a10:	55                   	push   %rbp
   18a11:	48 89 e5             	mov    %rsp,%rbp
   18a14:	48 83 ec 20          	sub    $0x20,%rsp
   18a18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18a1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18a20:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   18a24:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18a28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a2c:	48 89 d6             	mov    %rdx,%rsi
   18a2f:	48 89 c7             	mov    %rax,%rdi
   18a32:	e8 7f 13 00 00       	call   19db6 <_ZSt25__uninitialized_default_nIPP9VkFence_TmET_S3_T0_>
   18a37:	c9                   	leave
   18a38:	c3                   	ret
   18a39:	90                   	nop

0000000000018a3a <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   18a3a:	55                   	push   %rbp
   18a3b:	48 89 e5             	mov    %rsp,%rbp
   18a3e:	53                   	push   %rbx
   18a3f:	48 83 ec 38          	sub    $0x38,%rsp
   18a43:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   18a47:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   18a4b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   18a4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18a53:	48 89 c7             	mov    %rax,%rdi
   18a56:	e8 93 ff ff ff       	call   189ee <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   18a5b:	48 89 c3             	mov    %rax,%rbx
   18a5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18a62:	48 89 c7             	mov    %rax,%rdi
   18a65:	e8 5a e1 ff ff       	call   16bc4 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   18a6a:	48 29 c3             	sub    %rax,%rbx
   18a6d:	48 89 da             	mov    %rbx,%rdx
   18a70:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18a74:	48 39 c2             	cmp    %rax,%rdx
   18a77:	0f 92 c0             	setb   %al
   18a7a:	84 c0                	test   %al,%al
   18a7c:	74 0c                	je     18a8a <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   18a7e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18a82:	48 89 c7             	mov    %rax,%rdi
   18a85:	e8 66 b7 fe ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   18a8a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18a8e:	48 89 c7             	mov    %rax,%rdi
   18a91:	e8 2e e1 ff ff       	call   16bc4 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   18a96:	48 89 c3             	mov    %rax,%rbx
   18a99:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18a9d:	48 89 c7             	mov    %rax,%rdi
   18aa0:	e8 1f e1 ff ff       	call   16bc4 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   18aa5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   18aa9:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   18aad:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   18ab1:	48 89 d6             	mov    %rdx,%rsi
   18ab4:	48 89 c7             	mov    %rax,%rdi
   18ab7:	e8 d8 04 00 00       	call   18f94 <_ZSt3maxImERKT_S2_S2_>
   18abc:	48 8b 00             	mov    (%rax),%rax
   18abf:	48 01 d8             	add    %rbx,%rax
   18ac2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   18ac6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18aca:	48 89 c7             	mov    %rax,%rdi
   18acd:	e8 f2 e0 ff ff       	call   16bc4 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   18ad2:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   18ad6:	72 12                	jb     18aea <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   18ad8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18adc:	48 89 c7             	mov    %rax,%rdi
   18adf:	e8 0a ff ff ff       	call   189ee <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   18ae4:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   18ae8:	73 0e                	jae    18af8 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   18aea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18aee:	48 89 c7             	mov    %rax,%rdi
   18af1:	e8 f8 fe ff ff       	call   189ee <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   18af6:	eb 04                	jmp    18afc <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   18af8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   18afc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   18b00:	c9                   	leave
   18b01:	c3                   	ret

0000000000018b02 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   18b02:	55                   	push   %rbp
   18b03:	48 89 e5             	mov    %rsp,%rbp
   18b06:	48 83 ec 10          	sub    $0x10,%rsp
   18b0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18b0e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   18b12:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   18b17:	74 15                	je     18b2e <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm+0x2c>
   18b19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b1d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18b21:	48 89 d6             	mov    %rdx,%rsi
   18b24:	48 89 c7             	mov    %rax,%rdi
   18b27:	e8 b3 12 00 00       	call   19ddf <_ZNSt16allocator_traitsISaIP9VkFence_TEE8allocateERS2_m>
   18b2c:	eb 05                	jmp    18b33 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm+0x31>
   18b2e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   18b33:	c9                   	leave
   18b34:	c3                   	ret

0000000000018b35 <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   18b35:	55                   	push   %rbp
   18b36:	48 89 e5             	mov    %rsp,%rbp
   18b39:	48 83 ec 20          	sub    $0x20,%rsp
   18b3d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18b41:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18b45:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   18b49:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   18b4d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   18b51:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18b55:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   18b59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b5d:	48 89 c7             	mov    %rax,%rdi
   18b60:	e8 a4 12 00 00       	call   19e09 <_ZSt12__relocate_aIPP9VkFence_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   18b65:	c9                   	leave
   18b66:	c3                   	ret
   18b67:	90                   	nop

0000000000018b68 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   18b68:	55                   	push   %rbp
   18b69:	48 89 e5             	mov    %rsp,%rbp
   18b6c:	48 83 ec 10          	sub    $0x10,%rsp
   18b70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18b74:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   18b78:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18b7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b80:	48 89 d6             	mov    %rdx,%rsi
   18b83:	48 89 c7             	mov    %rax,%rdi
   18b86:	e8 e1 12 00 00       	call   19e6c <_ZNSaIP13VkSemaphore_TEC1ERKS1_>
   18b8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b8f:	48 89 c7             	mov    %rax,%rdi
   18b92:	e8 ad e7 ff ff       	call   17344 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   18b97:	90                   	nop
   18b98:	c9                   	leave
   18b99:	c3                   	ret

0000000000018b9a <_ZNKSt16initializer_listIP13VkSemaphore_TE4sizeEv>:
   18b9a:	55                   	push   %rbp
   18b9b:	48 89 e5             	mov    %rsp,%rbp
   18b9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18ba2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ba6:	48 8b 40 08          	mov    0x8(%rax),%rax
   18baa:	5d                   	pop    %rbp
   18bab:	c3                   	ret

0000000000018bac <_ZSt19__iterator_categoryIPKP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   18bac:	55                   	push   %rbp
   18bad:	48 89 e5             	mov    %rsp,%rbp
   18bb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   18bb4:	90                   	nop
   18bb5:	5d                   	pop    %rbp
   18bb6:	c3                   	ret

0000000000018bb7 <_ZSt10__distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   18bb7:	55                   	push   %rbp
   18bb8:	48 89 e5             	mov    %rsp,%rbp
   18bbb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18bbf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   18bc3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18bc7:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   18bcb:	48 c1 f8 03          	sar    $0x3,%rax
    }
   18bcf:	5d                   	pop    %rbp
   18bd0:	c3                   	ret

0000000000018bd1 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   18bd1:	55                   	push   %rbp
   18bd2:	48 89 e5             	mov    %rsp,%rbp
   18bd5:	53                   	push   %rbx
   18bd6:	48 83 ec 28          	sub    $0x28,%rsp
   18bda:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   18bde:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   18be2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   18be6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   18bea:	48 89 d6             	mov    %rdx,%rsi
   18bed:	48 89 c7             	mov    %rax,%rdi
   18bf0:	e8 77 12 00 00       	call   19e6c <_ZNSaIP13VkSemaphore_TEC1ERKS1_>
   18bf5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   18bf9:	48 89 c7             	mov    %rax,%rdi
   18bfc:	e8 5e 10 00 00       	call   19c5f <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_max_sizeERKS2_>
   18c01:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   18c05:	0f 92 c3             	setb   %bl
   18c08:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   18c0c:	48 89 c7             	mov    %rax,%rdi
   18c0f:	e8 7e c1 ff ff       	call   14d92 <_ZNSaIP13VkSemaphore_TED1Ev>
   18c14:	84 db                	test   %bl,%bl
   18c16:	74 0f                	je     18c27 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   18c18:	48 8d 05 01 86 00 00 	lea    0x8601(%rip),%rax        # 21220 <_ZZN9VulkanApp6renderEvE11submitCount+0x2f4>
   18c1f:	48 89 c7             	mov    %rax,%rdi
   18c22:	e8 c9 b5 fe ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   18c27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   18c2b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   18c2f:	c9                   	leave
   18c30:	c3                   	ret

0000000000018c31 <_ZSt22__uninitialized_copy_aIPKP13VkSemaphore_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   18c31:	55                   	push   %rbp
   18c32:	48 89 e5             	mov    %rsp,%rbp
   18c35:	48 83 ec 20          	sub    $0x20,%rsp
   18c39:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18c3d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18c41:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   18c45:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   18c49:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18c4d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18c51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c55:	48 89 ce             	mov    %rcx,%rsi
   18c58:	48 89 c7             	mov    %rax,%rdi
   18c5b:	e8 32 12 00 00       	call   19e92 <_ZSt18uninitialized_copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>
    }
   18c60:	c9                   	leave
   18c61:	c3                   	ret

0000000000018c62 <_ZSt8_DestroyIPP13VkSemaphore_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   18c62:	55                   	push   %rbp
   18c63:	48 89 e5             	mov    %rsp,%rbp
   18c66:	48 83 ec 10          	sub    $0x10,%rsp
   18c6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18c6e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   18c72:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18c76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c7a:	48 89 d6             	mov    %rdx,%rsi
   18c7d:	48 89 c7             	mov    %rax,%rdi
   18c80:	e8 42 12 00 00       	call   19ec7 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkSemaphore_TEEvT_S5_>
    }
   18c85:	90                   	nop
   18c86:	c9                   	leave
   18c87:	c3                   	ret

0000000000018c88 <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   18c88:	55                   	push   %rbp
   18c89:	48 89 e5             	mov    %rsp,%rbp
   18c8c:	48 83 ec 10          	sub    $0x10,%rsp
   18c90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18c94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   18c98:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18c9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ca0:	48 89 d6             	mov    %rdx,%rsi
   18ca3:	48 89 c7             	mov    %rax,%rdi
   18ca6:	e8 2b 12 00 00       	call   19ed6 <_ZNSaIjEC1ERKS_>
   18cab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18caf:	48 89 c7             	mov    %rax,%rdi
   18cb2:	e8 45 12 00 00       	call   19efc <_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC1Ev>
	{ }
   18cb7:	90                   	nop
   18cb8:	c9                   	leave
   18cb9:	c3                   	ret

0000000000018cba <_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm>:
      _M_deallocate(pointer __p, size_t __n)
   18cba:	55                   	push   %rbp
   18cbb:	48 89 e5             	mov    %rsp,%rbp
   18cbe:	48 83 ec 20          	sub    $0x20,%rsp
   18cc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18cc6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18cca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   18cce:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   18cd3:	74 17                	je     18cec <_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   18cd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18cd9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18cdd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18ce1:	48 89 ce             	mov    %rcx,%rsi
   18ce4:	48 89 c7             	mov    %rax,%rdi
   18ce7:	e8 3e 12 00 00       	call   19f2a <_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm>
      }
   18cec:	90                   	nop
   18ced:	c9                   	leave
   18cee:	c3                   	ret
   18cef:	90                   	nop

0000000000018cf0 <_ZNKSt16initializer_listIjE4sizeEv>:
   18cf0:	55                   	push   %rbp
   18cf1:	48 89 e5             	mov    %rsp,%rbp
   18cf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18cf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18cfc:	48 8b 40 08          	mov    0x8(%rax),%rax
   18d00:	5d                   	pop    %rbp
   18d01:	c3                   	ret

0000000000018d02 <_ZSt19__iterator_categoryIPKjENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   18d02:	55                   	push   %rbp
   18d03:	48 89 e5             	mov    %rsp,%rbp
   18d06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   18d0a:	90                   	nop
   18d0b:	5d                   	pop    %rbp
   18d0c:	c3                   	ret

0000000000018d0d <_ZSt10__distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   18d0d:	55                   	push   %rbp
   18d0e:	48 89 e5             	mov    %rsp,%rbp
   18d11:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18d15:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   18d19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18d1d:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   18d21:	48 c1 f8 02          	sar    $0x2,%rax
    }
   18d25:	5d                   	pop    %rbp
   18d26:	c3                   	ret

0000000000018d27 <_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   18d27:	55                   	push   %rbp
   18d28:	48 89 e5             	mov    %rsp,%rbp
   18d2b:	53                   	push   %rbx
   18d2c:	48 83 ec 28          	sub    $0x28,%rsp
   18d30:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   18d34:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   18d38:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   18d3c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   18d40:	48 89 d6             	mov    %rdx,%rsi
   18d43:	48 89 c7             	mov    %rax,%rdi
   18d46:	e8 8b 11 00 00       	call   19ed6 <_ZNSaIjEC1ERKS_>
   18d4b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   18d4f:	48 89 c7             	mov    %rax,%rdi
   18d52:	e8 01 12 00 00       	call   19f58 <_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_>
   18d57:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   18d5b:	0f 92 c3             	setb   %bl
   18d5e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   18d62:	48 89 c7             	mov    %rax,%rdi
   18d65:	e8 2c c1 ff ff       	call   14e96 <_ZNSaIjED1Ev>
   18d6a:	84 db                	test   %bl,%bl
   18d6c:	74 0f                	je     18d7d <_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
   18d6e:	48 8d 05 ab 84 00 00 	lea    0x84ab(%rip),%rax        # 21220 <_ZZN9VulkanApp6renderEvE11submitCount+0x2f4>
   18d75:	48 89 c7             	mov    %rax,%rdi
   18d78:	e8 73 b4 fe ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   18d7d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   18d81:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   18d85:	c9                   	leave
   18d86:	c3                   	ret
   18d87:	90                   	nop

0000000000018d88 <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm>:
      _M_allocate(size_t __n)
   18d88:	55                   	push   %rbp
   18d89:	48 89 e5             	mov    %rsp,%rbp
   18d8c:	48 83 ec 10          	sub    $0x10,%rsp
   18d90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18d94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   18d98:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   18d9d:	74 15                	je     18db4 <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm+0x2c>
   18d9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18da3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18da7:	48 89 d6             	mov    %rdx,%rsi
   18daa:	48 89 c7             	mov    %rax,%rdi
   18dad:	e8 e8 11 00 00       	call   19f9a <_ZNSt16allocator_traitsISaIjEE8allocateERS0_m>
   18db2:	eb 05                	jmp    18db9 <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm+0x31>
   18db4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   18db9:	c9                   	leave
   18dba:	c3                   	ret

0000000000018dbb <_ZSt22__uninitialized_copy_aIPKjPjjET0_T_S4_S3_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   18dbb:	55                   	push   %rbp
   18dbc:	48 89 e5             	mov    %rsp,%rbp
   18dbf:	48 83 ec 20          	sub    $0x20,%rsp
   18dc3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18dc7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18dcb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   18dcf:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   18dd3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18dd7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18ddb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ddf:	48 89 ce             	mov    %rcx,%rsi
   18de2:	48 89 c7             	mov    %rax,%rdi
   18de5:	e8 da 11 00 00       	call   19fc4 <_ZSt18uninitialized_copyIPKjPjET0_T_S4_S3_>
    }
   18dea:	c9                   	leave
   18deb:	c3                   	ret

0000000000018dec <_ZSt8_DestroyIPjEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   18dec:	55                   	push   %rbp
   18ded:	48 89 e5             	mov    %rsp,%rbp
   18df0:	48 83 ec 10          	sub    $0x10,%rsp
   18df4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18df8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   18dfc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18e00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e04:	48 89 d6             	mov    %rdx,%rsi
   18e07:	48 89 c7             	mov    %rax,%rdi
   18e0a:	e8 ea 11 00 00       	call   19ff9 <_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_>
    }
   18e0f:	90                   	nop
   18e10:	c9                   	leave
   18e11:	c3                   	ret

0000000000018e12 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   18e12:	55                   	push   %rbp
   18e13:	48 89 e5             	mov    %rsp,%rbp
   18e16:	48 83 ec 20          	sub    $0x20,%rsp
   18e1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18e1e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18e22:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   18e26:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18e2a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18e2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e32:	48 89 ce             	mov    %rcx,%rsi
   18e35:	48 89 c7             	mov    %rax,%rdi
   18e38:	e8 cb 11 00 00       	call   1a008 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>
   18e3d:	90                   	nop
   18e3e:	c9                   	leave
   18e3f:	c3                   	ret

0000000000018e40 <_ZNSt15__new_allocatorIP15VkFramebuffer_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   18e40:	55                   	push   %rbp
   18e41:	48 89 e5             	mov    %rsp,%rbp
   18e44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18e48:	90                   	nop
   18e49:	5d                   	pop    %rbp
   18e4a:	c3                   	ret

0000000000018e4b <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   18e4b:	55                   	push   %rbp
   18e4c:	48 89 e5             	mov    %rsp,%rbp
   18e4f:	48 83 ec 20          	sub    $0x20,%rsp
   18e53:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18e57:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18e5b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   18e5f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18e63:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18e67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e6b:	48 89 ce             	mov    %rcx,%rsi
   18e6e:	48 89 c7             	mov    %rax,%rdi
   18e71:	e8 c4 11 00 00       	call   1a03a <_ZNSt15__new_allocatorIP15VkFramebuffer_TE10deallocateEPS1_m>
   18e76:	90                   	nop
   18e77:	c9                   	leave
   18e78:	c3                   	ret

0000000000018e79 <_ZSt8_DestroyIPP15VkFramebuffer_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   18e79:	55                   	push   %rbp
   18e7a:	48 89 e5             	mov    %rsp,%rbp
   18e7d:	48 83 ec 10          	sub    $0x10,%rsp
   18e81:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18e85:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   18e89:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18e8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e91:	48 89 d6             	mov    %rdx,%rsi
   18e94:	48 89 c7             	mov    %rax,%rdi
   18e97:	e8 cf 11 00 00       	call   1a06b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP15VkFramebuffer_TEEvT_S5_>
    }
   18e9c:	90                   	nop
   18e9d:	c9                   	leave
   18e9e:	c3                   	ret

0000000000018e9f <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   18e9f:	55                   	push   %rbp
   18ea0:	48 89 e5             	mov    %rsp,%rbp
   18ea3:	48 83 ec 20          	sub    $0x20,%rsp
   18ea7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18eab:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18eaf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   18eb3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18eb7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18ebb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ebf:	48 89 ce             	mov    %rcx,%rsi
   18ec2:	48 89 c7             	mov    %rax,%rdi
   18ec5:	e8 b0 11 00 00       	call   1a07a <_ZNSt15__new_allocatorIP13VkSemaphore_TE10deallocateEPS1_m>
   18eca:	90                   	nop
   18ecb:	c9                   	leave
   18ecc:	c3                   	ret
   18ecd:	90                   	nop

0000000000018ece <_ZNSt15__new_allocatorIP9VkFence_TEC1Ev>:
   18ece:	55                   	push   %rbp
   18ecf:	48 89 e5             	mov    %rsp,%rbp
   18ed2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18ed6:	90                   	nop
   18ed7:	5d                   	pop    %rbp
   18ed8:	c3                   	ret

0000000000018ed9 <_ZNSt16allocator_traitsISaIP9VkFence_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   18ed9:	55                   	push   %rbp
   18eda:	48 89 e5             	mov    %rsp,%rbp
   18edd:	48 83 ec 20          	sub    $0x20,%rsp
   18ee1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18ee5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18ee9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   18eed:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18ef1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18ef5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ef9:	48 89 ce             	mov    %rcx,%rsi
   18efc:	48 89 c7             	mov    %rax,%rdi
   18eff:	e8 a8 11 00 00       	call   1a0ac <_ZNSt15__new_allocatorIP9VkFence_TE10deallocateEPS1_m>
   18f04:	90                   	nop
   18f05:	c9                   	leave
   18f06:	c3                   	ret

0000000000018f07 <_ZSt8_DestroyIPP9VkFence_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   18f07:	55                   	push   %rbp
   18f08:	48 89 e5             	mov    %rsp,%rbp
   18f0b:	48 83 ec 10          	sub    $0x10,%rsp
   18f0f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18f13:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   18f17:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18f1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18f1f:	48 89 d6             	mov    %rdx,%rsi
   18f22:	48 89 c7             	mov    %rax,%rdi
   18f25:	e8 b3 11 00 00       	call   1a0dd <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkFence_TEEvT_S5_>
    }
   18f2a:	90                   	nop
   18f2b:	c9                   	leave
   18f2c:	c3                   	ret

0000000000018f2d <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   18f2d:	55                   	push   %rbp
   18f2e:	48 89 e5             	mov    %rsp,%rbp
   18f31:	48 83 ec 30          	sub    $0x30,%rsp
   18f35:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18f39:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18f3d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   18f41:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   18f45:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   18f49:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   18f4d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   18f51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18f55:	48 89 ce             	mov    %rcx,%rsi
   18f58:	48 89 c7             	mov    %rax,%rdi
   18f5b:	e8 8c 11 00 00       	call   1a0ec <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
   18f60:	c9                   	leave
   18f61:	c3                   	ret

0000000000018f62 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   18f62:	55                   	push   %rbp
   18f63:	48 89 e5             	mov    %rsp,%rbp
   18f66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18f6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18f6e:	90                   	nop
   18f6f:	5d                   	pop    %rbp
   18f70:	c3                   	ret
   18f71:	90                   	nop

0000000000018f72 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   18f72:	55                   	push   %rbp
   18f73:	48 89 e5             	mov    %rsp,%rbp
   18f76:	48 83 ec 10          	sub    $0x10,%rsp
   18f7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   18f7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18f82:	48 89 c7             	mov    %rax,%rdi
   18f85:	e8 90 11 00 00       	call   1a11a <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   18f8a:	48 89 c7             	mov    %rax,%rdi
   18f8d:	e8 d3 27 ff ff       	call   b765 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
   18f92:	c9                   	leave
   18f93:	c3                   	ret

0000000000018f94 <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
   18f94:	55                   	push   %rbp
   18f95:	48 89 e5             	mov    %rsp,%rbp
   18f98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18f9c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
   18fa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18fa4:	48 8b 10             	mov    (%rax),%rdx
   18fa7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18fab:	48 8b 00             	mov    (%rax),%rax
   18fae:	48 39 c2             	cmp    %rax,%rdx
   18fb1:	73 06                	jae    18fb9 <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
   18fb3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18fb7:	eb 04                	jmp    18fbd <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
   18fb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   18fbd:	5d                   	pop    %rbp
   18fbe:	c3                   	ret

0000000000018fbf <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
   18fbf:	55                   	push   %rbp
   18fc0:	48 89 e5             	mov    %rsp,%rbp
   18fc3:	41 54                	push   %r12
   18fc5:	53                   	push   %rbx
   18fc6:	48 83 ec 20          	sub    $0x20,%rsp
   18fca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18fce:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18fd2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   18fd6:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
   18fda:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18fde:	48 89 c7             	mov    %rax,%rdi
   18fe1:	e8 42 11 00 00       	call   1a128 <_ZSt12__niter_baseIPPKcET_S3_>
   18fe6:	49 89 c4             	mov    %rax,%r12
   18fe9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18fed:	48 89 c7             	mov    %rax,%rdi
   18ff0:	e8 33 11 00 00       	call   1a128 <_ZSt12__niter_baseIPPKcET_S3_>
   18ff5:	48 89 c3             	mov    %rax,%rbx
   18ff8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18ffc:	48 89 c7             	mov    %rax,%rdi
   18fff:	e8 24 11 00 00       	call   1a128 <_ZSt12__niter_baseIPPKcET_S3_>
   19004:	48 89 c7             	mov    %rax,%rdi
   19007:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1900b:	48 89 c1             	mov    %rax,%rcx
   1900e:	4c 89 e2             	mov    %r12,%rdx
   19011:	48 89 de             	mov    %rbx,%rsi
   19014:	e8 1d 11 00 00       	call   1a136 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
   19019:	48 83 c4 20          	add    $0x20,%rsp
   1901d:	5b                   	pop    %rbx
   1901e:	41 5c                	pop    %r12
   19020:	5d                   	pop    %rbp
   19021:	c3                   	ret

0000000000019022 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>:
	    _Storage(in_place_t, _Args&&... __args)
   19022:	55                   	push   %rbp
   19023:	48 89 e5             	mov    %rsp,%rbp
   19026:	48 83 ec 10          	sub    $0x10,%rsp
   1902a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1902e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    : _M_value(std::forward<_Args>(__args)...)
   19032:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19036:	48 89 c7             	mov    %rax,%rdi
   19039:	e8 94 c7 ff ff       	call   157d2 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   1903e:	48 89 c1             	mov    %rax,%rcx
   19041:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   19045:	48 8b 01             	mov    (%rcx),%rax
   19048:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   1904c:	48 89 06             	mov    %rax,(%rsi)
   1904f:	48 89 56 08          	mov    %rdx,0x8(%rsi)
   19053:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   19057:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   1905b:	48 89 46 0c          	mov    %rax,0xc(%rsi)
   1905f:	48 89 56 14          	mov    %rdx,0x14(%rsi)
	    { }
   19063:	90                   	nop
   19064:	c9                   	leave
   19065:	c3                   	ret

0000000000019066 <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   19066:	55                   	push   %rbp
   19067:	48 89 e5             	mov    %rsp,%rbp
   1906a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1906e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19072:	5d                   	pop    %rbp
   19073:	c3                   	ret

0000000000019074 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   19074:	55                   	push   %rbp
   19075:	48 89 e5             	mov    %rsp,%rbp
   19078:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1907c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19080:	5d                   	pop    %rbp
   19081:	c3                   	ret

0000000000019082 <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   19082:	55                   	push   %rbp
   19083:	48 89 e5             	mov    %rsp,%rbp
   19086:	53                   	push   %rbx
   19087:	48 83 ec 18          	sub    $0x18,%rsp
   1908b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1908f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   19093:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19097:	48 89 c6             	mov    %rax,%rsi
   1909a:	bf 1c 00 00 00       	mov    $0x1c,%edi
   1909f:	e8 d4 d5 fe ff       	call   6678 <_ZnwmPv>
   190a4:	48 89 c3             	mov    %rax,%rbx
   190a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   190ab:	48 89 c7             	mov    %rax,%rdi
   190ae:	e8 c1 ff ff ff       	call   19074 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   190b3:	48 89 c1             	mov    %rax,%rcx
   190b6:	48 8b 01             	mov    (%rcx),%rax
   190b9:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   190bd:	48 89 03             	mov    %rax,(%rbx)
   190c0:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   190c4:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   190c8:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   190cc:	48 89 43 0c          	mov    %rax,0xc(%rbx)
   190d0:	48 89 53 14          	mov    %rdx,0x14(%rbx)
    }
   190d4:	90                   	nop
   190d5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   190d9:	c9                   	leave
   190da:	c3                   	ret
   190db:	90                   	nop

00000000000190dc <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>:
      _M_destroy() noexcept
   190dc:	55                   	push   %rbp
   190dd:	48 89 e5             	mov    %rsp,%rbp
   190e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_engaged = false;
   190e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   190e8:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
      }
   190ec:	90                   	nop
   190ed:	5d                   	pop    %rbp
   190ee:	c3                   	ret
   190ef:	90                   	nop

00000000000190f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   190f0:	55                   	push   %rbp
   190f1:	48 89 e5             	mov    %rsp,%rbp
   190f4:	53                   	push   %rbx
   190f5:	48 83 ec 18          	sub    $0x18,%rsp
   190f9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   190fd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
   19101:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19105:	48 89 c7             	mov    %rax,%rdi
   19108:	e8 cd e7 ff ff       	call   178da <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   1910d:	48 89 c3             	mov    %rax,%rbx
   19110:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19114:	48 89 c7             	mov    %rax,%rdi
   19117:	e8 7e 10 00 00       	call   1a19a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   1911c:	48 89 de             	mov    %rbx,%rsi
   1911f:	48 89 c7             	mov    %rax,%rdi
   19122:	e8 81 10 00 00       	call   1a1a8 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
   19127:	90                   	nop
   19128:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1912c:	c9                   	leave
   1912d:	c3                   	ret

000000000001912e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   1912e:	55                   	push   %rbp
   1912f:	48 89 e5             	mov    %rsp,%rbp
   19132:	48 83 ec 10          	sub    $0x10,%rsp
   19136:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1913a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
   1913e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19142:	48 89 c7             	mov    %rax,%rdi
   19145:	e8 50 10 00 00       	call   1a19a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   1914a:	48 89 c1             	mov    %rax,%rcx
   1914d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19151:	ba 01 00 00 00       	mov    $0x1,%edx
   19156:	48 89 c6             	mov    %rax,%rsi
   19159:	48 89 cf             	mov    %rcx,%rdi
   1915c:	e8 6d 10 00 00       	call   1a1ce <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
   19161:	90                   	nop
   19162:	c9                   	leave
   19163:	c3                   	ret

0000000000019164 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
   19164:	55                   	push   %rbp
   19165:	48 89 e5             	mov    %rsp,%rbp
   19168:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
   1916c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19170:	48 83 c0 08          	add    $0x8,%rax
   19174:	5d                   	pop    %rbp
   19175:	c3                   	ret

0000000000019176 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   19176:	55                   	push   %rbp
   19177:	48 89 e5             	mov    %rsp,%rbp
   1917a:	53                   	push   %rbx
   1917b:	48 83 ec 38          	sub    $0x38,%rsp
   1917f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   19183:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   19187:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1918b:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
   1918f:	eb 56                	jmp    191e7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
   19191:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   19195:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19199:	48 89 c7             	mov    %rax,%rdi
   1919c:	e8 e7 03 00 00       	call   19588 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   191a1:	48 89 c1             	mov    %rax,%rcx
   191a4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   191a8:	48 89 c2             	mov    %rax,%rdx
   191ab:	48 89 ce             	mov    %rcx,%rsi
   191ae:	48 89 df             	mov    %rbx,%rdi
   191b1:	e8 cc c8 ff ff       	call   15a82 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   191b6:	83 f0 01             	xor    $0x1,%eax
   191b9:	84 c0                	test   %al,%al
   191bb:	74 1a                	je     191d7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
   191bd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   191c1:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   191c5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   191c9:	48 89 c7             	mov    %rax,%rdi
   191cc:	e8 28 e6 ff ff       	call   177f9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   191d1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   191d5:	eb 10                	jmp    191e7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
   191d7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   191db:	48 89 c7             	mov    %rax,%rdi
   191de:	e8 04 e6 ff ff       	call   177e7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   191e3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
   191e7:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   191ec:	75 a3                	jne    19191 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
   191ee:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   191f2:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   191f6:	48 89 d6             	mov    %rdx,%rsi
   191f9:	48 89 c7             	mov    %rax,%rdi
   191fc:	e8 ff ec ff ff       	call   17f00 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   19201:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   19205:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   19209:	c9                   	leave
   1920a:	c3                   	ret
   1920b:	90                   	nop

000000000001920c <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
   1920c:	55                   	push   %rbp
   1920d:	48 89 e5             	mov    %rsp,%rbp
   19210:	48 83 ec 10          	sub    $0x10,%rsp
   19214:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
   19218:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1921c:	48 89 c7             	mov    %rax,%rdi
   1921f:	e8 d8 0f 00 00       	call   1a1fc <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   19224:	c9                   	leave
   19225:	c3                   	ret

0000000000019226 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
   19226:	55                   	push   %rbp
   19227:	48 89 e5             	mov    %rsp,%rbp
   1922a:	53                   	push   %rbx
   1922b:	48 83 ec 18          	sub    $0x18,%rsp
   1922f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19233:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
   19237:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1923b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1923f:	48 89 c7             	mov    %rax,%rdi
   19242:	e8 d9 e6 ff ff       	call   17920 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   19247:	48 89 c6             	mov    %rax,%rsi
   1924a:	48 89 df             	mov    %rbx,%rdi
   1924d:	e8 b8 0f 00 00       	call   1a20a <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
   19252:	90                   	nop
   19253:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   19257:	c9                   	leave
   19258:	c3                   	ret
   19259:	90                   	nop

000000000001925a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
   1925a:	55                   	push   %rbp
   1925b:	48 89 e5             	mov    %rsp,%rbp
   1925e:	41 54                	push   %r12
   19260:	53                   	push   %rbx
   19261:	48 83 ec 30          	sub    $0x30,%rsp
   19265:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   19269:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1926d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   19271:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
   19275:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19279:	48 89 c7             	mov    %rax,%rdi
   1927c:	e8 af 0f 00 00       	call   1a230 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
   19281:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
   19285:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   19289:	48 89 c7             	mov    %rax,%rdi
   1928c:	e8 ec e6 ff ff       	call   1797d <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   19291:	49 89 c4             	mov    %rax,%r12
   19294:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19298:	48 89 c7             	mov    %rax,%rdi
   1929b:	e8 cf e6 ff ff       	call   1796f <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   192a0:	48 89 c3             	mov    %rax,%rbx
   192a3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   192a7:	48 89 c7             	mov    %rax,%rdi
   192aa:	e8 b2 e6 ff ff       	call   17961 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   192af:	48 89 c2             	mov    %rax,%rdx
   192b2:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   192b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   192ba:	4d 89 e0             	mov    %r12,%r8
   192bd:	48 89 d9             	mov    %rbx,%rcx
   192c0:	48 89 c7             	mov    %rax,%rdi
   192c3:	e8 90 0f 00 00       	call   1a258 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
   192c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   192cc:	48 83 c4 30          	add    $0x30,%rsp
   192d0:	5b                   	pop    %rbx
   192d1:	41 5c                	pop    %r12
   192d3:	5d                   	pop    %rbp
   192d4:	c3                   	ret
   192d5:	90                   	nop

00000000000192d6 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
   192d6:	55                   	push   %rbp
   192d7:	48 89 e5             	mov    %rsp,%rbp
   192da:	48 83 ec 20          	sub    $0x20,%rsp
   192de:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
   192e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   192e6:	48 8b 10             	mov    (%rax),%rdx
   192e9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   192ed:	48 89 d6             	mov    %rdx,%rsi
   192f0:	48 89 c7             	mov    %rax,%rdi
   192f3:	e8 08 ec ff ff       	call   17f00 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   192f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   192fc:	c9                   	leave
   192fd:	c3                   	ret

00000000000192fe <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   192fe:	55                   	push   %rbp
   192ff:	48 89 e5             	mov    %rsp,%rbp
   19302:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
   19306:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1930a:	48 8b 40 28          	mov    0x28(%rax),%rax
   1930e:	5d                   	pop    %rbp
   1930f:	c3                   	ret

0000000000019310 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
   19310:	55                   	push   %rbp
   19311:	48 89 e5             	mov    %rsp,%rbp
   19314:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
   19318:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1931c:	48 83 c0 20          	add    $0x20,%rax
   19320:	5d                   	pop    %rbp
   19321:	c3                   	ret

0000000000019322 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
   19322:	55                   	push   %rbp
   19323:	48 89 e5             	mov    %rsp,%rbp
   19326:	48 83 ec 10          	sub    $0x10,%rsp
   1932a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
   1932e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19332:	48 89 c7             	mov    %rax,%rdi
   19335:	e8 4e 02 00 00       	call   19588 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   1933a:	c9                   	leave
   1933b:	c3                   	ret

000000000001933c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
      constexpr pair(const _T1& __a, const _T2& __b)
   1933c:	55                   	push   %rbp
   1933d:	48 89 e5             	mov    %rsp,%rbp
   19340:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19344:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19348:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
   1934c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19350:	48 8b 10             	mov    (%rax),%rdx
   19353:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19357:	48 89 10             	mov    %rdx,(%rax)
   1935a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1935e:	48 8b 10             	mov    (%rax),%rdx
   19361:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19365:	48 89 50 08          	mov    %rdx,0x8(%rax)
   19369:	90                   	nop
   1936a:	5d                   	pop    %rbp
   1936b:	c3                   	ret

000000000001936c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1936c:	55                   	push   %rbp
   1936d:	48 89 e5             	mov    %rsp,%rbp
   19370:	53                   	push   %rbx
   19371:	48 83 ec 78          	sub    $0x78,%rsp
   19375:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   19379:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
   1937d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   19381:	48 89 c7             	mov    %rax,%rdi
   19384:	e8 17 c6 ff ff       	call   159a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   19389:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
   1938d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   19391:	48 89 c7             	mov    %rax,%rdi
   19394:	e8 cb fd ff ff       	call   19164 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   19399:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
   1939d:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
   193a1:	eb 51                	jmp    193f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
   193a3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   193a7:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
   193ab:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   193af:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   193b3:	48 89 c7             	mov    %rax,%rdi
   193b6:	e8 cd 01 00 00       	call   19588 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   193bb:	48 89 c2             	mov    %rax,%rdx
   193be:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   193c2:	48 89 c6             	mov    %rax,%rsi
   193c5:	48 89 df             	mov    %rbx,%rdi
   193c8:	e8 b5 c6 ff ff       	call   15a82 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   193cd:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
   193d0:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   193d4:	74 0e                	je     193e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
   193d6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   193da:	48 89 c7             	mov    %rax,%rdi
   193dd:	e8 17 e4 ff ff       	call   177f9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   193e2:	eb 0c                	jmp    193f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
   193e4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   193e8:	48 89 c7             	mov    %rax,%rdi
   193eb:	e8 f7 e3 ff ff       	call   177e7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   193f0:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
   193f4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   193f8:	48 85 c0             	test   %rax,%rax
   193fb:	75 a6                	jne    193a3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
   193fd:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   19401:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   19405:	48 89 d6             	mov    %rdx,%rsi
   19408:	48 89 c7             	mov    %rax,%rdi
   1940b:	e8 f0 ea ff ff       	call   17f00 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
   19410:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   19414:	74 54                	je     1946a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
   19416:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1941a:	48 89 c7             	mov    %rax,%rdi
   1941d:	e8 08 0f 00 00       	call   1a32a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
   19422:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   19426:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   1942a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1942e:	48 89 d6             	mov    %rdx,%rsi
   19431:	48 89 c7             	mov    %rax,%rdi
   19434:	e8 ed c5 ff ff       	call   15a26 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   19439:	84 c0                	test   %al,%al
   1943b:	74 21                	je     1945e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
   1943d:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   19441:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   19445:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   19449:	48 89 ce             	mov    %rcx,%rsi
   1944c:	48 89 c7             	mov    %rax,%rdi
   1944f:	e8 00 0f 00 00       	call   1a354 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   19454:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   19458:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1945c:	eb 7d                	jmp    194db <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
   1945e:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   19462:	48 89 c7             	mov    %rax,%rdi
   19465:	e8 ce 00 00 00       	call   19538 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
   1946a:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   1946e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   19472:	48 89 c7             	mov    %rax,%rdi
   19475:	e8 a8 fe ff ff       	call   19322 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1947a:	48 89 c1             	mov    %rax,%rcx
   1947d:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   19481:	48 89 c2             	mov    %rax,%rdx
   19484:	48 89 ce             	mov    %rcx,%rsi
   19487:	48 89 df             	mov    %rbx,%rdi
   1948a:	e8 f3 c5 ff ff       	call   15a82 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1948f:	84 c0                	test   %al,%al
   19491:	74 21                	je     194b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
   19493:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   19497:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   1949b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1949f:	48 89 ce             	mov    %rcx,%rsi
   194a2:	48 89 c7             	mov    %rax,%rdi
   194a5:	e8 aa 0e 00 00       	call   1a354 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   194aa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   194ae:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   194b2:	eb 27                	jmp    194db <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
   194b4:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   194bb:	00 
   194bc:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   194c0:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   194c4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   194c8:	48 89 ce             	mov    %rcx,%rsi
   194cb:	48 89 c7             	mov    %rax,%rdi
   194ce:	e8 69 fe ff ff       	call   1933c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   194d3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   194d7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   194db:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   194df:	c9                   	leave
   194e0:	c3                   	ret
   194e1:	90                   	nop

00000000000194e2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
   194e2:	55                   	push   %rbp
   194e3:	48 89 e5             	mov    %rsp,%rbp
   194e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
   194ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   194ee:	48 83 c0 18          	add    $0x18,%rax
   194f2:	5d                   	pop    %rbp
   194f3:	c3                   	ret

00000000000194f4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   194f4:	55                   	push   %rbp
   194f5:	48 89 e5             	mov    %rsp,%rbp
   194f8:	48 83 ec 20          	sub    $0x20,%rsp
   194fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19500:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19504:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   19508:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1950c:	48 89 c7             	mov    %rax,%rdi
   1950f:	e8 84 0e 00 00       	call   1a398 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   19514:	48 8b 10             	mov    (%rax),%rdx
   19517:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1951b:	48 89 10             	mov    %rdx,(%rax)
   1951e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19522:	48 89 c7             	mov    %rax,%rdi
   19525:	e8 6e 0e 00 00       	call   1a398 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   1952a:	48 8b 10             	mov    (%rax),%rdx
   1952d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19531:	48 89 50 08          	mov    %rdx,0x8(%rax)
   19535:	90                   	nop
   19536:	c9                   	leave
   19537:	c3                   	ret

0000000000019538 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
   19538:	55                   	push   %rbp
   19539:	48 89 e5             	mov    %rsp,%rbp
   1953c:	48 83 ec 10          	sub    $0x10,%rsp
   19540:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
   19544:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19548:	48 8b 00             	mov    (%rax),%rax
   1954b:	48 89 c7             	mov    %rax,%rdi
   1954e:	e8 8d af fe ff       	call   44e0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   19553:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   19557:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   1955a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1955e:	c9                   	leave
   1955f:	c3                   	ret

0000000000019560 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   19560:	55                   	push   %rbp
   19561:	48 89 e5             	mov    %rsp,%rbp
   19564:	48 83 ec 10          	sub    $0x10,%rsp
   19568:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
   1956c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19570:	48 8b 00             	mov    (%rax),%rax
   19573:	48 89 c7             	mov    %rax,%rdi
   19576:	e8 25 ad fe ff       	call   42a0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
   1957b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1957f:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   19582:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   19586:	c9                   	leave
   19587:	c3                   	ret

0000000000019588 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
   19588:	55                   	push   %rbp
   19589:	48 89 e5             	mov    %rsp,%rbp
   1958c:	48 83 ec 20          	sub    $0x20,%rsp
   19590:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
   19594:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19598:	48 89 c7             	mov    %rax,%rdi
   1959b:	e8 06 0e 00 00       	call   1a3a6 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   195a0:	48 89 c2             	mov    %rax,%rdx
   195a3:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   195a7:	48 89 d6             	mov    %rdx,%rsi
   195aa:	48 89 c7             	mov    %rax,%rdi
   195ad:	e8 12 0e 00 00       	call   1a3c4 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
   195b2:	c9                   	leave
   195b3:	c3                   	ret

00000000000195b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   195b4:	55                   	push   %rbp
   195b5:	48 89 e5             	mov    %rsp,%rbp
   195b8:	41 54                	push   %r12
   195ba:	53                   	push   %rbx
   195bb:	48 83 ec 30          	sub    $0x30,%rsp
   195bf:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   195c3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   195c7:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   195cb:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
   195cf:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   195d4:	75 43                	jne    19619 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
   195d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   195da:	48 89 c7             	mov    %rax,%rdi
   195dd:	e8 82 fb ff ff       	call   19164 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   195e2:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   195e6:	74 31                	je     19619 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
   195e8:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   195ec:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   195f0:	48 89 c7             	mov    %rax,%rdi
   195f3:	e8 2a fd ff ff       	call   19322 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   195f8:	49 89 c4             	mov    %rax,%r12
   195fb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   195ff:	48 89 c7             	mov    %rax,%rdi
   19602:	e8 81 ff ff ff       	call   19588 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   19607:	4c 89 e2             	mov    %r12,%rdx
   1960a:	48 89 c6             	mov    %rax,%rsi
   1960d:	48 89 df             	mov    %rbx,%rdi
   19610:	e8 6d c4 ff ff       	call   15a82 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   19615:	84 c0                	test   %al,%al
   19617:	74 07                	je     19620 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
   19619:	b8 01 00 00 00       	mov    $0x1,%eax
   1961e:	eb 05                	jmp    19625 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
   19620:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
   19625:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
   19628:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1962c:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
   19630:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   19634:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   19638:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   1963c:	89 c7                	mov    %eax,%edi
   1963e:	e8 1d aa fe ff       	call   4060 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
   19643:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19647:	48 8b 40 28          	mov    0x28(%rax),%rax
   1964b:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1964f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19653:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
   19657:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1965b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1965f:	48 89 d6             	mov    %rdx,%rsi
   19662:	48 89 c7             	mov    %rax,%rdi
   19665:	e8 96 e8 ff ff       	call   17f00 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   1966a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
   1966e:	48 83 c4 30          	add    $0x30,%rsp
   19672:	5b                   	pop    %rbx
   19673:	41 5c                	pop    %r12
   19675:	5d                   	pop    %rbp
   19676:	c3                   	ret
   19677:	90                   	nop

0000000000019678 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   19678:	55                   	push   %rbp
   19679:	48 89 e5             	mov    %rsp,%rbp
   1967c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   19680:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19684:	5d                   	pop    %rbp
   19685:	c3                   	ret

0000000000019686 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   19686:	55                   	push   %rbp
   19687:	48 89 e5             	mov    %rsp,%rbp
   1968a:	48 83 ec 10          	sub    $0x10,%rsp
   1968e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19692:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   19696:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1969a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1969e:	48 89 d6             	mov    %rdx,%rsi
   196a1:	48 89 c7             	mov    %rax,%rdi
   196a4:	e8 51 29 ff ff       	call   bffa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
   196a9:	90                   	nop
   196aa:	c9                   	leave
   196ab:	c3                   	ret

00000000000196ac <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
   196ac:	55                   	push   %rbp
   196ad:	48 89 e5             	mov    %rsp,%rbp
   196b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   196b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  _M_start = __x._M_start;
   196b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   196bc:	48 8b 10             	mov    (%rax),%rdx
   196bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   196c3:	48 89 10             	mov    %rdx,(%rax)
	  _M_finish = __x._M_finish;
   196c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   196ca:	48 8b 50 08          	mov    0x8(%rax),%rdx
   196ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   196d2:	48 89 50 08          	mov    %rdx,0x8(%rax)
	  _M_end_of_storage = __x._M_end_of_storage;
   196d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   196da:	48 8b 50 10          	mov    0x10(%rax),%rdx
   196de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   196e2:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
   196e6:	90                   	nop
   196e7:	5d                   	pop    %rbp
   196e8:	c3                   	ret

00000000000196e9 <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
   196e9:	55                   	push   %rbp
   196ea:	48 89 e5             	mov    %rsp,%rbp
   196ed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   196f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   196f5:	5d                   	pop    %rbp
   196f6:	c3                   	ret

00000000000196f7 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   196f7:	55                   	push   %rbp
   196f8:	48 89 e5             	mov    %rsp,%rbp
   196fb:	48 83 ec 20          	sub    $0x20,%rsp
   196ff:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   19703:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1970a:	ff ff 0f 
   1970d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   19711:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19715:	48 89 c7             	mov    %rax,%rdi
   19718:	e8 b9 0c 00 00       	call   1a3d6 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>
   1971d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   19721:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   19725:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   19729:	48 89 d6             	mov    %rdx,%rsi
   1972c:	48 89 c7             	mov    %rax,%rdi
   1972f:	e8 89 c5 fe ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
   19734:	48 8b 00             	mov    (%rax),%rax
      }
   19737:	c9                   	leave
   19738:	c3                   	ret
   19739:	90                   	nop

000000000001973a <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1973a:	55                   	push   %rbp
   1973b:	48 89 e5             	mov    %rsp,%rbp
   1973e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   19742:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19746:	5d                   	pop    %rbp
   19747:	c3                   	ret

0000000000019748 <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   19748:	55                   	push   %rbp
   19749:	48 89 e5             	mov    %rsp,%rbp
   1974c:	48 83 ec 20          	sub    $0x20,%rsp
   19750:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19754:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   19758:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1975c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   19760:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19764:	48 89 d6             	mov    %rdx,%rsi
   19767:	48 89 c7             	mov    %rax,%rdi
   1976a:	e8 81 0c 00 00       	call   1a3f0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>
    }
   1976f:	c9                   	leave
   19770:	c3                   	ret

0000000000019771 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   19771:	55                   	push   %rbp
   19772:	48 89 e5             	mov    %rsp,%rbp
   19775:	48 83 ec 10          	sub    $0x10,%rsp
   19779:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1977d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   19781:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19785:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19789:	ba 00 00 00 00       	mov    $0x0,%edx
   1978e:	48 89 ce             	mov    %rcx,%rsi
   19791:	48 89 c7             	mov    %rax,%rdi
   19794:	e8 b5 0c 00 00       	call   1a44e <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>
   19799:	c9                   	leave
   1979a:	c3                   	ret

000000000001979b <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1979b:	55                   	push   %rbp
   1979c:	48 89 e5             	mov    %rsp,%rbp
   1979f:	41 54                	push   %r12
   197a1:	53                   	push   %rbx
   197a2:	48 83 ec 20          	sub    $0x20,%rsp
   197a6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   197aa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   197ae:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   197b2:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   197b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   197ba:	48 89 c7             	mov    %rax,%rdi
   197bd:	e8 ed 0c 00 00       	call   1a4af <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   197c2:	49 89 c4             	mov    %rax,%r12
   197c5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   197c9:	48 89 c7             	mov    %rax,%rdi
   197cc:	e8 de 0c 00 00       	call   1a4af <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   197d1:	48 89 c3             	mov    %rax,%rbx
   197d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   197d8:	48 89 c7             	mov    %rax,%rdi
   197db:	e8 cf 0c 00 00       	call   1a4af <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   197e0:	48 89 c7             	mov    %rax,%rdi
   197e3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   197e7:	48 89 c1             	mov    %rax,%rcx
   197ea:	4c 89 e2             	mov    %r12,%rdx
   197ed:	48 89 de             	mov    %rbx,%rsi
   197f0:	e8 c8 0c 00 00       	call   1a4bd <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   197f5:	48 83 c4 20          	add    $0x20,%rsp
   197f9:	5b                   	pop    %rbx
   197fa:	41 5c                	pop    %r12
   197fc:	5d                   	pop    %rbp
   197fd:	c3                   	ret

00000000000197fe <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   197fe:	55                   	push   %rbp
   197ff:	48 89 e5             	mov    %rsp,%rbp
   19802:	48 83 ec 10          	sub    $0x10,%rsp
   19806:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1980a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   1980e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19812:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19816:	48 89 d6             	mov    %rdx,%rsi
   19819:	48 89 c7             	mov    %rax,%rdi
   1981c:	e8 ff 0c 00 00       	call   1a520 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1ERKS1_>
   19821:	90                   	nop
   19822:	c9                   	leave
   19823:	c3                   	ret

0000000000019824 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   19824:	55                   	push   %rbp
   19825:	48 89 e5             	mov    %rsp,%rbp
   19828:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1982c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19830:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   19837:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1983b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   19842:	00 
   19843:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19847:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1984e:	00 
	{ }
   1984f:	90                   	nop
   19850:	5d                   	pop    %rbp
   19851:	c3                   	ret

0000000000019852 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   19852:	55                   	push   %rbp
   19853:	48 89 e5             	mov    %rsp,%rbp
   19856:	48 83 ec 20          	sub    $0x20,%rsp
   1985a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1985e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19862:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   19866:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1986a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1986e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19872:	48 89 ce             	mov    %rcx,%rsi
   19875:	48 89 c7             	mov    %rax,%rdi
   19878:	e8 b3 0c 00 00       	call   1a530 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE10deallocateEPS0_m>
   1987d:	90                   	nop
   1987e:	c9                   	leave
   1987f:	c3                   	ret

0000000000019880 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   19880:	55                   	push   %rbp
   19881:	48 89 e5             	mov    %rsp,%rbp
   19884:	48 83 ec 20          	sub    $0x20,%rsp
   19888:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1988c:	48 b8 e3 38 8e e3 38 	movabs $0xe38e38e38e38e3,%rax
   19893:	8e e3 00 
   19896:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1989a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1989e:	48 89 c7             	mov    %rax,%rdi
   198a1:	e8 c4 0c 00 00       	call   1a56a <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8max_sizeERKS1_>
   198a6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   198aa:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   198ae:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   198b2:	48 89 d6             	mov    %rdx,%rsi
   198b5:	48 89 c7             	mov    %rax,%rdi
   198b8:	e8 00 c4 fe ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
   198bd:	48 8b 00             	mov    (%rax),%rax
      }
   198c0:	c9                   	leave
   198c1:	c3                   	ret

00000000000198c2 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   198c2:	55                   	push   %rbp
   198c3:	48 89 e5             	mov    %rsp,%rbp
   198c6:	48 83 ec 10          	sub    $0x10,%rsp
   198ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   198ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   198d2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   198d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   198da:	ba 00 00 00 00       	mov    $0x0,%edx
   198df:	48 89 ce             	mov    %rcx,%rsi
   198e2:	48 89 c7             	mov    %rax,%rdi
   198e5:	e8 9a 0c 00 00       	call   1a584 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv>
   198ea:	c9                   	leave
   198eb:	c3                   	ret

00000000000198ec <_ZSt18uninitialized_copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   198ec:	55                   	push   %rbp
   198ed:	48 89 e5             	mov    %rsp,%rbp
   198f0:	48 83 ec 30          	sub    $0x30,%rsp
   198f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   198f8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   198fc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   19900:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   19904:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   19908:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1990c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   19910:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19914:	48 89 ce             	mov    %rcx,%rsi
   19917:	48 89 c7             	mov    %rax,%rdi
   1991a:	e8 d0 0c 00 00       	call   1a5ef <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK28VkGraphicsPipelineCreateInfoPS2_EET0_T_S7_S6_>
    }
   1991f:	c9                   	leave
   19920:	c3                   	ret

0000000000019921 <_ZNSt12_Destroy_auxILb1EE9__destroyIP28VkGraphicsPipelineCreateInfoEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   19921:	55                   	push   %rbp
   19922:	48 89 e5             	mov    %rsp,%rbp
   19925:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19929:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1992d:	90                   	nop
   1992e:	5d                   	pop    %rbp
   1992f:	c3                   	ret

0000000000019930 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   19930:	55                   	push   %rbp
   19931:	48 89 e5             	mov    %rsp,%rbp
   19934:	48 83 ec 20          	sub    $0x20,%rsp
   19938:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1993c:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   19943:	ff ff 0f 
   19946:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1994a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1994e:	48 89 c7             	mov    %rax,%rdi
   19951:	e8 c6 0c 00 00       	call   1a61c <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>
   19956:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1995a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1995e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   19962:	48 89 d6             	mov    %rdx,%rsi
   19965:	48 89 c7             	mov    %rax,%rdi
   19968:	e8 50 c3 fe ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
   1996d:	48 8b 00             	mov    (%rax),%rax
      }
   19970:	c9                   	leave
   19971:	c3                   	ret

0000000000019972 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   19972:	55                   	push   %rbp
   19973:	48 89 e5             	mov    %rsp,%rbp
   19976:	48 83 ec 10          	sub    $0x10,%rsp
   1997a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1997e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   19982:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19986:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1998a:	48 89 d6             	mov    %rdx,%rsi
   1998d:	48 89 c7             	mov    %rax,%rdi
   19990:	e8 f1 ea ff ff       	call   18486 <_ZNSaIP12VkPipeline_TEC1ERKS1_>
   19995:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19999:	48 89 c7             	mov    %rax,%rdi
   1999c:	e8 95 0c 00 00       	call   1a636 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   199a1:	90                   	nop
   199a2:	c9                   	leave
   199a3:	c3                   	ret

00000000000199a4 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   199a4:	55                   	push   %rbp
   199a5:	48 89 e5             	mov    %rsp,%rbp
   199a8:	48 83 ec 10          	sub    $0x10,%rsp
   199ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   199b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   199b4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   199b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   199bc:	48 89 d6             	mov    %rdx,%rsi
   199bf:	48 89 c7             	mov    %rax,%rdi
   199c2:	e8 9d 0c 00 00       	call   1a664 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>
   199c7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   199cb:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   199ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   199d2:	48 8b 10             	mov    (%rax),%rdx
   199d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   199d9:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   199dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   199e1:	48 8b 00             	mov    (%rax),%rax
   199e4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   199e8:	48 c1 e2 03          	shl    $0x3,%rdx
   199ec:	48 01 c2             	add    %rax,%rdx
   199ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   199f3:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   199f7:	90                   	nop
   199f8:	c9                   	leave
   199f9:	c3                   	ret

00000000000199fa <_ZSt27__uninitialized_default_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   199fa:	55                   	push   %rbp
   199fb:	48 89 e5             	mov    %rsp,%rbp
   199fe:	48 83 ec 20          	sub    $0x20,%rsp
   19a02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19a06:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19a0a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   19a0e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19a12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19a16:	48 89 d6             	mov    %rdx,%rsi
   19a19:	48 89 c7             	mov    %rax,%rdi
   19a1c:	e8 76 0c 00 00       	call   1a697 <_ZSt25__uninitialized_default_nIPP12VkPipeline_TmET_S3_T0_>
   19a21:	c9                   	leave
   19a22:	c3                   	ret
   19a23:	90                   	nop

0000000000019a24 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   19a24:	55                   	push   %rbp
   19a25:	48 89 e5             	mov    %rsp,%rbp
   19a28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19a2c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19a30:	90                   	nop
   19a31:	5d                   	pop    %rbp
   19a32:	c3                   	ret

0000000000019a33 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   19a33:	55                   	push   %rbp
   19a34:	48 89 e5             	mov    %rsp,%rbp
   19a37:	48 83 ec 20          	sub    $0x20,%rsp
   19a3b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19a3f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19a43:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   19a47:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19a4b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19a4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19a53:	48 89 ce             	mov    %rcx,%rsi
   19a56:	48 89 c7             	mov    %rax,%rdi
   19a59:	e8 62 0c 00 00       	call   1a6c0 <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>
   19a5e:	90                   	nop
   19a5f:	c9                   	leave
   19a60:	c3                   	ret

0000000000019a61 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>:
   19a61:	55                   	push   %rbp
   19a62:	48 89 e5             	mov    %rsp,%rbp
   19a65:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19a69:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19a6d:	90                   	nop
   19a6e:	5d                   	pop    %rbp
   19a6f:	c3                   	ret

0000000000019a70 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   19a70:	55                   	push   %rbp
   19a71:	48 89 e5             	mov    %rsp,%rbp
   19a74:	48 83 ec 20          	sub    $0x20,%rsp
   19a78:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   19a7c:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   19a83:	ff ff 0f 
   19a86:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   19a8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19a8e:	48 89 c7             	mov    %rax,%rdi
   19a91:	e8 5b 0c 00 00       	call   1a6f1 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8max_sizeERKS2_>
   19a96:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   19a9a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   19a9e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   19aa2:	48 89 d6             	mov    %rdx,%rsi
   19aa5:	48 89 c7             	mov    %rax,%rdi
   19aa8:	e8 10 c2 fe ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
   19aad:	48 8b 00             	mov    (%rax),%rax
      }
   19ab0:	c9                   	leave
   19ab1:	c3                   	ret

0000000000019ab2 <_ZNKSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   19ab2:	55                   	push   %rbp
   19ab3:	48 89 e5             	mov    %rsp,%rbp
   19ab6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   19aba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19abe:	5d                   	pop    %rbp
   19abf:	c3                   	ret

0000000000019ac0 <_ZSt25__uninitialized_default_nIPP15VkFramebuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   19ac0:	55                   	push   %rbp
   19ac1:	48 89 e5             	mov    %rsp,%rbp
   19ac4:	48 83 ec 20          	sub    $0x20,%rsp
   19ac8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19acc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   19ad0:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   19ad4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   19ad8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19adc:	48 89 d6             	mov    %rdx,%rsi
   19adf:	48 89 c7             	mov    %rax,%rdi
   19ae2:	e8 24 0c 00 00       	call   1a70b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_>
    }
   19ae7:	c9                   	leave
   19ae8:	c3                   	ret

0000000000019ae9 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   19ae9:	55                   	push   %rbp
   19aea:	48 89 e5             	mov    %rsp,%rbp
   19aed:	48 83 ec 10          	sub    $0x10,%rsp
   19af1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19af5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   19af9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19afd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b01:	ba 00 00 00 00       	mov    $0x0,%edx
   19b06:	48 89 ce             	mov    %rcx,%rsi
   19b09:	48 89 c7             	mov    %rax,%rdi
   19b0c:	e8 57 0c 00 00       	call   1a768 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv>
   19b11:	c9                   	leave
   19b12:	c3                   	ret

0000000000019b13 <_ZSt12__relocate_aIPP15VkFramebuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   19b13:	55                   	push   %rbp
   19b14:	48 89 e5             	mov    %rsp,%rbp
   19b17:	41 54                	push   %r12
   19b19:	53                   	push   %rbx
   19b1a:	48 83 ec 20          	sub    $0x20,%rsp
   19b1e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19b22:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19b26:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   19b2a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   19b2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19b32:	48 89 c7             	mov    %rax,%rdi
   19b35:	e8 8f 0c 00 00       	call   1a7c9 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   19b3a:	49 89 c4             	mov    %rax,%r12
   19b3d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19b41:	48 89 c7             	mov    %rax,%rdi
   19b44:	e8 80 0c 00 00       	call   1a7c9 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   19b49:	48 89 c3             	mov    %rax,%rbx
   19b4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19b50:	48 89 c7             	mov    %rax,%rdi
   19b53:	e8 71 0c 00 00       	call   1a7c9 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   19b58:	48 89 c7             	mov    %rax,%rdi
   19b5b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19b5f:	48 89 c1             	mov    %rax,%rcx
   19b62:	4c 89 e2             	mov    %r12,%rdx
   19b65:	48 89 de             	mov    %rbx,%rsi
   19b68:	e8 6a 0c 00 00       	call   1a7d7 <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   19b6d:	48 83 c4 20          	add    $0x20,%rsp
   19b71:	5b                   	pop    %rbx
   19b72:	41 5c                	pop    %r12
   19b74:	5d                   	pop    %rbp
   19b75:	c3                   	ret

0000000000019b76 <_ZNSaIP13VkImageView_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   19b76:	55                   	push   %rbp
   19b77:	48 89 e5             	mov    %rsp,%rbp
   19b7a:	48 83 ec 10          	sub    $0x10,%rsp
   19b7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19b82:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   19b86:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19b8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b8e:	48 89 d6             	mov    %rdx,%rsi
   19b91:	48 89 c7             	mov    %rax,%rdi
   19b94:	e8 a1 0c 00 00       	call   1a83a <_ZNSt15__new_allocatorIP13VkImageView_TEC1ERKS2_>
   19b99:	90                   	nop
   19b9a:	c9                   	leave
   19b9b:	c3                   	ret

0000000000019b9c <_ZSt18uninitialized_copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   19b9c:	55                   	push   %rbp
   19b9d:	48 89 e5             	mov    %rsp,%rbp
   19ba0:	48 83 ec 30          	sub    $0x30,%rsp
   19ba4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19ba8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19bac:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   19bb0:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   19bb4:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   19bb8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   19bbc:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   19bc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19bc4:	48 89 ce             	mov    %rcx,%rsi
   19bc7:	48 89 c7             	mov    %rax,%rdi
   19bca:	e8 7a 0c 00 00       	call   1a849 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkImageView_TPS3_EET0_T_S8_S7_>
    }
   19bcf:	c9                   	leave
   19bd0:	c3                   	ret

0000000000019bd1 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>:
   19bd1:	55                   	push   %rbp
   19bd2:	48 89 e5             	mov    %rsp,%rbp
   19bd5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19bd9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19bdd:	90                   	nop
   19bde:	5d                   	pop    %rbp
   19bdf:	c3                   	ret

0000000000019be0 <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   19be0:	55                   	push   %rbp
   19be1:	48 89 e5             	mov    %rsp,%rbp
   19be4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   19be8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19bec:	5d                   	pop    %rbp
   19bed:	c3                   	ret

0000000000019bee <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   19bee:	55                   	push   %rbp
   19bef:	48 89 e5             	mov    %rsp,%rbp
   19bf2:	48 83 ec 10          	sub    $0x10,%rsp
   19bf6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19bfa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   19bfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19c02:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19c06:	48 89 d6             	mov    %rdx,%rsi
   19c09:	48 89 c7             	mov    %rax,%rdi
   19c0c:	e8 05 ce fe ff       	call   6a16 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>
   19c11:	90                   	nop
   19c12:	c9                   	leave
   19c13:	c3                   	ret

0000000000019c14 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
   19c14:	55                   	push   %rbp
   19c15:	48 89 e5             	mov    %rsp,%rbp
   19c18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19c1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  _M_start = __x._M_start;
   19c20:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19c24:	48 8b 10             	mov    (%rax),%rdx
   19c27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19c2b:	48 89 10             	mov    %rdx,(%rax)
	  _M_finish = __x._M_finish;
   19c2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19c32:	48 8b 50 08          	mov    0x8(%rax),%rdx
   19c36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19c3a:	48 89 50 08          	mov    %rdx,0x8(%rax)
	  _M_end_of_storage = __x._M_end_of_storage;
   19c3e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19c42:	48 8b 50 10          	mov    0x10(%rax),%rdx
   19c46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19c4a:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
   19c4e:	90                   	nop
   19c4f:	5d                   	pop    %rbp
   19c50:	c3                   	ret

0000000000019c51 <_ZSt4moveIRSaIP17VkCommandBuffer_TEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
   19c51:	55                   	push   %rbp
   19c52:	48 89 e5             	mov    %rsp,%rbp
   19c55:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   19c59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19c5d:	5d                   	pop    %rbp
   19c5e:	c3                   	ret

0000000000019c5f <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   19c5f:	55                   	push   %rbp
   19c60:	48 89 e5             	mov    %rsp,%rbp
   19c63:	48 83 ec 20          	sub    $0x20,%rsp
   19c67:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   19c6b:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   19c72:	ff ff 0f 
   19c75:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   19c79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19c7d:	48 89 c7             	mov    %rax,%rdi
   19c80:	e8 f1 0b 00 00       	call   1a876 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8max_sizeERKS2_>
   19c85:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   19c89:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   19c8d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   19c91:	48 89 d6             	mov    %rdx,%rsi
   19c94:	48 89 c7             	mov    %rax,%rdi
   19c97:	e8 21 c0 fe ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
   19c9c:	48 8b 00             	mov    (%rax),%rax
      }
   19c9f:	c9                   	leave
   19ca0:	c3                   	ret
   19ca1:	90                   	nop

0000000000019ca2 <_ZNKSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   19ca2:	55                   	push   %rbp
   19ca3:	48 89 e5             	mov    %rsp,%rbp
   19ca6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   19caa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19cae:	5d                   	pop    %rbp
   19caf:	c3                   	ret

0000000000019cb0 <_ZSt25__uninitialized_default_nIPP13VkSemaphore_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   19cb0:	55                   	push   %rbp
   19cb1:	48 89 e5             	mov    %rsp,%rbp
   19cb4:	48 83 ec 20          	sub    $0x20,%rsp
   19cb8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19cbc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   19cc0:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   19cc4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   19cc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19ccc:	48 89 d6             	mov    %rdx,%rsi
   19ccf:	48 89 c7             	mov    %rax,%rdi
   19cd2:	e8 b9 0b 00 00       	call   1a890 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkSemaphore_TmEET_S5_T0_>
    }
   19cd7:	c9                   	leave
   19cd8:	c3                   	ret

0000000000019cd9 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   19cd9:	55                   	push   %rbp
   19cda:	48 89 e5             	mov    %rsp,%rbp
   19cdd:	48 83 ec 10          	sub    $0x10,%rsp
   19ce1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19ce5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   19ce9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19ced:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19cf1:	ba 00 00 00 00       	mov    $0x0,%edx
   19cf6:	48 89 ce             	mov    %rcx,%rsi
   19cf9:	48 89 c7             	mov    %rax,%rdi
   19cfc:	e8 ed 0b 00 00       	call   1a8ee <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv>
   19d01:	c9                   	leave
   19d02:	c3                   	ret

0000000000019d03 <_ZSt12__relocate_aIPP13VkSemaphore_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   19d03:	55                   	push   %rbp
   19d04:	48 89 e5             	mov    %rsp,%rbp
   19d07:	41 54                	push   %r12
   19d09:	53                   	push   %rbx
   19d0a:	48 83 ec 20          	sub    $0x20,%rsp
   19d0e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19d12:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19d16:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   19d1a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   19d1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19d22:	48 89 c7             	mov    %rax,%rdi
   19d25:	e8 25 0c 00 00       	call   1a94f <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   19d2a:	49 89 c4             	mov    %rax,%r12
   19d2d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19d31:	48 89 c7             	mov    %rax,%rdi
   19d34:	e8 16 0c 00 00       	call   1a94f <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   19d39:	48 89 c3             	mov    %rax,%rbx
   19d3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19d40:	48 89 c7             	mov    %rax,%rdi
   19d43:	e8 07 0c 00 00       	call   1a94f <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   19d48:	48 89 c7             	mov    %rax,%rdi
   19d4b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19d4f:	48 89 c1             	mov    %rax,%rcx
   19d52:	4c 89 e2             	mov    %r12,%rdx
   19d55:	48 89 de             	mov    %rbx,%rsi
   19d58:	e8 00 0c 00 00       	call   1a95d <_ZSt14__relocate_a_1IP13VkSemaphore_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   19d5d:	48 83 c4 20          	add    $0x20,%rsp
   19d61:	5b                   	pop    %rbx
   19d62:	41 5c                	pop    %r12
   19d64:	5d                   	pop    %rbp
   19d65:	c3                   	ret

0000000000019d66 <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   19d66:	55                   	push   %rbp
   19d67:	48 89 e5             	mov    %rsp,%rbp
   19d6a:	48 83 ec 20          	sub    $0x20,%rsp
   19d6e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   19d72:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   19d79:	ff ff 0f 
   19d7c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   19d80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19d84:	48 89 c7             	mov    %rax,%rdi
   19d87:	e8 34 0c 00 00       	call   1a9c0 <_ZNSt16allocator_traitsISaIP9VkFence_TEE8max_sizeERKS2_>
   19d8c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   19d90:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   19d94:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   19d98:	48 89 d6             	mov    %rdx,%rsi
   19d9b:	48 89 c7             	mov    %rax,%rdi
   19d9e:	e8 1a bf fe ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
   19da3:	48 8b 00             	mov    (%rax),%rax
      }
   19da6:	c9                   	leave
   19da7:	c3                   	ret

0000000000019da8 <_ZNKSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   19da8:	55                   	push   %rbp
   19da9:	48 89 e5             	mov    %rsp,%rbp
   19dac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   19db0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19db4:	5d                   	pop    %rbp
   19db5:	c3                   	ret

0000000000019db6 <_ZSt25__uninitialized_default_nIPP9VkFence_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   19db6:	55                   	push   %rbp
   19db7:	48 89 e5             	mov    %rsp,%rbp
   19dba:	48 83 ec 20          	sub    $0x20,%rsp
   19dbe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19dc2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   19dc6:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   19dca:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   19dce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19dd2:	48 89 d6             	mov    %rdx,%rsi
   19dd5:	48 89 c7             	mov    %rax,%rdi
   19dd8:	e8 fd 0b 00 00       	call   1a9da <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkFence_TmEET_S5_T0_>
    }
   19ddd:	c9                   	leave
   19dde:	c3                   	ret

0000000000019ddf <_ZNSt16allocator_traitsISaIP9VkFence_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   19ddf:	55                   	push   %rbp
   19de0:	48 89 e5             	mov    %rsp,%rbp
   19de3:	48 83 ec 10          	sub    $0x10,%rsp
   19de7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19deb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   19def:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19df3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19df7:	ba 00 00 00 00       	mov    $0x0,%edx
   19dfc:	48 89 ce             	mov    %rcx,%rsi
   19dff:	48 89 c7             	mov    %rax,%rdi
   19e02:	e8 31 0c 00 00       	call   1aa38 <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv>
   19e07:	c9                   	leave
   19e08:	c3                   	ret

0000000000019e09 <_ZSt12__relocate_aIPP9VkFence_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   19e09:	55                   	push   %rbp
   19e0a:	48 89 e5             	mov    %rsp,%rbp
   19e0d:	41 54                	push   %r12
   19e0f:	53                   	push   %rbx
   19e10:	48 83 ec 20          	sub    $0x20,%rsp
   19e14:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19e18:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19e1c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   19e20:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   19e24:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19e28:	48 89 c7             	mov    %rax,%rdi
   19e2b:	e8 69 0c 00 00       	call   1aa99 <_ZSt12__niter_baseIPP9VkFence_TET_S3_>
   19e30:	49 89 c4             	mov    %rax,%r12
   19e33:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19e37:	48 89 c7             	mov    %rax,%rdi
   19e3a:	e8 5a 0c 00 00       	call   1aa99 <_ZSt12__niter_baseIPP9VkFence_TET_S3_>
   19e3f:	48 89 c3             	mov    %rax,%rbx
   19e42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19e46:	48 89 c7             	mov    %rax,%rdi
   19e49:	e8 4b 0c 00 00       	call   1aa99 <_ZSt12__niter_baseIPP9VkFence_TET_S3_>
   19e4e:	48 89 c7             	mov    %rax,%rdi
   19e51:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19e55:	48 89 c1             	mov    %rax,%rcx
   19e58:	4c 89 e2             	mov    %r12,%rdx
   19e5b:	48 89 de             	mov    %rbx,%rsi
   19e5e:	e8 44 0c 00 00       	call   1aaa7 <_ZSt14__relocate_a_1IP9VkFence_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   19e63:	48 83 c4 20          	add    $0x20,%rsp
   19e67:	5b                   	pop    %rbx
   19e68:	41 5c                	pop    %r12
   19e6a:	5d                   	pop    %rbp
   19e6b:	c3                   	ret

0000000000019e6c <_ZNSaIP13VkSemaphore_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   19e6c:	55                   	push   %rbp
   19e6d:	48 89 e5             	mov    %rsp,%rbp
   19e70:	48 83 ec 10          	sub    $0x10,%rsp
   19e74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19e78:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   19e7c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19e80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19e84:	48 89 d6             	mov    %rdx,%rsi
   19e87:	48 89 c7             	mov    %rax,%rdi
   19e8a:	e8 7b 0c 00 00       	call   1ab0a <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1ERKS2_>
   19e8f:	90                   	nop
   19e90:	c9                   	leave
   19e91:	c3                   	ret

0000000000019e92 <_ZSt18uninitialized_copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   19e92:	55                   	push   %rbp
   19e93:	48 89 e5             	mov    %rsp,%rbp
   19e96:	48 83 ec 30          	sub    $0x30,%rsp
   19e9a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19e9e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19ea2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   19ea6:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   19eaa:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   19eae:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   19eb2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   19eb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19eba:	48 89 ce             	mov    %rcx,%rsi
   19ebd:	48 89 c7             	mov    %rax,%rdi
   19ec0:	e8 54 0c 00 00       	call   1ab19 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkSemaphore_TPS3_EET0_T_S8_S7_>
    }
   19ec5:	c9                   	leave
   19ec6:	c3                   	ret

0000000000019ec7 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkSemaphore_TEEvT_S5_>:
   19ec7:	55                   	push   %rbp
   19ec8:	48 89 e5             	mov    %rsp,%rbp
   19ecb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19ecf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19ed3:	90                   	nop
   19ed4:	5d                   	pop    %rbp
   19ed5:	c3                   	ret

0000000000019ed6 <_ZNSaIjEC1ERKS_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   19ed6:	55                   	push   %rbp
   19ed7:	48 89 e5             	mov    %rsp,%rbp
   19eda:	48 83 ec 10          	sub    $0x10,%rsp
   19ede:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19ee2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   19ee6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19eea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19eee:	48 89 d6             	mov    %rdx,%rsi
   19ef1:	48 89 c7             	mov    %rax,%rdi
   19ef4:	e8 4d 0c 00 00       	call   1ab46 <_ZNSt15__new_allocatorIjEC1ERKS0_>
   19ef9:	90                   	nop
   19efa:	c9                   	leave
   19efb:	c3                   	ret

0000000000019efc <_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   19efc:	55                   	push   %rbp
   19efd:	48 89 e5             	mov    %rsp,%rbp
   19f00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   19f04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19f08:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   19f0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19f13:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   19f1a:	00 
   19f1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19f1f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   19f26:	00 
	{ }
   19f27:	90                   	nop
   19f28:	5d                   	pop    %rbp
   19f29:	c3                   	ret

0000000000019f2a <_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   19f2a:	55                   	push   %rbp
   19f2b:	48 89 e5             	mov    %rsp,%rbp
   19f2e:	48 83 ec 20          	sub    $0x20,%rsp
   19f32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19f36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19f3a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   19f3e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19f42:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19f46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19f4a:	48 89 ce             	mov    %rcx,%rsi
   19f4d:	48 89 c7             	mov    %rax,%rdi
   19f50:	e8 01 0c 00 00       	call   1ab56 <_ZNSt15__new_allocatorIjE10deallocateEPjm>
   19f55:	90                   	nop
   19f56:	c9                   	leave
   19f57:	c3                   	ret

0000000000019f58 <_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   19f58:	55                   	push   %rbp
   19f59:	48 89 e5             	mov    %rsp,%rbp
   19f5c:	48 83 ec 20          	sub    $0x20,%rsp
   19f60:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   19f64:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   19f6b:	ff ff 1f 
   19f6e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   19f72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19f76:	48 89 c7             	mov    %rax,%rdi
   19f79:	e8 09 0c 00 00       	call   1ab87 <_ZNSt16allocator_traitsISaIjEE8max_sizeERKS0_>
   19f7e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   19f82:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   19f86:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   19f8a:	48 89 d6             	mov    %rdx,%rsi
   19f8d:	48 89 c7             	mov    %rax,%rdi
   19f90:	e8 28 bd fe ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
   19f95:	48 8b 00             	mov    (%rax),%rax
      }
   19f98:	c9                   	leave
   19f99:	c3                   	ret

0000000000019f9a <_ZNSt16allocator_traitsISaIjEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
   19f9a:	55                   	push   %rbp
   19f9b:	48 89 e5             	mov    %rsp,%rbp
   19f9e:	48 83 ec 10          	sub    $0x10,%rsp
   19fa2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19fa6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   19faa:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19fae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19fb2:	ba 00 00 00 00       	mov    $0x0,%edx
   19fb7:	48 89 ce             	mov    %rcx,%rsi
   19fba:	48 89 c7             	mov    %rax,%rdi
   19fbd:	e8 e0 0b 00 00       	call   1aba2 <_ZNSt15__new_allocatorIjE8allocateEmPKv>
   19fc2:	c9                   	leave
   19fc3:	c3                   	ret

0000000000019fc4 <_ZSt18uninitialized_copyIPKjPjET0_T_S4_S3_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   19fc4:	55                   	push   %rbp
   19fc5:	48 89 e5             	mov    %rsp,%rbp
   19fc8:	48 83 ec 30          	sub    $0x30,%rsp
   19fcc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19fd0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19fd4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   19fd8:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   19fdc:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   19fe0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   19fe4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   19fe8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19fec:	48 89 ce             	mov    %rcx,%rsi
   19fef:	48 89 c7             	mov    %rax,%rdi
   19ff2:	e8 0c 0c 00 00       	call   1ac03 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKjPjEET0_T_S6_S5_>
    }
   19ff7:	c9                   	leave
   19ff8:	c3                   	ret

0000000000019ff9 <_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_>:
   19ff9:	55                   	push   %rbp
   19ffa:	48 89 e5             	mov    %rsp,%rbp
   19ffd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a001:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a005:	90                   	nop
   1a006:	5d                   	pop    %rbp
   1a007:	c3                   	ret

000000000001a008 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1a008:	55                   	push   %rbp
   1a009:	48 89 e5             	mov    %rsp,%rbp
   1a00c:	48 83 ec 20          	sub    $0x20,%rsp
   1a010:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a014:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a018:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1a01c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a020:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a027:	00 
   1a028:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a02c:	48 89 d6             	mov    %rdx,%rsi
   1a02f:	48 89 c7             	mov    %rax,%rdi
   1a032:	e8 69 a4 fe ff       	call   44a0 <_ZdlPvm@plt>
      }
   1a037:	c9                   	leave
   1a038:	c3                   	ret
   1a039:	90                   	nop

000000000001a03a <_ZNSt15__new_allocatorIP15VkFramebuffer_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1a03a:	55                   	push   %rbp
   1a03b:	48 89 e5             	mov    %rsp,%rbp
   1a03e:	48 83 ec 20          	sub    $0x20,%rsp
   1a042:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a046:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a04a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1a04e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a052:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a059:	00 
   1a05a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a05e:	48 89 d6             	mov    %rdx,%rsi
   1a061:	48 89 c7             	mov    %rax,%rdi
   1a064:	e8 37 a4 fe ff       	call   44a0 <_ZdlPvm@plt>
      }
   1a069:	c9                   	leave
   1a06a:	c3                   	ret

000000000001a06b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP15VkFramebuffer_TEEvT_S5_>:
   1a06b:	55                   	push   %rbp
   1a06c:	48 89 e5             	mov    %rsp,%rbp
   1a06f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a073:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a077:	90                   	nop
   1a078:	5d                   	pop    %rbp
   1a079:	c3                   	ret

000000000001a07a <_ZNSt15__new_allocatorIP13VkSemaphore_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1a07a:	55                   	push   %rbp
   1a07b:	48 89 e5             	mov    %rsp,%rbp
   1a07e:	48 83 ec 20          	sub    $0x20,%rsp
   1a082:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a086:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a08a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1a08e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a092:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a099:	00 
   1a09a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a09e:	48 89 d6             	mov    %rdx,%rsi
   1a0a1:	48 89 c7             	mov    %rax,%rdi
   1a0a4:	e8 f7 a3 fe ff       	call   44a0 <_ZdlPvm@plt>
      }
   1a0a9:	c9                   	leave
   1a0aa:	c3                   	ret
   1a0ab:	90                   	nop

000000000001a0ac <_ZNSt15__new_allocatorIP9VkFence_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1a0ac:	55                   	push   %rbp
   1a0ad:	48 89 e5             	mov    %rsp,%rbp
   1a0b0:	48 83 ec 20          	sub    $0x20,%rsp
   1a0b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a0b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a0bc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1a0c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a0c4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a0cb:	00 
   1a0cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a0d0:	48 89 d6             	mov    %rdx,%rsi
   1a0d3:	48 89 c7             	mov    %rax,%rdi
   1a0d6:	e8 c5 a3 fe ff       	call   44a0 <_ZdlPvm@plt>
      }
   1a0db:	c9                   	leave
   1a0dc:	c3                   	ret

000000000001a0dd <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkFence_TEEvT_S5_>:
   1a0dd:	55                   	push   %rbp
   1a0de:	48 89 e5             	mov    %rsp,%rbp
   1a0e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a0e5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a0e9:	90                   	nop
   1a0ea:	5d                   	pop    %rbp
   1a0eb:	c3                   	ret

000000000001a0ec <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   1a0ec:	55                   	push   %rbp
   1a0ed:	48 89 e5             	mov    %rsp,%rbp
   1a0f0:	48 83 ec 20          	sub    $0x20,%rsp
   1a0f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a0f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a0fc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   1a100:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a104:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a108:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a10c:	48 89 ce             	mov    %rcx,%rsi
   1a10f:	48 89 c7             	mov    %rax,%rdi
   1a112:	e8 19 0b 00 00       	call   1ac30 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
   1a117:	c9                   	leave
   1a118:	c3                   	ret
   1a119:	90                   	nop

000000000001a11a <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1a11a:	55                   	push   %rbp
   1a11b:	48 89 e5             	mov    %rsp,%rbp
   1a11e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1a122:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a126:	5d                   	pop    %rbp
   1a127:	c3                   	ret

000000000001a128 <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
   1a128:	55                   	push   %rbp
   1a129:	48 89 e5             	mov    %rsp,%rbp
   1a12c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a134:	5d                   	pop    %rbp
   1a135:	c3                   	ret

000000000001a136 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   1a136:	55                   	push   %rbp
   1a137:	48 89 e5             	mov    %rsp,%rbp
   1a13a:	48 83 ec 30          	sub    $0x30,%rsp
   1a13e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a142:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a146:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1a14a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   1a14e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a152:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1a156:	48 c1 f8 03          	sar    $0x3,%rax
   1a15a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   1a15e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1a163:	7e 1f                	jle    1a184 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   1a165:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a169:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a170:	00 
   1a171:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1a175:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a179:	48 89 ce             	mov    %rcx,%rsi
   1a17c:	48 89 c7             	mov    %rax,%rdi
   1a17f:	e8 cc a6 fe ff       	call   4850 <memmove@plt>
      return __result + __count;
   1a184:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a188:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a18f:	00 
   1a190:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a194:	48 01 d0             	add    %rdx,%rax
    }
   1a197:	c9                   	leave
   1a198:	c3                   	ret
   1a199:	90                   	nop

000000000001a19a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
   1a19a:	55                   	push   %rbp
   1a19b:	48 89 e5             	mov    %rsp,%rbp
   1a19e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1a1a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a1a6:	5d                   	pop    %rbp
   1a1a7:	c3                   	ret

000000000001a1a8 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   1a1a8:	55                   	push   %rbp
   1a1a9:	48 89 e5             	mov    %rsp,%rbp
   1a1ac:	48 83 ec 10          	sub    $0x10,%rsp
   1a1b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a1b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
   1a1b8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a1bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a1c0:	48 89 d6             	mov    %rdx,%rsi
   1a1c3:	48 89 c7             	mov    %rax,%rdi
   1a1c6:	e8 cd 0a 00 00       	call   1ac98 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>
	}
   1a1cb:	90                   	nop
   1a1cc:	c9                   	leave
   1a1cd:	c3                   	ret

000000000001a1ce <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1a1ce:	55                   	push   %rbp
   1a1cf:	48 89 e5             	mov    %rsp,%rbp
   1a1d2:	48 83 ec 20          	sub    $0x20,%rsp
   1a1d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a1da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a1de:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   1a1e2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a1e6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a1ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a1ee:	48 89 ce             	mov    %rcx,%rsi
   1a1f1:	48 89 c7             	mov    %rax,%rdi
   1a1f4:	e8 bf 0a 00 00       	call   1acb8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
   1a1f9:	90                   	nop
   1a1fa:	c9                   	leave
   1a1fb:	c3                   	ret

000000000001a1fc <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
   1a1fc:	55                   	push   %rbp
   1a1fd:	48 89 e5             	mov    %rsp,%rbp
   1a200:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
   1a204:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a208:	5d                   	pop    %rbp
   1a209:	c3                   	ret

000000000001a20a <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
   1a20a:	55                   	push   %rbp
   1a20b:	48 89 e5             	mov    %rsp,%rbp
   1a20e:	48 83 ec 10          	sub    $0x10,%rsp
   1a212:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a216:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
   1a21a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a21e:	48 89 c7             	mov    %rax,%rdi
   1a221:	e8 fa d6 ff ff       	call   17920 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   1a226:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1a22a:	48 89 02             	mov    %rax,(%rdx)
   1a22d:	90                   	nop
   1a22e:	c9                   	leave
   1a22f:	c3                   	ret

000000000001a230 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
   1a230:	55                   	push   %rbp
   1a231:	48 89 e5             	mov    %rsp,%rbp
   1a234:	48 83 ec 10          	sub    $0x10,%rsp
   1a238:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
   1a23c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a240:	48 89 c7             	mov    %rax,%rdi
   1a243:	e8 52 ff ff ff       	call   1a19a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   1a248:	be 01 00 00 00       	mov    $0x1,%esi
   1a24d:	48 89 c7             	mov    %rax,%rdi
   1a250:	e8 9d 0a 00 00       	call   1acf2 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
   1a255:	c9                   	leave
   1a256:	c3                   	ret
   1a257:	90                   	nop

000000000001a258 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
   1a258:	55                   	push   %rbp
   1a259:	48 89 e5             	mov    %rsp,%rbp
   1a25c:	41 56                	push   %r14
   1a25e:	41 55                	push   %r13
   1a260:	41 54                	push   %r12
   1a262:	53                   	push   %rbx
   1a263:	48 83 ec 30          	sub    $0x30,%rsp
   1a267:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1a26b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1a26f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1a273:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   1a277:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
   1a27b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a27f:	48 89 c6             	mov    %rax,%rsi
   1a282:	bf 48 00 00 00       	mov    $0x48,%edi
   1a287:	e8 ec c3 fe ff       	call   6678 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
   1a28c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1a290:	48 89 c7             	mov    %rax,%rdi
   1a293:	e8 e5 d6 ff ff       	call   1797d <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1a298:	49 89 c6             	mov    %rax,%r14
   1a29b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1a29f:	48 89 c7             	mov    %rax,%rdi
   1a2a2:	e8 c8 d6 ff ff       	call   1796f <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1a2a7:	49 89 c5             	mov    %rax,%r13
   1a2aa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a2ae:	48 89 c7             	mov    %rax,%rdi
   1a2b1:	e8 ab d6 ff ff       	call   17961 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1a2b6:	49 89 c4             	mov    %rax,%r12
   1a2b9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a2bd:	48 89 c7             	mov    %rax,%rdi
   1a2c0:	e8 15 d6 ff ff       	call   178da <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   1a2c5:	48 89 c3             	mov    %rax,%rbx
   1a2c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a2cc:	48 89 c7             	mov    %rax,%rdi
   1a2cf:	e8 c6 fe ff ff       	call   1a19a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   1a2d4:	4d 89 f0             	mov    %r14,%r8
   1a2d7:	4c 89 e9             	mov    %r13,%rcx
   1a2da:	4c 89 e2             	mov    %r12,%rdx
   1a2dd:	48 89 de             	mov    %rbx,%rsi
   1a2e0:	48 89 c7             	mov    %rax,%rdi
   1a2e3:	e8 34 0a 00 00       	call   1ad1c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
   1a2e8:	eb 33                	jmp    1a31d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
   1a2ea:	48 89 c7             	mov    %rax,%rdi
   1a2ed:	e8 6e 9e fe ff       	call   4160 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
   1a2f2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1a2f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a2fa:	48 89 d6             	mov    %rdx,%rsi
   1a2fd:	48 89 c7             	mov    %rax,%rdi
   1a300:	e8 29 ee ff ff       	call   1912e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
   1a305:	e8 66 a4 fe ff       	call   4770 <__cxa_rethrow@plt>
	  __catch(...)
   1a30a:	48 89 c3             	mov    %rax,%rbx
   1a30d:	e8 4e a5 fe ff       	call   4860 <__cxa_end_catch@plt>
   1a312:	48 89 d8             	mov    %rbx,%rax
   1a315:	48 89 c7             	mov    %rax,%rdi
   1a318:	e8 e3 a5 fe ff       	call   4900 <_Unwind_Resume@plt>
	}
   1a31d:	48 83 c4 30          	add    $0x30,%rsp
   1a321:	5b                   	pop    %rbx
   1a322:	41 5c                	pop    %r12
   1a324:	41 5d                	pop    %r13
   1a326:	41 5e                	pop    %r14
   1a328:	5d                   	pop    %rbp
   1a329:	c3                   	ret

000000000001a32a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   1a32a:	55                   	push   %rbp
   1a32b:	48 89 e5             	mov    %rsp,%rbp
   1a32e:	48 83 ec 20          	sub    $0x20,%rsp
   1a332:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
   1a336:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a33a:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1a33e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1a342:	48 89 d6             	mov    %rdx,%rsi
   1a345:	48 89 c7             	mov    %rax,%rdi
   1a348:	e8 b3 db ff ff       	call   17f00 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   1a34d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a351:	c9                   	leave
   1a352:	c3                   	ret
   1a353:	90                   	nop

000000000001a354 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   1a354:	55                   	push   %rbp
   1a355:	48 89 e5             	mov    %rsp,%rbp
   1a358:	48 83 ec 20          	sub    $0x20,%rsp
   1a35c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a360:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a364:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   1a368:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a36c:	48 89 c7             	mov    %rax,%rdi
   1a36f:	e8 14 0a 00 00       	call   1ad88 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
   1a374:	48 8b 10             	mov    (%rax),%rdx
   1a377:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a37b:	48 89 10             	mov    %rdx,(%rax)
   1a37e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a382:	48 89 c7             	mov    %rax,%rdi
   1a385:	e8 0e 00 00 00       	call   1a398 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   1a38a:	48 8b 10             	mov    (%rax),%rdx
   1a38d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a391:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1a395:	90                   	nop
   1a396:	c9                   	leave
   1a397:	c3                   	ret

000000000001a398 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1a398:	55                   	push   %rbp
   1a399:	48 89 e5             	mov    %rsp,%rbp
   1a39c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1a3a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a3a4:	5d                   	pop    %rbp
   1a3a5:	c3                   	ret

000000000001a3a6 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
   1a3a6:	55                   	push   %rbp
   1a3a7:	48 89 e5             	mov    %rsp,%rbp
   1a3aa:	48 83 ec 10          	sub    $0x10,%rsp
   1a3ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   1a3b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a3b6:	48 83 c0 20          	add    $0x20,%rax
   1a3ba:	48 89 c7             	mov    %rax,%rdi
   1a3bd:	e8 d4 09 00 00       	call   1ad96 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   1a3c2:	c9                   	leave
   1a3c3:	c3                   	ret

000000000001a3c4 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
   1a3c4:	55                   	push   %rbp
   1a3c5:	48 89 e5             	mov    %rsp,%rbp
   1a3c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a3cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
   1a3d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a3d4:	5d                   	pop    %rbp
   1a3d5:	c3                   	ret

000000000001a3d6 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1a3d6:	55                   	push   %rbp
   1a3d7:	48 89 e5             	mov    %rsp,%rbp
   1a3da:	48 83 ec 10          	sub    $0x10,%rsp
   1a3de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1a3e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a3e6:	48 89 c7             	mov    %rax,%rdi
   1a3e9:	e8 c2 09 00 00       	call   1adb0 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>
      }
   1a3ee:	c9                   	leave
   1a3ef:	c3                   	ret

000000000001a3f0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   1a3f0:	55                   	push   %rbp
   1a3f1:	48 89 e5             	mov    %rsp,%rbp
   1a3f4:	48 83 ec 20          	sub    $0x20,%rsp
   1a3f8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a3fc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   1a400:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1a405:	74 40                	je     1a447 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   1a407:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a40b:	48 89 c7             	mov    %rax,%rdi
   1a40e:	e8 b7 09 00 00       	call   1adca <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>
   1a413:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   1a417:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a41b:	48 89 c7             	mov    %rax,%rdi
   1a41e:	e8 b5 09 00 00       	call   1add8 <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>
	      ++__first;
   1a423:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   1a428:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a42c:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1a430:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1a434:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a438:	48 89 ce             	mov    %rcx,%rsi
   1a43b:	48 89 c7             	mov    %rax,%rdi
   1a43e:	e8 bc 09 00 00       	call   1adff <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>
   1a443:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   1a447:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1a44b:	c9                   	leave
   1a44c:	c3                   	ret
   1a44d:	90                   	nop

000000000001a44e <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1a44e:	55                   	push   %rbp
   1a44f:	48 89 e5             	mov    %rsp,%rbp
   1a452:	48 83 ec 20          	sub    $0x20,%rsp
   1a456:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a45a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a45e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1a462:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a466:	48 89 c7             	mov    %rax,%rdi
   1a469:	e8 d6 09 00 00       	call   1ae44 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   1a46e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1a472:	0f 92 c0             	setb   %al
   1a475:	0f b6 c0             	movzbl %al,%eax
   1a478:	48 85 c0             	test   %rax,%rax
   1a47b:	0f 95 c0             	setne  %al
   1a47e:	84 c0                	test   %al,%al
   1a480:	74 1a                	je     1a49c <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1a482:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1a489:	ff ff 1f 
   1a48c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1a490:	73 05                	jae    1a497 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1a492:	e8 79 9e fe ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1a497:	e8 74 9c fe ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1a49c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a4a0:	48 c1 e0 03          	shl    $0x3,%rax
   1a4a4:	48 89 c7             	mov    %rax,%rdi
   1a4a7:	e8 d4 9f fe ff       	call   4480 <_Znwm@plt>
   1a4ac:	90                   	nop
      }
   1a4ad:	c9                   	leave
   1a4ae:	c3                   	ret

000000000001a4af <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>:
    __niter_base(_Iterator __it)
   1a4af:	55                   	push   %rbp
   1a4b0:	48 89 e5             	mov    %rsp,%rbp
   1a4b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a4b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a4bb:	5d                   	pop    %rbp
   1a4bc:	c3                   	ret

000000000001a4bd <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   1a4bd:	55                   	push   %rbp
   1a4be:	48 89 e5             	mov    %rsp,%rbp
   1a4c1:	48 83 ec 30          	sub    $0x30,%rsp
   1a4c5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a4c9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a4cd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1a4d1:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   1a4d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a4d9:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1a4dd:	48 c1 f8 03          	sar    $0x3,%rax
   1a4e1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   1a4e5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1a4ea:	7e 1f                	jle    1a50b <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   1a4ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a4f0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a4f7:	00 
   1a4f8:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1a4fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a500:	48 89 ce             	mov    %rcx,%rsi
   1a503:	48 89 c7             	mov    %rax,%rdi
   1a506:	e8 45 a3 fe ff       	call   4850 <memmove@plt>
      return __result + __count;
   1a50b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a50f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a516:	00 
   1a517:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a51b:	48 01 d0             	add    %rdx,%rax
    }
   1a51e:	c9                   	leave
   1a51f:	c3                   	ret

000000000001a520 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   1a520:	55                   	push   %rbp
   1a521:	48 89 e5             	mov    %rsp,%rbp
   1a524:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a528:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a52c:	90                   	nop
   1a52d:	5d                   	pop    %rbp
   1a52e:	c3                   	ret
   1a52f:	90                   	nop

000000000001a530 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1a530:	55                   	push   %rbp
   1a531:	48 89 e5             	mov    %rsp,%rbp
   1a534:	48 83 ec 20          	sub    $0x20,%rsp
   1a538:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a53c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a540:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1a544:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a548:	48 89 d0             	mov    %rdx,%rax
   1a54b:	48 c1 e0 03          	shl    $0x3,%rax
   1a54f:	48 01 d0             	add    %rdx,%rax
   1a552:	48 c1 e0 04          	shl    $0x4,%rax
   1a556:	48 89 c2             	mov    %rax,%rdx
   1a559:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a55d:	48 89 d6             	mov    %rdx,%rsi
   1a560:	48 89 c7             	mov    %rax,%rdi
   1a563:	e8 38 9f fe ff       	call   44a0 <_ZdlPvm@plt>
      }
   1a568:	c9                   	leave
   1a569:	c3                   	ret

000000000001a56a <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1a56a:	55                   	push   %rbp
   1a56b:	48 89 e5             	mov    %rsp,%rbp
   1a56e:	48 83 ec 10          	sub    $0x10,%rsp
   1a572:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1a576:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a57a:	48 89 c7             	mov    %rax,%rdi
   1a57d:	e8 d6 08 00 00       	call   1ae58 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8max_sizeEv>
      }
   1a582:	c9                   	leave
   1a583:	c3                   	ret

000000000001a584 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1a584:	55                   	push   %rbp
   1a585:	48 89 e5             	mov    %rsp,%rbp
   1a588:	48 83 ec 20          	sub    $0x20,%rsp
   1a58c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a590:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a594:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1a598:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a59c:	48 89 c7             	mov    %rax,%rdi
   1a59f:	e8 ce 08 00 00       	call   1ae72 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>
   1a5a4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1a5a8:	0f 92 c0             	setb   %al
   1a5ab:	0f b6 c0             	movzbl %al,%eax
   1a5ae:	48 85 c0             	test   %rax,%rax
   1a5b1:	0f 95 c0             	setne  %al
   1a5b4:	84 c0                	test   %al,%al
   1a5b6:	74 1a                	je     1a5d2 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1a5b8:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   1a5bf:	1c c7 01 
   1a5c2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1a5c6:	73 05                	jae    1a5cd <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1a5c8:	e8 43 9d fe ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1a5cd:	e8 3e 9b fe ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1a5d2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a5d6:	48 89 d0             	mov    %rdx,%rax
   1a5d9:	48 c1 e0 03          	shl    $0x3,%rax
   1a5dd:	48 01 d0             	add    %rdx,%rax
   1a5e0:	48 c1 e0 04          	shl    $0x4,%rax
   1a5e4:	48 89 c7             	mov    %rax,%rdi
   1a5e7:	e8 94 9e fe ff       	call   4480 <_Znwm@plt>
   1a5ec:	90                   	nop
      }
   1a5ed:	c9                   	leave
   1a5ee:	c3                   	ret

000000000001a5ef <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK28VkGraphicsPipelineCreateInfoPS2_EET0_T_S7_S6_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   1a5ef:	55                   	push   %rbp
   1a5f0:	48 89 e5             	mov    %rsp,%rbp
   1a5f3:	48 83 ec 20          	sub    $0x20,%rsp
   1a5f7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a5fb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a5ff:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   1a603:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a607:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a60b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a60f:	48 89 ce             	mov    %rcx,%rsi
   1a612:	48 89 c7             	mov    %rax,%rdi
   1a615:	e8 6c 08 00 00       	call   1ae86 <_ZSt4copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>
   1a61a:	c9                   	leave
   1a61b:	c3                   	ret

000000000001a61c <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1a61c:	55                   	push   %rbp
   1a61d:	48 89 e5             	mov    %rsp,%rbp
   1a620:	48 83 ec 10          	sub    $0x10,%rsp
   1a624:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1a628:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a62c:	48 89 c7             	mov    %rax,%rdi
   1a62f:	e8 9e 08 00 00       	call   1aed2 <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>
      }
   1a634:	c9                   	leave
   1a635:	c3                   	ret

000000000001a636 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   1a636:	55                   	push   %rbp
   1a637:	48 89 e5             	mov    %rsp,%rbp
   1a63a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1a63e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a642:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1a649:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a64d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1a654:	00 
   1a655:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a659:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1a660:	00 
	{ }
   1a661:	90                   	nop
   1a662:	5d                   	pop    %rbp
   1a663:	c3                   	ret

000000000001a664 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1a664:	55                   	push   %rbp
   1a665:	48 89 e5             	mov    %rsp,%rbp
   1a668:	48 83 ec 10          	sub    $0x10,%rsp
   1a66c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a670:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1a674:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1a679:	74 15                	je     1a690 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x2c>
   1a67b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a67f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a683:	48 89 d6             	mov    %rdx,%rsi
   1a686:	48 89 c7             	mov    %rax,%rdi
   1a689:	e8 5e 08 00 00       	call   1aeec <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>
   1a68e:	eb 05                	jmp    1a695 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x31>
   1a690:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1a695:	c9                   	leave
   1a696:	c3                   	ret

000000000001a697 <_ZSt25__uninitialized_default_nIPP12VkPipeline_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1a697:	55                   	push   %rbp
   1a698:	48 89 e5             	mov    %rsp,%rbp
   1a69b:	48 83 ec 20          	sub    $0x20,%rsp
   1a69f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a6a3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1a6a7:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1a6ab:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1a6af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a6b3:	48 89 d6             	mov    %rdx,%rsi
   1a6b6:	48 89 c7             	mov    %rax,%rdi
   1a6b9:	e8 58 08 00 00       	call   1af16 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_>
    }
   1a6be:	c9                   	leave
   1a6bf:	c3                   	ret

000000000001a6c0 <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1a6c0:	55                   	push   %rbp
   1a6c1:	48 89 e5             	mov    %rsp,%rbp
   1a6c4:	48 83 ec 20          	sub    $0x20,%rsp
   1a6c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a6cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a6d0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1a6d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a6d8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a6df:	00 
   1a6e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a6e4:	48 89 d6             	mov    %rdx,%rsi
   1a6e7:	48 89 c7             	mov    %rax,%rdi
   1a6ea:	e8 b1 9d fe ff       	call   44a0 <_ZdlPvm@plt>
      }
   1a6ef:	c9                   	leave
   1a6f0:	c3                   	ret

000000000001a6f1 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1a6f1:	55                   	push   %rbp
   1a6f2:	48 89 e5             	mov    %rsp,%rbp
   1a6f5:	48 83 ec 10          	sub    $0x10,%rsp
   1a6f9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1a6fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a701:	48 89 c7             	mov    %rax,%rdi
   1a704:	e8 6b 08 00 00       	call   1af74 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE8max_sizeEv>
      }
   1a709:	c9                   	leave
   1a70a:	c3                   	ret

000000000001a70b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   1a70b:	55                   	push   %rbp
   1a70c:	48 89 e5             	mov    %rsp,%rbp
   1a70f:	48 83 ec 20          	sub    $0x20,%rsp
   1a713:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a717:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   1a71b:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1a720:	74 40                	je     1a762 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   1a722:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a726:	48 89 c7             	mov    %rax,%rdi
   1a729:	e8 60 08 00 00       	call   1af8e <_ZSt11__addressofIP15VkFramebuffer_TEPT_RS2_>
   1a72e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   1a732:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a736:	48 89 c7             	mov    %rax,%rdi
   1a739:	e8 5e 08 00 00       	call   1af9c <_ZSt10_ConstructIP15VkFramebuffer_TJEEvPT_DpOT0_>
	      ++__first;
   1a73e:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   1a743:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a747:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1a74b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1a74f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a753:	48 89 ce             	mov    %rcx,%rsi
   1a756:	48 89 c7             	mov    %rax,%rdi
   1a759:	e8 65 08 00 00       	call   1afc3 <_ZSt6fill_nIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_>
   1a75e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   1a762:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1a766:	c9                   	leave
   1a767:	c3                   	ret

000000000001a768 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1a768:	55                   	push   %rbp
   1a769:	48 89 e5             	mov    %rsp,%rbp
   1a76c:	48 83 ec 20          	sub    $0x20,%rsp
   1a770:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a774:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a778:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1a77c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a780:	48 89 c7             	mov    %rax,%rdi
   1a783:	e8 80 08 00 00       	call   1b008 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>
   1a788:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1a78c:	0f 92 c0             	setb   %al
   1a78f:	0f b6 c0             	movzbl %al,%eax
   1a792:	48 85 c0             	test   %rax,%rax
   1a795:	0f 95 c0             	setne  %al
   1a798:	84 c0                	test   %al,%al
   1a79a:	74 1a                	je     1a7b6 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1a79c:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1a7a3:	ff ff 1f 
   1a7a6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1a7aa:	73 05                	jae    1a7b1 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1a7ac:	e8 5f 9b fe ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1a7b1:	e8 5a 99 fe ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1a7b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a7ba:	48 c1 e0 03          	shl    $0x3,%rax
   1a7be:	48 89 c7             	mov    %rax,%rdi
   1a7c1:	e8 ba 9c fe ff       	call   4480 <_Znwm@plt>
   1a7c6:	90                   	nop
      }
   1a7c7:	c9                   	leave
   1a7c8:	c3                   	ret

000000000001a7c9 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>:
    __niter_base(_Iterator __it)
   1a7c9:	55                   	push   %rbp
   1a7ca:	48 89 e5             	mov    %rsp,%rbp
   1a7cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a7d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a7d5:	5d                   	pop    %rbp
   1a7d6:	c3                   	ret

000000000001a7d7 <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   1a7d7:	55                   	push   %rbp
   1a7d8:	48 89 e5             	mov    %rsp,%rbp
   1a7db:	48 83 ec 30          	sub    $0x30,%rsp
   1a7df:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a7e3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a7e7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1a7eb:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   1a7ef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a7f3:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1a7f7:	48 c1 f8 03          	sar    $0x3,%rax
   1a7fb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   1a7ff:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1a804:	7e 1f                	jle    1a825 <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   1a806:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a80a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a811:	00 
   1a812:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1a816:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a81a:	48 89 ce             	mov    %rcx,%rsi
   1a81d:	48 89 c7             	mov    %rax,%rdi
   1a820:	e8 2b a0 fe ff       	call   4850 <memmove@plt>
      return __result + __count;
   1a825:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a829:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a830:	00 
   1a831:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a835:	48 01 d0             	add    %rdx,%rax
    }
   1a838:	c9                   	leave
   1a839:	c3                   	ret

000000000001a83a <_ZNSt15__new_allocatorIP13VkImageView_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   1a83a:	55                   	push   %rbp
   1a83b:	48 89 e5             	mov    %rsp,%rbp
   1a83e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a842:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a846:	90                   	nop
   1a847:	5d                   	pop    %rbp
   1a848:	c3                   	ret

000000000001a849 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkImageView_TPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   1a849:	55                   	push   %rbp
   1a84a:	48 89 e5             	mov    %rsp,%rbp
   1a84d:	48 83 ec 20          	sub    $0x20,%rsp
   1a851:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a855:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a859:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   1a85d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a861:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a865:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a869:	48 89 ce             	mov    %rcx,%rsi
   1a86c:	48 89 c7             	mov    %rax,%rdi
   1a86f:	e8 a8 07 00 00       	call   1b01c <_ZSt4copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>
   1a874:	c9                   	leave
   1a875:	c3                   	ret

000000000001a876 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1a876:	55                   	push   %rbp
   1a877:	48 89 e5             	mov    %rsp,%rbp
   1a87a:	48 83 ec 10          	sub    $0x10,%rsp
   1a87e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1a882:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a886:	48 89 c7             	mov    %rax,%rdi
   1a889:	e8 da 07 00 00       	call   1b068 <_ZNKSt15__new_allocatorIP13VkSemaphore_TE8max_sizeEv>
      }
   1a88e:	c9                   	leave
   1a88f:	c3                   	ret

000000000001a890 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkSemaphore_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   1a890:	55                   	push   %rbp
   1a891:	48 89 e5             	mov    %rsp,%rbp
   1a894:	48 83 ec 20          	sub    $0x20,%rsp
   1a898:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a89c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   1a8a0:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1a8a5:	74 40                	je     1a8e7 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkSemaphore_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   1a8a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a8ab:	48 89 c7             	mov    %rax,%rdi
   1a8ae:	e8 cf 07 00 00       	call   1b082 <_ZSt11__addressofIP13VkSemaphore_TEPT_RS2_>
   1a8b3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   1a8b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a8bb:	48 89 c7             	mov    %rax,%rdi
   1a8be:	e8 cd 07 00 00       	call   1b090 <_ZSt10_ConstructIP13VkSemaphore_TJEEvPT_DpOT0_>
	      ++__first;
   1a8c3:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   1a8c8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a8cc:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1a8d0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1a8d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a8d8:	48 89 ce             	mov    %rcx,%rsi
   1a8db:	48 89 c7             	mov    %rax,%rdi
   1a8de:	e8 d4 07 00 00       	call   1b0b7 <_ZSt6fill_nIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_>
   1a8e3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   1a8e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1a8eb:	c9                   	leave
   1a8ec:	c3                   	ret
   1a8ed:	90                   	nop

000000000001a8ee <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1a8ee:	55                   	push   %rbp
   1a8ef:	48 89 e5             	mov    %rsp,%rbp
   1a8f2:	48 83 ec 20          	sub    $0x20,%rsp
   1a8f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a8fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a8fe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1a902:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a906:	48 89 c7             	mov    %rax,%rdi
   1a909:	e8 ee 07 00 00       	call   1b0fc <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>
   1a90e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1a912:	0f 92 c0             	setb   %al
   1a915:	0f b6 c0             	movzbl %al,%eax
   1a918:	48 85 c0             	test   %rax,%rax
   1a91b:	0f 95 c0             	setne  %al
   1a91e:	84 c0                	test   %al,%al
   1a920:	74 1a                	je     1a93c <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1a922:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1a929:	ff ff 1f 
   1a92c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1a930:	73 05                	jae    1a937 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1a932:	e8 d9 99 fe ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1a937:	e8 d4 97 fe ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1a93c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a940:	48 c1 e0 03          	shl    $0x3,%rax
   1a944:	48 89 c7             	mov    %rax,%rdi
   1a947:	e8 34 9b fe ff       	call   4480 <_Znwm@plt>
   1a94c:	90                   	nop
      }
   1a94d:	c9                   	leave
   1a94e:	c3                   	ret

000000000001a94f <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>:
    __niter_base(_Iterator __it)
   1a94f:	55                   	push   %rbp
   1a950:	48 89 e5             	mov    %rsp,%rbp
   1a953:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a957:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a95b:	5d                   	pop    %rbp
   1a95c:	c3                   	ret

000000000001a95d <_ZSt14__relocate_a_1IP13VkSemaphore_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   1a95d:	55                   	push   %rbp
   1a95e:	48 89 e5             	mov    %rsp,%rbp
   1a961:	48 83 ec 30          	sub    $0x30,%rsp
   1a965:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a969:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a96d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1a971:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   1a975:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a979:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1a97d:	48 c1 f8 03          	sar    $0x3,%rax
   1a981:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   1a985:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1a98a:	7e 1f                	jle    1a9ab <_ZSt14__relocate_a_1IP13VkSemaphore_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   1a98c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a990:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a997:	00 
   1a998:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1a99c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a9a0:	48 89 ce             	mov    %rcx,%rsi
   1a9a3:	48 89 c7             	mov    %rax,%rdi
   1a9a6:	e8 a5 9e fe ff       	call   4850 <memmove@plt>
      return __result + __count;
   1a9ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a9af:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a9b6:	00 
   1a9b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a9bb:	48 01 d0             	add    %rdx,%rax
    }
   1a9be:	c9                   	leave
   1a9bf:	c3                   	ret

000000000001a9c0 <_ZNSt16allocator_traitsISaIP9VkFence_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1a9c0:	55                   	push   %rbp
   1a9c1:	48 89 e5             	mov    %rsp,%rbp
   1a9c4:	48 83 ec 10          	sub    $0x10,%rsp
   1a9c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1a9cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a9d0:	48 89 c7             	mov    %rax,%rdi
   1a9d3:	e8 38 07 00 00       	call   1b110 <_ZNKSt15__new_allocatorIP9VkFence_TE8max_sizeEv>
      }
   1a9d8:	c9                   	leave
   1a9d9:	c3                   	ret

000000000001a9da <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkFence_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   1a9da:	55                   	push   %rbp
   1a9db:	48 89 e5             	mov    %rsp,%rbp
   1a9de:	48 83 ec 20          	sub    $0x20,%rsp
   1a9e2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a9e6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   1a9ea:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1a9ef:	74 40                	je     1aa31 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkFence_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   1a9f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a9f5:	48 89 c7             	mov    %rax,%rdi
   1a9f8:	e8 2d 07 00 00       	call   1b12a <_ZSt11__addressofIP9VkFence_TEPT_RS2_>
   1a9fd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   1aa01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aa05:	48 89 c7             	mov    %rax,%rdi
   1aa08:	e8 2b 07 00 00       	call   1b138 <_ZSt10_ConstructIP9VkFence_TJEEvPT_DpOT0_>
	      ++__first;
   1aa0d:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   1aa12:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1aa16:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1aa1a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1aa1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1aa22:	48 89 ce             	mov    %rcx,%rsi
   1aa25:	48 89 c7             	mov    %rax,%rdi
   1aa28:	e8 32 07 00 00       	call   1b15f <_ZSt6fill_nIPP9VkFence_TmS1_ET_S3_T0_RKT1_>
   1aa2d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   1aa31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1aa35:	c9                   	leave
   1aa36:	c3                   	ret
   1aa37:	90                   	nop

000000000001aa38 <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1aa38:	55                   	push   %rbp
   1aa39:	48 89 e5             	mov    %rsp,%rbp
   1aa3c:	48 83 ec 20          	sub    $0x20,%rsp
   1aa40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1aa44:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1aa48:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1aa4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aa50:	48 89 c7             	mov    %rax,%rdi
   1aa53:	e8 4c 07 00 00       	call   1b1a4 <_ZNKSt15__new_allocatorIP9VkFence_TE11_M_max_sizeEv>
   1aa58:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1aa5c:	0f 92 c0             	setb   %al
   1aa5f:	0f b6 c0             	movzbl %al,%eax
   1aa62:	48 85 c0             	test   %rax,%rax
   1aa65:	0f 95 c0             	setne  %al
   1aa68:	84 c0                	test   %al,%al
   1aa6a:	74 1a                	je     1aa86 <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1aa6c:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1aa73:	ff ff 1f 
   1aa76:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1aa7a:	73 05                	jae    1aa81 <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1aa7c:	e8 8f 98 fe ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1aa81:	e8 8a 96 fe ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1aa86:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1aa8a:	48 c1 e0 03          	shl    $0x3,%rax
   1aa8e:	48 89 c7             	mov    %rax,%rdi
   1aa91:	e8 ea 99 fe ff       	call   4480 <_Znwm@plt>
   1aa96:	90                   	nop
      }
   1aa97:	c9                   	leave
   1aa98:	c3                   	ret

000000000001aa99 <_ZSt12__niter_baseIPP9VkFence_TET_S3_>:
    __niter_base(_Iterator __it)
   1aa99:	55                   	push   %rbp
   1aa9a:	48 89 e5             	mov    %rsp,%rbp
   1aa9d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1aaa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aaa5:	5d                   	pop    %rbp
   1aaa6:	c3                   	ret

000000000001aaa7 <_ZSt14__relocate_a_1IP9VkFence_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   1aaa7:	55                   	push   %rbp
   1aaa8:	48 89 e5             	mov    %rsp,%rbp
   1aaab:	48 83 ec 30          	sub    $0x30,%rsp
   1aaaf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1aab3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1aab7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1aabb:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   1aabf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1aac3:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1aac7:	48 c1 f8 03          	sar    $0x3,%rax
   1aacb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   1aacf:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1aad4:	7e 1f                	jle    1aaf5 <_ZSt14__relocate_a_1IP9VkFence_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   1aad6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aada:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1aae1:	00 
   1aae2:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1aae6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1aaea:	48 89 ce             	mov    %rcx,%rsi
   1aaed:	48 89 c7             	mov    %rax,%rdi
   1aaf0:	e8 5b 9d fe ff       	call   4850 <memmove@plt>
      return __result + __count;
   1aaf5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aaf9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ab00:	00 
   1ab01:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ab05:	48 01 d0             	add    %rdx,%rax
    }
   1ab08:	c9                   	leave
   1ab09:	c3                   	ret

000000000001ab0a <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   1ab0a:	55                   	push   %rbp
   1ab0b:	48 89 e5             	mov    %rsp,%rbp
   1ab0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ab12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ab16:	90                   	nop
   1ab17:	5d                   	pop    %rbp
   1ab18:	c3                   	ret

000000000001ab19 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkSemaphore_TPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   1ab19:	55                   	push   %rbp
   1ab1a:	48 89 e5             	mov    %rsp,%rbp
   1ab1d:	48 83 ec 20          	sub    $0x20,%rsp
   1ab21:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ab25:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ab29:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   1ab2d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1ab31:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1ab35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ab39:	48 89 ce             	mov    %rcx,%rsi
   1ab3c:	48 89 c7             	mov    %rax,%rdi
   1ab3f:	e8 74 06 00 00       	call   1b1b8 <_ZSt4copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>
   1ab44:	c9                   	leave
   1ab45:	c3                   	ret

000000000001ab46 <_ZNSt15__new_allocatorIjEC1ERKS0_>:
   1ab46:	55                   	push   %rbp
   1ab47:	48 89 e5             	mov    %rsp,%rbp
   1ab4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ab4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ab52:	90                   	nop
   1ab53:	5d                   	pop    %rbp
   1ab54:	c3                   	ret
   1ab55:	90                   	nop

000000000001ab56 <_ZNSt15__new_allocatorIjE10deallocateEPjm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1ab56:	55                   	push   %rbp
   1ab57:	48 89 e5             	mov    %rsp,%rbp
   1ab5a:	48 83 ec 20          	sub    $0x20,%rsp
   1ab5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ab62:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ab66:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1ab6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ab6e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1ab75:	00 
   1ab76:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ab7a:	48 89 d6             	mov    %rdx,%rsi
   1ab7d:	48 89 c7             	mov    %rax,%rdi
   1ab80:	e8 1b 99 fe ff       	call   44a0 <_ZdlPvm@plt>
      }
   1ab85:	c9                   	leave
   1ab86:	c3                   	ret

000000000001ab87 <_ZNSt16allocator_traitsISaIjEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1ab87:	55                   	push   %rbp
   1ab88:	48 89 e5             	mov    %rsp,%rbp
   1ab8b:	48 83 ec 10          	sub    $0x10,%rsp
   1ab8f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1ab93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ab97:	48 89 c7             	mov    %rax,%rdi
   1ab9a:	e8 65 06 00 00       	call   1b204 <_ZNKSt15__new_allocatorIjE8max_sizeEv>
      }
   1ab9f:	c9                   	leave
   1aba0:	c3                   	ret
   1aba1:	90                   	nop

000000000001aba2 <_ZNSt15__new_allocatorIjE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1aba2:	55                   	push   %rbp
   1aba3:	48 89 e5             	mov    %rsp,%rbp
   1aba6:	48 83 ec 20          	sub    $0x20,%rsp
   1abaa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1abae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1abb2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1abb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1abba:	48 89 c7             	mov    %rax,%rdi
   1abbd:	e8 5c 06 00 00       	call   1b21e <_ZNKSt15__new_allocatorIjE11_M_max_sizeEv>
   1abc2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1abc6:	0f 92 c0             	setb   %al
   1abc9:	0f b6 c0             	movzbl %al,%eax
   1abcc:	48 85 c0             	test   %rax,%rax
   1abcf:	0f 95 c0             	setne  %al
   1abd2:	84 c0                	test   %al,%al
   1abd4:	74 1a                	je     1abf0 <_ZNSt15__new_allocatorIjE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1abd6:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
   1abdd:	ff ff 3f 
   1abe0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1abe4:	73 05                	jae    1abeb <_ZNSt15__new_allocatorIjE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1abe6:	e8 25 97 fe ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1abeb:	e8 20 95 fe ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1abf0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1abf4:	48 c1 e0 02          	shl    $0x2,%rax
   1abf8:	48 89 c7             	mov    %rax,%rdi
   1abfb:	e8 80 98 fe ff       	call   4480 <_Znwm@plt>
   1ac00:	90                   	nop
      }
   1ac01:	c9                   	leave
   1ac02:	c3                   	ret

000000000001ac03 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKjPjEET0_T_S6_S5_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   1ac03:	55                   	push   %rbp
   1ac04:	48 89 e5             	mov    %rsp,%rbp
   1ac07:	48 83 ec 20          	sub    $0x20,%rsp
   1ac0b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ac0f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ac13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   1ac17:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1ac1b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1ac1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ac23:	48 89 ce             	mov    %rcx,%rsi
   1ac26:	48 89 c7             	mov    %rax,%rdi
   1ac29:	e8 04 06 00 00       	call   1b232 <_ZSt4copyIPKjPjET0_T_S4_S3_>
   1ac2e:	c9                   	leave
   1ac2f:	c3                   	ret

000000000001ac30 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   1ac30:	55                   	push   %rbp
   1ac31:	48 89 e5             	mov    %rsp,%rbp
   1ac34:	53                   	push   %rbx
   1ac35:	48 83 ec 28          	sub    $0x28,%rsp
   1ac39:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1ac3d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1ac41:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   1ac45:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ac49:	48 89 c7             	mov    %rax,%rdi
   1ac4c:	e8 2c 06 00 00       	call   1b27d <_ZSt12__miter_baseIPKPKcET_S4_>
   1ac51:	48 89 c3             	mov    %rax,%rbx
   1ac54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ac58:	48 89 c7             	mov    %rax,%rdi
   1ac5b:	e8 1d 06 00 00       	call   1b27d <_ZSt12__miter_baseIPKPKcET_S4_>
   1ac60:	48 89 c1             	mov    %rax,%rcx
   1ac63:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ac67:	48 89 c2             	mov    %rax,%rdx
   1ac6a:	48 89 de             	mov    %rbx,%rsi
   1ac6d:	48 89 cf             	mov    %rcx,%rdi
   1ac70:	e8 16 06 00 00       	call   1b28b <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
   1ac75:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1ac79:	c9                   	leave
   1ac7a:	c3                   	ret
   1ac7b:	90                   	nop

000000000001ac7c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
   1ac7c:	55                   	push   %rbp
   1ac7d:	48 89 e5             	mov    %rsp,%rbp
   1ac80:	48 83 ec 10          	sub    $0x10,%rsp
   1ac84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ac88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ac8c:	48 89 c7             	mov    %rax,%rdi
   1ac8f:	e8 dc 95 fe ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   1ac94:	90                   	nop
   1ac95:	c9                   	leave
   1ac96:	c3                   	ret
   1ac97:	90                   	nop

000000000001ac98 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>:
	destroy(_Up* __p)
   1ac98:	55                   	push   %rbp
   1ac99:	48 89 e5             	mov    %rsp,%rbp
   1ac9c:	48 83 ec 10          	sub    $0x10,%rsp
   1aca0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1aca4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
   1aca8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1acac:	48 89 c7             	mov    %rax,%rdi
   1acaf:	e8 c8 ff ff ff       	call   1ac7c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
   1acb4:	90                   	nop
   1acb5:	c9                   	leave
   1acb6:	c3                   	ret
   1acb7:	90                   	nop

000000000001acb8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1acb8:	55                   	push   %rbp
   1acb9:	48 89 e5             	mov    %rsp,%rbp
   1acbc:	48 83 ec 20          	sub    $0x20,%rsp
   1acc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1acc4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1acc8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1accc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1acd0:	48 89 d0             	mov    %rdx,%rax
   1acd3:	48 c1 e0 03          	shl    $0x3,%rax
   1acd7:	48 01 d0             	add    %rdx,%rax
   1acda:	48 c1 e0 03          	shl    $0x3,%rax
   1acde:	48 89 c2             	mov    %rax,%rdx
   1ace1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ace5:	48 89 d6             	mov    %rdx,%rsi
   1ace8:	48 89 c7             	mov    %rax,%rdi
   1aceb:	e8 b0 97 fe ff       	call   44a0 <_ZdlPvm@plt>
      }
   1acf0:	c9                   	leave
   1acf1:	c3                   	ret

000000000001acf2 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
   1acf2:	55                   	push   %rbp
   1acf3:	48 89 e5             	mov    %rsp,%rbp
   1acf6:	48 83 ec 10          	sub    $0x10,%rsp
   1acfa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1acfe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1ad02:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1ad06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ad0a:	ba 00 00 00 00       	mov    $0x0,%edx
   1ad0f:	48 89 ce             	mov    %rcx,%rsi
   1ad12:	48 89 c7             	mov    %rax,%rdi
   1ad15:	e8 dc 05 00 00       	call   1b2f6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
   1ad1a:	c9                   	leave
   1ad1b:	c3                   	ret

000000000001ad1c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   1ad1c:	55                   	push   %rbp
   1ad1d:	48 89 e5             	mov    %rsp,%rbp
   1ad20:	41 54                	push   %r12
   1ad22:	53                   	push   %rbx
   1ad23:	48 83 ec 30          	sub    $0x30,%rsp
   1ad27:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1ad2b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1ad2f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1ad33:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   1ad37:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   1ad3b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1ad3f:	48 89 c7             	mov    %rax,%rdi
   1ad42:	e8 36 cc ff ff       	call   1797d <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1ad47:	49 89 c4             	mov    %rax,%r12
   1ad4a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ad4e:	48 89 c7             	mov    %rax,%rdi
   1ad51:	e8 19 cc ff ff       	call   1796f <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1ad56:	48 89 c3             	mov    %rax,%rbx
   1ad59:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ad5d:	48 89 c7             	mov    %rax,%rdi
   1ad60:	e8 fc cb ff ff       	call   17961 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1ad65:	48 89 c2             	mov    %rax,%rdx
   1ad68:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   1ad6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ad70:	4d 89 e0             	mov    %r12,%r8
   1ad73:	48 89 d9             	mov    %rbx,%rcx
   1ad76:	48 89 c7             	mov    %rax,%rdi
   1ad79:	e8 0a 06 00 00       	call   1b388 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>
	}
   1ad7e:	90                   	nop
   1ad7f:	48 83 c4 30          	add    $0x30,%rsp
   1ad83:	5b                   	pop    %rbx
   1ad84:	41 5c                	pop    %r12
   1ad86:	5d                   	pop    %rbp
   1ad87:	c3                   	ret

000000000001ad88 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1ad88:	55                   	push   %rbp
   1ad89:	48 89 e5             	mov    %rsp,%rbp
   1ad8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1ad90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ad94:	5d                   	pop    %rbp
   1ad95:	c3                   	ret

000000000001ad96 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
   1ad96:	55                   	push   %rbp
   1ad97:	48 89 e5             	mov    %rsp,%rbp
   1ad9a:	48 83 ec 10          	sub    $0x10,%rsp
   1ad9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
   1ada2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ada6:	48 89 c7             	mov    %rax,%rdi
   1ada9:	e8 8a 06 00 00       	call   1b438 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   1adae:	c9                   	leave
   1adaf:	c3                   	ret

000000000001adb0 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1adb0:	55                   	push   %rbp
   1adb1:	48 89 e5             	mov    %rsp,%rbp
   1adb4:	48 83 ec 10          	sub    $0x10,%rsp
   1adb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1adbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1adc0:	48 89 c7             	mov    %rax,%rdi
   1adc3:	e8 7c 00 00 00       	call   1ae44 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   1adc8:	c9                   	leave
   1adc9:	c3                   	ret

000000000001adca <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1adca:	55                   	push   %rbp
   1adcb:	48 89 e5             	mov    %rsp,%rbp
   1adce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1add2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1add6:	5d                   	pop    %rbp
   1add7:	c3                   	ret

000000000001add8 <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1add8:	55                   	push   %rbp
   1add9:	48 89 e5             	mov    %rsp,%rbp
   1addc:	48 83 ec 10          	sub    $0x10,%rsp
   1ade0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1ade4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ade8:	48 89 c6             	mov    %rax,%rsi
   1adeb:	bf 08 00 00 00       	mov    $0x8,%edi
   1adf0:	e8 83 b8 fe ff       	call   6678 <_ZnwmPv>
   1adf5:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   1adfc:	90                   	nop
   1adfd:	c9                   	leave
   1adfe:	c3                   	ret

000000000001adff <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1adff:	55                   	push   %rbp
   1ae00:	48 89 e5             	mov    %rsp,%rbp
   1ae03:	48 83 ec 20          	sub    $0x20,%rsp
   1ae07:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ae0b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ae0f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   1ae13:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1ae17:	48 89 c7             	mov    %rax,%rdi
   1ae1a:	e8 27 06 00 00       	call   1b446 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1ae1f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ae23:	48 89 c7             	mov    %rax,%rdi
   1ae26:	e8 5f b8 fe ff       	call   668a <_ZSt17__size_to_integerm>
   1ae2b:	48 89 c1             	mov    %rax,%rcx
   1ae2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ae32:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1ae36:	48 89 ce             	mov    %rcx,%rsi
   1ae39:	48 89 c7             	mov    %rax,%rdi
   1ae3c:	e8 10 06 00 00       	call   1b451 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   1ae41:	c9                   	leave
   1ae42:	c3                   	ret
   1ae43:	90                   	nop

000000000001ae44 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1ae44:	55                   	push   %rbp
   1ae45:	48 89 e5             	mov    %rsp,%rbp
   1ae48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1ae4c:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1ae53:	ff ff 0f 
      }
   1ae56:	5d                   	pop    %rbp
   1ae57:	c3                   	ret

000000000001ae58 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1ae58:	55                   	push   %rbp
   1ae59:	48 89 e5             	mov    %rsp,%rbp
   1ae5c:	48 83 ec 10          	sub    $0x10,%rsp
   1ae60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1ae64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ae68:	48 89 c7             	mov    %rax,%rdi
   1ae6b:	e8 02 00 00 00       	call   1ae72 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>
   1ae70:	c9                   	leave
   1ae71:	c3                   	ret

000000000001ae72 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1ae72:	55                   	push   %rbp
   1ae73:	48 89 e5             	mov    %rsp,%rbp
   1ae76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1ae7a:	48 b8 e3 38 8e e3 38 	movabs $0xe38e38e38e38e3,%rax
   1ae81:	8e e3 00 
      }
   1ae84:	5d                   	pop    %rbp
   1ae85:	c3                   	ret

000000000001ae86 <_ZSt4copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>:
    copy(_II __first, _II __last, _OI __result)
   1ae86:	55                   	push   %rbp
   1ae87:	48 89 e5             	mov    %rsp,%rbp
   1ae8a:	53                   	push   %rbx
   1ae8b:	48 83 ec 28          	sub    $0x28,%rsp
   1ae8f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1ae93:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1ae97:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   1ae9b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ae9f:	48 89 c7             	mov    %rax,%rdi
   1aea2:	e8 07 06 00 00       	call   1b4ae <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   1aea7:	48 89 c3             	mov    %rax,%rbx
   1aeaa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1aeae:	48 89 c7             	mov    %rax,%rdi
   1aeb1:	e8 f8 05 00 00       	call   1b4ae <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   1aeb6:	48 89 c1             	mov    %rax,%rcx
   1aeb9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1aebd:	48 89 c2             	mov    %rax,%rdx
   1aec0:	48 89 de             	mov    %rbx,%rsi
   1aec3:	48 89 cf             	mov    %rcx,%rdi
   1aec6:	e8 f1 05 00 00       	call   1b4bc <_ZSt13__copy_move_aILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
    }
   1aecb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1aecf:	c9                   	leave
   1aed0:	c3                   	ret
   1aed1:	90                   	nop

000000000001aed2 <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1aed2:	55                   	push   %rbp
   1aed3:	48 89 e5             	mov    %rsp,%rbp
   1aed6:	48 83 ec 10          	sub    $0x10,%rsp
   1aeda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1aede:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aee2:	48 89 c7             	mov    %rax,%rdi
   1aee5:	e8 3c 06 00 00       	call   1b526 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   1aeea:	c9                   	leave
   1aeeb:	c3                   	ret

000000000001aeec <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1aeec:	55                   	push   %rbp
   1aeed:	48 89 e5             	mov    %rsp,%rbp
   1aef0:	48 83 ec 10          	sub    $0x10,%rsp
   1aef4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1aef8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1aefc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1af00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1af04:	ba 00 00 00 00       	mov    $0x0,%edx
   1af09:	48 89 ce             	mov    %rcx,%rsi
   1af0c:	48 89 c7             	mov    %rax,%rdi
   1af0f:	e8 26 06 00 00       	call   1b53a <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>
   1af14:	c9                   	leave
   1af15:	c3                   	ret

000000000001af16 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   1af16:	55                   	push   %rbp
   1af17:	48 89 e5             	mov    %rsp,%rbp
   1af1a:	48 83 ec 20          	sub    $0x20,%rsp
   1af1e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1af22:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   1af26:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1af2b:	74 40                	je     1af6d <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   1af2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1af31:	48 89 c7             	mov    %rax,%rdi
   1af34:	e8 62 06 00 00       	call   1b59b <_ZSt11__addressofIP12VkPipeline_TEPT_RS2_>
   1af39:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   1af3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1af41:	48 89 c7             	mov    %rax,%rdi
   1af44:	e8 60 06 00 00       	call   1b5a9 <_ZSt10_ConstructIP12VkPipeline_TJEEvPT_DpOT0_>
	      ++__first;
   1af49:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   1af4e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1af52:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1af56:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1af5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1af5e:	48 89 ce             	mov    %rcx,%rsi
   1af61:	48 89 c7             	mov    %rax,%rdi
   1af64:	e8 67 06 00 00       	call   1b5d0 <_ZSt6fill_nIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_>
   1af69:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   1af6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1af71:	c9                   	leave
   1af72:	c3                   	ret
   1af73:	90                   	nop

000000000001af74 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1af74:	55                   	push   %rbp
   1af75:	48 89 e5             	mov    %rsp,%rbp
   1af78:	48 83 ec 10          	sub    $0x10,%rsp
   1af7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1af80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1af84:	48 89 c7             	mov    %rax,%rdi
   1af87:	e8 7c 00 00 00       	call   1b008 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>
   1af8c:	c9                   	leave
   1af8d:	c3                   	ret

000000000001af8e <_ZSt11__addressofIP15VkFramebuffer_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1af8e:	55                   	push   %rbp
   1af8f:	48 89 e5             	mov    %rsp,%rbp
   1af92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1af96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1af9a:	5d                   	pop    %rbp
   1af9b:	c3                   	ret

000000000001af9c <_ZSt10_ConstructIP15VkFramebuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1af9c:	55                   	push   %rbp
   1af9d:	48 89 e5             	mov    %rsp,%rbp
   1afa0:	48 83 ec 10          	sub    $0x10,%rsp
   1afa4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1afa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1afac:	48 89 c6             	mov    %rax,%rsi
   1afaf:	bf 08 00 00 00       	mov    $0x8,%edi
   1afb4:	e8 bf b6 fe ff       	call   6678 <_ZnwmPv>
   1afb9:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   1afc0:	90                   	nop
   1afc1:	c9                   	leave
   1afc2:	c3                   	ret

000000000001afc3 <_ZSt6fill_nIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1afc3:	55                   	push   %rbp
   1afc4:	48 89 e5             	mov    %rsp,%rbp
   1afc7:	48 83 ec 20          	sub    $0x20,%rsp
   1afcb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1afcf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1afd3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   1afd7:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1afdb:	48 89 c7             	mov    %rax,%rdi
   1afde:	e8 31 06 00 00       	call   1b614 <_ZSt19__iterator_categoryIPP15VkFramebuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1afe3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1afe7:	48 89 c7             	mov    %rax,%rdi
   1afea:	e8 9b b6 fe ff       	call   668a <_ZSt17__size_to_integerm>
   1afef:	48 89 c1             	mov    %rax,%rcx
   1aff2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aff6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1affa:	48 89 ce             	mov    %rcx,%rsi
   1affd:	48 89 c7             	mov    %rax,%rdi
   1b000:	e8 1a 06 00 00       	call   1b61f <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   1b005:	c9                   	leave
   1b006:	c3                   	ret
   1b007:	90                   	nop

000000000001b008 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1b008:	55                   	push   %rbp
   1b009:	48 89 e5             	mov    %rsp,%rbp
   1b00c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1b010:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1b017:	ff ff 0f 
      }
   1b01a:	5d                   	pop    %rbp
   1b01b:	c3                   	ret

000000000001b01c <_ZSt4copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   1b01c:	55                   	push   %rbp
   1b01d:	48 89 e5             	mov    %rsp,%rbp
   1b020:	53                   	push   %rbx
   1b021:	48 83 ec 28          	sub    $0x28,%rsp
   1b025:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b029:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1b02d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   1b031:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b035:	48 89 c7             	mov    %rax,%rdi
   1b038:	e8 3f 06 00 00       	call   1b67c <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>
   1b03d:	48 89 c3             	mov    %rax,%rbx
   1b040:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b044:	48 89 c7             	mov    %rax,%rdi
   1b047:	e8 30 06 00 00       	call   1b67c <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>
   1b04c:	48 89 c1             	mov    %rax,%rcx
   1b04f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b053:	48 89 c2             	mov    %rax,%rdx
   1b056:	48 89 de             	mov    %rbx,%rsi
   1b059:	48 89 cf             	mov    %rcx,%rdi
   1b05c:	e8 29 06 00 00       	call   1b68a <_ZSt13__copy_move_aILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
    }
   1b061:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1b065:	c9                   	leave
   1b066:	c3                   	ret
   1b067:	90                   	nop

000000000001b068 <_ZNKSt15__new_allocatorIP13VkSemaphore_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1b068:	55                   	push   %rbp
   1b069:	48 89 e5             	mov    %rsp,%rbp
   1b06c:	48 83 ec 10          	sub    $0x10,%rsp
   1b070:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1b074:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b078:	48 89 c7             	mov    %rax,%rdi
   1b07b:	e8 7c 00 00 00       	call   1b0fc <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>
   1b080:	c9                   	leave
   1b081:	c3                   	ret

000000000001b082 <_ZSt11__addressofIP13VkSemaphore_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1b082:	55                   	push   %rbp
   1b083:	48 89 e5             	mov    %rsp,%rbp
   1b086:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1b08a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b08e:	5d                   	pop    %rbp
   1b08f:	c3                   	ret

000000000001b090 <_ZSt10_ConstructIP13VkSemaphore_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1b090:	55                   	push   %rbp
   1b091:	48 89 e5             	mov    %rsp,%rbp
   1b094:	48 83 ec 10          	sub    $0x10,%rsp
   1b098:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1b09c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b0a0:	48 89 c6             	mov    %rax,%rsi
   1b0a3:	bf 08 00 00 00       	mov    $0x8,%edi
   1b0a8:	e8 cb b5 fe ff       	call   6678 <_ZnwmPv>
   1b0ad:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   1b0b4:	90                   	nop
   1b0b5:	c9                   	leave
   1b0b6:	c3                   	ret

000000000001b0b7 <_ZSt6fill_nIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1b0b7:	55                   	push   %rbp
   1b0b8:	48 89 e5             	mov    %rsp,%rbp
   1b0bb:	48 83 ec 20          	sub    $0x20,%rsp
   1b0bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b0c3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b0c7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   1b0cb:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1b0cf:	48 89 c7             	mov    %rax,%rdi
   1b0d2:	e8 1d 06 00 00       	call   1b6f4 <_ZSt19__iterator_categoryIPP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1b0d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b0db:	48 89 c7             	mov    %rax,%rdi
   1b0de:	e8 a7 b5 fe ff       	call   668a <_ZSt17__size_to_integerm>
   1b0e3:	48 89 c1             	mov    %rax,%rcx
   1b0e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b0ea:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b0ee:	48 89 ce             	mov    %rcx,%rsi
   1b0f1:	48 89 c7             	mov    %rax,%rdi
   1b0f4:	e8 06 06 00 00       	call   1b6ff <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   1b0f9:	c9                   	leave
   1b0fa:	c3                   	ret
   1b0fb:	90                   	nop

000000000001b0fc <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1b0fc:	55                   	push   %rbp
   1b0fd:	48 89 e5             	mov    %rsp,%rbp
   1b100:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1b104:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1b10b:	ff ff 0f 
      }
   1b10e:	5d                   	pop    %rbp
   1b10f:	c3                   	ret

000000000001b110 <_ZNKSt15__new_allocatorIP9VkFence_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1b110:	55                   	push   %rbp
   1b111:	48 89 e5             	mov    %rsp,%rbp
   1b114:	48 83 ec 10          	sub    $0x10,%rsp
   1b118:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1b11c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b120:	48 89 c7             	mov    %rax,%rdi
   1b123:	e8 7c 00 00 00       	call   1b1a4 <_ZNKSt15__new_allocatorIP9VkFence_TE11_M_max_sizeEv>
   1b128:	c9                   	leave
   1b129:	c3                   	ret

000000000001b12a <_ZSt11__addressofIP9VkFence_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1b12a:	55                   	push   %rbp
   1b12b:	48 89 e5             	mov    %rsp,%rbp
   1b12e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1b132:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b136:	5d                   	pop    %rbp
   1b137:	c3                   	ret

000000000001b138 <_ZSt10_ConstructIP9VkFence_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1b138:	55                   	push   %rbp
   1b139:	48 89 e5             	mov    %rsp,%rbp
   1b13c:	48 83 ec 10          	sub    $0x10,%rsp
   1b140:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1b144:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b148:	48 89 c6             	mov    %rax,%rsi
   1b14b:	bf 08 00 00 00       	mov    $0x8,%edi
   1b150:	e8 23 b5 fe ff       	call   6678 <_ZnwmPv>
   1b155:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   1b15c:	90                   	nop
   1b15d:	c9                   	leave
   1b15e:	c3                   	ret

000000000001b15f <_ZSt6fill_nIPP9VkFence_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1b15f:	55                   	push   %rbp
   1b160:	48 89 e5             	mov    %rsp,%rbp
   1b163:	48 83 ec 20          	sub    $0x20,%rsp
   1b167:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b16b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b16f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   1b173:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1b177:	48 89 c7             	mov    %rax,%rdi
   1b17a:	e8 dd 05 00 00       	call   1b75c <_ZSt19__iterator_categoryIPP9VkFence_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1b17f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b183:	48 89 c7             	mov    %rax,%rdi
   1b186:	e8 ff b4 fe ff       	call   668a <_ZSt17__size_to_integerm>
   1b18b:	48 89 c1             	mov    %rax,%rcx
   1b18e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b192:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b196:	48 89 ce             	mov    %rcx,%rsi
   1b199:	48 89 c7             	mov    %rax,%rdi
   1b19c:	e8 c6 05 00 00       	call   1b767 <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   1b1a1:	c9                   	leave
   1b1a2:	c3                   	ret
   1b1a3:	90                   	nop

000000000001b1a4 <_ZNKSt15__new_allocatorIP9VkFence_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1b1a4:	55                   	push   %rbp
   1b1a5:	48 89 e5             	mov    %rsp,%rbp
   1b1a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1b1ac:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1b1b3:	ff ff 0f 
      }
   1b1b6:	5d                   	pop    %rbp
   1b1b7:	c3                   	ret

000000000001b1b8 <_ZSt4copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   1b1b8:	55                   	push   %rbp
   1b1b9:	48 89 e5             	mov    %rsp,%rbp
   1b1bc:	53                   	push   %rbx
   1b1bd:	48 83 ec 28          	sub    $0x28,%rsp
   1b1c1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b1c5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1b1c9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   1b1cd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b1d1:	48 89 c7             	mov    %rax,%rdi
   1b1d4:	e8 eb 05 00 00       	call   1b7c4 <_ZSt12__miter_baseIPKP13VkSemaphore_TET_S4_>
   1b1d9:	48 89 c3             	mov    %rax,%rbx
   1b1dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b1e0:	48 89 c7             	mov    %rax,%rdi
   1b1e3:	e8 dc 05 00 00       	call   1b7c4 <_ZSt12__miter_baseIPKP13VkSemaphore_TET_S4_>
   1b1e8:	48 89 c1             	mov    %rax,%rcx
   1b1eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b1ef:	48 89 c2             	mov    %rax,%rdx
   1b1f2:	48 89 de             	mov    %rbx,%rsi
   1b1f5:	48 89 cf             	mov    %rcx,%rdi
   1b1f8:	e8 d5 05 00 00       	call   1b7d2 <_ZSt13__copy_move_aILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>
    }
   1b1fd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1b201:	c9                   	leave
   1b202:	c3                   	ret
   1b203:	90                   	nop

000000000001b204 <_ZNKSt15__new_allocatorIjE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1b204:	55                   	push   %rbp
   1b205:	48 89 e5             	mov    %rsp,%rbp
   1b208:	48 83 ec 10          	sub    $0x10,%rsp
   1b20c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1b210:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b214:	48 89 c7             	mov    %rax,%rdi
   1b217:	e8 02 00 00 00       	call   1b21e <_ZNKSt15__new_allocatorIjE11_M_max_sizeEv>
   1b21c:	c9                   	leave
   1b21d:	c3                   	ret

000000000001b21e <_ZNKSt15__new_allocatorIjE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1b21e:	55                   	push   %rbp
   1b21f:	48 89 e5             	mov    %rsp,%rbp
   1b222:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1b226:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1b22d:	ff ff 1f 
      }
   1b230:	5d                   	pop    %rbp
   1b231:	c3                   	ret

000000000001b232 <_ZSt4copyIPKjPjET0_T_S4_S3_>:
    copy(_II __first, _II __last, _OI __result)
   1b232:	55                   	push   %rbp
   1b233:	48 89 e5             	mov    %rsp,%rbp
   1b236:	53                   	push   %rbx
   1b237:	48 83 ec 28          	sub    $0x28,%rsp
   1b23b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b23f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1b243:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   1b247:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b24b:	48 89 c7             	mov    %rax,%rdi
   1b24e:	e8 e9 05 00 00       	call   1b83c <_ZSt12__miter_baseIPKjET_S2_>
   1b253:	48 89 c3             	mov    %rax,%rbx
   1b256:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b25a:	48 89 c7             	mov    %rax,%rdi
   1b25d:	e8 da 05 00 00       	call   1b83c <_ZSt12__miter_baseIPKjET_S2_>
   1b262:	48 89 c1             	mov    %rax,%rcx
   1b265:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b269:	48 89 c2             	mov    %rax,%rdx
   1b26c:	48 89 de             	mov    %rbx,%rsi
   1b26f:	48 89 cf             	mov    %rcx,%rdi
   1b272:	e8 d3 05 00 00       	call   1b84a <_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_>
    }
   1b277:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1b27b:	c9                   	leave
   1b27c:	c3                   	ret

000000000001b27d <_ZSt12__miter_baseIPKPKcET_S4_>:
    __miter_base(_Iterator __it)
   1b27d:	55                   	push   %rbp
   1b27e:	48 89 e5             	mov    %rsp,%rbp
   1b281:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1b285:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b289:	5d                   	pop    %rbp
   1b28a:	c3                   	ret

000000000001b28b <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1b28b:	55                   	push   %rbp
   1b28c:	48 89 e5             	mov    %rsp,%rbp
   1b28f:	41 54                	push   %r12
   1b291:	53                   	push   %rbx
   1b292:	48 83 ec 20          	sub    $0x20,%rsp
   1b296:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b29a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1b29e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   1b2a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b2a6:	48 89 c7             	mov    %rax,%rdi
   1b2a9:	e8 7a ee ff ff       	call   1a128 <_ZSt12__niter_baseIPPKcET_S3_>
   1b2ae:	49 89 c4             	mov    %rax,%r12
   1b2b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b2b5:	48 89 c7             	mov    %rax,%rdi
   1b2b8:	e8 f7 05 00 00       	call   1b8b4 <_ZSt12__niter_baseIPKPKcET_S4_>
   1b2bd:	48 89 c3             	mov    %rax,%rbx
   1b2c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b2c4:	48 89 c7             	mov    %rax,%rdi
   1b2c7:	e8 e8 05 00 00       	call   1b8b4 <_ZSt12__niter_baseIPKPKcET_S4_>
   1b2cc:	4c 89 e2             	mov    %r12,%rdx
   1b2cf:	48 89 de             	mov    %rbx,%rsi
   1b2d2:	48 89 c7             	mov    %rax,%rdi
   1b2d5:	e8 e8 05 00 00       	call   1b8c2 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   1b2da:	48 89 c2             	mov    %rax,%rdx
   1b2dd:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1b2e1:	48 89 d6             	mov    %rdx,%rsi
   1b2e4:	48 89 c7             	mov    %rax,%rdi
   1b2e7:	e8 03 06 00 00       	call   1b8ef <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
   1b2ec:	48 83 c4 20          	add    $0x20,%rsp
   1b2f0:	5b                   	pop    %rbx
   1b2f1:	41 5c                	pop    %r12
   1b2f3:	5d                   	pop    %rbp
   1b2f4:	c3                   	ret
   1b2f5:	90                   	nop

000000000001b2f6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1b2f6:	55                   	push   %rbp
   1b2f7:	48 89 e5             	mov    %rsp,%rbp
   1b2fa:	48 83 ec 20          	sub    $0x20,%rsp
   1b2fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b302:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b306:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1b30a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b30e:	48 89 c7             	mov    %rax,%rdi
   1b311:	e8 ec 05 00 00       	call   1b902 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
   1b316:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1b31a:	0f 92 c0             	setb   %al
   1b31d:	0f b6 c0             	movzbl %al,%eax
   1b320:	48 85 c0             	test   %rax,%rax
   1b323:	0f 95 c0             	setne  %al
   1b326:	84 c0                	test   %al,%al
   1b328:	74 1a                	je     1b344 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1b32a:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
   1b331:	38 8e 03 
   1b334:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1b338:	73 05                	jae    1b33f <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1b33a:	e8 d1 8f fe ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1b33f:	e8 cc 8d fe ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1b344:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b348:	48 89 d0             	mov    %rdx,%rax
   1b34b:	48 c1 e0 03          	shl    $0x3,%rax
   1b34f:	48 01 d0             	add    %rdx,%rax
   1b352:	48 c1 e0 03          	shl    $0x3,%rax
   1b356:	48 89 c7             	mov    %rax,%rdi
   1b359:	e8 22 91 fe ff       	call   4480 <_Znwm@plt>
   1b35e:	90                   	nop
      }
   1b35f:	c9                   	leave
   1b360:	c3                   	ret
   1b361:	90                   	nop

000000000001b362 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
   1b362:	55                   	push   %rbp
   1b363:	48 89 e5             	mov    %rsp,%rbp
   1b366:	48 83 ec 10          	sub    $0x10,%rsp
   1b36a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b36e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b372:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b376:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b37a:	48 89 d6             	mov    %rdx,%rsi
   1b37d:	48 89 c7             	mov    %rax,%rdi
   1b380:	e8 91 05 00 00       	call   1b916 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   1b385:	90                   	nop
   1b386:	c9                   	leave
   1b387:	c3                   	ret

000000000001b388 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   1b388:	55                   	push   %rbp
   1b389:	48 89 e5             	mov    %rsp,%rbp
   1b38c:	41 56                	push   %r14
   1b38e:	41 55                	push   %r13
   1b390:	41 54                	push   %r12
   1b392:	53                   	push   %rbx
   1b393:	48 83 ec 40          	sub    $0x40,%rsp
   1b397:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1b39b:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   1b39f:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   1b3a3:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   1b3a7:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   1b3ab:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
   1b3af:	48 89 de             	mov    %rbx,%rsi
   1b3b2:	bf 28 00 00 00       	mov    $0x28,%edi
   1b3b7:	e8 bc b2 fe ff       	call   6678 <_ZnwmPv>
   1b3bc:	49 89 c4             	mov    %rax,%r12
   1b3bf:	41 be 01 00 00 00    	mov    $0x1,%r14d
   1b3c5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1b3c9:	48 89 c7             	mov    %rax,%rdi
   1b3cc:	e8 ac c5 ff ff       	call   1797d <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1b3d1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1b3d5:	48 89 c7             	mov    %rax,%rdi
   1b3d8:	e8 92 c5 ff ff       	call   1796f <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1b3dd:	48 89 c2             	mov    %rax,%rdx
   1b3e0:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1b3e4:	48 89 d6             	mov    %rdx,%rsi
   1b3e7:	48 89 c7             	mov    %rax,%rdi
   1b3ea:	e8 73 ff ff ff       	call   1b362 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   1b3ef:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1b3f3:	48 89 c7             	mov    %rax,%rdi
   1b3f6:	e8 66 c5 ff ff       	call   17961 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1b3fb:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1b3ff:	48 89 c6             	mov    %rax,%rsi
   1b402:	4c 89 e7             	mov    %r12,%rdi
   1b405:	e8 2a 05 00 00       	call   1b934 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
   1b40a:	eb 1e                	jmp    1b42a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0xa2>
   1b40c:	49 89 c5             	mov    %rax,%r13
   1b40f:	45 84 f6             	test   %r14b,%r14b
   1b412:	74 0b                	je     1b41f <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0x97>
   1b414:	48 89 de             	mov    %rbx,%rsi
   1b417:	4c 89 e7             	mov    %r12,%rdi
   1b41a:	e8 82 80 ff ff       	call   134a1 <_ZdlPvS_>
   1b41f:	4c 89 e8             	mov    %r13,%rax
   1b422:	48 89 c7             	mov    %rax,%rdi
   1b425:	e8 d6 94 fe ff       	call   4900 <_Unwind_Resume@plt>
   1b42a:	48 83 c4 40          	add    $0x40,%rsp
   1b42e:	5b                   	pop    %rbx
   1b42f:	41 5c                	pop    %r12
   1b431:	41 5d                	pop    %r13
   1b433:	41 5e                	pop    %r14
   1b435:	5d                   	pop    %rbp
   1b436:	c3                   	ret
   1b437:	90                   	nop

000000000001b438 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
   1b438:	55                   	push   %rbp
   1b439:	48 89 e5             	mov    %rsp,%rbp
   1b43c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
   1b440:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b444:	5d                   	pop    %rbp
   1b445:	c3                   	ret

000000000001b446 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1b446:	55                   	push   %rbp
   1b447:	48 89 e5             	mov    %rsp,%rbp
   1b44a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1b44e:	90                   	nop
   1b44f:	5d                   	pop    %rbp
   1b450:	c3                   	ret

000000000001b451 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1b451:	55                   	push   %rbp
   1b452:	48 89 e5             	mov    %rsp,%rbp
   1b455:	48 83 ec 20          	sub    $0x20,%rsp
   1b459:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b45d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b461:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1b465:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1b46a:	75 06                	jne    1b472 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1b46c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b470:	eb 3a                	jmp    1b4ac <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1b472:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b476:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b47d:	00 
   1b47e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b482:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1b486:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b48a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b48e:	48 89 ce             	mov    %rcx,%rsi
   1b491:	48 89 c7             	mov    %rax,%rdi
   1b494:	e8 c5 04 00 00       	call   1b95e <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1b499:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b49d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b4a4:	00 
   1b4a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b4a9:	48 01 d0             	add    %rdx,%rax
    }
   1b4ac:	c9                   	leave
   1b4ad:	c3                   	ret

000000000001b4ae <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>:
    __miter_base(_Iterator __it)
   1b4ae:	55                   	push   %rbp
   1b4af:	48 89 e5             	mov    %rsp,%rbp
   1b4b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1b4b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b4ba:	5d                   	pop    %rbp
   1b4bb:	c3                   	ret

000000000001b4bc <_ZSt13__copy_move_aILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1b4bc:	55                   	push   %rbp
   1b4bd:	48 89 e5             	mov    %rsp,%rbp
   1b4c0:	41 54                	push   %r12
   1b4c2:	53                   	push   %rbx
   1b4c3:	48 83 ec 20          	sub    $0x20,%rsp
   1b4c7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b4cb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1b4cf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   1b4d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b4d7:	48 89 c7             	mov    %rax,%rdi
   1b4da:	e8 bb 04 00 00       	call   1b99a <_ZSt12__niter_baseIP28VkGraphicsPipelineCreateInfoET_S2_>
   1b4df:	49 89 c4             	mov    %rax,%r12
   1b4e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b4e6:	48 89 c7             	mov    %rax,%rdi
   1b4e9:	e8 9e 04 00 00       	call   1b98c <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   1b4ee:	48 89 c3             	mov    %rax,%rbx
   1b4f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b4f5:	48 89 c7             	mov    %rax,%rdi
   1b4f8:	e8 8f 04 00 00       	call   1b98c <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   1b4fd:	4c 89 e2             	mov    %r12,%rdx
   1b500:	48 89 de             	mov    %rbx,%rsi
   1b503:	48 89 c7             	mov    %rax,%rdi
   1b506:	e8 9d 04 00 00       	call   1b9a8 <_ZSt14__copy_move_a1ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
   1b50b:	48 89 c2             	mov    %rax,%rdx
   1b50e:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1b512:	48 89 d6             	mov    %rdx,%rsi
   1b515:	48 89 c7             	mov    %rax,%rdi
   1b518:	e8 b8 04 00 00       	call   1b9d5 <_ZSt12__niter_wrapIP28VkGraphicsPipelineCreateInfoET_RKS2_S2_>
    }
   1b51d:	48 83 c4 20          	add    $0x20,%rsp
   1b521:	5b                   	pop    %rbx
   1b522:	41 5c                	pop    %r12
   1b524:	5d                   	pop    %rbp
   1b525:	c3                   	ret

000000000001b526 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1b526:	55                   	push   %rbp
   1b527:	48 89 e5             	mov    %rsp,%rbp
   1b52a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1b52e:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1b535:	ff ff 0f 
      }
   1b538:	5d                   	pop    %rbp
   1b539:	c3                   	ret

000000000001b53a <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1b53a:	55                   	push   %rbp
   1b53b:	48 89 e5             	mov    %rsp,%rbp
   1b53e:	48 83 ec 20          	sub    $0x20,%rsp
   1b542:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b546:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b54a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1b54e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b552:	48 89 c7             	mov    %rax,%rdi
   1b555:	e8 cc ff ff ff       	call   1b526 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   1b55a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1b55e:	0f 92 c0             	setb   %al
   1b561:	0f b6 c0             	movzbl %al,%eax
   1b564:	48 85 c0             	test   %rax,%rax
   1b567:	0f 95 c0             	setne  %al
   1b56a:	84 c0                	test   %al,%al
   1b56c:	74 1a                	je     1b588 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1b56e:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1b575:	ff ff 1f 
   1b578:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1b57c:	73 05                	jae    1b583 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1b57e:	e8 8d 8d fe ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1b583:	e8 88 8b fe ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1b588:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b58c:	48 c1 e0 03          	shl    $0x3,%rax
   1b590:	48 89 c7             	mov    %rax,%rdi
   1b593:	e8 e8 8e fe ff       	call   4480 <_Znwm@plt>
   1b598:	90                   	nop
      }
   1b599:	c9                   	leave
   1b59a:	c3                   	ret

000000000001b59b <_ZSt11__addressofIP12VkPipeline_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1b59b:	55                   	push   %rbp
   1b59c:	48 89 e5             	mov    %rsp,%rbp
   1b59f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1b5a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b5a7:	5d                   	pop    %rbp
   1b5a8:	c3                   	ret

000000000001b5a9 <_ZSt10_ConstructIP12VkPipeline_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1b5a9:	55                   	push   %rbp
   1b5aa:	48 89 e5             	mov    %rsp,%rbp
   1b5ad:	48 83 ec 10          	sub    $0x10,%rsp
   1b5b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1b5b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b5b9:	48 89 c6             	mov    %rax,%rsi
   1b5bc:	bf 08 00 00 00       	mov    $0x8,%edi
   1b5c1:	e8 b2 b0 fe ff       	call   6678 <_ZnwmPv>
   1b5c6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   1b5cd:	90                   	nop
   1b5ce:	c9                   	leave
   1b5cf:	c3                   	ret

000000000001b5d0 <_ZSt6fill_nIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1b5d0:	55                   	push   %rbp
   1b5d1:	48 89 e5             	mov    %rsp,%rbp
   1b5d4:	48 83 ec 20          	sub    $0x20,%rsp
   1b5d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b5dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b5e0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   1b5e4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1b5e8:	48 89 c7             	mov    %rax,%rdi
   1b5eb:	e8 f7 03 00 00       	call   1b9e7 <_ZSt19__iterator_categoryIPP12VkPipeline_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1b5f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b5f4:	48 89 c7             	mov    %rax,%rdi
   1b5f7:	e8 8e b0 fe ff       	call   668a <_ZSt17__size_to_integerm>
   1b5fc:	48 89 c1             	mov    %rax,%rcx
   1b5ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b603:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b607:	48 89 ce             	mov    %rcx,%rsi
   1b60a:	48 89 c7             	mov    %rax,%rdi
   1b60d:	e8 e0 03 00 00       	call   1b9f2 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   1b612:	c9                   	leave
   1b613:	c3                   	ret

000000000001b614 <_ZSt19__iterator_categoryIPP15VkFramebuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1b614:	55                   	push   %rbp
   1b615:	48 89 e5             	mov    %rsp,%rbp
   1b618:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1b61c:	90                   	nop
   1b61d:	5d                   	pop    %rbp
   1b61e:	c3                   	ret

000000000001b61f <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1b61f:	55                   	push   %rbp
   1b620:	48 89 e5             	mov    %rsp,%rbp
   1b623:	48 83 ec 20          	sub    $0x20,%rsp
   1b627:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b62b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b62f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1b633:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1b638:	75 06                	jne    1b640 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1b63a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b63e:	eb 3a                	jmp    1b67a <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1b640:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b644:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b64b:	00 
   1b64c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b650:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1b654:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b658:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b65c:	48 89 ce             	mov    %rcx,%rsi
   1b65f:	48 89 c7             	mov    %rax,%rdi
   1b662:	e8 e8 03 00 00       	call   1ba4f <_ZSt8__fill_aIPP15VkFramebuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1b667:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b66b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b672:	00 
   1b673:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b677:	48 01 d0             	add    %rdx,%rax
    }
   1b67a:	c9                   	leave
   1b67b:	c3                   	ret

000000000001b67c <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>:
    __miter_base(_Iterator __it)
   1b67c:	55                   	push   %rbp
   1b67d:	48 89 e5             	mov    %rsp,%rbp
   1b680:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1b684:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b688:	5d                   	pop    %rbp
   1b689:	c3                   	ret

000000000001b68a <_ZSt13__copy_move_aILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1b68a:	55                   	push   %rbp
   1b68b:	48 89 e5             	mov    %rsp,%rbp
   1b68e:	41 54                	push   %r12
   1b690:	53                   	push   %rbx
   1b691:	48 83 ec 20          	sub    $0x20,%rsp
   1b695:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b699:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1b69d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   1b6a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b6a5:	48 89 c7             	mov    %rax,%rdi
   1b6a8:	e8 02 ee ff ff       	call   1a4af <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   1b6ad:	49 89 c4             	mov    %rax,%r12
   1b6b0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b6b4:	48 89 c7             	mov    %rax,%rdi
   1b6b7:	e8 c1 03 00 00       	call   1ba7d <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>
   1b6bc:	48 89 c3             	mov    %rax,%rbx
   1b6bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b6c3:	48 89 c7             	mov    %rax,%rdi
   1b6c6:	e8 b2 03 00 00       	call   1ba7d <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>
   1b6cb:	4c 89 e2             	mov    %r12,%rdx
   1b6ce:	48 89 de             	mov    %rbx,%rsi
   1b6d1:	48 89 c7             	mov    %rax,%rdi
   1b6d4:	e8 b2 03 00 00       	call   1ba8b <_ZSt14__copy_move_a1ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
   1b6d9:	48 89 c2             	mov    %rax,%rdx
   1b6dc:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1b6e0:	48 89 d6             	mov    %rdx,%rsi
   1b6e3:	48 89 c7             	mov    %rax,%rdi
   1b6e6:	e8 cd 03 00 00       	call   1bab8 <_ZSt12__niter_wrapIPP13VkImageView_TET_RKS3_S3_>
    }
   1b6eb:	48 83 c4 20          	add    $0x20,%rsp
   1b6ef:	5b                   	pop    %rbx
   1b6f0:	41 5c                	pop    %r12
   1b6f2:	5d                   	pop    %rbp
   1b6f3:	c3                   	ret

000000000001b6f4 <_ZSt19__iterator_categoryIPP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1b6f4:	55                   	push   %rbp
   1b6f5:	48 89 e5             	mov    %rsp,%rbp
   1b6f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1b6fc:	90                   	nop
   1b6fd:	5d                   	pop    %rbp
   1b6fe:	c3                   	ret

000000000001b6ff <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1b6ff:	55                   	push   %rbp
   1b700:	48 89 e5             	mov    %rsp,%rbp
   1b703:	48 83 ec 20          	sub    $0x20,%rsp
   1b707:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b70b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b70f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1b713:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1b718:	75 06                	jne    1b720 <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1b71a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b71e:	eb 3a                	jmp    1b75a <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1b720:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b724:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b72b:	00 
   1b72c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b730:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1b734:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b738:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b73c:	48 89 ce             	mov    %rcx,%rsi
   1b73f:	48 89 c7             	mov    %rax,%rdi
   1b742:	e8 83 03 00 00       	call   1baca <_ZSt8__fill_aIPP13VkSemaphore_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1b747:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b74b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b752:	00 
   1b753:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b757:	48 01 d0             	add    %rdx,%rax
    }
   1b75a:	c9                   	leave
   1b75b:	c3                   	ret

000000000001b75c <_ZSt19__iterator_categoryIPP9VkFence_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1b75c:	55                   	push   %rbp
   1b75d:	48 89 e5             	mov    %rsp,%rbp
   1b760:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1b764:	90                   	nop
   1b765:	5d                   	pop    %rbp
   1b766:	c3                   	ret

000000000001b767 <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1b767:	55                   	push   %rbp
   1b768:	48 89 e5             	mov    %rsp,%rbp
   1b76b:	48 83 ec 20          	sub    $0x20,%rsp
   1b76f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b773:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b777:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1b77b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1b780:	75 06                	jne    1b788 <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1b782:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b786:	eb 3a                	jmp    1b7c2 <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1b788:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b78c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b793:	00 
   1b794:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b798:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1b79c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b7a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b7a4:	48 89 ce             	mov    %rcx,%rsi
   1b7a7:	48 89 c7             	mov    %rax,%rdi
   1b7aa:	e8 49 03 00 00       	call   1baf8 <_ZSt8__fill_aIPP9VkFence_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1b7af:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b7b3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b7ba:	00 
   1b7bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b7bf:	48 01 d0             	add    %rdx,%rax
    }
   1b7c2:	c9                   	leave
   1b7c3:	c3                   	ret

000000000001b7c4 <_ZSt12__miter_baseIPKP13VkSemaphore_TET_S4_>:
    __miter_base(_Iterator __it)
   1b7c4:	55                   	push   %rbp
   1b7c5:	48 89 e5             	mov    %rsp,%rbp
   1b7c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1b7cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b7d0:	5d                   	pop    %rbp
   1b7d1:	c3                   	ret

000000000001b7d2 <_ZSt13__copy_move_aILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1b7d2:	55                   	push   %rbp
   1b7d3:	48 89 e5             	mov    %rsp,%rbp
   1b7d6:	41 54                	push   %r12
   1b7d8:	53                   	push   %rbx
   1b7d9:	48 83 ec 20          	sub    $0x20,%rsp
   1b7dd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b7e1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1b7e5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   1b7e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b7ed:	48 89 c7             	mov    %rax,%rdi
   1b7f0:	e8 5a f1 ff ff       	call   1a94f <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   1b7f5:	49 89 c4             	mov    %rax,%r12
   1b7f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b7fc:	48 89 c7             	mov    %rax,%rdi
   1b7ff:	e8 22 03 00 00       	call   1bb26 <_ZSt12__niter_baseIPKP13VkSemaphore_TET_S4_>
   1b804:	48 89 c3             	mov    %rax,%rbx
   1b807:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b80b:	48 89 c7             	mov    %rax,%rdi
   1b80e:	e8 13 03 00 00       	call   1bb26 <_ZSt12__niter_baseIPKP13VkSemaphore_TET_S4_>
   1b813:	4c 89 e2             	mov    %r12,%rdx
   1b816:	48 89 de             	mov    %rbx,%rsi
   1b819:	48 89 c7             	mov    %rax,%rdi
   1b81c:	e8 13 03 00 00       	call   1bb34 <_ZSt14__copy_move_a1ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>
   1b821:	48 89 c2             	mov    %rax,%rdx
   1b824:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1b828:	48 89 d6             	mov    %rdx,%rsi
   1b82b:	48 89 c7             	mov    %rax,%rdi
   1b82e:	e8 2e 03 00 00       	call   1bb61 <_ZSt12__niter_wrapIPP13VkSemaphore_TET_RKS3_S3_>
    }
   1b833:	48 83 c4 20          	add    $0x20,%rsp
   1b837:	5b                   	pop    %rbx
   1b838:	41 5c                	pop    %r12
   1b83a:	5d                   	pop    %rbp
   1b83b:	c3                   	ret

000000000001b83c <_ZSt12__miter_baseIPKjET_S2_>:
    __miter_base(_Iterator __it)
   1b83c:	55                   	push   %rbp
   1b83d:	48 89 e5             	mov    %rsp,%rbp
   1b840:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1b844:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b848:	5d                   	pop    %rbp
   1b849:	c3                   	ret

000000000001b84a <_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1b84a:	55                   	push   %rbp
   1b84b:	48 89 e5             	mov    %rsp,%rbp
   1b84e:	41 54                	push   %r12
   1b850:	53                   	push   %rbx
   1b851:	48 83 ec 20          	sub    $0x20,%rsp
   1b855:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b859:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1b85d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   1b861:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b865:	48 89 c7             	mov    %rax,%rdi
   1b868:	e8 14 03 00 00       	call   1bb81 <_ZSt12__niter_baseIPjET_S1_>
   1b86d:	49 89 c4             	mov    %rax,%r12
   1b870:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b874:	48 89 c7             	mov    %rax,%rdi
   1b877:	e8 f7 02 00 00       	call   1bb73 <_ZSt12__niter_baseIPKjET_S2_>
   1b87c:	48 89 c3             	mov    %rax,%rbx
   1b87f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b883:	48 89 c7             	mov    %rax,%rdi
   1b886:	e8 e8 02 00 00       	call   1bb73 <_ZSt12__niter_baseIPKjET_S2_>
   1b88b:	4c 89 e2             	mov    %r12,%rdx
   1b88e:	48 89 de             	mov    %rbx,%rsi
   1b891:	48 89 c7             	mov    %rax,%rdi
   1b894:	e8 f6 02 00 00       	call   1bb8f <_ZSt14__copy_move_a1ILb0EPKjPjET1_T0_S4_S3_>
   1b899:	48 89 c2             	mov    %rax,%rdx
   1b89c:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1b8a0:	48 89 d6             	mov    %rdx,%rsi
   1b8a3:	48 89 c7             	mov    %rax,%rdi
   1b8a6:	e8 11 03 00 00       	call   1bbbc <_ZSt12__niter_wrapIPjET_RKS1_S1_>
    }
   1b8ab:	48 83 c4 20          	add    $0x20,%rsp
   1b8af:	5b                   	pop    %rbx
   1b8b0:	41 5c                	pop    %r12
   1b8b2:	5d                   	pop    %rbp
   1b8b3:	c3                   	ret

000000000001b8b4 <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
   1b8b4:	55                   	push   %rbp
   1b8b5:	48 89 e5             	mov    %rsp,%rbp
   1b8b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1b8bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b8c0:	5d                   	pop    %rbp
   1b8c1:	c3                   	ret

000000000001b8c2 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1b8c2:	55                   	push   %rbp
   1b8c3:	48 89 e5             	mov    %rsp,%rbp
   1b8c6:	48 83 ec 20          	sub    $0x20,%rsp
   1b8ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b8ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b8d2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1b8d6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b8da:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1b8de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b8e2:	48 89 ce             	mov    %rcx,%rsi
   1b8e5:	48 89 c7             	mov    %rax,%rdi
   1b8e8:	e8 e1 02 00 00       	call   1bbce <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   1b8ed:	c9                   	leave
   1b8ee:	c3                   	ret

000000000001b8ef <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   1b8ef:	55                   	push   %rbp
   1b8f0:	48 89 e5             	mov    %rsp,%rbp
   1b8f3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b8f7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   1b8fb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b8ff:	5d                   	pop    %rbp
   1b900:	c3                   	ret
   1b901:	90                   	nop

000000000001b902 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1b902:	55                   	push   %rbp
   1b903:	48 89 e5             	mov    %rsp,%rbp
   1b906:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1b90a:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   1b911:	1c c7 01 
      }
   1b914:	5d                   	pop    %rbp
   1b915:	c3                   	ret

000000000001b916 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
   1b916:	55                   	push   %rbp
   1b917:	48 89 e5             	mov    %rsp,%rbp
   1b91a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b91e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
   1b922:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b926:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b92a:	48 8b 12             	mov    (%rdx),%rdx
   1b92d:	48 89 10             	mov    %rdx,(%rax)
      { }
   1b930:	90                   	nop
   1b931:	5d                   	pop    %rbp
   1b932:	c3                   	ret
   1b933:	90                   	nop

000000000001b934 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
   1b934:	55                   	push   %rbp
   1b935:	48 89 e5             	mov    %rsp,%rbp
   1b938:	48 83 ec 20          	sub    $0x20,%rsp
   1b93c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b940:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
   1b944:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   1b948:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1b94c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b950:	48 89 ce             	mov    %rcx,%rsi
   1b953:	48 89 c7             	mov    %rax,%rdi
   1b956:	e8 a1 02 00 00       	call   1bbfc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
   1b95b:	90                   	nop
   1b95c:	c9                   	leave
   1b95d:	c3                   	ret

000000000001b95e <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1b95e:	55                   	push   %rbp
   1b95f:	48 89 e5             	mov    %rsp,%rbp
   1b962:	48 83 ec 20          	sub    $0x20,%rsp
   1b966:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b96a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b96e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1b972:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b976:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1b97a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b97e:	48 89 ce             	mov    %rcx,%rsi
   1b981:	48 89 c7             	mov    %rax,%rdi
   1b984:	e8 bd 02 00 00       	call   1bc46 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1b989:	90                   	nop
   1b98a:	c9                   	leave
   1b98b:	c3                   	ret

000000000001b98c <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>:
    __niter_base(_Iterator __it)
   1b98c:	55                   	push   %rbp
   1b98d:	48 89 e5             	mov    %rsp,%rbp
   1b990:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1b994:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b998:	5d                   	pop    %rbp
   1b999:	c3                   	ret

000000000001b99a <_ZSt12__niter_baseIP28VkGraphicsPipelineCreateInfoET_S2_>:
    __niter_base(_Iterator __it)
   1b99a:	55                   	push   %rbp
   1b99b:	48 89 e5             	mov    %rsp,%rbp
   1b99e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1b9a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b9a6:	5d                   	pop    %rbp
   1b9a7:	c3                   	ret

000000000001b9a8 <_ZSt14__copy_move_a1ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1b9a8:	55                   	push   %rbp
   1b9a9:	48 89 e5             	mov    %rsp,%rbp
   1b9ac:	48 83 ec 20          	sub    $0x20,%rsp
   1b9b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b9b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b9b8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1b9bc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b9c0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1b9c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b9c8:	48 89 ce             	mov    %rcx,%rsi
   1b9cb:	48 89 c7             	mov    %rax,%rdi
   1b9ce:	e8 ae 02 00 00       	call   1bc81 <_ZSt14__copy_move_a2ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
   1b9d3:	c9                   	leave
   1b9d4:	c3                   	ret

000000000001b9d5 <_ZSt12__niter_wrapIP28VkGraphicsPipelineCreateInfoET_RKS2_S2_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   1b9d5:	55                   	push   %rbp
   1b9d6:	48 89 e5             	mov    %rsp,%rbp
   1b9d9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b9dd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   1b9e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b9e5:	5d                   	pop    %rbp
   1b9e6:	c3                   	ret

000000000001b9e7 <_ZSt19__iterator_categoryIPP12VkPipeline_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1b9e7:	55                   	push   %rbp
   1b9e8:	48 89 e5             	mov    %rsp,%rbp
   1b9eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1b9ef:	90                   	nop
   1b9f0:	5d                   	pop    %rbp
   1b9f1:	c3                   	ret

000000000001b9f2 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1b9f2:	55                   	push   %rbp
   1b9f3:	48 89 e5             	mov    %rsp,%rbp
   1b9f6:	48 83 ec 20          	sub    $0x20,%rsp
   1b9fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b9fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ba02:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1ba06:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1ba0b:	75 06                	jne    1ba13 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1ba0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ba11:	eb 3a                	jmp    1ba4d <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1ba13:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ba17:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ba1e:	00 
   1ba1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ba23:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1ba27:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1ba2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ba2f:	48 89 ce             	mov    %rcx,%rsi
   1ba32:	48 89 c7             	mov    %rax,%rdi
   1ba35:	e8 74 02 00 00       	call   1bcae <_ZSt8__fill_aIPP12VkPipeline_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1ba3a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ba3e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ba45:	00 
   1ba46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ba4a:	48 01 d0             	add    %rdx,%rax
    }
   1ba4d:	c9                   	leave
   1ba4e:	c3                   	ret

000000000001ba4f <_ZSt8__fill_aIPP15VkFramebuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1ba4f:	55                   	push   %rbp
   1ba50:	48 89 e5             	mov    %rsp,%rbp
   1ba53:	48 83 ec 20          	sub    $0x20,%rsp
   1ba57:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ba5b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ba5f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1ba63:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1ba67:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1ba6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ba6f:	48 89 ce             	mov    %rcx,%rsi
   1ba72:	48 89 c7             	mov    %rax,%rdi
   1ba75:	e8 62 02 00 00       	call   1bcdc <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1ba7a:	90                   	nop
   1ba7b:	c9                   	leave
   1ba7c:	c3                   	ret

000000000001ba7d <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>:
    __niter_base(_Iterator __it)
   1ba7d:	55                   	push   %rbp
   1ba7e:	48 89 e5             	mov    %rsp,%rbp
   1ba81:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1ba85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ba89:	5d                   	pop    %rbp
   1ba8a:	c3                   	ret

000000000001ba8b <_ZSt14__copy_move_a1ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1ba8b:	55                   	push   %rbp
   1ba8c:	48 89 e5             	mov    %rsp,%rbp
   1ba8f:	48 83 ec 20          	sub    $0x20,%rsp
   1ba93:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ba97:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ba9b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1ba9f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1baa3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1baa7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1baab:	48 89 ce             	mov    %rcx,%rsi
   1baae:	48 89 c7             	mov    %rax,%rdi
   1bab1:	e8 61 02 00 00       	call   1bd17 <_ZSt14__copy_move_a2ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
   1bab6:	c9                   	leave
   1bab7:	c3                   	ret

000000000001bab8 <_ZSt12__niter_wrapIPP13VkImageView_TET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   1bab8:	55                   	push   %rbp
   1bab9:	48 89 e5             	mov    %rsp,%rbp
   1babc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bac0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   1bac4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1bac8:	5d                   	pop    %rbp
   1bac9:	c3                   	ret

000000000001baca <_ZSt8__fill_aIPP13VkSemaphore_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1baca:	55                   	push   %rbp
   1bacb:	48 89 e5             	mov    %rsp,%rbp
   1bace:	48 83 ec 20          	sub    $0x20,%rsp
   1bad2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bad6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1bada:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1bade:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bae2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1bae6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1baea:	48 89 ce             	mov    %rcx,%rsi
   1baed:	48 89 c7             	mov    %rax,%rdi
   1baf0:	e8 4f 02 00 00       	call   1bd44 <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1baf5:	90                   	nop
   1baf6:	c9                   	leave
   1baf7:	c3                   	ret

000000000001baf8 <_ZSt8__fill_aIPP9VkFence_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1baf8:	55                   	push   %rbp
   1baf9:	48 89 e5             	mov    %rsp,%rbp
   1bafc:	48 83 ec 20          	sub    $0x20,%rsp
   1bb00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bb04:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1bb08:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1bb0c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bb10:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1bb14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bb18:	48 89 ce             	mov    %rcx,%rsi
   1bb1b:	48 89 c7             	mov    %rax,%rdi
   1bb1e:	e8 5c 02 00 00       	call   1bd7f <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1bb23:	90                   	nop
   1bb24:	c9                   	leave
   1bb25:	c3                   	ret

000000000001bb26 <_ZSt12__niter_baseIPKP13VkSemaphore_TET_S4_>:
    __niter_base(_Iterator __it)
   1bb26:	55                   	push   %rbp
   1bb27:	48 89 e5             	mov    %rsp,%rbp
   1bb2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1bb2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bb32:	5d                   	pop    %rbp
   1bb33:	c3                   	ret

000000000001bb34 <_ZSt14__copy_move_a1ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1bb34:	55                   	push   %rbp
   1bb35:	48 89 e5             	mov    %rsp,%rbp
   1bb38:	48 83 ec 20          	sub    $0x20,%rsp
   1bb3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bb40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1bb44:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1bb48:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bb4c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1bb50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bb54:	48 89 ce             	mov    %rcx,%rsi
   1bb57:	48 89 c7             	mov    %rax,%rdi
   1bb5a:	e8 5b 02 00 00       	call   1bdba <_ZSt14__copy_move_a2ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>
   1bb5f:	c9                   	leave
   1bb60:	c3                   	ret

000000000001bb61 <_ZSt12__niter_wrapIPP13VkSemaphore_TET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   1bb61:	55                   	push   %rbp
   1bb62:	48 89 e5             	mov    %rsp,%rbp
   1bb65:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bb69:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   1bb6d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1bb71:	5d                   	pop    %rbp
   1bb72:	c3                   	ret

000000000001bb73 <_ZSt12__niter_baseIPKjET_S2_>:
    __niter_base(_Iterator __it)
   1bb73:	55                   	push   %rbp
   1bb74:	48 89 e5             	mov    %rsp,%rbp
   1bb77:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1bb7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bb7f:	5d                   	pop    %rbp
   1bb80:	c3                   	ret

000000000001bb81 <_ZSt12__niter_baseIPjET_S1_>:
    __niter_base(_Iterator __it)
   1bb81:	55                   	push   %rbp
   1bb82:	48 89 e5             	mov    %rsp,%rbp
   1bb85:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1bb89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bb8d:	5d                   	pop    %rbp
   1bb8e:	c3                   	ret

000000000001bb8f <_ZSt14__copy_move_a1ILb0EPKjPjET1_T0_S4_S3_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1bb8f:	55                   	push   %rbp
   1bb90:	48 89 e5             	mov    %rsp,%rbp
   1bb93:	48 83 ec 20          	sub    $0x20,%rsp
   1bb97:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bb9b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1bb9f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1bba3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bba7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1bbab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bbaf:	48 89 ce             	mov    %rcx,%rsi
   1bbb2:	48 89 c7             	mov    %rax,%rdi
   1bbb5:	e8 2d 02 00 00       	call   1bde7 <_ZSt14__copy_move_a2ILb0EPKjPjET1_T0_S4_S3_>
   1bbba:	c9                   	leave
   1bbbb:	c3                   	ret

000000000001bbbc <_ZSt12__niter_wrapIPjET_RKS1_S1_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   1bbbc:	55                   	push   %rbp
   1bbbd:	48 89 e5             	mov    %rsp,%rbp
   1bbc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bbc4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   1bbc8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1bbcc:	5d                   	pop    %rbp
   1bbcd:	c3                   	ret

000000000001bbce <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1bbce:	55                   	push   %rbp
   1bbcf:	48 89 e5             	mov    %rsp,%rbp
   1bbd2:	48 83 ec 20          	sub    $0x20,%rsp
   1bbd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bbda:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1bbde:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1bbe2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bbe6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1bbea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bbee:	48 89 ce             	mov    %rcx,%rsi
   1bbf1:	48 89 c7             	mov    %rax,%rdi
   1bbf4:	e8 1b 02 00 00       	call   1be14 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
   1bbf9:	c9                   	leave
   1bbfa:	c3                   	ret
   1bbfb:	90                   	nop

000000000001bbfc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
   1bbfc:	55                   	push   %rbp
   1bbfd:	48 89 e5             	mov    %rsp,%rbp
   1bc00:	53                   	push   %rbx
   1bc01:	48 83 ec 28          	sub    $0x28,%rsp
   1bc05:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1bc09:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1bc0d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
   1bc11:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1bc15:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1bc19:	48 89 c7             	mov    %rax,%rdi
   1bc1c:	e8 52 02 00 00       	call   1be73 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
   1bc21:	48 89 c7             	mov    %rax,%rdi
   1bc24:	e8 64 02 00 00       	call   1be8d <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
   1bc29:	48 89 c6             	mov    %rax,%rsi
   1bc2c:	48 89 df             	mov    %rbx,%rdi
   1bc2f:	e8 2c 86 fe ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
   1bc34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bc38:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
   1bc3f:	90                   	nop
   1bc40:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1bc44:	c9                   	leave
   1bc45:	c3                   	ret

000000000001bc46 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1bc46:	55                   	push   %rbp
   1bc47:	48 89 e5             	mov    %rsp,%rbp
   1bc4a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1bc4e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1bc52:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1bc56:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bc5a:	48 8b 00             	mov    (%rax),%rax
   1bc5d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1bc61:	eb 10                	jmp    1bc73 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1bc63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bc67:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1bc6b:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1bc6e:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1bc73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bc77:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1bc7b:	75 e6                	jne    1bc63 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1bc7d:	90                   	nop
   1bc7e:	90                   	nop
   1bc7f:	5d                   	pop    %rbp
   1bc80:	c3                   	ret

000000000001bc81 <_ZSt14__copy_move_a2ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1bc81:	55                   	push   %rbp
   1bc82:	48 89 e5             	mov    %rsp,%rbp
   1bc85:	48 83 ec 20          	sub    $0x20,%rsp
   1bc89:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bc8d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1bc91:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1bc95:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bc99:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1bc9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bca1:	48 89 ce             	mov    %rcx,%rsi
   1bca4:	48 89 c7             	mov    %rax,%rdi
   1bca7:	e8 ef 01 00 00       	call   1be9b <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_>
    }
   1bcac:	c9                   	leave
   1bcad:	c3                   	ret

000000000001bcae <_ZSt8__fill_aIPP12VkPipeline_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1bcae:	55                   	push   %rbp
   1bcaf:	48 89 e5             	mov    %rsp,%rbp
   1bcb2:	48 83 ec 20          	sub    $0x20,%rsp
   1bcb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bcba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1bcbe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1bcc2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bcc6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1bcca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bcce:	48 89 ce             	mov    %rcx,%rsi
   1bcd1:	48 89 c7             	mov    %rax,%rdi
   1bcd4:	e8 44 02 00 00       	call   1bf1d <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1bcd9:	90                   	nop
   1bcda:	c9                   	leave
   1bcdb:	c3                   	ret

000000000001bcdc <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1bcdc:	55                   	push   %rbp
   1bcdd:	48 89 e5             	mov    %rsp,%rbp
   1bce0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1bce4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1bce8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1bcec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bcf0:	48 8b 00             	mov    (%rax),%rax
   1bcf3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1bcf7:	eb 10                	jmp    1bd09 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1bcf9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bcfd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1bd01:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1bd04:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1bd09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bd0d:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1bd11:	75 e6                	jne    1bcf9 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1bd13:	90                   	nop
   1bd14:	90                   	nop
   1bd15:	5d                   	pop    %rbp
   1bd16:	c3                   	ret

000000000001bd17 <_ZSt14__copy_move_a2ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1bd17:	55                   	push   %rbp
   1bd18:	48 89 e5             	mov    %rsp,%rbp
   1bd1b:	48 83 ec 20          	sub    $0x20,%rsp
   1bd1f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bd23:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1bd27:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1bd2b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bd2f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1bd33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bd37:	48 89 ce             	mov    %rcx,%rsi
   1bd3a:	48 89 c7             	mov    %rax,%rdi
   1bd3d:	e8 16 02 00 00       	call   1bf58 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_>
    }
   1bd42:	c9                   	leave
   1bd43:	c3                   	ret

000000000001bd44 <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1bd44:	55                   	push   %rbp
   1bd45:	48 89 e5             	mov    %rsp,%rbp
   1bd48:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1bd4c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1bd50:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1bd54:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bd58:	48 8b 00             	mov    (%rax),%rax
   1bd5b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1bd5f:	eb 10                	jmp    1bd71 <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1bd61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bd65:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1bd69:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1bd6c:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1bd71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bd75:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1bd79:	75 e6                	jne    1bd61 <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1bd7b:	90                   	nop
   1bd7c:	90                   	nop
   1bd7d:	5d                   	pop    %rbp
   1bd7e:	c3                   	ret

000000000001bd7f <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1bd7f:	55                   	push   %rbp
   1bd80:	48 89 e5             	mov    %rsp,%rbp
   1bd83:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1bd87:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1bd8b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1bd8f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bd93:	48 8b 00             	mov    (%rax),%rax
   1bd96:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1bd9a:	eb 10                	jmp    1bdac <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1bd9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bda0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1bda4:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1bda7:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1bdac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bdb0:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1bdb4:	75 e6                	jne    1bd9c <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1bdb6:	90                   	nop
   1bdb7:	90                   	nop
   1bdb8:	5d                   	pop    %rbp
   1bdb9:	c3                   	ret

000000000001bdba <_ZSt14__copy_move_a2ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1bdba:	55                   	push   %rbp
   1bdbb:	48 89 e5             	mov    %rsp,%rbp
   1bdbe:	48 83 ec 20          	sub    $0x20,%rsp
   1bdc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bdc6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1bdca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1bdce:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bdd2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1bdd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bdda:	48 89 ce             	mov    %rcx,%rsi
   1bddd:	48 89 c7             	mov    %rax,%rdi
   1bde0:	e8 d2 01 00 00       	call   1bfb7 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkSemaphore_TEEPT_PKS5_S8_S6_>
    }
   1bde5:	c9                   	leave
   1bde6:	c3                   	ret

000000000001bde7 <_ZSt14__copy_move_a2ILb0EPKjPjET1_T0_S4_S3_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1bde7:	55                   	push   %rbp
   1bde8:	48 89 e5             	mov    %rsp,%rbp
   1bdeb:	48 83 ec 20          	sub    $0x20,%rsp
   1bdef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bdf3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1bdf7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1bdfb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bdff:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1be03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1be07:	48 89 ce             	mov    %rcx,%rsi
   1be0a:	48 89 c7             	mov    %rax,%rdi
   1be0d:	e8 04 02 00 00       	call   1c016 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_>
    }
   1be12:	c9                   	leave
   1be13:	c3                   	ret

000000000001be14 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   1be14:	55                   	push   %rbp
   1be15:	48 89 e5             	mov    %rsp,%rbp
   1be18:	48 83 ec 30          	sub    $0x30,%rsp
   1be1c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1be20:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1be24:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   1be28:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1be2c:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1be30:	48 c1 f8 03          	sar    $0x3,%rax
   1be34:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   1be38:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1be3d:	74 1f                	je     1be5e <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1be3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1be43:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1be4a:	00 
   1be4b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1be4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1be53:	48 89 ce             	mov    %rcx,%rsi
   1be56:	48 89 c7             	mov    %rax,%rdi
   1be59:	e8 f2 89 fe ff       	call   4850 <memmove@plt>
	  return __result + _Num;
   1be5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1be62:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1be69:	00 
   1be6a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1be6e:	48 01 d0             	add    %rdx,%rax
	}
   1be71:	c9                   	leave
   1be72:	c3                   	ret

000000000001be73 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
   1be73:	55                   	push   %rbp
   1be74:	48 89 e5             	mov    %rsp,%rbp
   1be77:	48 83 ec 10          	sub    $0x10,%rsp
   1be7b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
   1be7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1be83:	48 89 c7             	mov    %rax,%rdi
   1be86:	e8 ea 01 00 00       	call   1c075 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
   1be8b:	c9                   	leave
   1be8c:	c3                   	ret

000000000001be8d <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1be8d:	55                   	push   %rbp
   1be8e:	48 89 e5             	mov    %rsp,%rbp
   1be91:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1be95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1be99:	5d                   	pop    %rbp
   1be9a:	c3                   	ret

000000000001be9b <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   1be9b:	55                   	push   %rbp
   1be9c:	48 89 e5             	mov    %rsp,%rbp
   1be9f:	48 83 ec 30          	sub    $0x30,%rsp
   1bea3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1bea7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1beab:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   1beaf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1beb3:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1beb7:	48 c1 f8 04          	sar    $0x4,%rax
   1bebb:	48 89 c2             	mov    %rax,%rdx
   1bebe:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   1bec5:	e3 38 8e 
   1bec8:	48 0f af c2          	imul   %rdx,%rax
   1becc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   1bed0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1bed5:	74 28                	je     1beff <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_+0x64>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1bed7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1bedb:	48 89 d0             	mov    %rdx,%rax
   1bede:	48 c1 e0 03          	shl    $0x3,%rax
   1bee2:	48 01 d0             	add    %rdx,%rax
   1bee5:	48 c1 e0 04          	shl    $0x4,%rax
   1bee9:	48 89 c2             	mov    %rax,%rdx
   1beec:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1bef0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bef4:	48 89 ce             	mov    %rcx,%rsi
   1bef7:	48 89 c7             	mov    %rax,%rdi
   1befa:	e8 51 89 fe ff       	call   4850 <memmove@plt>
	  return __result + _Num;
   1beff:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1bf03:	48 89 d0             	mov    %rdx,%rax
   1bf06:	48 c1 e0 03          	shl    $0x3,%rax
   1bf0a:	48 01 d0             	add    %rdx,%rax
   1bf0d:	48 c1 e0 04          	shl    $0x4,%rax
   1bf11:	48 89 c2             	mov    %rax,%rdx
   1bf14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bf18:	48 01 d0             	add    %rdx,%rax
	}
   1bf1b:	c9                   	leave
   1bf1c:	c3                   	ret

000000000001bf1d <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1bf1d:	55                   	push   %rbp
   1bf1e:	48 89 e5             	mov    %rsp,%rbp
   1bf21:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1bf25:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1bf29:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1bf2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bf31:	48 8b 00             	mov    (%rax),%rax
   1bf34:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1bf38:	eb 10                	jmp    1bf4a <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1bf3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bf3e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1bf42:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1bf45:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1bf4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bf4e:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1bf52:	75 e6                	jne    1bf3a <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1bf54:	90                   	nop
   1bf55:	90                   	nop
   1bf56:	5d                   	pop    %rbp
   1bf57:	c3                   	ret

000000000001bf58 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   1bf58:	55                   	push   %rbp
   1bf59:	48 89 e5             	mov    %rsp,%rbp
   1bf5c:	48 83 ec 30          	sub    $0x30,%rsp
   1bf60:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1bf64:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1bf68:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   1bf6c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1bf70:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1bf74:	48 c1 f8 03          	sar    $0x3,%rax
   1bf78:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   1bf7c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1bf81:	74 1f                	je     1bfa2 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1bf83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bf87:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1bf8e:	00 
   1bf8f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1bf93:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bf97:	48 89 ce             	mov    %rcx,%rsi
   1bf9a:	48 89 c7             	mov    %rax,%rdi
   1bf9d:	e8 ae 88 fe ff       	call   4850 <memmove@plt>
	  return __result + _Num;
   1bfa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bfa6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1bfad:	00 
   1bfae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bfb2:	48 01 d0             	add    %rdx,%rax
	}
   1bfb5:	c9                   	leave
   1bfb6:	c3                   	ret

000000000001bfb7 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkSemaphore_TEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   1bfb7:	55                   	push   %rbp
   1bfb8:	48 89 e5             	mov    %rsp,%rbp
   1bfbb:	48 83 ec 30          	sub    $0x30,%rsp
   1bfbf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1bfc3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1bfc7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   1bfcb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1bfcf:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1bfd3:	48 c1 f8 03          	sar    $0x3,%rax
   1bfd7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   1bfdb:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1bfe0:	74 1f                	je     1c001 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkSemaphore_TEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1bfe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bfe6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1bfed:	00 
   1bfee:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1bff2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bff6:	48 89 ce             	mov    %rcx,%rsi
   1bff9:	48 89 c7             	mov    %rax,%rdi
   1bffc:	e8 4f 88 fe ff       	call   4850 <memmove@plt>
	  return __result + _Num;
   1c001:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c005:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1c00c:	00 
   1c00d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c011:	48 01 d0             	add    %rdx,%rax
	}
   1c014:	c9                   	leave
   1c015:	c3                   	ret

000000000001c016 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   1c016:	55                   	push   %rbp
   1c017:	48 89 e5             	mov    %rsp,%rbp
   1c01a:	48 83 ec 30          	sub    $0x30,%rsp
   1c01e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1c022:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1c026:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   1c02a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c02e:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1c032:	48 c1 f8 02          	sar    $0x2,%rax
   1c036:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   1c03a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1c03f:	74 1f                	je     1c060 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1c041:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c045:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1c04c:	00 
   1c04d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1c051:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c055:	48 89 ce             	mov    %rcx,%rsi
   1c058:	48 89 c7             	mov    %rax,%rdi
   1c05b:	e8 f0 87 fe ff       	call   4850 <memmove@plt>
	  return __result + _Num;
   1c060:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c064:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1c06b:	00 
   1c06c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c070:	48 01 d0             	add    %rdx,%rax
	}
   1c073:	c9                   	leave
   1c074:	c3                   	ret

000000000001c075 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
   1c075:	55                   	push   %rbp
   1c076:	48 89 e5             	mov    %rsp,%rbp
   1c079:	48 83 ec 10          	sub    $0x10,%rsp
   1c07d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
   1c081:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c085:	48 89 c7             	mov    %rax,%rdi
   1c088:	e8 02 00 00 00       	call   1c08f <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
   1c08d:	c9                   	leave
   1c08e:	c3                   	ret

000000000001c08f <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
   1c08f:	55                   	push   %rbp
   1c090:	48 89 e5             	mov    %rsp,%rbp
   1c093:	48 83 ec 10          	sub    $0x10,%rsp
   1c097:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c09b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c09f:	48 89 c7             	mov    %rax,%rdi
   1c0a2:	e8 02 00 00 00       	call   1c0a9 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
   1c0a7:	c9                   	leave
   1c0a8:	c3                   	ret

000000000001c0a9 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
   1c0a9:	55                   	push   %rbp
   1c0aa:	48 89 e5             	mov    %rsp,%rbp
   1c0ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c0b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c0b5:	48 8b 00             	mov    (%rax),%rax
   1c0b8:	5d                   	pop    %rbp
   1c0b9:	c3                   	ret

000000000001c0ba <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
   1c0ba:	55                   	push   %rbp
   1c0bb:	48 89 e5             	mov    %rsp,%rbp
   1c0be:	48 83 ec 10          	sub    $0x10,%rsp
   1c0c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c0c6:	48 8d 15 f3 4b 01 00 	lea    0x14bf3(%rip),%rdx        # 30cc0 <_ZTVSt19bad_optional_access+0x10>
   1c0cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c0d1:	48 89 10             	mov    %rdx,(%rax)
   1c0d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c0d8:	48 89 c7             	mov    %rax,%rdi
   1c0db:	e8 60 88 fe ff       	call   4940 <_ZNSt9exceptionD2Ev@plt>
   1c0e0:	90                   	nop
   1c0e1:	c9                   	leave
   1c0e2:	c3                   	ret
   1c0e3:	90                   	nop

000000000001c0e4 <_ZNSt19bad_optional_accessD0Ev>:
   1c0e4:	55                   	push   %rbp
   1c0e5:	48 89 e5             	mov    %rsp,%rbp
   1c0e8:	48 83 ec 10          	sub    $0x10,%rsp
   1c0ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c0f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c0f4:	48 89 c7             	mov    %rax,%rdi
   1c0f7:	e8 be ff ff ff       	call   1c0ba <_ZNSt19bad_optional_accessD1Ev>
   1c0fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c100:	be 08 00 00 00       	mov    $0x8,%esi
   1c105:	48 89 c7             	mov    %rax,%rdi
   1c108:	e8 93 83 fe ff       	call   44a0 <_ZdlPvm@plt>
   1c10d:	c9                   	leave
   1c10e:	c3                   	ret

Disassembly of section .fini:

000000000001c110 <_fini>:
   1c110:	48 83 ec 08          	sub    $0x8,%rsp
   1c114:	48 83 c4 08          	add    $0x8,%rsp
   1c118:	c3                   	ret
